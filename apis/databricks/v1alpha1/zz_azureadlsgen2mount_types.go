// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AzureAdlsGen2MountInitParameters struct {
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	ClientSecretKey *string `json:"clientSecretKey,omitempty" tf:"client_secret_key,omitempty"`

	ClientSecretScope *string `json:"clientSecretScope,omitempty" tf:"client_secret_scope,omitempty"`

	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	ContainerName *string `json:"containerName,omitempty" tf:"container_name,omitempty"`

	Directory *string `json:"directory,omitempty" tf:"directory,omitempty"`

	InitializeFileSystem *bool `json:"initializeFileSystem,omitempty" tf:"initialize_file_system,omitempty"`

	MountName *string `json:"mountName,omitempty" tf:"mount_name,omitempty"`

	StorageAccountName *string `json:"storageAccountName,omitempty" tf:"storage_account_name,omitempty"`

	TenantID *string `json:"tenantId,omitempty" tf:"tenant_id,omitempty"`
}

type AzureAdlsGen2MountObservation struct {
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	ClientSecretKey *string `json:"clientSecretKey,omitempty" tf:"client_secret_key,omitempty"`

	ClientSecretScope *string `json:"clientSecretScope,omitempty" tf:"client_secret_scope,omitempty"`

	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	ContainerName *string `json:"containerName,omitempty" tf:"container_name,omitempty"`

	Directory *string `json:"directory,omitempty" tf:"directory,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	InitializeFileSystem *bool `json:"initializeFileSystem,omitempty" tf:"initialize_file_system,omitempty"`

	MountName *string `json:"mountName,omitempty" tf:"mount_name,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	StorageAccountName *string `json:"storageAccountName,omitempty" tf:"storage_account_name,omitempty"`

	TenantID *string `json:"tenantId,omitempty" tf:"tenant_id,omitempty"`
}

type AzureAdlsGen2MountParameters struct {

	// +kubebuilder:validation:Optional
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// +kubebuilder:validation:Optional
	ClientSecretKey *string `json:"clientSecretKey,omitempty" tf:"client_secret_key,omitempty"`

	// +kubebuilder:validation:Optional
	ClientSecretScope *string `json:"clientSecretScope,omitempty" tf:"client_secret_scope,omitempty"`

	// +kubebuilder:validation:Optional
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// +kubebuilder:validation:Optional
	ContainerName *string `json:"containerName,omitempty" tf:"container_name,omitempty"`

	// +kubebuilder:validation:Optional
	Directory *string `json:"directory,omitempty" tf:"directory,omitempty"`

	// +kubebuilder:validation:Optional
	InitializeFileSystem *bool `json:"initializeFileSystem,omitempty" tf:"initialize_file_system,omitempty"`

	// +kubebuilder:validation:Optional
	MountName *string `json:"mountName,omitempty" tf:"mount_name,omitempty"`

	// +kubebuilder:validation:Optional
	StorageAccountName *string `json:"storageAccountName,omitempty" tf:"storage_account_name,omitempty"`

	// +kubebuilder:validation:Optional
	TenantID *string `json:"tenantId,omitempty" tf:"tenant_id,omitempty"`
}

// AzureAdlsGen2MountSpec defines the desired state of AzureAdlsGen2Mount
type AzureAdlsGen2MountSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AzureAdlsGen2MountParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AzureAdlsGen2MountInitParameters `json:"initProvider,omitempty"`
}

// AzureAdlsGen2MountStatus defines the observed state of AzureAdlsGen2Mount.
type AzureAdlsGen2MountStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AzureAdlsGen2MountObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AzureAdlsGen2Mount is the Schema for the AzureAdlsGen2Mounts API. <no value>
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,databricks}
type AzureAdlsGen2Mount struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.clientId) || (has(self.initProvider) && has(self.initProvider.clientId))",message="spec.forProvider.clientId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.clientSecretKey) || (has(self.initProvider) && has(self.initProvider.clientSecretKey))",message="spec.forProvider.clientSecretKey is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.clientSecretScope) || (has(self.initProvider) && has(self.initProvider.clientSecretScope))",message="spec.forProvider.clientSecretScope is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.containerName) || (has(self.initProvider) && has(self.initProvider.containerName))",message="spec.forProvider.containerName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.initializeFileSystem) || (has(self.initProvider) && has(self.initProvider.initializeFileSystem))",message="spec.forProvider.initializeFileSystem is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.mountName) || (has(self.initProvider) && has(self.initProvider.mountName))",message="spec.forProvider.mountName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.storageAccountName) || (has(self.initProvider) && has(self.initProvider.storageAccountName))",message="spec.forProvider.storageAccountName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.tenantId) || (has(self.initProvider) && has(self.initProvider.tenantId))",message="spec.forProvider.tenantId is a required parameter"
	Spec   AzureAdlsGen2MountSpec   `json:"spec"`
	Status AzureAdlsGen2MountStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AzureAdlsGen2MountList contains a list of AzureAdlsGen2Mounts
type AzureAdlsGen2MountList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AzureAdlsGen2Mount `json:"items"`
}

// Repository type metadata.
var (
	AzureAdlsGen2Mount_Kind             = "AzureAdlsGen2Mount"
	AzureAdlsGen2Mount_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AzureAdlsGen2Mount_Kind}.String()
	AzureAdlsGen2Mount_KindAPIVersion   = AzureAdlsGen2Mount_Kind + "." + CRDGroupVersion.String()
	AzureAdlsGen2Mount_GroupVersionKind = CRDGroupVersion.WithKind(AzureAdlsGen2Mount_Kind)
)

func init() {
	SchemeBuilder.Register(&AzureAdlsGen2Mount{}, &AzureAdlsGen2MountList{})
}
