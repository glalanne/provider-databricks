// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AlertInitParameters struct {
	AlertID *string `json:"alertId,omitempty" tf:"alert_id,omitempty"`

	PauseSubscriptions *bool `json:"pauseSubscriptions,omitempty" tf:"pause_subscriptions,omitempty"`

	Subscriptions []SubscriptionsInitParameters `json:"subscriptions,omitempty" tf:"subscriptions,omitempty"`
}

type AlertObservation struct {
	AlertID *string `json:"alertId,omitempty" tf:"alert_id,omitempty"`

	PauseSubscriptions *bool `json:"pauseSubscriptions,omitempty" tf:"pause_subscriptions,omitempty"`

	Subscriptions []SubscriptionsObservation `json:"subscriptions,omitempty" tf:"subscriptions,omitempty"`
}

type AlertParameters struct {

	// +kubebuilder:validation:Optional
	AlertID *string `json:"alertId" tf:"alert_id,omitempty"`

	// +kubebuilder:validation:Optional
	PauseSubscriptions *bool `json:"pauseSubscriptions,omitempty" tf:"pause_subscriptions,omitempty"`

	// +kubebuilder:validation:Optional
	Subscriptions []SubscriptionsParameters `json:"subscriptions,omitempty" tf:"subscriptions,omitempty"`
}

type AlertSubscriptionsInitParameters struct {
	DestinationID *string `json:"destinationId,omitempty" tf:"destination_id,omitempty"`

	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

type AlertSubscriptionsObservation struct {
	DestinationID *string `json:"destinationId,omitempty" tf:"destination_id,omitempty"`

	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

type AlertSubscriptionsParameters struct {

	// +kubebuilder:validation:Optional
	DestinationID *string `json:"destinationId,omitempty" tf:"destination_id,omitempty"`

	// +kubebuilder:validation:Optional
	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

type AzureAttributesLogAnalyticsInfoInitParameters struct {
	LogAnalyticsPrimaryKey *string `json:"logAnalyticsPrimaryKey,omitempty" tf:"log_analytics_primary_key,omitempty"`

	LogAnalyticsWorkspaceID *string `json:"logAnalyticsWorkspaceId,omitempty" tf:"log_analytics_workspace_id,omitempty"`
}

type AzureAttributesLogAnalyticsInfoObservation struct {
	LogAnalyticsPrimaryKey *string `json:"logAnalyticsPrimaryKey,omitempty" tf:"log_analytics_primary_key,omitempty"`

	LogAnalyticsWorkspaceID *string `json:"logAnalyticsWorkspaceId,omitempty" tf:"log_analytics_workspace_id,omitempty"`
}

type AzureAttributesLogAnalyticsInfoParameters struct {

	// +kubebuilder:validation:Optional
	LogAnalyticsPrimaryKey *string `json:"logAnalyticsPrimaryKey,omitempty" tf:"log_analytics_primary_key,omitempty"`

	// +kubebuilder:validation:Optional
	LogAnalyticsWorkspaceID *string `json:"logAnalyticsWorkspaceId,omitempty" tf:"log_analytics_workspace_id,omitempty"`
}

type ClusterLogConfDbfsInitParameters struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type ClusterLogConfDbfsObservation struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type ClusterLogConfDbfsParameters struct {

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`
}

type ClusterLogConfS3InitParameters struct {
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	EnableEncryption *bool `json:"enableEncryption,omitempty" tf:"enable_encryption,omitempty"`

	EncryptionType *string `json:"encryptionType,omitempty" tf:"encryption_type,omitempty"`

	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	KMSKey *string `json:"kmsKey,omitempty" tf:"kms_key,omitempty"`

	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type ClusterLogConfS3Observation struct {
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	EnableEncryption *bool `json:"enableEncryption,omitempty" tf:"enable_encryption,omitempty"`

	EncryptionType *string `json:"encryptionType,omitempty" tf:"encryption_type,omitempty"`

	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	KMSKey *string `json:"kmsKey,omitempty" tf:"kms_key,omitempty"`

	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type ClusterLogConfS3Parameters struct {

	// +kubebuilder:validation:Optional
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`

	// +kubebuilder:validation:Optional
	EnableEncryption *bool `json:"enableEncryption,omitempty" tf:"enable_encryption,omitempty"`

	// +kubebuilder:validation:Optional
	EncryptionType *string `json:"encryptionType,omitempty" tf:"encryption_type,omitempty"`

	// +kubebuilder:validation:Optional
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// +kubebuilder:validation:Optional
	KMSKey *string `json:"kmsKey,omitempty" tf:"kms_key,omitempty"`

	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type ClusterMountInfoNetworkFilesystemInfoInitParameters struct {
	MountOptions *string `json:"mountOptions,omitempty" tf:"mount_options,omitempty"`

	ServerAddress *string `json:"serverAddress,omitempty" tf:"server_address,omitempty"`
}

type ClusterMountInfoNetworkFilesystemInfoObservation struct {
	MountOptions *string `json:"mountOptions,omitempty" tf:"mount_options,omitempty"`

	ServerAddress *string `json:"serverAddress,omitempty" tf:"server_address,omitempty"`
}

type ClusterMountInfoNetworkFilesystemInfoParameters struct {

	// +kubebuilder:validation:Optional
	MountOptions *string `json:"mountOptions,omitempty" tf:"mount_options,omitempty"`

	// +kubebuilder:validation:Optional
	ServerAddress *string `json:"serverAddress" tf:"server_address,omitempty"`
}

type ConditionTaskInitParameters struct {
	Left *string `json:"left,omitempty" tf:"left,omitempty"`

	Op *string `json:"op,omitempty" tf:"op,omitempty"`

	Right *string `json:"right,omitempty" tf:"right,omitempty"`
}

type ConditionTaskObservation struct {
	Left *string `json:"left,omitempty" tf:"left,omitempty"`

	Op *string `json:"op,omitempty" tf:"op,omitempty"`

	Right *string `json:"right,omitempty" tf:"right,omitempty"`
}

type ConditionTaskParameters struct {

	// +kubebuilder:validation:Optional
	Left *string `json:"left" tf:"left,omitempty"`

	// +kubebuilder:validation:Optional
	Op *string `json:"op" tf:"op,omitempty"`

	// +kubebuilder:validation:Optional
	Right *string `json:"right" tf:"right,omitempty"`
}

type ContinuousInitParameters struct {
	PauseStatus *string `json:"pauseStatus,omitempty" tf:"pause_status,omitempty"`
}

type ContinuousObservation struct {
	PauseStatus *string `json:"pauseStatus,omitempty" tf:"pause_status,omitempty"`
}

type ContinuousParameters struct {

	// +kubebuilder:validation:Optional
	PauseStatus *string `json:"pauseStatus,omitempty" tf:"pause_status,omitempty"`
}

type DashboardInitParameters struct {
	CustomSubject *string `json:"customSubject,omitempty" tf:"custom_subject,omitempty"`

	DashboardID *string `json:"dashboardId,omitempty" tf:"dashboard_id,omitempty"`

	PauseSubscriptions *bool `json:"pauseSubscriptions,omitempty" tf:"pause_subscriptions,omitempty"`

	Subscriptions []DashboardSubscriptionsInitParameters `json:"subscriptions,omitempty" tf:"subscriptions,omitempty"`
}

type DashboardObservation struct {
	CustomSubject *string `json:"customSubject,omitempty" tf:"custom_subject,omitempty"`

	DashboardID *string `json:"dashboardId,omitempty" tf:"dashboard_id,omitempty"`

	PauseSubscriptions *bool `json:"pauseSubscriptions,omitempty" tf:"pause_subscriptions,omitempty"`

	Subscriptions []DashboardSubscriptionsObservation `json:"subscriptions,omitempty" tf:"subscriptions,omitempty"`
}

type DashboardParameters struct {

	// +kubebuilder:validation:Optional
	CustomSubject *string `json:"customSubject,omitempty" tf:"custom_subject,omitempty"`

	// +kubebuilder:validation:Optional
	DashboardID *string `json:"dashboardId" tf:"dashboard_id,omitempty"`

	// +kubebuilder:validation:Optional
	PauseSubscriptions *bool `json:"pauseSubscriptions,omitempty" tf:"pause_subscriptions,omitempty"`

	// +kubebuilder:validation:Optional
	Subscriptions []DashboardSubscriptionsParameters `json:"subscriptions,omitempty" tf:"subscriptions,omitempty"`
}

type DashboardSubscriptionsInitParameters struct {
	DestinationID *string `json:"destinationId,omitempty" tf:"destination_id,omitempty"`

	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

type DashboardSubscriptionsObservation struct {
	DestinationID *string `json:"destinationId,omitempty" tf:"destination_id,omitempty"`

	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

type DashboardSubscriptionsParameters struct {

	// +kubebuilder:validation:Optional
	DestinationID *string `json:"destinationId,omitempty" tf:"destination_id,omitempty"`

	// +kubebuilder:validation:Optional
	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

type DbtTaskInitParameters struct {
	Catalog *string `json:"catalog,omitempty" tf:"catalog,omitempty"`

	Commands []*string `json:"commands,omitempty" tf:"commands,omitempty"`

	ProfilesDirectory *string `json:"profilesDirectory,omitempty" tf:"profiles_directory,omitempty"`

	ProjectDirectory *string `json:"projectDirectory,omitempty" tf:"project_directory,omitempty"`

	Schema *string `json:"schema,omitempty" tf:"schema,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	WarehouseID *string `json:"warehouseId,omitempty" tf:"warehouse_id,omitempty"`
}

type DbtTaskObservation struct {
	Catalog *string `json:"catalog,omitempty" tf:"catalog,omitempty"`

	Commands []*string `json:"commands,omitempty" tf:"commands,omitempty"`

	ProfilesDirectory *string `json:"profilesDirectory,omitempty" tf:"profiles_directory,omitempty"`

	ProjectDirectory *string `json:"projectDirectory,omitempty" tf:"project_directory,omitempty"`

	Schema *string `json:"schema,omitempty" tf:"schema,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	WarehouseID *string `json:"warehouseId,omitempty" tf:"warehouse_id,omitempty"`
}

type DbtTaskParameters struct {

	// +kubebuilder:validation:Optional
	Catalog *string `json:"catalog,omitempty" tf:"catalog,omitempty"`

	// +kubebuilder:validation:Optional
	Commands []*string `json:"commands" tf:"commands,omitempty"`

	// +kubebuilder:validation:Optional
	ProfilesDirectory *string `json:"profilesDirectory,omitempty" tf:"profiles_directory,omitempty"`

	// +kubebuilder:validation:Optional
	ProjectDirectory *string `json:"projectDirectory,omitempty" tf:"project_directory,omitempty"`

	// +kubebuilder:validation:Optional
	Schema *string `json:"schema,omitempty" tf:"schema,omitempty"`

	// +kubebuilder:validation:Optional
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// +kubebuilder:validation:Optional
	WarehouseID *string `json:"warehouseId,omitempty" tf:"warehouse_id,omitempty"`
}

type DependsOnInitParameters struct {
	Outcome *string `json:"outcome,omitempty" tf:"outcome,omitempty"`

	TaskKey *string `json:"taskKey,omitempty" tf:"task_key,omitempty"`
}

type DependsOnObservation struct {
	Outcome *string `json:"outcome,omitempty" tf:"outcome,omitempty"`

	TaskKey *string `json:"taskKey,omitempty" tf:"task_key,omitempty"`
}

type DependsOnParameters struct {

	// +kubebuilder:validation:Optional
	Outcome *string `json:"outcome,omitempty" tf:"outcome,omitempty"`

	// +kubebuilder:validation:Optional
	TaskKey *string `json:"taskKey" tf:"task_key,omitempty"`
}

type DeploymentInitParameters struct {
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`

	MetadataFilePath *string `json:"metadataFilePath,omitempty" tf:"metadata_file_path,omitempty"`
}

type DeploymentObservation struct {
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`

	MetadataFilePath *string `json:"metadataFilePath,omitempty" tf:"metadata_file_path,omitempty"`
}

type DeploymentParameters struct {

	// +kubebuilder:validation:Optional
	Kind *string `json:"kind" tf:"kind,omitempty"`

	// +kubebuilder:validation:Optional
	MetadataFilePath *string `json:"metadataFilePath,omitempty" tf:"metadata_file_path,omitempty"`
}

type DockerImageBasicAuthInitParameters struct {
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type DockerImageBasicAuthObservation struct {
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type DockerImageBasicAuthParameters struct {

	// +kubebuilder:validation:Optional
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// +kubebuilder:validation:Optional
	Username *string `json:"username" tf:"username,omitempty"`
}

type EmailNotificationsInitParameters struct {
	NoAlertForSkippedRuns *bool `json:"noAlertForSkippedRuns,omitempty" tf:"no_alert_for_skipped_runs,omitempty"`

	OnDurationWarningThresholdExceeded []*string `json:"onDurationWarningThresholdExceeded,omitempty" tf:"on_duration_warning_threshold_exceeded,omitempty"`

	OnFailure []*string `json:"onFailure,omitempty" tf:"on_failure,omitempty"`

	OnStart []*string `json:"onStart,omitempty" tf:"on_start,omitempty"`

	OnStreamingBacklogExceeded []*string `json:"onStreamingBacklogExceeded,omitempty" tf:"on_streaming_backlog_exceeded,omitempty"`

	OnSuccess []*string `json:"onSuccess,omitempty" tf:"on_success,omitempty"`
}

type EmailNotificationsObservation struct {
	NoAlertForSkippedRuns *bool `json:"noAlertForSkippedRuns,omitempty" tf:"no_alert_for_skipped_runs,omitempty"`

	OnDurationWarningThresholdExceeded []*string `json:"onDurationWarningThresholdExceeded,omitempty" tf:"on_duration_warning_threshold_exceeded,omitempty"`

	OnFailure []*string `json:"onFailure,omitempty" tf:"on_failure,omitempty"`

	OnStart []*string `json:"onStart,omitempty" tf:"on_start,omitempty"`

	OnStreamingBacklogExceeded []*string `json:"onStreamingBacklogExceeded,omitempty" tf:"on_streaming_backlog_exceeded,omitempty"`

	OnSuccess []*string `json:"onSuccess,omitempty" tf:"on_success,omitempty"`
}

type EmailNotificationsParameters struct {

	// +kubebuilder:validation:Optional
	NoAlertForSkippedRuns *bool `json:"noAlertForSkippedRuns,omitempty" tf:"no_alert_for_skipped_runs,omitempty"`

	// +kubebuilder:validation:Optional
	OnDurationWarningThresholdExceeded []*string `json:"onDurationWarningThresholdExceeded,omitempty" tf:"on_duration_warning_threshold_exceeded,omitempty"`

	// +kubebuilder:validation:Optional
	OnFailure []*string `json:"onFailure,omitempty" tf:"on_failure,omitempty"`

	// +kubebuilder:validation:Optional
	OnStart []*string `json:"onStart,omitempty" tf:"on_start,omitempty"`

	// +kubebuilder:validation:Optional
	OnStreamingBacklogExceeded []*string `json:"onStreamingBacklogExceeded,omitempty" tf:"on_streaming_backlog_exceeded,omitempty"`

	// +kubebuilder:validation:Optional
	OnSuccess []*string `json:"onSuccess,omitempty" tf:"on_success,omitempty"`
}

type EnvironmentInitParameters struct {
	EnvironmentKey *string `json:"environmentKey,omitempty" tf:"environment_key,omitempty"`

	Spec []SpecInitParameters `json:"spec,omitempty" tf:"spec,omitempty"`
}

type EnvironmentObservation struct {
	EnvironmentKey *string `json:"environmentKey,omitempty" tf:"environment_key,omitempty"`

	Spec []SpecObservation `json:"spec,omitempty" tf:"spec,omitempty"`
}

type EnvironmentParameters struct {

	// +kubebuilder:validation:Optional
	EnvironmentKey *string `json:"environmentKey" tf:"environment_key,omitempty"`

	// +kubebuilder:validation:Optional
	Spec []SpecParameters `json:"spec,omitempty" tf:"spec,omitempty"`
}

type FileArrivalInitParameters struct {
	MinTimeBetweenTriggersSeconds *float64 `json:"minTimeBetweenTriggersSeconds,omitempty" tf:"min_time_between_triggers_seconds,omitempty"`

	URL *string `json:"url,omitempty" tf:"url,omitempty"`

	WaitAfterLastChangeSeconds *float64 `json:"waitAfterLastChangeSeconds,omitempty" tf:"wait_after_last_change_seconds,omitempty"`
}

type FileArrivalObservation struct {
	MinTimeBetweenTriggersSeconds *float64 `json:"minTimeBetweenTriggersSeconds,omitempty" tf:"min_time_between_triggers_seconds,omitempty"`

	URL *string `json:"url,omitempty" tf:"url,omitempty"`

	WaitAfterLastChangeSeconds *float64 `json:"waitAfterLastChangeSeconds,omitempty" tf:"wait_after_last_change_seconds,omitempty"`
}

type FileArrivalParameters struct {

	// +kubebuilder:validation:Optional
	MinTimeBetweenTriggersSeconds *float64 `json:"minTimeBetweenTriggersSeconds,omitempty" tf:"min_time_between_triggers_seconds,omitempty"`

	// +kubebuilder:validation:Optional
	URL *string `json:"url" tf:"url,omitempty"`

	// +kubebuilder:validation:Optional
	WaitAfterLastChangeSeconds *float64 `json:"waitAfterLastChangeSeconds,omitempty" tf:"wait_after_last_change_seconds,omitempty"`
}

type ForEachTaskInitParameters struct {
	Concurrency *float64 `json:"concurrency,omitempty" tf:"concurrency,omitempty"`

	Inputs *string `json:"inputs,omitempty" tf:"inputs,omitempty"`

	Task []ForEachTaskTaskInitParameters `json:"task,omitempty" tf:"task,omitempty"`
}

type ForEachTaskObservation struct {
	Concurrency *float64 `json:"concurrency,omitempty" tf:"concurrency,omitempty"`

	Inputs *string `json:"inputs,omitempty" tf:"inputs,omitempty"`

	Task []ForEachTaskTaskObservation `json:"task,omitempty" tf:"task,omitempty"`
}

type ForEachTaskParameters struct {

	// +kubebuilder:validation:Optional
	Concurrency *float64 `json:"concurrency,omitempty" tf:"concurrency,omitempty"`

	// +kubebuilder:validation:Optional
	Inputs *string `json:"inputs" tf:"inputs,omitempty"`

	// +kubebuilder:validation:Optional
	Task []ForEachTaskTaskParameters `json:"task" tf:"task,omitempty"`
}

type ForEachTaskTaskDbtTaskInitParameters struct {
	Catalog *string `json:"catalog,omitempty" tf:"catalog,omitempty"`

	Commands []*string `json:"commands,omitempty" tf:"commands,omitempty"`

	ProfilesDirectory *string `json:"profilesDirectory,omitempty" tf:"profiles_directory,omitempty"`

	ProjectDirectory *string `json:"projectDirectory,omitempty" tf:"project_directory,omitempty"`

	Schema *string `json:"schema,omitempty" tf:"schema,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	WarehouseID *string `json:"warehouseId,omitempty" tf:"warehouse_id,omitempty"`
}

type ForEachTaskTaskDbtTaskObservation struct {
	Catalog *string `json:"catalog,omitempty" tf:"catalog,omitempty"`

	Commands []*string `json:"commands,omitempty" tf:"commands,omitempty"`

	ProfilesDirectory *string `json:"profilesDirectory,omitempty" tf:"profiles_directory,omitempty"`

	ProjectDirectory *string `json:"projectDirectory,omitempty" tf:"project_directory,omitempty"`

	Schema *string `json:"schema,omitempty" tf:"schema,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	WarehouseID *string `json:"warehouseId,omitempty" tf:"warehouse_id,omitempty"`
}

type ForEachTaskTaskDbtTaskParameters struct {

	// +kubebuilder:validation:Optional
	Catalog *string `json:"catalog,omitempty" tf:"catalog,omitempty"`

	// +kubebuilder:validation:Optional
	Commands []*string `json:"commands" tf:"commands,omitempty"`

	// +kubebuilder:validation:Optional
	ProfilesDirectory *string `json:"profilesDirectory,omitempty" tf:"profiles_directory,omitempty"`

	// +kubebuilder:validation:Optional
	ProjectDirectory *string `json:"projectDirectory,omitempty" tf:"project_directory,omitempty"`

	// +kubebuilder:validation:Optional
	Schema *string `json:"schema,omitempty" tf:"schema,omitempty"`

	// +kubebuilder:validation:Optional
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// +kubebuilder:validation:Optional
	WarehouseID *string `json:"warehouseId,omitempty" tf:"warehouse_id,omitempty"`
}

type ForEachTaskTaskEmailNotificationsInitParameters struct {
	NoAlertForSkippedRuns *bool `json:"noAlertForSkippedRuns,omitempty" tf:"no_alert_for_skipped_runs,omitempty"`

	OnDurationWarningThresholdExceeded []*string `json:"onDurationWarningThresholdExceeded,omitempty" tf:"on_duration_warning_threshold_exceeded,omitempty"`

	OnFailure []*string `json:"onFailure,omitempty" tf:"on_failure,omitempty"`

	OnStart []*string `json:"onStart,omitempty" tf:"on_start,omitempty"`

	OnStreamingBacklogExceeded []*string `json:"onStreamingBacklogExceeded,omitempty" tf:"on_streaming_backlog_exceeded,omitempty"`

	OnSuccess []*string `json:"onSuccess,omitempty" tf:"on_success,omitempty"`
}

type ForEachTaskTaskEmailNotificationsObservation struct {
	NoAlertForSkippedRuns *bool `json:"noAlertForSkippedRuns,omitempty" tf:"no_alert_for_skipped_runs,omitempty"`

	OnDurationWarningThresholdExceeded []*string `json:"onDurationWarningThresholdExceeded,omitempty" tf:"on_duration_warning_threshold_exceeded,omitempty"`

	OnFailure []*string `json:"onFailure,omitempty" tf:"on_failure,omitempty"`

	OnStart []*string `json:"onStart,omitempty" tf:"on_start,omitempty"`

	OnStreamingBacklogExceeded []*string `json:"onStreamingBacklogExceeded,omitempty" tf:"on_streaming_backlog_exceeded,omitempty"`

	OnSuccess []*string `json:"onSuccess,omitempty" tf:"on_success,omitempty"`
}

type ForEachTaskTaskEmailNotificationsParameters struct {

	// +kubebuilder:validation:Optional
	NoAlertForSkippedRuns *bool `json:"noAlertForSkippedRuns,omitempty" tf:"no_alert_for_skipped_runs,omitempty"`

	// +kubebuilder:validation:Optional
	OnDurationWarningThresholdExceeded []*string `json:"onDurationWarningThresholdExceeded,omitempty" tf:"on_duration_warning_threshold_exceeded,omitempty"`

	// +kubebuilder:validation:Optional
	OnFailure []*string `json:"onFailure,omitempty" tf:"on_failure,omitempty"`

	// +kubebuilder:validation:Optional
	OnStart []*string `json:"onStart,omitempty" tf:"on_start,omitempty"`

	// +kubebuilder:validation:Optional
	OnStreamingBacklogExceeded []*string `json:"onStreamingBacklogExceeded,omitempty" tf:"on_streaming_backlog_exceeded,omitempty"`

	// +kubebuilder:validation:Optional
	OnSuccess []*string `json:"onSuccess,omitempty" tf:"on_success,omitempty"`
}

type ForEachTaskTaskInitParameters struct {
	ConditionTask []TaskConditionTaskInitParameters `json:"conditionTask,omitempty" tf:"condition_task,omitempty"`

	DbtTask []ForEachTaskTaskDbtTaskInitParameters `json:"dbtTask,omitempty" tf:"dbt_task,omitempty"`

	DependsOn []TaskDependsOnInitParameters `json:"dependsOn,omitempty" tf:"depends_on,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	DisableAutoOptimization *bool `json:"disableAutoOptimization,omitempty" tf:"disable_auto_optimization,omitempty"`

	EmailNotifications []ForEachTaskTaskEmailNotificationsInitParameters `json:"emailNotifications,omitempty" tf:"email_notifications,omitempty"`

	EnvironmentKey *string `json:"environmentKey,omitempty" tf:"environment_key,omitempty"`

	ExistingClusterID *string `json:"existingClusterId,omitempty" tf:"existing_cluster_id,omitempty"`

	Health []TaskHealthInitParameters `json:"health,omitempty" tf:"health,omitempty"`

	JobClusterKey *string `json:"jobClusterKey,omitempty" tf:"job_cluster_key,omitempty"`

	Library []TaskLibraryInitParameters `json:"library,omitempty" tf:"library,omitempty"`

	MaxRetries *float64 `json:"maxRetries,omitempty" tf:"max_retries,omitempty"`

	MinRetryIntervalMillis *float64 `json:"minRetryIntervalMillis,omitempty" tf:"min_retry_interval_millis,omitempty"`

	NewCluster []TaskNewClusterInitParameters `json:"newCluster,omitempty" tf:"new_cluster,omitempty"`

	NotebookTask []TaskNotebookTaskInitParameters `json:"notebookTask,omitempty" tf:"notebook_task,omitempty"`

	NotificationSettings []TaskNotificationSettingsInitParameters `json:"notificationSettings,omitempty" tf:"notification_settings,omitempty"`

	PipelineTask []TaskPipelineTaskInitParameters `json:"pipelineTask,omitempty" tf:"pipeline_task,omitempty"`

	PythonWheelTask []TaskPythonWheelTaskInitParameters `json:"pythonWheelTask,omitempty" tf:"python_wheel_task,omitempty"`

	RetryOnTimeout *bool `json:"retryOnTimeout,omitempty" tf:"retry_on_timeout,omitempty"`

	RunIf *string `json:"runIf,omitempty" tf:"run_if,omitempty"`

	RunJobTask []TaskRunJobTaskInitParameters `json:"runJobTask,omitempty" tf:"run_job_task,omitempty"`

	SQLTask []SQLTaskInitParameters `json:"sqlTask,omitempty" tf:"sql_task,omitempty"`

	SparkJarTask []TaskSparkJarTaskInitParameters `json:"sparkJarTask,omitempty" tf:"spark_jar_task,omitempty"`

	SparkPythonTask []TaskSparkPythonTaskInitParameters `json:"sparkPythonTask,omitempty" tf:"spark_python_task,omitempty"`

	SparkSubmitTask []TaskSparkSubmitTaskInitParameters `json:"sparkSubmitTask,omitempty" tf:"spark_submit_task,omitempty"`

	TaskKey *string `json:"taskKey,omitempty" tf:"task_key,omitempty"`

	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`

	WebhookNotifications []WebhookNotificationsInitParameters `json:"webhookNotifications,omitempty" tf:"webhook_notifications,omitempty"`
}

type ForEachTaskTaskObservation struct {
	ConditionTask []TaskConditionTaskObservation `json:"conditionTask,omitempty" tf:"condition_task,omitempty"`

	DbtTask []ForEachTaskTaskDbtTaskObservation `json:"dbtTask,omitempty" tf:"dbt_task,omitempty"`

	DependsOn []TaskDependsOnObservation `json:"dependsOn,omitempty" tf:"depends_on,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	DisableAutoOptimization *bool `json:"disableAutoOptimization,omitempty" tf:"disable_auto_optimization,omitempty"`

	EmailNotifications []ForEachTaskTaskEmailNotificationsObservation `json:"emailNotifications,omitempty" tf:"email_notifications,omitempty"`

	EnvironmentKey *string `json:"environmentKey,omitempty" tf:"environment_key,omitempty"`

	ExistingClusterID *string `json:"existingClusterId,omitempty" tf:"existing_cluster_id,omitempty"`

	Health []TaskHealthObservation `json:"health,omitempty" tf:"health,omitempty"`

	JobClusterKey *string `json:"jobClusterKey,omitempty" tf:"job_cluster_key,omitempty"`

	Library []TaskLibraryObservation `json:"library,omitempty" tf:"library,omitempty"`

	MaxRetries *float64 `json:"maxRetries,omitempty" tf:"max_retries,omitempty"`

	MinRetryIntervalMillis *float64 `json:"minRetryIntervalMillis,omitempty" tf:"min_retry_interval_millis,omitempty"`

	NewCluster []TaskNewClusterObservation `json:"newCluster,omitempty" tf:"new_cluster,omitempty"`

	NotebookTask []TaskNotebookTaskObservation `json:"notebookTask,omitempty" tf:"notebook_task,omitempty"`

	NotificationSettings []TaskNotificationSettingsObservation `json:"notificationSettings,omitempty" tf:"notification_settings,omitempty"`

	PipelineTask []TaskPipelineTaskObservation `json:"pipelineTask,omitempty" tf:"pipeline_task,omitempty"`

	PythonWheelTask []TaskPythonWheelTaskObservation `json:"pythonWheelTask,omitempty" tf:"python_wheel_task,omitempty"`

	RetryOnTimeout *bool `json:"retryOnTimeout,omitempty" tf:"retry_on_timeout,omitempty"`

	RunIf *string `json:"runIf,omitempty" tf:"run_if,omitempty"`

	RunJobTask []TaskRunJobTaskObservation `json:"runJobTask,omitempty" tf:"run_job_task,omitempty"`

	SQLTask []SQLTaskObservation `json:"sqlTask,omitempty" tf:"sql_task,omitempty"`

	SparkJarTask []TaskSparkJarTaskObservation `json:"sparkJarTask,omitempty" tf:"spark_jar_task,omitempty"`

	SparkPythonTask []TaskSparkPythonTaskObservation `json:"sparkPythonTask,omitempty" tf:"spark_python_task,omitempty"`

	SparkSubmitTask []TaskSparkSubmitTaskObservation `json:"sparkSubmitTask,omitempty" tf:"spark_submit_task,omitempty"`

	TaskKey *string `json:"taskKey,omitempty" tf:"task_key,omitempty"`

	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`

	WebhookNotifications []WebhookNotificationsObservation `json:"webhookNotifications,omitempty" tf:"webhook_notifications,omitempty"`
}

type ForEachTaskTaskParameters struct {

	// +kubebuilder:validation:Optional
	ConditionTask []TaskConditionTaskParameters `json:"conditionTask,omitempty" tf:"condition_task,omitempty"`

	// +kubebuilder:validation:Optional
	DbtTask []ForEachTaskTaskDbtTaskParameters `json:"dbtTask,omitempty" tf:"dbt_task,omitempty"`

	// +kubebuilder:validation:Optional
	DependsOn []TaskDependsOnParameters `json:"dependsOn,omitempty" tf:"depends_on,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	DisableAutoOptimization *bool `json:"disableAutoOptimization,omitempty" tf:"disable_auto_optimization,omitempty"`

	// +kubebuilder:validation:Optional
	EmailNotifications []ForEachTaskTaskEmailNotificationsParameters `json:"emailNotifications,omitempty" tf:"email_notifications,omitempty"`

	// +kubebuilder:validation:Optional
	EnvironmentKey *string `json:"environmentKey,omitempty" tf:"environment_key,omitempty"`

	// +kubebuilder:validation:Optional
	ExistingClusterID *string `json:"existingClusterId,omitempty" tf:"existing_cluster_id,omitempty"`

	// +kubebuilder:validation:Optional
	Health []TaskHealthParameters `json:"health,omitempty" tf:"health,omitempty"`

	// +kubebuilder:validation:Optional
	JobClusterKey *string `json:"jobClusterKey,omitempty" tf:"job_cluster_key,omitempty"`

	// +kubebuilder:validation:Optional
	Library []TaskLibraryParameters `json:"library,omitempty" tf:"library,omitempty"`

	// +kubebuilder:validation:Optional
	MaxRetries *float64 `json:"maxRetries,omitempty" tf:"max_retries,omitempty"`

	// +kubebuilder:validation:Optional
	MinRetryIntervalMillis *float64 `json:"minRetryIntervalMillis,omitempty" tf:"min_retry_interval_millis,omitempty"`

	// +kubebuilder:validation:Optional
	NewCluster []TaskNewClusterParameters `json:"newCluster,omitempty" tf:"new_cluster,omitempty"`

	// +kubebuilder:validation:Optional
	NotebookTask []TaskNotebookTaskParameters `json:"notebookTask,omitempty" tf:"notebook_task,omitempty"`

	// +kubebuilder:validation:Optional
	NotificationSettings []TaskNotificationSettingsParameters `json:"notificationSettings,omitempty" tf:"notification_settings,omitempty"`

	// +kubebuilder:validation:Optional
	PipelineTask []TaskPipelineTaskParameters `json:"pipelineTask,omitempty" tf:"pipeline_task,omitempty"`

	// +kubebuilder:validation:Optional
	PythonWheelTask []TaskPythonWheelTaskParameters `json:"pythonWheelTask,omitempty" tf:"python_wheel_task,omitempty"`

	// +kubebuilder:validation:Optional
	RetryOnTimeout *bool `json:"retryOnTimeout,omitempty" tf:"retry_on_timeout,omitempty"`

	// +kubebuilder:validation:Optional
	RunIf *string `json:"runIf,omitempty" tf:"run_if,omitempty"`

	// +kubebuilder:validation:Optional
	RunJobTask []TaskRunJobTaskParameters `json:"runJobTask,omitempty" tf:"run_job_task,omitempty"`

	// +kubebuilder:validation:Optional
	SQLTask []SQLTaskParameters `json:"sqlTask,omitempty" tf:"sql_task,omitempty"`

	// +kubebuilder:validation:Optional
	SparkJarTask []TaskSparkJarTaskParameters `json:"sparkJarTask,omitempty" tf:"spark_jar_task,omitempty"`

	// +kubebuilder:validation:Optional
	SparkPythonTask []TaskSparkPythonTaskParameters `json:"sparkPythonTask,omitempty" tf:"spark_python_task,omitempty"`

	// +kubebuilder:validation:Optional
	SparkSubmitTask []TaskSparkSubmitTaskParameters `json:"sparkSubmitTask,omitempty" tf:"spark_submit_task,omitempty"`

	// +kubebuilder:validation:Optional
	TaskKey *string `json:"taskKey" tf:"task_key,omitempty"`

	// +kubebuilder:validation:Optional
	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`

	// +kubebuilder:validation:Optional
	WebhookNotifications []WebhookNotificationsParameters `json:"webhookNotifications,omitempty" tf:"webhook_notifications,omitempty"`
}

type GitSnapshotInitParameters struct {
	UsedCommit *string `json:"usedCommit,omitempty" tf:"used_commit,omitempty"`
}

type GitSnapshotObservation struct {
	UsedCommit *string `json:"usedCommit,omitempty" tf:"used_commit,omitempty"`
}

type GitSnapshotParameters struct {

	// +kubebuilder:validation:Optional
	UsedCommit *string `json:"usedCommit,omitempty" tf:"used_commit,omitempty"`
}

type GitSourceInitParameters struct {
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	Commit *string `json:"commit,omitempty" tf:"commit,omitempty"`

	GitSnapshot []GitSnapshotInitParameters `json:"gitSnapshot,omitempty" tf:"git_snapshot,omitempty"`

	JobSource []JobSourceInitParameters `json:"jobSource,omitempty" tf:"job_source,omitempty"`

	Provider *string `json:"provider,omitempty" tf:"provider,omitempty"`

	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type GitSourceObservation struct {
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	Commit *string `json:"commit,omitempty" tf:"commit,omitempty"`

	GitSnapshot []GitSnapshotObservation `json:"gitSnapshot,omitempty" tf:"git_snapshot,omitempty"`

	JobSource []JobSourceObservation `json:"jobSource,omitempty" tf:"job_source,omitempty"`

	Provider *string `json:"provider,omitempty" tf:"provider,omitempty"`

	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type GitSourceParameters struct {

	// +kubebuilder:validation:Optional
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// +kubebuilder:validation:Optional
	Commit *string `json:"commit,omitempty" tf:"commit,omitempty"`

	// +kubebuilder:validation:Optional
	GitSnapshot []GitSnapshotParameters `json:"gitSnapshot,omitempty" tf:"git_snapshot,omitempty"`

	// +kubebuilder:validation:Optional
	JobSource []JobSourceParameters `json:"jobSource,omitempty" tf:"job_source,omitempty"`

	// +kubebuilder:validation:Optional
	Provider *string `json:"provider,omitempty" tf:"provider,omitempty"`

	// +kubebuilder:validation:Optional
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// +kubebuilder:validation:Optional
	URL *string `json:"url" tf:"url,omitempty"`
}

type HealthInitParameters struct {
	Rules []RulesInitParameters `json:"rules,omitempty" tf:"rules,omitempty"`
}

type HealthObservation struct {
	Rules []RulesObservation `json:"rules,omitempty" tf:"rules,omitempty"`
}

type HealthParameters struct {

	// +kubebuilder:validation:Optional
	Rules []RulesParameters `json:"rules" tf:"rules,omitempty"`
}

type HealthRulesInitParameters struct {
	Metric *string `json:"metric,omitempty" tf:"metric,omitempty"`

	Op *string `json:"op,omitempty" tf:"op,omitempty"`

	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`
}

type HealthRulesObservation struct {
	Metric *string `json:"metric,omitempty" tf:"metric,omitempty"`

	Op *string `json:"op,omitempty" tf:"op,omitempty"`

	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`
}

type HealthRulesParameters struct {

	// +kubebuilder:validation:Optional
	Metric *string `json:"metric" tf:"metric,omitempty"`

	// +kubebuilder:validation:Optional
	Op *string `json:"op" tf:"op,omitempty"`

	// +kubebuilder:validation:Optional
	Value *float64 `json:"value" tf:"value,omitempty"`
}

type InitScriptsAbfssInitParameters struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type InitScriptsAbfssObservation struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type InitScriptsAbfssParameters struct {

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`
}

type InitScriptsFileInitParameters struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type InitScriptsFileObservation struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type InitScriptsFileParameters struct {

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`
}

type InitScriptsGcsInitParameters struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type InitScriptsGcsObservation struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type InitScriptsGcsParameters struct {

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`
}

type InitScriptsVolumesInitParameters struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type InitScriptsVolumesObservation struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type InitScriptsVolumesParameters struct {

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`
}

type InitScriptsWorkspaceInitParameters struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type InitScriptsWorkspaceObservation struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type InitScriptsWorkspaceParameters struct {

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`
}

type JobClusterInitParameters struct {
	JobClusterKey *string `json:"jobClusterKey,omitempty" tf:"job_cluster_key,omitempty"`

	NewCluster []NewClusterInitParameters `json:"newCluster,omitempty" tf:"new_cluster,omitempty"`
}

type JobClusterObservation struct {
	JobClusterKey *string `json:"jobClusterKey,omitempty" tf:"job_cluster_key,omitempty"`

	NewCluster []NewClusterObservation `json:"newCluster,omitempty" tf:"new_cluster,omitempty"`
}

type JobClusterParameters struct {

	// +kubebuilder:validation:Optional
	JobClusterKey *string `json:"jobClusterKey" tf:"job_cluster_key,omitempty"`

	// +kubebuilder:validation:Optional
	NewCluster []NewClusterParameters `json:"newCluster" tf:"new_cluster,omitempty"`
}

type JobInitParameters struct {
	AlwaysRunning *bool `json:"alwaysRunning,omitempty" tf:"always_running,omitempty"`

	BudgetPolicyID *string `json:"budgetPolicyId,omitempty" tf:"budget_policy_id,omitempty"`

	Continuous []ContinuousInitParameters `json:"continuous,omitempty" tf:"continuous,omitempty"`

	ControlRunState *bool `json:"controlRunState,omitempty" tf:"control_run_state,omitempty"`

	DbtTask []DbtTaskInitParameters `json:"dbtTask,omitempty" tf:"dbt_task,omitempty"`

	Deployment []DeploymentInitParameters `json:"deployment,omitempty" tf:"deployment,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	EditMode *string `json:"editMode,omitempty" tf:"edit_mode,omitempty"`

	EmailNotifications []EmailNotificationsInitParameters `json:"emailNotifications,omitempty" tf:"email_notifications,omitempty"`

	Environment []EnvironmentInitParameters `json:"environment,omitempty" tf:"environment,omitempty"`

	ExistingClusterID *string `json:"existingClusterId,omitempty" tf:"existing_cluster_id,omitempty"`

	Format *string `json:"format,omitempty" tf:"format,omitempty"`

	GitSource []GitSourceInitParameters `json:"gitSource,omitempty" tf:"git_source,omitempty"`

	Health []HealthInitParameters `json:"health,omitempty" tf:"health,omitempty"`

	JobCluster []JobClusterInitParameters `json:"jobCluster,omitempty" tf:"job_cluster,omitempty"`

	Library []JobLibraryInitParameters `json:"library,omitempty" tf:"library,omitempty"`

	MaxConcurrentRuns *float64 `json:"maxConcurrentRuns,omitempty" tf:"max_concurrent_runs,omitempty"`

	MaxRetries *float64 `json:"maxRetries,omitempty" tf:"max_retries,omitempty"`

	MinRetryIntervalMillis *float64 `json:"minRetryIntervalMillis,omitempty" tf:"min_retry_interval_millis,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	NewCluster []JobNewClusterInitParameters `json:"newCluster,omitempty" tf:"new_cluster,omitempty"`

	NotebookTask []NotebookTaskInitParameters `json:"notebookTask,omitempty" tf:"notebook_task,omitempty"`

	NotificationSettings []NotificationSettingsInitParameters `json:"notificationSettings,omitempty" tf:"notification_settings,omitempty"`

	Parameter []ParameterInitParameters `json:"parameter,omitempty" tf:"parameter,omitempty"`

	PipelineTask []PipelineTaskInitParameters `json:"pipelineTask,omitempty" tf:"pipeline_task,omitempty"`

	PythonWheelTask []PythonWheelTaskInitParameters `json:"pythonWheelTask,omitempty" tf:"python_wheel_task,omitempty"`

	Queue []QueueInitParameters `json:"queue,omitempty" tf:"queue,omitempty"`

	RetryOnTimeout *bool `json:"retryOnTimeout,omitempty" tf:"retry_on_timeout,omitempty"`

	RunAs []RunAsInitParameters `json:"runAs,omitempty" tf:"run_as,omitempty"`

	RunJobTask []RunJobTaskInitParameters `json:"runJobTask,omitempty" tf:"run_job_task,omitempty"`

	Schedule []ScheduleInitParameters `json:"schedule,omitempty" tf:"schedule,omitempty"`

	SparkJarTask []SparkJarTaskInitParameters `json:"sparkJarTask,omitempty" tf:"spark_jar_task,omitempty"`

	SparkPythonTask []SparkPythonTaskInitParameters `json:"sparkPythonTask,omitempty" tf:"spark_python_task,omitempty"`

	SparkSubmitTask []SparkSubmitTaskInitParameters `json:"sparkSubmitTask,omitempty" tf:"spark_submit_task,omitempty"`

	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	Task []TaskInitParameters `json:"task,omitempty" tf:"task,omitempty"`

	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`

	Trigger []TriggerInitParameters `json:"trigger,omitempty" tf:"trigger,omitempty"`

	WebhookNotifications []JobWebhookNotificationsInitParameters `json:"webhookNotifications,omitempty" tf:"webhook_notifications,omitempty"`
}

type JobLibraryCranInitParameters struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobLibraryCranObservation struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobLibraryCranParameters struct {

	// +kubebuilder:validation:Optional
	Package *string `json:"package" tf:"package,omitempty"`

	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobLibraryInitParameters struct {
	Cran []JobLibraryCranInitParameters `json:"cran,omitempty" tf:"cran,omitempty"`

	Egg *string `json:"egg,omitempty" tf:"egg,omitempty"`

	Jar *string `json:"jar,omitempty" tf:"jar,omitempty"`

	Maven []JobLibraryMavenInitParameters `json:"maven,omitempty" tf:"maven,omitempty"`

	Pypi []JobLibraryPypiInitParameters `json:"pypi,omitempty" tf:"pypi,omitempty"`

	Requirements *string `json:"requirements,omitempty" tf:"requirements,omitempty"`

	Whl *string `json:"whl,omitempty" tf:"whl,omitempty"`
}

type JobLibraryMavenInitParameters struct {
	Coordinates *string `json:"coordinates,omitempty" tf:"coordinates,omitempty"`

	Exclusions []*string `json:"exclusions,omitempty" tf:"exclusions,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobLibraryMavenObservation struct {
	Coordinates *string `json:"coordinates,omitempty" tf:"coordinates,omitempty"`

	Exclusions []*string `json:"exclusions,omitempty" tf:"exclusions,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobLibraryMavenParameters struct {

	// +kubebuilder:validation:Optional
	Coordinates *string `json:"coordinates" tf:"coordinates,omitempty"`

	// +kubebuilder:validation:Optional
	Exclusions []*string `json:"exclusions,omitempty" tf:"exclusions,omitempty"`

	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobLibraryObservation struct {
	Cran []JobLibraryCranObservation `json:"cran,omitempty" tf:"cran,omitempty"`

	Egg *string `json:"egg,omitempty" tf:"egg,omitempty"`

	Jar *string `json:"jar,omitempty" tf:"jar,omitempty"`

	Maven []JobLibraryMavenObservation `json:"maven,omitempty" tf:"maven,omitempty"`

	Pypi []JobLibraryPypiObservation `json:"pypi,omitempty" tf:"pypi,omitempty"`

	Requirements *string `json:"requirements,omitempty" tf:"requirements,omitempty"`

	Whl *string `json:"whl,omitempty" tf:"whl,omitempty"`
}

type JobLibraryParameters struct {

	// +kubebuilder:validation:Optional
	Cran []JobLibraryCranParameters `json:"cran,omitempty" tf:"cran,omitempty"`

	// +kubebuilder:validation:Optional
	Egg *string `json:"egg,omitempty" tf:"egg,omitempty"`

	// +kubebuilder:validation:Optional
	Jar *string `json:"jar,omitempty" tf:"jar,omitempty"`

	// +kubebuilder:validation:Optional
	Maven []JobLibraryMavenParameters `json:"maven,omitempty" tf:"maven,omitempty"`

	// +kubebuilder:validation:Optional
	Pypi []JobLibraryPypiParameters `json:"pypi,omitempty" tf:"pypi,omitempty"`

	// +kubebuilder:validation:Optional
	Requirements *string `json:"requirements,omitempty" tf:"requirements,omitempty"`

	// +kubebuilder:validation:Optional
	Whl *string `json:"whl,omitempty" tf:"whl,omitempty"`
}

type JobLibraryPypiInitParameters struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobLibraryPypiObservation struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobLibraryPypiParameters struct {

	// +kubebuilder:validation:Optional
	Package *string `json:"package" tf:"package,omitempty"`

	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobNewClusterAutoscaleInitParameters struct {
	MaxWorkers *float64 `json:"maxWorkers,omitempty" tf:"max_workers,omitempty"`

	MinWorkers *float64 `json:"minWorkers,omitempty" tf:"min_workers,omitempty"`
}

type JobNewClusterAutoscaleObservation struct {
	MaxWorkers *float64 `json:"maxWorkers,omitempty" tf:"max_workers,omitempty"`

	MinWorkers *float64 `json:"minWorkers,omitempty" tf:"min_workers,omitempty"`
}

type JobNewClusterAutoscaleParameters struct {

	// +kubebuilder:validation:Optional
	MaxWorkers *float64 `json:"maxWorkers,omitempty" tf:"max_workers,omitempty"`

	// +kubebuilder:validation:Optional
	MinWorkers *float64 `json:"minWorkers,omitempty" tf:"min_workers,omitempty"`
}

type JobNewClusterAwsAttributesInitParameters struct {
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	EBSVolumeCount *float64 `json:"ebsVolumeCount,omitempty" tf:"ebs_volume_count,omitempty"`

	EBSVolumeIops *float64 `json:"ebsVolumeIops,omitempty" tf:"ebs_volume_iops,omitempty"`

	EBSVolumeSize *float64 `json:"ebsVolumeSize,omitempty" tf:"ebs_volume_size,omitempty"`

	EBSVolumeThroughput *float64 `json:"ebsVolumeThroughput,omitempty" tf:"ebs_volume_throughput,omitempty"`

	EBSVolumeType *string `json:"ebsVolumeType,omitempty" tf:"ebs_volume_type,omitempty"`

	FirstOnDemand *float64 `json:"firstOnDemand,omitempty" tf:"first_on_demand,omitempty"`

	InstanceProfileArn *string `json:"instanceProfileArn,omitempty" tf:"instance_profile_arn,omitempty"`

	SpotBidPricePercent *float64 `json:"spotBidPricePercent,omitempty" tf:"spot_bid_price_percent,omitempty"`

	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type JobNewClusterAwsAttributesObservation struct {
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	EBSVolumeCount *float64 `json:"ebsVolumeCount,omitempty" tf:"ebs_volume_count,omitempty"`

	EBSVolumeIops *float64 `json:"ebsVolumeIops,omitempty" tf:"ebs_volume_iops,omitempty"`

	EBSVolumeSize *float64 `json:"ebsVolumeSize,omitempty" tf:"ebs_volume_size,omitempty"`

	EBSVolumeThroughput *float64 `json:"ebsVolumeThroughput,omitempty" tf:"ebs_volume_throughput,omitempty"`

	EBSVolumeType *string `json:"ebsVolumeType,omitempty" tf:"ebs_volume_type,omitempty"`

	FirstOnDemand *float64 `json:"firstOnDemand,omitempty" tf:"first_on_demand,omitempty"`

	InstanceProfileArn *string `json:"instanceProfileArn,omitempty" tf:"instance_profile_arn,omitempty"`

	SpotBidPricePercent *float64 `json:"spotBidPricePercent,omitempty" tf:"spot_bid_price_percent,omitempty"`

	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type JobNewClusterAwsAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	// +kubebuilder:validation:Optional
	EBSVolumeCount *float64 `json:"ebsVolumeCount,omitempty" tf:"ebs_volume_count,omitempty"`

	// +kubebuilder:validation:Optional
	EBSVolumeIops *float64 `json:"ebsVolumeIops,omitempty" tf:"ebs_volume_iops,omitempty"`

	// +kubebuilder:validation:Optional
	EBSVolumeSize *float64 `json:"ebsVolumeSize,omitempty" tf:"ebs_volume_size,omitempty"`

	// +kubebuilder:validation:Optional
	EBSVolumeThroughput *float64 `json:"ebsVolumeThroughput,omitempty" tf:"ebs_volume_throughput,omitempty"`

	// +kubebuilder:validation:Optional
	EBSVolumeType *string `json:"ebsVolumeType,omitempty" tf:"ebs_volume_type,omitempty"`

	// +kubebuilder:validation:Optional
	FirstOnDemand *float64 `json:"firstOnDemand,omitempty" tf:"first_on_demand,omitempty"`

	// +kubebuilder:validation:Optional
	InstanceProfileArn *string `json:"instanceProfileArn,omitempty" tf:"instance_profile_arn,omitempty"`

	// +kubebuilder:validation:Optional
	SpotBidPricePercent *float64 `json:"spotBidPricePercent,omitempty" tf:"spot_bid_price_percent,omitempty"`

	// +kubebuilder:validation:Optional
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type JobNewClusterAzureAttributesInitParameters struct {
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	FirstOnDemand *float64 `json:"firstOnDemand,omitempty" tf:"first_on_demand,omitempty"`

	LogAnalyticsInfo []NewClusterAzureAttributesLogAnalyticsInfoInitParameters `json:"logAnalyticsInfo,omitempty" tf:"log_analytics_info,omitempty"`

	SpotBidMaxPrice *float64 `json:"spotBidMaxPrice,omitempty" tf:"spot_bid_max_price,omitempty"`
}

type JobNewClusterAzureAttributesObservation struct {
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	FirstOnDemand *float64 `json:"firstOnDemand,omitempty" tf:"first_on_demand,omitempty"`

	LogAnalyticsInfo []NewClusterAzureAttributesLogAnalyticsInfoObservation `json:"logAnalyticsInfo,omitempty" tf:"log_analytics_info,omitempty"`

	SpotBidMaxPrice *float64 `json:"spotBidMaxPrice,omitempty" tf:"spot_bid_max_price,omitempty"`
}

type JobNewClusterAzureAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	// +kubebuilder:validation:Optional
	FirstOnDemand *float64 `json:"firstOnDemand,omitempty" tf:"first_on_demand,omitempty"`

	// +kubebuilder:validation:Optional
	LogAnalyticsInfo []NewClusterAzureAttributesLogAnalyticsInfoParameters `json:"logAnalyticsInfo,omitempty" tf:"log_analytics_info,omitempty"`

	// +kubebuilder:validation:Optional
	SpotBidMaxPrice *float64 `json:"spotBidMaxPrice,omitempty" tf:"spot_bid_max_price,omitempty"`
}

type JobNewClusterClusterLogConfInitParameters struct {
	Dbfs []NewClusterClusterLogConfDbfsInitParameters `json:"dbfs,omitempty" tf:"dbfs,omitempty"`

	S3 []NewClusterClusterLogConfS3InitParameters `json:"s3,omitempty" tf:"s3,omitempty"`
}

type JobNewClusterClusterLogConfObservation struct {
	Dbfs []NewClusterClusterLogConfDbfsObservation `json:"dbfs,omitempty" tf:"dbfs,omitempty"`

	S3 []NewClusterClusterLogConfS3Observation `json:"s3,omitempty" tf:"s3,omitempty"`
}

type JobNewClusterClusterLogConfParameters struct {

	// +kubebuilder:validation:Optional
	Dbfs []NewClusterClusterLogConfDbfsParameters `json:"dbfs,omitempty" tf:"dbfs,omitempty"`

	// +kubebuilder:validation:Optional
	S3 []NewClusterClusterLogConfS3Parameters `json:"s3,omitempty" tf:"s3,omitempty"`
}

type JobNewClusterClusterMountInfoInitParameters struct {
	LocalMountDirPath *string `json:"localMountDirPath,omitempty" tf:"local_mount_dir_path,omitempty"`

	NetworkFilesystemInfo []NewClusterClusterMountInfoNetworkFilesystemInfoInitParameters `json:"networkFilesystemInfo,omitempty" tf:"network_filesystem_info,omitempty"`

	RemoteMountDirPath *string `json:"remoteMountDirPath,omitempty" tf:"remote_mount_dir_path,omitempty"`
}

type JobNewClusterClusterMountInfoObservation struct {
	LocalMountDirPath *string `json:"localMountDirPath,omitempty" tf:"local_mount_dir_path,omitempty"`

	NetworkFilesystemInfo []NewClusterClusterMountInfoNetworkFilesystemInfoObservation `json:"networkFilesystemInfo,omitempty" tf:"network_filesystem_info,omitempty"`

	RemoteMountDirPath *string `json:"remoteMountDirPath,omitempty" tf:"remote_mount_dir_path,omitempty"`
}

type JobNewClusterClusterMountInfoParameters struct {

	// +kubebuilder:validation:Optional
	LocalMountDirPath *string `json:"localMountDirPath" tf:"local_mount_dir_path,omitempty"`

	// +kubebuilder:validation:Optional
	NetworkFilesystemInfo []NewClusterClusterMountInfoNetworkFilesystemInfoParameters `json:"networkFilesystemInfo" tf:"network_filesystem_info,omitempty"`

	// +kubebuilder:validation:Optional
	RemoteMountDirPath *string `json:"remoteMountDirPath,omitempty" tf:"remote_mount_dir_path,omitempty"`
}

type JobNewClusterDockerImageInitParameters struct {
	BasicAuth []NewClusterDockerImageBasicAuthInitParameters `json:"basicAuth,omitempty" tf:"basic_auth,omitempty"`

	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type JobNewClusterDockerImageObservation struct {
	BasicAuth []NewClusterDockerImageBasicAuthObservation `json:"basicAuth,omitempty" tf:"basic_auth,omitempty"`

	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type JobNewClusterDockerImageParameters struct {

	// +kubebuilder:validation:Optional
	BasicAuth []NewClusterDockerImageBasicAuthParameters `json:"basicAuth,omitempty" tf:"basic_auth,omitempty"`

	// +kubebuilder:validation:Optional
	URL *string `json:"url" tf:"url,omitempty"`
}

type JobNewClusterGCPAttributesInitParameters struct {
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	BootDiskSize *float64 `json:"bootDiskSize,omitempty" tf:"boot_disk_size,omitempty"`

	GoogleServiceAccount *string `json:"googleServiceAccount,omitempty" tf:"google_service_account,omitempty"`

	LocalSsdCount *float64 `json:"localSsdCount,omitempty" tf:"local_ssd_count,omitempty"`

	UsePreemptibleExecutors *bool `json:"usePreemptibleExecutors,omitempty" tf:"use_preemptible_executors,omitempty"`

	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type JobNewClusterGCPAttributesObservation struct {
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	BootDiskSize *float64 `json:"bootDiskSize,omitempty" tf:"boot_disk_size,omitempty"`

	GoogleServiceAccount *string `json:"googleServiceAccount,omitempty" tf:"google_service_account,omitempty"`

	LocalSsdCount *float64 `json:"localSsdCount,omitempty" tf:"local_ssd_count,omitempty"`

	UsePreemptibleExecutors *bool `json:"usePreemptibleExecutors,omitempty" tf:"use_preemptible_executors,omitempty"`

	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type JobNewClusterGCPAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	// +kubebuilder:validation:Optional
	BootDiskSize *float64 `json:"bootDiskSize,omitempty" tf:"boot_disk_size,omitempty"`

	// +kubebuilder:validation:Optional
	GoogleServiceAccount *string `json:"googleServiceAccount,omitempty" tf:"google_service_account,omitempty"`

	// +kubebuilder:validation:Optional
	LocalSsdCount *float64 `json:"localSsdCount,omitempty" tf:"local_ssd_count,omitempty"`

	// +kubebuilder:validation:Optional
	UsePreemptibleExecutors *bool `json:"usePreemptibleExecutors,omitempty" tf:"use_preemptible_executors,omitempty"`

	// +kubebuilder:validation:Optional
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type JobNewClusterInitParameters struct {
	ApplyPolicyDefaultValues *bool `json:"applyPolicyDefaultValues,omitempty" tf:"apply_policy_default_values,omitempty"`

	Autoscale []JobNewClusterAutoscaleInitParameters `json:"autoscale,omitempty" tf:"autoscale,omitempty"`

	AwsAttributes []JobNewClusterAwsAttributesInitParameters `json:"awsAttributes,omitempty" tf:"aws_attributes,omitempty"`

	AzureAttributes []JobNewClusterAzureAttributesInitParameters `json:"azureAttributes,omitempty" tf:"azure_attributes,omitempty"`

	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	ClusterLogConf []JobNewClusterClusterLogConfInitParameters `json:"clusterLogConf,omitempty" tf:"cluster_log_conf,omitempty"`

	ClusterMountInfo []JobNewClusterClusterMountInfoInitParameters `json:"clusterMountInfo,omitempty" tf:"cluster_mount_info,omitempty"`

	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// +mapType=granular
	CustomTags map[string]*string `json:"customTags,omitempty" tf:"custom_tags,omitempty"`

	DataSecurityMode *string `json:"dataSecurityMode,omitempty" tf:"data_security_mode,omitempty"`

	DockerImage []JobNewClusterDockerImageInitParameters `json:"dockerImage,omitempty" tf:"docker_image,omitempty"`

	DriverInstancePoolID *string `json:"driverInstancePoolId,omitempty" tf:"driver_instance_pool_id,omitempty"`

	DriverNodeTypeID *string `json:"driverNodeTypeId,omitempty" tf:"driver_node_type_id,omitempty"`

	EnableElasticDisk *bool `json:"enableElasticDisk,omitempty" tf:"enable_elastic_disk,omitempty"`

	EnableLocalDiskEncryption *bool `json:"enableLocalDiskEncryption,omitempty" tf:"enable_local_disk_encryption,omitempty"`

	GCPAttributes []JobNewClusterGCPAttributesInitParameters `json:"gcpAttributes,omitempty" tf:"gcp_attributes,omitempty"`

	IdempotencyToken *string `json:"idempotencyToken,omitempty" tf:"idempotency_token,omitempty"`

	InitScripts []JobNewClusterInitScriptsInitParameters `json:"initScripts,omitempty" tf:"init_scripts,omitempty"`

	InstancePoolID *string `json:"instancePoolId,omitempty" tf:"instance_pool_id,omitempty"`

	Library []JobNewClusterLibraryInitParameters `json:"library,omitempty" tf:"library,omitempty"`

	NodeTypeID *string `json:"nodeTypeId,omitempty" tf:"node_type_id,omitempty"`

	NumWorkers *float64 `json:"numWorkers,omitempty" tf:"num_workers,omitempty"`

	PolicyID *string `json:"policyId,omitempty" tf:"policy_id,omitempty"`

	RuntimeEngine *string `json:"runtimeEngine,omitempty" tf:"runtime_engine,omitempty"`

	SSHPublicKeys []*string `json:"sshPublicKeys,omitempty" tf:"ssh_public_keys,omitempty"`

	SingleUserName *string `json:"singleUserName,omitempty" tf:"single_user_name,omitempty"`

	// +mapType=granular
	SparkConf map[string]*string `json:"sparkConf,omitempty" tf:"spark_conf,omitempty"`

	// +mapType=granular
	SparkEnvVars map[string]*string `json:"sparkEnvVars,omitempty" tf:"spark_env_vars,omitempty"`

	SparkVersion *string `json:"sparkVersion,omitempty" tf:"spark_version,omitempty"`

	WorkloadType []JobNewClusterWorkloadTypeInitParameters `json:"workloadType,omitempty" tf:"workload_type,omitempty"`
}

type JobNewClusterInitScriptsDbfsInitParameters struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type JobNewClusterInitScriptsDbfsObservation struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type JobNewClusterInitScriptsDbfsParameters struct {

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`
}

type JobNewClusterInitScriptsInitParameters struct {
	Abfss []NewClusterInitScriptsAbfssInitParameters `json:"abfss,omitempty" tf:"abfss,omitempty"`

	Dbfs []JobNewClusterInitScriptsDbfsInitParameters `json:"dbfs,omitempty" tf:"dbfs,omitempty"`

	File []NewClusterInitScriptsFileInitParameters `json:"file,omitempty" tf:"file,omitempty"`

	Gcs []NewClusterInitScriptsGcsInitParameters `json:"gcs,omitempty" tf:"gcs,omitempty"`

	S3 []JobNewClusterInitScriptsS3InitParameters `json:"s3,omitempty" tf:"s3,omitempty"`

	Volumes []NewClusterInitScriptsVolumesInitParameters `json:"volumes,omitempty" tf:"volumes,omitempty"`

	Workspace []NewClusterInitScriptsWorkspaceInitParameters `json:"workspace,omitempty" tf:"workspace,omitempty"`
}

type JobNewClusterInitScriptsObservation struct {
	Abfss []NewClusterInitScriptsAbfssObservation `json:"abfss,omitempty" tf:"abfss,omitempty"`

	Dbfs []JobNewClusterInitScriptsDbfsObservation `json:"dbfs,omitempty" tf:"dbfs,omitempty"`

	File []NewClusterInitScriptsFileObservation `json:"file,omitempty" tf:"file,omitempty"`

	Gcs []NewClusterInitScriptsGcsObservation `json:"gcs,omitempty" tf:"gcs,omitempty"`

	S3 []JobNewClusterInitScriptsS3Observation `json:"s3,omitempty" tf:"s3,omitempty"`

	Volumes []NewClusterInitScriptsVolumesObservation `json:"volumes,omitempty" tf:"volumes,omitempty"`

	Workspace []NewClusterInitScriptsWorkspaceObservation `json:"workspace,omitempty" tf:"workspace,omitempty"`
}

type JobNewClusterInitScriptsParameters struct {

	// +kubebuilder:validation:Optional
	Abfss []NewClusterInitScriptsAbfssParameters `json:"abfss,omitempty" tf:"abfss,omitempty"`

	// +kubebuilder:validation:Optional
	Dbfs []JobNewClusterInitScriptsDbfsParameters `json:"dbfs,omitempty" tf:"dbfs,omitempty"`

	// +kubebuilder:validation:Optional
	File []NewClusterInitScriptsFileParameters `json:"file,omitempty" tf:"file,omitempty"`

	// +kubebuilder:validation:Optional
	Gcs []NewClusterInitScriptsGcsParameters `json:"gcs,omitempty" tf:"gcs,omitempty"`

	// +kubebuilder:validation:Optional
	S3 []JobNewClusterInitScriptsS3Parameters `json:"s3,omitempty" tf:"s3,omitempty"`

	// +kubebuilder:validation:Optional
	Volumes []NewClusterInitScriptsVolumesParameters `json:"volumes,omitempty" tf:"volumes,omitempty"`

	// +kubebuilder:validation:Optional
	Workspace []NewClusterInitScriptsWorkspaceParameters `json:"workspace,omitempty" tf:"workspace,omitempty"`
}

type JobNewClusterInitScriptsS3InitParameters struct {
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	EnableEncryption *bool `json:"enableEncryption,omitempty" tf:"enable_encryption,omitempty"`

	EncryptionType *string `json:"encryptionType,omitempty" tf:"encryption_type,omitempty"`

	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	KMSKey *string `json:"kmsKey,omitempty" tf:"kms_key,omitempty"`

	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type JobNewClusterInitScriptsS3Observation struct {
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	EnableEncryption *bool `json:"enableEncryption,omitempty" tf:"enable_encryption,omitempty"`

	EncryptionType *string `json:"encryptionType,omitempty" tf:"encryption_type,omitempty"`

	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	KMSKey *string `json:"kmsKey,omitempty" tf:"kms_key,omitempty"`

	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type JobNewClusterInitScriptsS3Parameters struct {

	// +kubebuilder:validation:Optional
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`

	// +kubebuilder:validation:Optional
	EnableEncryption *bool `json:"enableEncryption,omitempty" tf:"enable_encryption,omitempty"`

	// +kubebuilder:validation:Optional
	EncryptionType *string `json:"encryptionType,omitempty" tf:"encryption_type,omitempty"`

	// +kubebuilder:validation:Optional
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// +kubebuilder:validation:Optional
	KMSKey *string `json:"kmsKey,omitempty" tf:"kms_key,omitempty"`

	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type JobNewClusterLibraryInitParameters struct {
	Cran []NewClusterLibraryCranInitParameters `json:"cran,omitempty" tf:"cran,omitempty"`

	Egg *string `json:"egg,omitempty" tf:"egg,omitempty"`

	Jar *string `json:"jar,omitempty" tf:"jar,omitempty"`

	Maven []NewClusterLibraryMavenInitParameters `json:"maven,omitempty" tf:"maven,omitempty"`

	Pypi []NewClusterLibraryPypiInitParameters `json:"pypi,omitempty" tf:"pypi,omitempty"`

	Requirements *string `json:"requirements,omitempty" tf:"requirements,omitempty"`

	Whl *string `json:"whl,omitempty" tf:"whl,omitempty"`
}

type JobNewClusterLibraryObservation struct {
	Cran []NewClusterLibraryCranObservation `json:"cran,omitempty" tf:"cran,omitempty"`

	Egg *string `json:"egg,omitempty" tf:"egg,omitempty"`

	Jar *string `json:"jar,omitempty" tf:"jar,omitempty"`

	Maven []NewClusterLibraryMavenObservation `json:"maven,omitempty" tf:"maven,omitempty"`

	Pypi []NewClusterLibraryPypiObservation `json:"pypi,omitempty" tf:"pypi,omitempty"`

	Requirements *string `json:"requirements,omitempty" tf:"requirements,omitempty"`

	Whl *string `json:"whl,omitempty" tf:"whl,omitempty"`
}

type JobNewClusterLibraryParameters struct {

	// +kubebuilder:validation:Optional
	Cran []NewClusterLibraryCranParameters `json:"cran,omitempty" tf:"cran,omitempty"`

	// +kubebuilder:validation:Optional
	Egg *string `json:"egg,omitempty" tf:"egg,omitempty"`

	// +kubebuilder:validation:Optional
	Jar *string `json:"jar,omitempty" tf:"jar,omitempty"`

	// +kubebuilder:validation:Optional
	Maven []NewClusterLibraryMavenParameters `json:"maven,omitempty" tf:"maven,omitempty"`

	// +kubebuilder:validation:Optional
	Pypi []NewClusterLibraryPypiParameters `json:"pypi,omitempty" tf:"pypi,omitempty"`

	// +kubebuilder:validation:Optional
	Requirements *string `json:"requirements,omitempty" tf:"requirements,omitempty"`

	// +kubebuilder:validation:Optional
	Whl *string `json:"whl,omitempty" tf:"whl,omitempty"`
}

type JobNewClusterObservation struct {
	ApplyPolicyDefaultValues *bool `json:"applyPolicyDefaultValues,omitempty" tf:"apply_policy_default_values,omitempty"`

	Autoscale []JobNewClusterAutoscaleObservation `json:"autoscale,omitempty" tf:"autoscale,omitempty"`

	AwsAttributes []JobNewClusterAwsAttributesObservation `json:"awsAttributes,omitempty" tf:"aws_attributes,omitempty"`

	AzureAttributes []JobNewClusterAzureAttributesObservation `json:"azureAttributes,omitempty" tf:"azure_attributes,omitempty"`

	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	ClusterLogConf []JobNewClusterClusterLogConfObservation `json:"clusterLogConf,omitempty" tf:"cluster_log_conf,omitempty"`

	ClusterMountInfo []JobNewClusterClusterMountInfoObservation `json:"clusterMountInfo,omitempty" tf:"cluster_mount_info,omitempty"`

	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// +mapType=granular
	CustomTags map[string]*string `json:"customTags,omitempty" tf:"custom_tags,omitempty"`

	DataSecurityMode *string `json:"dataSecurityMode,omitempty" tf:"data_security_mode,omitempty"`

	DockerImage []JobNewClusterDockerImageObservation `json:"dockerImage,omitempty" tf:"docker_image,omitempty"`

	DriverInstancePoolID *string `json:"driverInstancePoolId,omitempty" tf:"driver_instance_pool_id,omitempty"`

	DriverNodeTypeID *string `json:"driverNodeTypeId,omitempty" tf:"driver_node_type_id,omitempty"`

	EnableElasticDisk *bool `json:"enableElasticDisk,omitempty" tf:"enable_elastic_disk,omitempty"`

	EnableLocalDiskEncryption *bool `json:"enableLocalDiskEncryption,omitempty" tf:"enable_local_disk_encryption,omitempty"`

	GCPAttributes []JobNewClusterGCPAttributesObservation `json:"gcpAttributes,omitempty" tf:"gcp_attributes,omitempty"`

	IdempotencyToken *string `json:"idempotencyToken,omitempty" tf:"idempotency_token,omitempty"`

	InitScripts []JobNewClusterInitScriptsObservation `json:"initScripts,omitempty" tf:"init_scripts,omitempty"`

	InstancePoolID *string `json:"instancePoolId,omitempty" tf:"instance_pool_id,omitempty"`

	Library []JobNewClusterLibraryObservation `json:"library,omitempty" tf:"library,omitempty"`

	NodeTypeID *string `json:"nodeTypeId,omitempty" tf:"node_type_id,omitempty"`

	NumWorkers *float64 `json:"numWorkers,omitempty" tf:"num_workers,omitempty"`

	PolicyID *string `json:"policyId,omitempty" tf:"policy_id,omitempty"`

	RuntimeEngine *string `json:"runtimeEngine,omitempty" tf:"runtime_engine,omitempty"`

	SSHPublicKeys []*string `json:"sshPublicKeys,omitempty" tf:"ssh_public_keys,omitempty"`

	SingleUserName *string `json:"singleUserName,omitempty" tf:"single_user_name,omitempty"`

	// +mapType=granular
	SparkConf map[string]*string `json:"sparkConf,omitempty" tf:"spark_conf,omitempty"`

	// +mapType=granular
	SparkEnvVars map[string]*string `json:"sparkEnvVars,omitempty" tf:"spark_env_vars,omitempty"`

	SparkVersion *string `json:"sparkVersion,omitempty" tf:"spark_version,omitempty"`

	WorkloadType []JobNewClusterWorkloadTypeObservation `json:"workloadType,omitempty" tf:"workload_type,omitempty"`
}

type JobNewClusterParameters struct {

	// +kubebuilder:validation:Optional
	ApplyPolicyDefaultValues *bool `json:"applyPolicyDefaultValues,omitempty" tf:"apply_policy_default_values,omitempty"`

	// +kubebuilder:validation:Optional
	Autoscale []JobNewClusterAutoscaleParameters `json:"autoscale,omitempty" tf:"autoscale,omitempty"`

	// +kubebuilder:validation:Optional
	AwsAttributes []JobNewClusterAwsAttributesParameters `json:"awsAttributes,omitempty" tf:"aws_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	AzureAttributes []JobNewClusterAzureAttributesParameters `json:"azureAttributes,omitempty" tf:"azure_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// +kubebuilder:validation:Optional
	ClusterLogConf []JobNewClusterClusterLogConfParameters `json:"clusterLogConf,omitempty" tf:"cluster_log_conf,omitempty"`

	// +kubebuilder:validation:Optional
	ClusterMountInfo []JobNewClusterClusterMountInfoParameters `json:"clusterMountInfo,omitempty" tf:"cluster_mount_info,omitempty"`

	// +kubebuilder:validation:Optional
	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	CustomTags map[string]*string `json:"customTags,omitempty" tf:"custom_tags,omitempty"`

	// +kubebuilder:validation:Optional
	DataSecurityMode *string `json:"dataSecurityMode,omitempty" tf:"data_security_mode,omitempty"`

	// +kubebuilder:validation:Optional
	DockerImage []JobNewClusterDockerImageParameters `json:"dockerImage,omitempty" tf:"docker_image,omitempty"`

	// +kubebuilder:validation:Optional
	DriverInstancePoolID *string `json:"driverInstancePoolId,omitempty" tf:"driver_instance_pool_id,omitempty"`

	// +kubebuilder:validation:Optional
	DriverNodeTypeID *string `json:"driverNodeTypeId,omitempty" tf:"driver_node_type_id,omitempty"`

	// +kubebuilder:validation:Optional
	EnableElasticDisk *bool `json:"enableElasticDisk,omitempty" tf:"enable_elastic_disk,omitempty"`

	// +kubebuilder:validation:Optional
	EnableLocalDiskEncryption *bool `json:"enableLocalDiskEncryption,omitempty" tf:"enable_local_disk_encryption,omitempty"`

	// +kubebuilder:validation:Optional
	GCPAttributes []JobNewClusterGCPAttributesParameters `json:"gcpAttributes,omitempty" tf:"gcp_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	IdempotencyToken *string `json:"idempotencyToken,omitempty" tf:"idempotency_token,omitempty"`

	// +kubebuilder:validation:Optional
	InitScripts []JobNewClusterInitScriptsParameters `json:"initScripts,omitempty" tf:"init_scripts,omitempty"`

	// +kubebuilder:validation:Optional
	InstancePoolID *string `json:"instancePoolId,omitempty" tf:"instance_pool_id,omitempty"`

	// +kubebuilder:validation:Optional
	Library []JobNewClusterLibraryParameters `json:"library,omitempty" tf:"library,omitempty"`

	// +kubebuilder:validation:Optional
	NodeTypeID *string `json:"nodeTypeId,omitempty" tf:"node_type_id,omitempty"`

	// +kubebuilder:validation:Optional
	NumWorkers *float64 `json:"numWorkers,omitempty" tf:"num_workers,omitempty"`

	// +kubebuilder:validation:Optional
	PolicyID *string `json:"policyId,omitempty" tf:"policy_id,omitempty"`

	// +kubebuilder:validation:Optional
	RuntimeEngine *string `json:"runtimeEngine,omitempty" tf:"runtime_engine,omitempty"`

	// +kubebuilder:validation:Optional
	SSHPublicKeys []*string `json:"sshPublicKeys,omitempty" tf:"ssh_public_keys,omitempty"`

	// +kubebuilder:validation:Optional
	SingleUserName *string `json:"singleUserName,omitempty" tf:"single_user_name,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	SparkConf map[string]*string `json:"sparkConf,omitempty" tf:"spark_conf,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	SparkEnvVars map[string]*string `json:"sparkEnvVars,omitempty" tf:"spark_env_vars,omitempty"`

	// +kubebuilder:validation:Optional
	SparkVersion *string `json:"sparkVersion" tf:"spark_version,omitempty"`

	// +kubebuilder:validation:Optional
	WorkloadType []JobNewClusterWorkloadTypeParameters `json:"workloadType,omitempty" tf:"workload_type,omitempty"`
}

type JobNewClusterWorkloadTypeInitParameters struct {
	Clients []NewClusterWorkloadTypeClientsInitParameters `json:"clients,omitempty" tf:"clients,omitempty"`
}

type JobNewClusterWorkloadTypeObservation struct {
	Clients []NewClusterWorkloadTypeClientsObservation `json:"clients,omitempty" tf:"clients,omitempty"`
}

type JobNewClusterWorkloadTypeParameters struct {

	// +kubebuilder:validation:Optional
	Clients []NewClusterWorkloadTypeClientsParameters `json:"clients" tf:"clients,omitempty"`
}

type JobObservation struct {
	AlwaysRunning *bool `json:"alwaysRunning,omitempty" tf:"always_running,omitempty"`

	BudgetPolicyID *string `json:"budgetPolicyId,omitempty" tf:"budget_policy_id,omitempty"`

	Continuous []ContinuousObservation `json:"continuous,omitempty" tf:"continuous,omitempty"`

	ControlRunState *bool `json:"controlRunState,omitempty" tf:"control_run_state,omitempty"`

	DbtTask []DbtTaskObservation `json:"dbtTask,omitempty" tf:"dbt_task,omitempty"`

	Deployment []DeploymentObservation `json:"deployment,omitempty" tf:"deployment,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	EditMode *string `json:"editMode,omitempty" tf:"edit_mode,omitempty"`

	EmailNotifications []EmailNotificationsObservation `json:"emailNotifications,omitempty" tf:"email_notifications,omitempty"`

	Environment []EnvironmentObservation `json:"environment,omitempty" tf:"environment,omitempty"`

	ExistingClusterID *string `json:"existingClusterId,omitempty" tf:"existing_cluster_id,omitempty"`

	Format *string `json:"format,omitempty" tf:"format,omitempty"`

	GitSource []GitSourceObservation `json:"gitSource,omitempty" tf:"git_source,omitempty"`

	Health []HealthObservation `json:"health,omitempty" tf:"health,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	JobCluster []JobClusterObservation `json:"jobCluster,omitempty" tf:"job_cluster,omitempty"`

	Library []JobLibraryObservation `json:"library,omitempty" tf:"library,omitempty"`

	MaxConcurrentRuns *float64 `json:"maxConcurrentRuns,omitempty" tf:"max_concurrent_runs,omitempty"`

	MaxRetries *float64 `json:"maxRetries,omitempty" tf:"max_retries,omitempty"`

	MinRetryIntervalMillis *float64 `json:"minRetryIntervalMillis,omitempty" tf:"min_retry_interval_millis,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	NewCluster []JobNewClusterObservation `json:"newCluster,omitempty" tf:"new_cluster,omitempty"`

	NotebookTask []NotebookTaskObservation `json:"notebookTask,omitempty" tf:"notebook_task,omitempty"`

	NotificationSettings []NotificationSettingsObservation `json:"notificationSettings,omitempty" tf:"notification_settings,omitempty"`

	Parameter []ParameterObservation `json:"parameter,omitempty" tf:"parameter,omitempty"`

	PipelineTask []PipelineTaskObservation `json:"pipelineTask,omitempty" tf:"pipeline_task,omitempty"`

	PythonWheelTask []PythonWheelTaskObservation `json:"pythonWheelTask,omitempty" tf:"python_wheel_task,omitempty"`

	Queue []QueueObservation `json:"queue,omitempty" tf:"queue,omitempty"`

	RetryOnTimeout *bool `json:"retryOnTimeout,omitempty" tf:"retry_on_timeout,omitempty"`

	RunAs []RunAsObservation `json:"runAs,omitempty" tf:"run_as,omitempty"`

	RunJobTask []RunJobTaskObservation `json:"runJobTask,omitempty" tf:"run_job_task,omitempty"`

	Schedule []ScheduleObservation `json:"schedule,omitempty" tf:"schedule,omitempty"`

	SparkJarTask []SparkJarTaskObservation `json:"sparkJarTask,omitempty" tf:"spark_jar_task,omitempty"`

	SparkPythonTask []SparkPythonTaskObservation `json:"sparkPythonTask,omitempty" tf:"spark_python_task,omitempty"`

	SparkSubmitTask []SparkSubmitTaskObservation `json:"sparkSubmitTask,omitempty" tf:"spark_submit_task,omitempty"`

	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	Task []TaskObservation `json:"task,omitempty" tf:"task,omitempty"`

	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`

	Trigger []TriggerObservation `json:"trigger,omitempty" tf:"trigger,omitempty"`

	URL *string `json:"url,omitempty" tf:"url,omitempty"`

	WebhookNotifications []JobWebhookNotificationsObservation `json:"webhookNotifications,omitempty" tf:"webhook_notifications,omitempty"`
}

type JobParameters struct {

	// +kubebuilder:validation:Optional
	AlwaysRunning *bool `json:"alwaysRunning,omitempty" tf:"always_running,omitempty"`

	// +kubebuilder:validation:Optional
	BudgetPolicyID *string `json:"budgetPolicyId,omitempty" tf:"budget_policy_id,omitempty"`

	// +kubebuilder:validation:Optional
	Continuous []ContinuousParameters `json:"continuous,omitempty" tf:"continuous,omitempty"`

	// +kubebuilder:validation:Optional
	ControlRunState *bool `json:"controlRunState,omitempty" tf:"control_run_state,omitempty"`

	// +kubebuilder:validation:Optional
	DbtTask []DbtTaskParameters `json:"dbtTask,omitempty" tf:"dbt_task,omitempty"`

	// +kubebuilder:validation:Optional
	Deployment []DeploymentParameters `json:"deployment,omitempty" tf:"deployment,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	EditMode *string `json:"editMode,omitempty" tf:"edit_mode,omitempty"`

	// +kubebuilder:validation:Optional
	EmailNotifications []EmailNotificationsParameters `json:"emailNotifications,omitempty" tf:"email_notifications,omitempty"`

	// +kubebuilder:validation:Optional
	Environment []EnvironmentParameters `json:"environment,omitempty" tf:"environment,omitempty"`

	// +kubebuilder:validation:Optional
	ExistingClusterID *string `json:"existingClusterId,omitempty" tf:"existing_cluster_id,omitempty"`

	// +kubebuilder:validation:Optional
	Format *string `json:"format,omitempty" tf:"format,omitempty"`

	// +kubebuilder:validation:Optional
	GitSource []GitSourceParameters `json:"gitSource,omitempty" tf:"git_source,omitempty"`

	// +kubebuilder:validation:Optional
	Health []HealthParameters `json:"health,omitempty" tf:"health,omitempty"`

	// +kubebuilder:validation:Optional
	JobCluster []JobClusterParameters `json:"jobCluster,omitempty" tf:"job_cluster,omitempty"`

	// +kubebuilder:validation:Optional
	Library []JobLibraryParameters `json:"library,omitempty" tf:"library,omitempty"`

	// +kubebuilder:validation:Optional
	MaxConcurrentRuns *float64 `json:"maxConcurrentRuns,omitempty" tf:"max_concurrent_runs,omitempty"`

	// +kubebuilder:validation:Optional
	MaxRetries *float64 `json:"maxRetries,omitempty" tf:"max_retries,omitempty"`

	// +kubebuilder:validation:Optional
	MinRetryIntervalMillis *float64 `json:"minRetryIntervalMillis,omitempty" tf:"min_retry_interval_millis,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	NewCluster []JobNewClusterParameters `json:"newCluster,omitempty" tf:"new_cluster,omitempty"`

	// +kubebuilder:validation:Optional
	NotebookTask []NotebookTaskParameters `json:"notebookTask,omitempty" tf:"notebook_task,omitempty"`

	// +kubebuilder:validation:Optional
	NotificationSettings []NotificationSettingsParameters `json:"notificationSettings,omitempty" tf:"notification_settings,omitempty"`

	// +kubebuilder:validation:Optional
	Parameter []ParameterParameters `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// +kubebuilder:validation:Optional
	PipelineTask []PipelineTaskParameters `json:"pipelineTask,omitempty" tf:"pipeline_task,omitempty"`

	// +kubebuilder:validation:Optional
	PythonWheelTask []PythonWheelTaskParameters `json:"pythonWheelTask,omitempty" tf:"python_wheel_task,omitempty"`

	// +kubebuilder:validation:Optional
	Queue []QueueParameters `json:"queue,omitempty" tf:"queue,omitempty"`

	// +kubebuilder:validation:Optional
	RetryOnTimeout *bool `json:"retryOnTimeout,omitempty" tf:"retry_on_timeout,omitempty"`

	// +kubebuilder:validation:Optional
	RunAs []RunAsParameters `json:"runAs,omitempty" tf:"run_as,omitempty"`

	// +kubebuilder:validation:Optional
	RunJobTask []RunJobTaskParameters `json:"runJobTask,omitempty" tf:"run_job_task,omitempty"`

	// +kubebuilder:validation:Optional
	Schedule []ScheduleParameters `json:"schedule,omitempty" tf:"schedule,omitempty"`

	// +kubebuilder:validation:Optional
	SparkJarTask []SparkJarTaskParameters `json:"sparkJarTask,omitempty" tf:"spark_jar_task,omitempty"`

	// +kubebuilder:validation:Optional
	SparkPythonTask []SparkPythonTaskParameters `json:"sparkPythonTask,omitempty" tf:"spark_python_task,omitempty"`

	// +kubebuilder:validation:Optional
	SparkSubmitTask []SparkSubmitTaskParameters `json:"sparkSubmitTask,omitempty" tf:"spark_submit_task,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// +kubebuilder:validation:Optional
	Task []TaskParameters `json:"task,omitempty" tf:"task,omitempty"`

	// +kubebuilder:validation:Optional
	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`

	// +kubebuilder:validation:Optional
	Trigger []TriggerParameters `json:"trigger,omitempty" tf:"trigger,omitempty"`

	// +kubebuilder:validation:Optional
	WebhookNotifications []JobWebhookNotificationsParameters `json:"webhookNotifications,omitempty" tf:"webhook_notifications,omitempty"`
}

type JobSourceInitParameters struct {
	DirtyState *string `json:"dirtyState,omitempty" tf:"dirty_state,omitempty"`

	ImportFromGitBranch *string `json:"importFromGitBranch,omitempty" tf:"import_from_git_branch,omitempty"`

	JobConfigPath *string `json:"jobConfigPath,omitempty" tf:"job_config_path,omitempty"`
}

type JobSourceObservation struct {
	DirtyState *string `json:"dirtyState,omitempty" tf:"dirty_state,omitempty"`

	ImportFromGitBranch *string `json:"importFromGitBranch,omitempty" tf:"import_from_git_branch,omitempty"`

	JobConfigPath *string `json:"jobConfigPath,omitempty" tf:"job_config_path,omitempty"`
}

type JobSourceParameters struct {

	// +kubebuilder:validation:Optional
	DirtyState *string `json:"dirtyState,omitempty" tf:"dirty_state,omitempty"`

	// +kubebuilder:validation:Optional
	ImportFromGitBranch *string `json:"importFromGitBranch" tf:"import_from_git_branch,omitempty"`

	// +kubebuilder:validation:Optional
	JobConfigPath *string `json:"jobConfigPath" tf:"job_config_path,omitempty"`
}

type JobTaskHealthInitParameters struct {
	Rules []TaskHealthRulesInitParameters `json:"rules,omitempty" tf:"rules,omitempty"`
}

type JobTaskHealthObservation struct {
	Rules []TaskHealthRulesObservation `json:"rules,omitempty" tf:"rules,omitempty"`
}

type JobTaskHealthParameters struct {

	// +kubebuilder:validation:Optional
	Rules []TaskHealthRulesParameters `json:"rules" tf:"rules,omitempty"`
}

type JobTaskLibraryCranInitParameters struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobTaskLibraryCranObservation struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobTaskLibraryCranParameters struct {

	// +kubebuilder:validation:Optional
	Package *string `json:"package" tf:"package,omitempty"`

	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobTaskLibraryInitParameters struct {
	Cran []JobTaskLibraryCranInitParameters `json:"cran,omitempty" tf:"cran,omitempty"`

	Egg *string `json:"egg,omitempty" tf:"egg,omitempty"`

	Jar *string `json:"jar,omitempty" tf:"jar,omitempty"`

	Maven []JobTaskLibraryMavenInitParameters `json:"maven,omitempty" tf:"maven,omitempty"`

	Pypi []JobTaskLibraryPypiInitParameters `json:"pypi,omitempty" tf:"pypi,omitempty"`

	Requirements *string `json:"requirements,omitempty" tf:"requirements,omitempty"`

	Whl *string `json:"whl,omitempty" tf:"whl,omitempty"`
}

type JobTaskLibraryMavenInitParameters struct {
	Coordinates *string `json:"coordinates,omitempty" tf:"coordinates,omitempty"`

	Exclusions []*string `json:"exclusions,omitempty" tf:"exclusions,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobTaskLibraryMavenObservation struct {
	Coordinates *string `json:"coordinates,omitempty" tf:"coordinates,omitempty"`

	Exclusions []*string `json:"exclusions,omitempty" tf:"exclusions,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobTaskLibraryMavenParameters struct {

	// +kubebuilder:validation:Optional
	Coordinates *string `json:"coordinates" tf:"coordinates,omitempty"`

	// +kubebuilder:validation:Optional
	Exclusions []*string `json:"exclusions,omitempty" tf:"exclusions,omitempty"`

	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobTaskLibraryObservation struct {
	Cran []JobTaskLibraryCranObservation `json:"cran,omitempty" tf:"cran,omitempty"`

	Egg *string `json:"egg,omitempty" tf:"egg,omitempty"`

	Jar *string `json:"jar,omitempty" tf:"jar,omitempty"`

	Maven []JobTaskLibraryMavenObservation `json:"maven,omitempty" tf:"maven,omitempty"`

	Pypi []JobTaskLibraryPypiObservation `json:"pypi,omitempty" tf:"pypi,omitempty"`

	Requirements *string `json:"requirements,omitempty" tf:"requirements,omitempty"`

	Whl *string `json:"whl,omitempty" tf:"whl,omitempty"`
}

type JobTaskLibraryParameters struct {

	// +kubebuilder:validation:Optional
	Cran []JobTaskLibraryCranParameters `json:"cran,omitempty" tf:"cran,omitempty"`

	// +kubebuilder:validation:Optional
	Egg *string `json:"egg,omitempty" tf:"egg,omitempty"`

	// +kubebuilder:validation:Optional
	Jar *string `json:"jar,omitempty" tf:"jar,omitempty"`

	// +kubebuilder:validation:Optional
	Maven []JobTaskLibraryMavenParameters `json:"maven,omitempty" tf:"maven,omitempty"`

	// +kubebuilder:validation:Optional
	Pypi []JobTaskLibraryPypiParameters `json:"pypi,omitempty" tf:"pypi,omitempty"`

	// +kubebuilder:validation:Optional
	Requirements *string `json:"requirements,omitempty" tf:"requirements,omitempty"`

	// +kubebuilder:validation:Optional
	Whl *string `json:"whl,omitempty" tf:"whl,omitempty"`
}

type JobTaskLibraryPypiInitParameters struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobTaskLibraryPypiObservation struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobTaskLibraryPypiParameters struct {

	// +kubebuilder:validation:Optional
	Package *string `json:"package" tf:"package,omitempty"`

	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobTaskNewClusterAutoscaleInitParameters struct {
	MaxWorkers *float64 `json:"maxWorkers,omitempty" tf:"max_workers,omitempty"`

	MinWorkers *float64 `json:"minWorkers,omitempty" tf:"min_workers,omitempty"`
}

type JobTaskNewClusterAutoscaleObservation struct {
	MaxWorkers *float64 `json:"maxWorkers,omitempty" tf:"max_workers,omitempty"`

	MinWorkers *float64 `json:"minWorkers,omitempty" tf:"min_workers,omitempty"`
}

type JobTaskNewClusterAutoscaleParameters struct {

	// +kubebuilder:validation:Optional
	MaxWorkers *float64 `json:"maxWorkers,omitempty" tf:"max_workers,omitempty"`

	// +kubebuilder:validation:Optional
	MinWorkers *float64 `json:"minWorkers,omitempty" tf:"min_workers,omitempty"`
}

type JobTaskNewClusterAwsAttributesInitParameters struct {
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	EBSVolumeCount *float64 `json:"ebsVolumeCount,omitempty" tf:"ebs_volume_count,omitempty"`

	EBSVolumeIops *float64 `json:"ebsVolumeIops,omitempty" tf:"ebs_volume_iops,omitempty"`

	EBSVolumeSize *float64 `json:"ebsVolumeSize,omitempty" tf:"ebs_volume_size,omitempty"`

	EBSVolumeThroughput *float64 `json:"ebsVolumeThroughput,omitempty" tf:"ebs_volume_throughput,omitempty"`

	EBSVolumeType *string `json:"ebsVolumeType,omitempty" tf:"ebs_volume_type,omitempty"`

	FirstOnDemand *float64 `json:"firstOnDemand,omitempty" tf:"first_on_demand,omitempty"`

	InstanceProfileArn *string `json:"instanceProfileArn,omitempty" tf:"instance_profile_arn,omitempty"`

	SpotBidPricePercent *float64 `json:"spotBidPricePercent,omitempty" tf:"spot_bid_price_percent,omitempty"`

	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type JobTaskNewClusterAwsAttributesObservation struct {
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	EBSVolumeCount *float64 `json:"ebsVolumeCount,omitempty" tf:"ebs_volume_count,omitempty"`

	EBSVolumeIops *float64 `json:"ebsVolumeIops,omitempty" tf:"ebs_volume_iops,omitempty"`

	EBSVolumeSize *float64 `json:"ebsVolumeSize,omitempty" tf:"ebs_volume_size,omitempty"`

	EBSVolumeThroughput *float64 `json:"ebsVolumeThroughput,omitempty" tf:"ebs_volume_throughput,omitempty"`

	EBSVolumeType *string `json:"ebsVolumeType,omitempty" tf:"ebs_volume_type,omitempty"`

	FirstOnDemand *float64 `json:"firstOnDemand,omitempty" tf:"first_on_demand,omitempty"`

	InstanceProfileArn *string `json:"instanceProfileArn,omitempty" tf:"instance_profile_arn,omitempty"`

	SpotBidPricePercent *float64 `json:"spotBidPricePercent,omitempty" tf:"spot_bid_price_percent,omitempty"`

	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type JobTaskNewClusterAwsAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	// +kubebuilder:validation:Optional
	EBSVolumeCount *float64 `json:"ebsVolumeCount,omitempty" tf:"ebs_volume_count,omitempty"`

	// +kubebuilder:validation:Optional
	EBSVolumeIops *float64 `json:"ebsVolumeIops,omitempty" tf:"ebs_volume_iops,omitempty"`

	// +kubebuilder:validation:Optional
	EBSVolumeSize *float64 `json:"ebsVolumeSize,omitempty" tf:"ebs_volume_size,omitempty"`

	// +kubebuilder:validation:Optional
	EBSVolumeThroughput *float64 `json:"ebsVolumeThroughput,omitempty" tf:"ebs_volume_throughput,omitempty"`

	// +kubebuilder:validation:Optional
	EBSVolumeType *string `json:"ebsVolumeType,omitempty" tf:"ebs_volume_type,omitempty"`

	// +kubebuilder:validation:Optional
	FirstOnDemand *float64 `json:"firstOnDemand,omitempty" tf:"first_on_demand,omitempty"`

	// +kubebuilder:validation:Optional
	InstanceProfileArn *string `json:"instanceProfileArn,omitempty" tf:"instance_profile_arn,omitempty"`

	// +kubebuilder:validation:Optional
	SpotBidPricePercent *float64 `json:"spotBidPricePercent,omitempty" tf:"spot_bid_price_percent,omitempty"`

	// +kubebuilder:validation:Optional
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type JobTaskNewClusterAzureAttributesInitParameters struct {
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	FirstOnDemand *float64 `json:"firstOnDemand,omitempty" tf:"first_on_demand,omitempty"`

	LogAnalyticsInfo []JobTaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters `json:"logAnalyticsInfo,omitempty" tf:"log_analytics_info,omitempty"`

	SpotBidMaxPrice *float64 `json:"spotBidMaxPrice,omitempty" tf:"spot_bid_max_price,omitempty"`
}

type JobTaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters struct {
	LogAnalyticsPrimaryKey *string `json:"logAnalyticsPrimaryKey,omitempty" tf:"log_analytics_primary_key,omitempty"`

	LogAnalyticsWorkspaceID *string `json:"logAnalyticsWorkspaceId,omitempty" tf:"log_analytics_workspace_id,omitempty"`
}

type JobTaskNewClusterAzureAttributesLogAnalyticsInfoObservation struct {
	LogAnalyticsPrimaryKey *string `json:"logAnalyticsPrimaryKey,omitempty" tf:"log_analytics_primary_key,omitempty"`

	LogAnalyticsWorkspaceID *string `json:"logAnalyticsWorkspaceId,omitempty" tf:"log_analytics_workspace_id,omitempty"`
}

type JobTaskNewClusterAzureAttributesLogAnalyticsInfoParameters struct {

	// +kubebuilder:validation:Optional
	LogAnalyticsPrimaryKey *string `json:"logAnalyticsPrimaryKey,omitempty" tf:"log_analytics_primary_key,omitempty"`

	// +kubebuilder:validation:Optional
	LogAnalyticsWorkspaceID *string `json:"logAnalyticsWorkspaceId,omitempty" tf:"log_analytics_workspace_id,omitempty"`
}

type JobTaskNewClusterAzureAttributesObservation struct {
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	FirstOnDemand *float64 `json:"firstOnDemand,omitempty" tf:"first_on_demand,omitempty"`

	LogAnalyticsInfo []JobTaskNewClusterAzureAttributesLogAnalyticsInfoObservation `json:"logAnalyticsInfo,omitempty" tf:"log_analytics_info,omitempty"`

	SpotBidMaxPrice *float64 `json:"spotBidMaxPrice,omitempty" tf:"spot_bid_max_price,omitempty"`
}

type JobTaskNewClusterAzureAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	// +kubebuilder:validation:Optional
	FirstOnDemand *float64 `json:"firstOnDemand,omitempty" tf:"first_on_demand,omitempty"`

	// +kubebuilder:validation:Optional
	LogAnalyticsInfo []JobTaskNewClusterAzureAttributesLogAnalyticsInfoParameters `json:"logAnalyticsInfo,omitempty" tf:"log_analytics_info,omitempty"`

	// +kubebuilder:validation:Optional
	SpotBidMaxPrice *float64 `json:"spotBidMaxPrice,omitempty" tf:"spot_bid_max_price,omitempty"`
}

type JobTaskNewClusterClusterLogConfDbfsInitParameters struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type JobTaskNewClusterClusterLogConfDbfsObservation struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type JobTaskNewClusterClusterLogConfDbfsParameters struct {

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`
}

type JobTaskNewClusterClusterLogConfInitParameters struct {
	Dbfs []JobTaskNewClusterClusterLogConfDbfsInitParameters `json:"dbfs,omitempty" tf:"dbfs,omitempty"`

	S3 []JobTaskNewClusterClusterLogConfS3InitParameters `json:"s3,omitempty" tf:"s3,omitempty"`
}

type JobTaskNewClusterClusterLogConfObservation struct {
	Dbfs []JobTaskNewClusterClusterLogConfDbfsObservation `json:"dbfs,omitempty" tf:"dbfs,omitempty"`

	S3 []JobTaskNewClusterClusterLogConfS3Observation `json:"s3,omitempty" tf:"s3,omitempty"`
}

type JobTaskNewClusterClusterLogConfParameters struct {

	// +kubebuilder:validation:Optional
	Dbfs []JobTaskNewClusterClusterLogConfDbfsParameters `json:"dbfs,omitempty" tf:"dbfs,omitempty"`

	// +kubebuilder:validation:Optional
	S3 []JobTaskNewClusterClusterLogConfS3Parameters `json:"s3,omitempty" tf:"s3,omitempty"`
}

type JobTaskNewClusterClusterLogConfS3InitParameters struct {
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	EnableEncryption *bool `json:"enableEncryption,omitempty" tf:"enable_encryption,omitempty"`

	EncryptionType *string `json:"encryptionType,omitempty" tf:"encryption_type,omitempty"`

	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	KMSKey *string `json:"kmsKey,omitempty" tf:"kms_key,omitempty"`

	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type JobTaskNewClusterClusterLogConfS3Observation struct {
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	EnableEncryption *bool `json:"enableEncryption,omitempty" tf:"enable_encryption,omitempty"`

	EncryptionType *string `json:"encryptionType,omitempty" tf:"encryption_type,omitempty"`

	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	KMSKey *string `json:"kmsKey,omitempty" tf:"kms_key,omitempty"`

	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type JobTaskNewClusterClusterLogConfS3Parameters struct {

	// +kubebuilder:validation:Optional
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`

	// +kubebuilder:validation:Optional
	EnableEncryption *bool `json:"enableEncryption,omitempty" tf:"enable_encryption,omitempty"`

	// +kubebuilder:validation:Optional
	EncryptionType *string `json:"encryptionType,omitempty" tf:"encryption_type,omitempty"`

	// +kubebuilder:validation:Optional
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// +kubebuilder:validation:Optional
	KMSKey *string `json:"kmsKey,omitempty" tf:"kms_key,omitempty"`

	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type JobTaskNewClusterClusterMountInfoInitParameters struct {
	LocalMountDirPath *string `json:"localMountDirPath,omitempty" tf:"local_mount_dir_path,omitempty"`

	NetworkFilesystemInfo []JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters `json:"networkFilesystemInfo,omitempty" tf:"network_filesystem_info,omitempty"`

	RemoteMountDirPath *string `json:"remoteMountDirPath,omitempty" tf:"remote_mount_dir_path,omitempty"`
}

type JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters struct {
	MountOptions *string `json:"mountOptions,omitempty" tf:"mount_options,omitempty"`

	ServerAddress *string `json:"serverAddress,omitempty" tf:"server_address,omitempty"`
}

type JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation struct {
	MountOptions *string `json:"mountOptions,omitempty" tf:"mount_options,omitempty"`

	ServerAddress *string `json:"serverAddress,omitempty" tf:"server_address,omitempty"`
}

type JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters struct {

	// +kubebuilder:validation:Optional
	MountOptions *string `json:"mountOptions,omitempty" tf:"mount_options,omitempty"`

	// +kubebuilder:validation:Optional
	ServerAddress *string `json:"serverAddress" tf:"server_address,omitempty"`
}

type JobTaskNewClusterClusterMountInfoObservation struct {
	LocalMountDirPath *string `json:"localMountDirPath,omitempty" tf:"local_mount_dir_path,omitempty"`

	NetworkFilesystemInfo []JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation `json:"networkFilesystemInfo,omitempty" tf:"network_filesystem_info,omitempty"`

	RemoteMountDirPath *string `json:"remoteMountDirPath,omitempty" tf:"remote_mount_dir_path,omitempty"`
}

type JobTaskNewClusterClusterMountInfoParameters struct {

	// +kubebuilder:validation:Optional
	LocalMountDirPath *string `json:"localMountDirPath" tf:"local_mount_dir_path,omitempty"`

	// +kubebuilder:validation:Optional
	NetworkFilesystemInfo []JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters `json:"networkFilesystemInfo" tf:"network_filesystem_info,omitempty"`

	// +kubebuilder:validation:Optional
	RemoteMountDirPath *string `json:"remoteMountDirPath,omitempty" tf:"remote_mount_dir_path,omitempty"`
}

type JobTaskNewClusterDockerImageBasicAuthInitParameters struct {
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type JobTaskNewClusterDockerImageBasicAuthObservation struct {
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type JobTaskNewClusterDockerImageBasicAuthParameters struct {

	// +kubebuilder:validation:Optional
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// +kubebuilder:validation:Optional
	Username *string `json:"username" tf:"username,omitempty"`
}

type JobTaskNewClusterDockerImageInitParameters struct {
	BasicAuth []JobTaskNewClusterDockerImageBasicAuthInitParameters `json:"basicAuth,omitempty" tf:"basic_auth,omitempty"`

	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type JobTaskNewClusterDockerImageObservation struct {
	BasicAuth []JobTaskNewClusterDockerImageBasicAuthObservation `json:"basicAuth,omitempty" tf:"basic_auth,omitempty"`

	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type JobTaskNewClusterDockerImageParameters struct {

	// +kubebuilder:validation:Optional
	BasicAuth []JobTaskNewClusterDockerImageBasicAuthParameters `json:"basicAuth,omitempty" tf:"basic_auth,omitempty"`

	// +kubebuilder:validation:Optional
	URL *string `json:"url" tf:"url,omitempty"`
}

type JobTaskNewClusterGCPAttributesInitParameters struct {
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	BootDiskSize *float64 `json:"bootDiskSize,omitempty" tf:"boot_disk_size,omitempty"`

	GoogleServiceAccount *string `json:"googleServiceAccount,omitempty" tf:"google_service_account,omitempty"`

	LocalSsdCount *float64 `json:"localSsdCount,omitempty" tf:"local_ssd_count,omitempty"`

	UsePreemptibleExecutors *bool `json:"usePreemptibleExecutors,omitempty" tf:"use_preemptible_executors,omitempty"`

	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type JobTaskNewClusterGCPAttributesObservation struct {
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	BootDiskSize *float64 `json:"bootDiskSize,omitempty" tf:"boot_disk_size,omitempty"`

	GoogleServiceAccount *string `json:"googleServiceAccount,omitempty" tf:"google_service_account,omitempty"`

	LocalSsdCount *float64 `json:"localSsdCount,omitempty" tf:"local_ssd_count,omitempty"`

	UsePreemptibleExecutors *bool `json:"usePreemptibleExecutors,omitempty" tf:"use_preemptible_executors,omitempty"`

	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type JobTaskNewClusterGCPAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	// +kubebuilder:validation:Optional
	BootDiskSize *float64 `json:"bootDiskSize,omitempty" tf:"boot_disk_size,omitempty"`

	// +kubebuilder:validation:Optional
	GoogleServiceAccount *string `json:"googleServiceAccount,omitempty" tf:"google_service_account,omitempty"`

	// +kubebuilder:validation:Optional
	LocalSsdCount *float64 `json:"localSsdCount,omitempty" tf:"local_ssd_count,omitempty"`

	// +kubebuilder:validation:Optional
	UsePreemptibleExecutors *bool `json:"usePreemptibleExecutors,omitempty" tf:"use_preemptible_executors,omitempty"`

	// +kubebuilder:validation:Optional
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type JobTaskNewClusterInitParameters struct {
	ApplyPolicyDefaultValues *bool `json:"applyPolicyDefaultValues,omitempty" tf:"apply_policy_default_values,omitempty"`

	Autoscale []JobTaskNewClusterAutoscaleInitParameters `json:"autoscale,omitempty" tf:"autoscale,omitempty"`

	AwsAttributes []JobTaskNewClusterAwsAttributesInitParameters `json:"awsAttributes,omitempty" tf:"aws_attributes,omitempty"`

	AzureAttributes []JobTaskNewClusterAzureAttributesInitParameters `json:"azureAttributes,omitempty" tf:"azure_attributes,omitempty"`

	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	ClusterLogConf []JobTaskNewClusterClusterLogConfInitParameters `json:"clusterLogConf,omitempty" tf:"cluster_log_conf,omitempty"`

	ClusterMountInfo []JobTaskNewClusterClusterMountInfoInitParameters `json:"clusterMountInfo,omitempty" tf:"cluster_mount_info,omitempty"`

	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// +mapType=granular
	CustomTags map[string]*string `json:"customTags,omitempty" tf:"custom_tags,omitempty"`

	DataSecurityMode *string `json:"dataSecurityMode,omitempty" tf:"data_security_mode,omitempty"`

	DockerImage []JobTaskNewClusterDockerImageInitParameters `json:"dockerImage,omitempty" tf:"docker_image,omitempty"`

	DriverInstancePoolID *string `json:"driverInstancePoolId,omitempty" tf:"driver_instance_pool_id,omitempty"`

	DriverNodeTypeID *string `json:"driverNodeTypeId,omitempty" tf:"driver_node_type_id,omitempty"`

	EnableElasticDisk *bool `json:"enableElasticDisk,omitempty" tf:"enable_elastic_disk,omitempty"`

	EnableLocalDiskEncryption *bool `json:"enableLocalDiskEncryption,omitempty" tf:"enable_local_disk_encryption,omitempty"`

	GCPAttributes []JobTaskNewClusterGCPAttributesInitParameters `json:"gcpAttributes,omitempty" tf:"gcp_attributes,omitempty"`

	IdempotencyToken *string `json:"idempotencyToken,omitempty" tf:"idempotency_token,omitempty"`

	InitScripts []JobTaskNewClusterInitScriptsInitParameters `json:"initScripts,omitempty" tf:"init_scripts,omitempty"`

	InstancePoolID *string `json:"instancePoolId,omitempty" tf:"instance_pool_id,omitempty"`

	Library []JobTaskNewClusterLibraryInitParameters `json:"library,omitempty" tf:"library,omitempty"`

	NodeTypeID *string `json:"nodeTypeId,omitempty" tf:"node_type_id,omitempty"`

	NumWorkers *float64 `json:"numWorkers,omitempty" tf:"num_workers,omitempty"`

	PolicyID *string `json:"policyId,omitempty" tf:"policy_id,omitempty"`

	RuntimeEngine *string `json:"runtimeEngine,omitempty" tf:"runtime_engine,omitempty"`

	SSHPublicKeys []*string `json:"sshPublicKeys,omitempty" tf:"ssh_public_keys,omitempty"`

	SingleUserName *string `json:"singleUserName,omitempty" tf:"single_user_name,omitempty"`

	// +mapType=granular
	SparkConf map[string]*string `json:"sparkConf,omitempty" tf:"spark_conf,omitempty"`

	// +mapType=granular
	SparkEnvVars map[string]*string `json:"sparkEnvVars,omitempty" tf:"spark_env_vars,omitempty"`

	SparkVersion *string `json:"sparkVersion,omitempty" tf:"spark_version,omitempty"`

	WorkloadType []JobTaskNewClusterWorkloadTypeInitParameters `json:"workloadType,omitempty" tf:"workload_type,omitempty"`
}

type JobTaskNewClusterInitScriptsAbfssInitParameters struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type JobTaskNewClusterInitScriptsAbfssObservation struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type JobTaskNewClusterInitScriptsAbfssParameters struct {

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`
}

type JobTaskNewClusterInitScriptsDbfsInitParameters struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type JobTaskNewClusterInitScriptsDbfsObservation struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type JobTaskNewClusterInitScriptsDbfsParameters struct {

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`
}

type JobTaskNewClusterInitScriptsFileInitParameters struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type JobTaskNewClusterInitScriptsFileObservation struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type JobTaskNewClusterInitScriptsFileParameters struct {

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`
}

type JobTaskNewClusterInitScriptsGcsInitParameters struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type JobTaskNewClusterInitScriptsGcsObservation struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type JobTaskNewClusterInitScriptsGcsParameters struct {

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`
}

type JobTaskNewClusterInitScriptsInitParameters struct {
	Abfss []JobTaskNewClusterInitScriptsAbfssInitParameters `json:"abfss,omitempty" tf:"abfss,omitempty"`

	Dbfs []JobTaskNewClusterInitScriptsDbfsInitParameters `json:"dbfs,omitempty" tf:"dbfs,omitempty"`

	File []JobTaskNewClusterInitScriptsFileInitParameters `json:"file,omitempty" tf:"file,omitempty"`

	Gcs []JobTaskNewClusterInitScriptsGcsInitParameters `json:"gcs,omitempty" tf:"gcs,omitempty"`

	S3 []JobTaskNewClusterInitScriptsS3InitParameters `json:"s3,omitempty" tf:"s3,omitempty"`

	Volumes []JobTaskNewClusterInitScriptsVolumesInitParameters `json:"volumes,omitempty" tf:"volumes,omitempty"`

	Workspace []JobTaskNewClusterInitScriptsWorkspaceInitParameters `json:"workspace,omitempty" tf:"workspace,omitempty"`
}

type JobTaskNewClusterInitScriptsObservation struct {
	Abfss []JobTaskNewClusterInitScriptsAbfssObservation `json:"abfss,omitempty" tf:"abfss,omitempty"`

	Dbfs []JobTaskNewClusterInitScriptsDbfsObservation `json:"dbfs,omitempty" tf:"dbfs,omitempty"`

	File []JobTaskNewClusterInitScriptsFileObservation `json:"file,omitempty" tf:"file,omitempty"`

	Gcs []JobTaskNewClusterInitScriptsGcsObservation `json:"gcs,omitempty" tf:"gcs,omitempty"`

	S3 []JobTaskNewClusterInitScriptsS3Observation `json:"s3,omitempty" tf:"s3,omitempty"`

	Volumes []JobTaskNewClusterInitScriptsVolumesObservation `json:"volumes,omitempty" tf:"volumes,omitempty"`

	Workspace []JobTaskNewClusterInitScriptsWorkspaceObservation `json:"workspace,omitempty" tf:"workspace,omitempty"`
}

type JobTaskNewClusterInitScriptsParameters struct {

	// +kubebuilder:validation:Optional
	Abfss []JobTaskNewClusterInitScriptsAbfssParameters `json:"abfss,omitempty" tf:"abfss,omitempty"`

	// +kubebuilder:validation:Optional
	Dbfs []JobTaskNewClusterInitScriptsDbfsParameters `json:"dbfs,omitempty" tf:"dbfs,omitempty"`

	// +kubebuilder:validation:Optional
	File []JobTaskNewClusterInitScriptsFileParameters `json:"file,omitempty" tf:"file,omitempty"`

	// +kubebuilder:validation:Optional
	Gcs []JobTaskNewClusterInitScriptsGcsParameters `json:"gcs,omitempty" tf:"gcs,omitempty"`

	// +kubebuilder:validation:Optional
	S3 []JobTaskNewClusterInitScriptsS3Parameters `json:"s3,omitempty" tf:"s3,omitempty"`

	// +kubebuilder:validation:Optional
	Volumes []JobTaskNewClusterInitScriptsVolumesParameters `json:"volumes,omitempty" tf:"volumes,omitempty"`

	// +kubebuilder:validation:Optional
	Workspace []JobTaskNewClusterInitScriptsWorkspaceParameters `json:"workspace,omitempty" tf:"workspace,omitempty"`
}

type JobTaskNewClusterInitScriptsS3InitParameters struct {
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	EnableEncryption *bool `json:"enableEncryption,omitempty" tf:"enable_encryption,omitempty"`

	EncryptionType *string `json:"encryptionType,omitempty" tf:"encryption_type,omitempty"`

	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	KMSKey *string `json:"kmsKey,omitempty" tf:"kms_key,omitempty"`

	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type JobTaskNewClusterInitScriptsS3Observation struct {
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	EnableEncryption *bool `json:"enableEncryption,omitempty" tf:"enable_encryption,omitempty"`

	EncryptionType *string `json:"encryptionType,omitempty" tf:"encryption_type,omitempty"`

	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	KMSKey *string `json:"kmsKey,omitempty" tf:"kms_key,omitempty"`

	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type JobTaskNewClusterInitScriptsS3Parameters struct {

	// +kubebuilder:validation:Optional
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`

	// +kubebuilder:validation:Optional
	EnableEncryption *bool `json:"enableEncryption,omitempty" tf:"enable_encryption,omitempty"`

	// +kubebuilder:validation:Optional
	EncryptionType *string `json:"encryptionType,omitempty" tf:"encryption_type,omitempty"`

	// +kubebuilder:validation:Optional
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// +kubebuilder:validation:Optional
	KMSKey *string `json:"kmsKey,omitempty" tf:"kms_key,omitempty"`

	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type JobTaskNewClusterInitScriptsVolumesInitParameters struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type JobTaskNewClusterInitScriptsVolumesObservation struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type JobTaskNewClusterInitScriptsVolumesParameters struct {

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`
}

type JobTaskNewClusterInitScriptsWorkspaceInitParameters struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type JobTaskNewClusterInitScriptsWorkspaceObservation struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type JobTaskNewClusterInitScriptsWorkspaceParameters struct {

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`
}

type JobTaskNewClusterLibraryCranInitParameters struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobTaskNewClusterLibraryCranObservation struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobTaskNewClusterLibraryCranParameters struct {

	// +kubebuilder:validation:Optional
	Package *string `json:"package" tf:"package,omitempty"`

	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobTaskNewClusterLibraryInitParameters struct {
	Cran []JobTaskNewClusterLibraryCranInitParameters `json:"cran,omitempty" tf:"cran,omitempty"`

	Egg *string `json:"egg,omitempty" tf:"egg,omitempty"`

	Jar *string `json:"jar,omitempty" tf:"jar,omitempty"`

	Maven []JobTaskNewClusterLibraryMavenInitParameters `json:"maven,omitempty" tf:"maven,omitempty"`

	Pypi []JobTaskNewClusterLibraryPypiInitParameters `json:"pypi,omitempty" tf:"pypi,omitempty"`

	Requirements *string `json:"requirements,omitempty" tf:"requirements,omitempty"`

	Whl *string `json:"whl,omitempty" tf:"whl,omitempty"`
}

type JobTaskNewClusterLibraryMavenInitParameters struct {
	Coordinates *string `json:"coordinates,omitempty" tf:"coordinates,omitempty"`

	Exclusions []*string `json:"exclusions,omitempty" tf:"exclusions,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobTaskNewClusterLibraryMavenObservation struct {
	Coordinates *string `json:"coordinates,omitempty" tf:"coordinates,omitempty"`

	Exclusions []*string `json:"exclusions,omitempty" tf:"exclusions,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobTaskNewClusterLibraryMavenParameters struct {

	// +kubebuilder:validation:Optional
	Coordinates *string `json:"coordinates" tf:"coordinates,omitempty"`

	// +kubebuilder:validation:Optional
	Exclusions []*string `json:"exclusions,omitempty" tf:"exclusions,omitempty"`

	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobTaskNewClusterLibraryObservation struct {
	Cran []JobTaskNewClusterLibraryCranObservation `json:"cran,omitempty" tf:"cran,omitempty"`

	Egg *string `json:"egg,omitempty" tf:"egg,omitempty"`

	Jar *string `json:"jar,omitempty" tf:"jar,omitempty"`

	Maven []JobTaskNewClusterLibraryMavenObservation `json:"maven,omitempty" tf:"maven,omitempty"`

	Pypi []JobTaskNewClusterLibraryPypiObservation `json:"pypi,omitempty" tf:"pypi,omitempty"`

	Requirements *string `json:"requirements,omitempty" tf:"requirements,omitempty"`

	Whl *string `json:"whl,omitempty" tf:"whl,omitempty"`
}

type JobTaskNewClusterLibraryParameters struct {

	// +kubebuilder:validation:Optional
	Cran []JobTaskNewClusterLibraryCranParameters `json:"cran,omitempty" tf:"cran,omitempty"`

	// +kubebuilder:validation:Optional
	Egg *string `json:"egg,omitempty" tf:"egg,omitempty"`

	// +kubebuilder:validation:Optional
	Jar *string `json:"jar,omitempty" tf:"jar,omitempty"`

	// +kubebuilder:validation:Optional
	Maven []JobTaskNewClusterLibraryMavenParameters `json:"maven,omitempty" tf:"maven,omitempty"`

	// +kubebuilder:validation:Optional
	Pypi []JobTaskNewClusterLibraryPypiParameters `json:"pypi,omitempty" tf:"pypi,omitempty"`

	// +kubebuilder:validation:Optional
	Requirements *string `json:"requirements,omitempty" tf:"requirements,omitempty"`

	// +kubebuilder:validation:Optional
	Whl *string `json:"whl,omitempty" tf:"whl,omitempty"`
}

type JobTaskNewClusterLibraryPypiInitParameters struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobTaskNewClusterLibraryPypiObservation struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobTaskNewClusterLibraryPypiParameters struct {

	// +kubebuilder:validation:Optional
	Package *string `json:"package" tf:"package,omitempty"`

	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobTaskNewClusterObservation struct {
	ApplyPolicyDefaultValues *bool `json:"applyPolicyDefaultValues,omitempty" tf:"apply_policy_default_values,omitempty"`

	Autoscale []JobTaskNewClusterAutoscaleObservation `json:"autoscale,omitempty" tf:"autoscale,omitempty"`

	AwsAttributes []JobTaskNewClusterAwsAttributesObservation `json:"awsAttributes,omitempty" tf:"aws_attributes,omitempty"`

	AzureAttributes []JobTaskNewClusterAzureAttributesObservation `json:"azureAttributes,omitempty" tf:"azure_attributes,omitempty"`

	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	ClusterLogConf []JobTaskNewClusterClusterLogConfObservation `json:"clusterLogConf,omitempty" tf:"cluster_log_conf,omitempty"`

	ClusterMountInfo []JobTaskNewClusterClusterMountInfoObservation `json:"clusterMountInfo,omitempty" tf:"cluster_mount_info,omitempty"`

	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// +mapType=granular
	CustomTags map[string]*string `json:"customTags,omitempty" tf:"custom_tags,omitempty"`

	DataSecurityMode *string `json:"dataSecurityMode,omitempty" tf:"data_security_mode,omitempty"`

	DockerImage []JobTaskNewClusterDockerImageObservation `json:"dockerImage,omitempty" tf:"docker_image,omitempty"`

	DriverInstancePoolID *string `json:"driverInstancePoolId,omitempty" tf:"driver_instance_pool_id,omitempty"`

	DriverNodeTypeID *string `json:"driverNodeTypeId,omitempty" tf:"driver_node_type_id,omitempty"`

	EnableElasticDisk *bool `json:"enableElasticDisk,omitempty" tf:"enable_elastic_disk,omitempty"`

	EnableLocalDiskEncryption *bool `json:"enableLocalDiskEncryption,omitempty" tf:"enable_local_disk_encryption,omitempty"`

	GCPAttributes []JobTaskNewClusterGCPAttributesObservation `json:"gcpAttributes,omitempty" tf:"gcp_attributes,omitempty"`

	IdempotencyToken *string `json:"idempotencyToken,omitempty" tf:"idempotency_token,omitempty"`

	InitScripts []JobTaskNewClusterInitScriptsObservation `json:"initScripts,omitempty" tf:"init_scripts,omitempty"`

	InstancePoolID *string `json:"instancePoolId,omitempty" tf:"instance_pool_id,omitempty"`

	Library []JobTaskNewClusterLibraryObservation `json:"library,omitempty" tf:"library,omitempty"`

	NodeTypeID *string `json:"nodeTypeId,omitempty" tf:"node_type_id,omitempty"`

	NumWorkers *float64 `json:"numWorkers,omitempty" tf:"num_workers,omitempty"`

	PolicyID *string `json:"policyId,omitempty" tf:"policy_id,omitempty"`

	RuntimeEngine *string `json:"runtimeEngine,omitempty" tf:"runtime_engine,omitempty"`

	SSHPublicKeys []*string `json:"sshPublicKeys,omitempty" tf:"ssh_public_keys,omitempty"`

	SingleUserName *string `json:"singleUserName,omitempty" tf:"single_user_name,omitempty"`

	// +mapType=granular
	SparkConf map[string]*string `json:"sparkConf,omitempty" tf:"spark_conf,omitempty"`

	// +mapType=granular
	SparkEnvVars map[string]*string `json:"sparkEnvVars,omitempty" tf:"spark_env_vars,omitempty"`

	SparkVersion *string `json:"sparkVersion,omitempty" tf:"spark_version,omitempty"`

	WorkloadType []JobTaskNewClusterWorkloadTypeObservation `json:"workloadType,omitempty" tf:"workload_type,omitempty"`
}

type JobTaskNewClusterParameters struct {

	// +kubebuilder:validation:Optional
	ApplyPolicyDefaultValues *bool `json:"applyPolicyDefaultValues,omitempty" tf:"apply_policy_default_values,omitempty"`

	// +kubebuilder:validation:Optional
	Autoscale []JobTaskNewClusterAutoscaleParameters `json:"autoscale,omitempty" tf:"autoscale,omitempty"`

	// +kubebuilder:validation:Optional
	AwsAttributes []JobTaskNewClusterAwsAttributesParameters `json:"awsAttributes,omitempty" tf:"aws_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	AzureAttributes []JobTaskNewClusterAzureAttributesParameters `json:"azureAttributes,omitempty" tf:"azure_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// +kubebuilder:validation:Optional
	ClusterLogConf []JobTaskNewClusterClusterLogConfParameters `json:"clusterLogConf,omitempty" tf:"cluster_log_conf,omitempty"`

	// +kubebuilder:validation:Optional
	ClusterMountInfo []JobTaskNewClusterClusterMountInfoParameters `json:"clusterMountInfo,omitempty" tf:"cluster_mount_info,omitempty"`

	// +kubebuilder:validation:Optional
	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	CustomTags map[string]*string `json:"customTags,omitempty" tf:"custom_tags,omitempty"`

	// +kubebuilder:validation:Optional
	DataSecurityMode *string `json:"dataSecurityMode,omitempty" tf:"data_security_mode,omitempty"`

	// +kubebuilder:validation:Optional
	DockerImage []JobTaskNewClusterDockerImageParameters `json:"dockerImage,omitempty" tf:"docker_image,omitempty"`

	// +kubebuilder:validation:Optional
	DriverInstancePoolID *string `json:"driverInstancePoolId,omitempty" tf:"driver_instance_pool_id,omitempty"`

	// +kubebuilder:validation:Optional
	DriverNodeTypeID *string `json:"driverNodeTypeId,omitempty" tf:"driver_node_type_id,omitempty"`

	// +kubebuilder:validation:Optional
	EnableElasticDisk *bool `json:"enableElasticDisk,omitempty" tf:"enable_elastic_disk,omitempty"`

	// +kubebuilder:validation:Optional
	EnableLocalDiskEncryption *bool `json:"enableLocalDiskEncryption,omitempty" tf:"enable_local_disk_encryption,omitempty"`

	// +kubebuilder:validation:Optional
	GCPAttributes []JobTaskNewClusterGCPAttributesParameters `json:"gcpAttributes,omitempty" tf:"gcp_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	IdempotencyToken *string `json:"idempotencyToken,omitempty" tf:"idempotency_token,omitempty"`

	// +kubebuilder:validation:Optional
	InitScripts []JobTaskNewClusterInitScriptsParameters `json:"initScripts,omitempty" tf:"init_scripts,omitempty"`

	// +kubebuilder:validation:Optional
	InstancePoolID *string `json:"instancePoolId,omitempty" tf:"instance_pool_id,omitempty"`

	// +kubebuilder:validation:Optional
	Library []JobTaskNewClusterLibraryParameters `json:"library,omitempty" tf:"library,omitempty"`

	// +kubebuilder:validation:Optional
	NodeTypeID *string `json:"nodeTypeId,omitempty" tf:"node_type_id,omitempty"`

	// +kubebuilder:validation:Optional
	NumWorkers *float64 `json:"numWorkers,omitempty" tf:"num_workers,omitempty"`

	// +kubebuilder:validation:Optional
	PolicyID *string `json:"policyId,omitempty" tf:"policy_id,omitempty"`

	// +kubebuilder:validation:Optional
	RuntimeEngine *string `json:"runtimeEngine,omitempty" tf:"runtime_engine,omitempty"`

	// +kubebuilder:validation:Optional
	SSHPublicKeys []*string `json:"sshPublicKeys,omitempty" tf:"ssh_public_keys,omitempty"`

	// +kubebuilder:validation:Optional
	SingleUserName *string `json:"singleUserName,omitempty" tf:"single_user_name,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	SparkConf map[string]*string `json:"sparkConf,omitempty" tf:"spark_conf,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	SparkEnvVars map[string]*string `json:"sparkEnvVars,omitempty" tf:"spark_env_vars,omitempty"`

	// +kubebuilder:validation:Optional
	SparkVersion *string `json:"sparkVersion" tf:"spark_version,omitempty"`

	// +kubebuilder:validation:Optional
	WorkloadType []JobTaskNewClusterWorkloadTypeParameters `json:"workloadType,omitempty" tf:"workload_type,omitempty"`
}

type JobTaskNewClusterWorkloadTypeClientsInitParameters struct {
	Jobs *bool `json:"jobs,omitempty" tf:"jobs,omitempty"`

	Notebooks *bool `json:"notebooks,omitempty" tf:"notebooks,omitempty"`
}

type JobTaskNewClusterWorkloadTypeClientsObservation struct {
	Jobs *bool `json:"jobs,omitempty" tf:"jobs,omitempty"`

	Notebooks *bool `json:"notebooks,omitempty" tf:"notebooks,omitempty"`
}

type JobTaskNewClusterWorkloadTypeClientsParameters struct {

	// +kubebuilder:validation:Optional
	Jobs *bool `json:"jobs,omitempty" tf:"jobs,omitempty"`

	// +kubebuilder:validation:Optional
	Notebooks *bool `json:"notebooks,omitempty" tf:"notebooks,omitempty"`
}

type JobTaskNewClusterWorkloadTypeInitParameters struct {
	Clients []JobTaskNewClusterWorkloadTypeClientsInitParameters `json:"clients,omitempty" tf:"clients,omitempty"`
}

type JobTaskNewClusterWorkloadTypeObservation struct {
	Clients []JobTaskNewClusterWorkloadTypeClientsObservation `json:"clients,omitempty" tf:"clients,omitempty"`
}

type JobTaskNewClusterWorkloadTypeParameters struct {

	// +kubebuilder:validation:Optional
	Clients []JobTaskNewClusterWorkloadTypeClientsParameters `json:"clients" tf:"clients,omitempty"`
}

type JobTaskNotebookTaskInitParameters struct {

	// +mapType=granular
	BaseParameters map[string]*string `json:"baseParameters,omitempty" tf:"base_parameters,omitempty"`

	NotebookPath *string `json:"notebookPath,omitempty" tf:"notebook_path,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	WarehouseID *string `json:"warehouseId,omitempty" tf:"warehouse_id,omitempty"`
}

type JobTaskNotebookTaskObservation struct {

	// +mapType=granular
	BaseParameters map[string]*string `json:"baseParameters,omitempty" tf:"base_parameters,omitempty"`

	NotebookPath *string `json:"notebookPath,omitempty" tf:"notebook_path,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	WarehouseID *string `json:"warehouseId,omitempty" tf:"warehouse_id,omitempty"`
}

type JobTaskNotebookTaskParameters struct {

	// +kubebuilder:validation:Optional
	// +mapType=granular
	BaseParameters map[string]*string `json:"baseParameters,omitempty" tf:"base_parameters,omitempty"`

	// +kubebuilder:validation:Optional
	NotebookPath *string `json:"notebookPath" tf:"notebook_path,omitempty"`

	// +kubebuilder:validation:Optional
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// +kubebuilder:validation:Optional
	WarehouseID *string `json:"warehouseId,omitempty" tf:"warehouse_id,omitempty"`
}

type JobTaskNotificationSettingsInitParameters struct {
	AlertOnLastAttempt *bool `json:"alertOnLastAttempt,omitempty" tf:"alert_on_last_attempt,omitempty"`

	NoAlertForCanceledRuns *bool `json:"noAlertForCanceledRuns,omitempty" tf:"no_alert_for_canceled_runs,omitempty"`

	NoAlertForSkippedRuns *bool `json:"noAlertForSkippedRuns,omitempty" tf:"no_alert_for_skipped_runs,omitempty"`
}

type JobTaskNotificationSettingsObservation struct {
	AlertOnLastAttempt *bool `json:"alertOnLastAttempt,omitempty" tf:"alert_on_last_attempt,omitempty"`

	NoAlertForCanceledRuns *bool `json:"noAlertForCanceledRuns,omitempty" tf:"no_alert_for_canceled_runs,omitempty"`

	NoAlertForSkippedRuns *bool `json:"noAlertForSkippedRuns,omitempty" tf:"no_alert_for_skipped_runs,omitempty"`
}

type JobTaskNotificationSettingsParameters struct {

	// +kubebuilder:validation:Optional
	AlertOnLastAttempt *bool `json:"alertOnLastAttempt,omitempty" tf:"alert_on_last_attempt,omitempty"`

	// +kubebuilder:validation:Optional
	NoAlertForCanceledRuns *bool `json:"noAlertForCanceledRuns,omitempty" tf:"no_alert_for_canceled_runs,omitempty"`

	// +kubebuilder:validation:Optional
	NoAlertForSkippedRuns *bool `json:"noAlertForSkippedRuns,omitempty" tf:"no_alert_for_skipped_runs,omitempty"`
}

type JobTaskPipelineTaskInitParameters struct {
	FullRefresh *bool `json:"fullRefresh,omitempty" tf:"full_refresh,omitempty"`

	PipelineID *string `json:"pipelineId,omitempty" tf:"pipeline_id,omitempty"`
}

type JobTaskPipelineTaskObservation struct {
	FullRefresh *bool `json:"fullRefresh,omitempty" tf:"full_refresh,omitempty"`

	PipelineID *string `json:"pipelineId,omitempty" tf:"pipeline_id,omitempty"`
}

type JobTaskPipelineTaskParameters struct {

	// +kubebuilder:validation:Optional
	FullRefresh *bool `json:"fullRefresh,omitempty" tf:"full_refresh,omitempty"`

	// +kubebuilder:validation:Optional
	PipelineID *string `json:"pipelineId" tf:"pipeline_id,omitempty"`
}

type JobTaskPythonWheelTaskInitParameters struct {
	EntryPoint *string `json:"entryPoint,omitempty" tf:"entry_point,omitempty"`

	// +mapType=granular
	NamedParameters map[string]*string `json:"namedParameters,omitempty" tf:"named_parameters,omitempty"`

	PackageName *string `json:"packageName,omitempty" tf:"package_name,omitempty"`

	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type JobTaskPythonWheelTaskObservation struct {
	EntryPoint *string `json:"entryPoint,omitempty" tf:"entry_point,omitempty"`

	// +mapType=granular
	NamedParameters map[string]*string `json:"namedParameters,omitempty" tf:"named_parameters,omitempty"`

	PackageName *string `json:"packageName,omitempty" tf:"package_name,omitempty"`

	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type JobTaskPythonWheelTaskParameters struct {

	// +kubebuilder:validation:Optional
	EntryPoint *string `json:"entryPoint,omitempty" tf:"entry_point,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	NamedParameters map[string]*string `json:"namedParameters,omitempty" tf:"named_parameters,omitempty"`

	// +kubebuilder:validation:Optional
	PackageName *string `json:"packageName,omitempty" tf:"package_name,omitempty"`

	// +kubebuilder:validation:Optional
	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type JobTaskRunJobTaskInitParameters struct {
	DbtCommands []*string `json:"dbtCommands,omitempty" tf:"dbt_commands,omitempty"`

	JarParams []*string `json:"jarParams,omitempty" tf:"jar_params,omitempty"`

	JobID *float64 `json:"jobId,omitempty" tf:"job_id,omitempty"`

	// +mapType=granular
	JobParameters map[string]*string `json:"jobParameters,omitempty" tf:"job_parameters,omitempty"`

	// +mapType=granular
	NotebookParams map[string]*string `json:"notebookParams,omitempty" tf:"notebook_params,omitempty"`

	PipelineParams []RunJobTaskPipelineParamsInitParameters `json:"pipelineParams,omitempty" tf:"pipeline_params,omitempty"`

	// +mapType=granular
	PythonNamedParams map[string]*string `json:"pythonNamedParams,omitempty" tf:"python_named_params,omitempty"`

	PythonParams []*string `json:"pythonParams,omitempty" tf:"python_params,omitempty"`

	// +mapType=granular
	SQLParams map[string]*string `json:"sqlParams,omitempty" tf:"sql_params,omitempty"`

	SparkSubmitParams []*string `json:"sparkSubmitParams,omitempty" tf:"spark_submit_params,omitempty"`
}

type JobTaskRunJobTaskObservation struct {
	DbtCommands []*string `json:"dbtCommands,omitempty" tf:"dbt_commands,omitempty"`

	JarParams []*string `json:"jarParams,omitempty" tf:"jar_params,omitempty"`

	JobID *float64 `json:"jobId,omitempty" tf:"job_id,omitempty"`

	// +mapType=granular
	JobParameters map[string]*string `json:"jobParameters,omitempty" tf:"job_parameters,omitempty"`

	// +mapType=granular
	NotebookParams map[string]*string `json:"notebookParams,omitempty" tf:"notebook_params,omitempty"`

	PipelineParams []RunJobTaskPipelineParamsObservation `json:"pipelineParams,omitempty" tf:"pipeline_params,omitempty"`

	// +mapType=granular
	PythonNamedParams map[string]*string `json:"pythonNamedParams,omitempty" tf:"python_named_params,omitempty"`

	PythonParams []*string `json:"pythonParams,omitempty" tf:"python_params,omitempty"`

	// +mapType=granular
	SQLParams map[string]*string `json:"sqlParams,omitempty" tf:"sql_params,omitempty"`

	SparkSubmitParams []*string `json:"sparkSubmitParams,omitempty" tf:"spark_submit_params,omitempty"`
}

type JobTaskRunJobTaskParameters struct {

	// +kubebuilder:validation:Optional
	DbtCommands []*string `json:"dbtCommands,omitempty" tf:"dbt_commands,omitempty"`

	// +kubebuilder:validation:Optional
	JarParams []*string `json:"jarParams,omitempty" tf:"jar_params,omitempty"`

	// +kubebuilder:validation:Optional
	JobID *float64 `json:"jobId" tf:"job_id,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	JobParameters map[string]*string `json:"jobParameters,omitempty" tf:"job_parameters,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	NotebookParams map[string]*string `json:"notebookParams,omitempty" tf:"notebook_params,omitempty"`

	// +kubebuilder:validation:Optional
	PipelineParams []RunJobTaskPipelineParamsParameters `json:"pipelineParams,omitempty" tf:"pipeline_params,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	PythonNamedParams map[string]*string `json:"pythonNamedParams,omitempty" tf:"python_named_params,omitempty"`

	// +kubebuilder:validation:Optional
	PythonParams []*string `json:"pythonParams,omitempty" tf:"python_params,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	SQLParams map[string]*string `json:"sqlParams,omitempty" tf:"sql_params,omitempty"`

	// +kubebuilder:validation:Optional
	SparkSubmitParams []*string `json:"sparkSubmitParams,omitempty" tf:"spark_submit_params,omitempty"`
}

type JobTaskSparkJarTaskInitParameters struct {
	JarURI *string `json:"jarUri,omitempty" tf:"jar_uri,omitempty"`

	MainClassName *string `json:"mainClassName,omitempty" tf:"main_class_name,omitempty"`

	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type JobTaskSparkJarTaskObservation struct {
	JarURI *string `json:"jarUri,omitempty" tf:"jar_uri,omitempty"`

	MainClassName *string `json:"mainClassName,omitempty" tf:"main_class_name,omitempty"`

	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type JobTaskSparkJarTaskParameters struct {

	// +kubebuilder:validation:Optional
	JarURI *string `json:"jarUri,omitempty" tf:"jar_uri,omitempty"`

	// +kubebuilder:validation:Optional
	MainClassName *string `json:"mainClassName,omitempty" tf:"main_class_name,omitempty"`

	// +kubebuilder:validation:Optional
	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type JobTaskSparkPythonTaskInitParameters struct {
	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	PythonFile *string `json:"pythonFile,omitempty" tf:"python_file,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`
}

type JobTaskSparkPythonTaskObservation struct {
	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	PythonFile *string `json:"pythonFile,omitempty" tf:"python_file,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`
}

type JobTaskSparkPythonTaskParameters struct {

	// +kubebuilder:validation:Optional
	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// +kubebuilder:validation:Optional
	PythonFile *string `json:"pythonFile" tf:"python_file,omitempty"`

	// +kubebuilder:validation:Optional
	Source *string `json:"source,omitempty" tf:"source,omitempty"`
}

type JobTaskSparkSubmitTaskInitParameters struct {
	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type JobTaskSparkSubmitTaskObservation struct {
	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type JobTaskSparkSubmitTaskParameters struct {

	// +kubebuilder:validation:Optional
	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type JobWebhookNotificationsInitParameters struct {
	OnDurationWarningThresholdExceeded []JobWebhookNotificationsOnDurationWarningThresholdExceededInitParameters `json:"onDurationWarningThresholdExceeded,omitempty" tf:"on_duration_warning_threshold_exceeded,omitempty"`

	OnFailure []JobWebhookNotificationsOnFailureInitParameters `json:"onFailure,omitempty" tf:"on_failure,omitempty"`

	OnStart []JobWebhookNotificationsOnStartInitParameters `json:"onStart,omitempty" tf:"on_start,omitempty"`

	OnStreamingBacklogExceeded []JobWebhookNotificationsOnStreamingBacklogExceededInitParameters `json:"onStreamingBacklogExceeded,omitempty" tf:"on_streaming_backlog_exceeded,omitempty"`

	OnSuccess []JobWebhookNotificationsOnSuccessInitParameters `json:"onSuccess,omitempty" tf:"on_success,omitempty"`
}

type JobWebhookNotificationsObservation struct {
	OnDurationWarningThresholdExceeded []JobWebhookNotificationsOnDurationWarningThresholdExceededObservation `json:"onDurationWarningThresholdExceeded,omitempty" tf:"on_duration_warning_threshold_exceeded,omitempty"`

	OnFailure []JobWebhookNotificationsOnFailureObservation `json:"onFailure,omitempty" tf:"on_failure,omitempty"`

	OnStart []JobWebhookNotificationsOnStartObservation `json:"onStart,omitempty" tf:"on_start,omitempty"`

	OnStreamingBacklogExceeded []JobWebhookNotificationsOnStreamingBacklogExceededObservation `json:"onStreamingBacklogExceeded,omitempty" tf:"on_streaming_backlog_exceeded,omitempty"`

	OnSuccess []JobWebhookNotificationsOnSuccessObservation `json:"onSuccess,omitempty" tf:"on_success,omitempty"`
}

type JobWebhookNotificationsOnDurationWarningThresholdExceededInitParameters struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type JobWebhookNotificationsOnDurationWarningThresholdExceededObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type JobWebhookNotificationsOnDurationWarningThresholdExceededParameters struct {

	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`
}

type JobWebhookNotificationsOnFailureInitParameters struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type JobWebhookNotificationsOnFailureObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type JobWebhookNotificationsOnFailureParameters struct {

	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`
}

type JobWebhookNotificationsOnStartInitParameters struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type JobWebhookNotificationsOnStartObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type JobWebhookNotificationsOnStartParameters struct {

	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`
}

type JobWebhookNotificationsOnStreamingBacklogExceededInitParameters struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type JobWebhookNotificationsOnStreamingBacklogExceededObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type JobWebhookNotificationsOnStreamingBacklogExceededParameters struct {

	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`
}

type JobWebhookNotificationsOnSuccessInitParameters struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type JobWebhookNotificationsOnSuccessObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type JobWebhookNotificationsOnSuccessParameters struct {

	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`
}

type JobWebhookNotificationsParameters struct {

	// +kubebuilder:validation:Optional
	OnDurationWarningThresholdExceeded []JobWebhookNotificationsOnDurationWarningThresholdExceededParameters `json:"onDurationWarningThresholdExceeded,omitempty" tf:"on_duration_warning_threshold_exceeded,omitempty"`

	// +kubebuilder:validation:Optional
	OnFailure []JobWebhookNotificationsOnFailureParameters `json:"onFailure,omitempty" tf:"on_failure,omitempty"`

	// +kubebuilder:validation:Optional
	OnStart []JobWebhookNotificationsOnStartParameters `json:"onStart,omitempty" tf:"on_start,omitempty"`

	// +kubebuilder:validation:Optional
	OnStreamingBacklogExceeded []JobWebhookNotificationsOnStreamingBacklogExceededParameters `json:"onStreamingBacklogExceeded,omitempty" tf:"on_streaming_backlog_exceeded,omitempty"`

	// +kubebuilder:validation:Optional
	OnSuccess []JobWebhookNotificationsOnSuccessParameters `json:"onSuccess,omitempty" tf:"on_success,omitempty"`
}

type LibraryCranInitParameters struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type LibraryCranObservation struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type LibraryCranParameters struct {

	// +kubebuilder:validation:Optional
	Package *string `json:"package" tf:"package,omitempty"`

	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type LibraryMavenInitParameters struct {
	Coordinates *string `json:"coordinates,omitempty" tf:"coordinates,omitempty"`

	Exclusions []*string `json:"exclusions,omitempty" tf:"exclusions,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type LibraryMavenObservation struct {
	Coordinates *string `json:"coordinates,omitempty" tf:"coordinates,omitempty"`

	Exclusions []*string `json:"exclusions,omitempty" tf:"exclusions,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type LibraryMavenParameters struct {

	// +kubebuilder:validation:Optional
	Coordinates *string `json:"coordinates" tf:"coordinates,omitempty"`

	// +kubebuilder:validation:Optional
	Exclusions []*string `json:"exclusions,omitempty" tf:"exclusions,omitempty"`

	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type LibraryPypiInitParameters struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type LibraryPypiObservation struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type LibraryPypiParameters struct {

	// +kubebuilder:validation:Optional
	Package *string `json:"package" tf:"package,omitempty"`

	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type NewClusterAutoscaleInitParameters struct {
	MaxWorkers *float64 `json:"maxWorkers,omitempty" tf:"max_workers,omitempty"`

	MinWorkers *float64 `json:"minWorkers,omitempty" tf:"min_workers,omitempty"`
}

type NewClusterAutoscaleObservation struct {
	MaxWorkers *float64 `json:"maxWorkers,omitempty" tf:"max_workers,omitempty"`

	MinWorkers *float64 `json:"minWorkers,omitempty" tf:"min_workers,omitempty"`
}

type NewClusterAutoscaleParameters struct {

	// +kubebuilder:validation:Optional
	MaxWorkers *float64 `json:"maxWorkers,omitempty" tf:"max_workers,omitempty"`

	// +kubebuilder:validation:Optional
	MinWorkers *float64 `json:"minWorkers,omitempty" tf:"min_workers,omitempty"`
}

type NewClusterAwsAttributesInitParameters struct {
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	EBSVolumeCount *float64 `json:"ebsVolumeCount,omitempty" tf:"ebs_volume_count,omitempty"`

	EBSVolumeIops *float64 `json:"ebsVolumeIops,omitempty" tf:"ebs_volume_iops,omitempty"`

	EBSVolumeSize *float64 `json:"ebsVolumeSize,omitempty" tf:"ebs_volume_size,omitempty"`

	EBSVolumeThroughput *float64 `json:"ebsVolumeThroughput,omitempty" tf:"ebs_volume_throughput,omitempty"`

	EBSVolumeType *string `json:"ebsVolumeType,omitempty" tf:"ebs_volume_type,omitempty"`

	FirstOnDemand *float64 `json:"firstOnDemand,omitempty" tf:"first_on_demand,omitempty"`

	InstanceProfileArn *string `json:"instanceProfileArn,omitempty" tf:"instance_profile_arn,omitempty"`

	SpotBidPricePercent *float64 `json:"spotBidPricePercent,omitempty" tf:"spot_bid_price_percent,omitempty"`

	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type NewClusterAwsAttributesObservation struct {
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	EBSVolumeCount *float64 `json:"ebsVolumeCount,omitempty" tf:"ebs_volume_count,omitempty"`

	EBSVolumeIops *float64 `json:"ebsVolumeIops,omitempty" tf:"ebs_volume_iops,omitempty"`

	EBSVolumeSize *float64 `json:"ebsVolumeSize,omitempty" tf:"ebs_volume_size,omitempty"`

	EBSVolumeThroughput *float64 `json:"ebsVolumeThroughput,omitempty" tf:"ebs_volume_throughput,omitempty"`

	EBSVolumeType *string `json:"ebsVolumeType,omitempty" tf:"ebs_volume_type,omitempty"`

	FirstOnDemand *float64 `json:"firstOnDemand,omitempty" tf:"first_on_demand,omitempty"`

	InstanceProfileArn *string `json:"instanceProfileArn,omitempty" tf:"instance_profile_arn,omitempty"`

	SpotBidPricePercent *float64 `json:"spotBidPricePercent,omitempty" tf:"spot_bid_price_percent,omitempty"`

	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type NewClusterAwsAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	// +kubebuilder:validation:Optional
	EBSVolumeCount *float64 `json:"ebsVolumeCount,omitempty" tf:"ebs_volume_count,omitempty"`

	// +kubebuilder:validation:Optional
	EBSVolumeIops *float64 `json:"ebsVolumeIops,omitempty" tf:"ebs_volume_iops,omitempty"`

	// +kubebuilder:validation:Optional
	EBSVolumeSize *float64 `json:"ebsVolumeSize,omitempty" tf:"ebs_volume_size,omitempty"`

	// +kubebuilder:validation:Optional
	EBSVolumeThroughput *float64 `json:"ebsVolumeThroughput,omitempty" tf:"ebs_volume_throughput,omitempty"`

	// +kubebuilder:validation:Optional
	EBSVolumeType *string `json:"ebsVolumeType,omitempty" tf:"ebs_volume_type,omitempty"`

	// +kubebuilder:validation:Optional
	FirstOnDemand *float64 `json:"firstOnDemand,omitempty" tf:"first_on_demand,omitempty"`

	// +kubebuilder:validation:Optional
	InstanceProfileArn *string `json:"instanceProfileArn,omitempty" tf:"instance_profile_arn,omitempty"`

	// +kubebuilder:validation:Optional
	SpotBidPricePercent *float64 `json:"spotBidPricePercent,omitempty" tf:"spot_bid_price_percent,omitempty"`

	// +kubebuilder:validation:Optional
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type NewClusterAzureAttributesInitParameters struct {
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	FirstOnDemand *float64 `json:"firstOnDemand,omitempty" tf:"first_on_demand,omitempty"`

	LogAnalyticsInfo []AzureAttributesLogAnalyticsInfoInitParameters `json:"logAnalyticsInfo,omitempty" tf:"log_analytics_info,omitempty"`

	SpotBidMaxPrice *float64 `json:"spotBidMaxPrice,omitempty" tf:"spot_bid_max_price,omitempty"`
}

type NewClusterAzureAttributesLogAnalyticsInfoInitParameters struct {
	LogAnalyticsPrimaryKey *string `json:"logAnalyticsPrimaryKey,omitempty" tf:"log_analytics_primary_key,omitempty"`

	LogAnalyticsWorkspaceID *string `json:"logAnalyticsWorkspaceId,omitempty" tf:"log_analytics_workspace_id,omitempty"`
}

type NewClusterAzureAttributesLogAnalyticsInfoObservation struct {
	LogAnalyticsPrimaryKey *string `json:"logAnalyticsPrimaryKey,omitempty" tf:"log_analytics_primary_key,omitempty"`

	LogAnalyticsWorkspaceID *string `json:"logAnalyticsWorkspaceId,omitempty" tf:"log_analytics_workspace_id,omitempty"`
}

type NewClusterAzureAttributesLogAnalyticsInfoParameters struct {

	// +kubebuilder:validation:Optional
	LogAnalyticsPrimaryKey *string `json:"logAnalyticsPrimaryKey,omitempty" tf:"log_analytics_primary_key,omitempty"`

	// +kubebuilder:validation:Optional
	LogAnalyticsWorkspaceID *string `json:"logAnalyticsWorkspaceId,omitempty" tf:"log_analytics_workspace_id,omitempty"`
}

type NewClusterAzureAttributesObservation struct {
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	FirstOnDemand *float64 `json:"firstOnDemand,omitempty" tf:"first_on_demand,omitempty"`

	LogAnalyticsInfo []AzureAttributesLogAnalyticsInfoObservation `json:"logAnalyticsInfo,omitempty" tf:"log_analytics_info,omitempty"`

	SpotBidMaxPrice *float64 `json:"spotBidMaxPrice,omitempty" tf:"spot_bid_max_price,omitempty"`
}

type NewClusterAzureAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	// +kubebuilder:validation:Optional
	FirstOnDemand *float64 `json:"firstOnDemand,omitempty" tf:"first_on_demand,omitempty"`

	// +kubebuilder:validation:Optional
	LogAnalyticsInfo []AzureAttributesLogAnalyticsInfoParameters `json:"logAnalyticsInfo,omitempty" tf:"log_analytics_info,omitempty"`

	// +kubebuilder:validation:Optional
	SpotBidMaxPrice *float64 `json:"spotBidMaxPrice,omitempty" tf:"spot_bid_max_price,omitempty"`
}

type NewClusterClusterLogConfDbfsInitParameters struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type NewClusterClusterLogConfDbfsObservation struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type NewClusterClusterLogConfDbfsParameters struct {

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`
}

type NewClusterClusterLogConfInitParameters struct {
	Dbfs []ClusterLogConfDbfsInitParameters `json:"dbfs,omitempty" tf:"dbfs,omitempty"`

	S3 []ClusterLogConfS3InitParameters `json:"s3,omitempty" tf:"s3,omitempty"`
}

type NewClusterClusterLogConfObservation struct {
	Dbfs []ClusterLogConfDbfsObservation `json:"dbfs,omitempty" tf:"dbfs,omitempty"`

	S3 []ClusterLogConfS3Observation `json:"s3,omitempty" tf:"s3,omitempty"`
}

type NewClusterClusterLogConfParameters struct {

	// +kubebuilder:validation:Optional
	Dbfs []ClusterLogConfDbfsParameters `json:"dbfs,omitempty" tf:"dbfs,omitempty"`

	// +kubebuilder:validation:Optional
	S3 []ClusterLogConfS3Parameters `json:"s3,omitempty" tf:"s3,omitempty"`
}

type NewClusterClusterLogConfS3InitParameters struct {
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	EnableEncryption *bool `json:"enableEncryption,omitempty" tf:"enable_encryption,omitempty"`

	EncryptionType *string `json:"encryptionType,omitempty" tf:"encryption_type,omitempty"`

	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	KMSKey *string `json:"kmsKey,omitempty" tf:"kms_key,omitempty"`

	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type NewClusterClusterLogConfS3Observation struct {
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	EnableEncryption *bool `json:"enableEncryption,omitempty" tf:"enable_encryption,omitempty"`

	EncryptionType *string `json:"encryptionType,omitempty" tf:"encryption_type,omitempty"`

	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	KMSKey *string `json:"kmsKey,omitempty" tf:"kms_key,omitempty"`

	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type NewClusterClusterLogConfS3Parameters struct {

	// +kubebuilder:validation:Optional
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`

	// +kubebuilder:validation:Optional
	EnableEncryption *bool `json:"enableEncryption,omitempty" tf:"enable_encryption,omitempty"`

	// +kubebuilder:validation:Optional
	EncryptionType *string `json:"encryptionType,omitempty" tf:"encryption_type,omitempty"`

	// +kubebuilder:validation:Optional
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// +kubebuilder:validation:Optional
	KMSKey *string `json:"kmsKey,omitempty" tf:"kms_key,omitempty"`

	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type NewClusterClusterMountInfoInitParameters struct {
	LocalMountDirPath *string `json:"localMountDirPath,omitempty" tf:"local_mount_dir_path,omitempty"`

	NetworkFilesystemInfo []ClusterMountInfoNetworkFilesystemInfoInitParameters `json:"networkFilesystemInfo,omitempty" tf:"network_filesystem_info,omitempty"`

	RemoteMountDirPath *string `json:"remoteMountDirPath,omitempty" tf:"remote_mount_dir_path,omitempty"`
}

type NewClusterClusterMountInfoNetworkFilesystemInfoInitParameters struct {
	MountOptions *string `json:"mountOptions,omitempty" tf:"mount_options,omitempty"`

	ServerAddress *string `json:"serverAddress,omitempty" tf:"server_address,omitempty"`
}

type NewClusterClusterMountInfoNetworkFilesystemInfoObservation struct {
	MountOptions *string `json:"mountOptions,omitempty" tf:"mount_options,omitempty"`

	ServerAddress *string `json:"serverAddress,omitempty" tf:"server_address,omitempty"`
}

type NewClusterClusterMountInfoNetworkFilesystemInfoParameters struct {

	// +kubebuilder:validation:Optional
	MountOptions *string `json:"mountOptions,omitempty" tf:"mount_options,omitempty"`

	// +kubebuilder:validation:Optional
	ServerAddress *string `json:"serverAddress" tf:"server_address,omitempty"`
}

type NewClusterClusterMountInfoObservation struct {
	LocalMountDirPath *string `json:"localMountDirPath,omitempty" tf:"local_mount_dir_path,omitempty"`

	NetworkFilesystemInfo []ClusterMountInfoNetworkFilesystemInfoObservation `json:"networkFilesystemInfo,omitempty" tf:"network_filesystem_info,omitempty"`

	RemoteMountDirPath *string `json:"remoteMountDirPath,omitempty" tf:"remote_mount_dir_path,omitempty"`
}

type NewClusterClusterMountInfoParameters struct {

	// +kubebuilder:validation:Optional
	LocalMountDirPath *string `json:"localMountDirPath" tf:"local_mount_dir_path,omitempty"`

	// +kubebuilder:validation:Optional
	NetworkFilesystemInfo []ClusterMountInfoNetworkFilesystemInfoParameters `json:"networkFilesystemInfo" tf:"network_filesystem_info,omitempty"`

	// +kubebuilder:validation:Optional
	RemoteMountDirPath *string `json:"remoteMountDirPath,omitempty" tf:"remote_mount_dir_path,omitempty"`
}

type NewClusterDockerImageBasicAuthInitParameters struct {
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type NewClusterDockerImageBasicAuthObservation struct {
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type NewClusterDockerImageBasicAuthParameters struct {

	// +kubebuilder:validation:Optional
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// +kubebuilder:validation:Optional
	Username *string `json:"username" tf:"username,omitempty"`
}

type NewClusterDockerImageInitParameters struct {
	BasicAuth []DockerImageBasicAuthInitParameters `json:"basicAuth,omitempty" tf:"basic_auth,omitempty"`

	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type NewClusterDockerImageObservation struct {
	BasicAuth []DockerImageBasicAuthObservation `json:"basicAuth,omitempty" tf:"basic_auth,omitempty"`

	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type NewClusterDockerImageParameters struct {

	// +kubebuilder:validation:Optional
	BasicAuth []DockerImageBasicAuthParameters `json:"basicAuth,omitempty" tf:"basic_auth,omitempty"`

	// +kubebuilder:validation:Optional
	URL *string `json:"url" tf:"url,omitempty"`
}

type NewClusterGCPAttributesInitParameters struct {
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	BootDiskSize *float64 `json:"bootDiskSize,omitempty" tf:"boot_disk_size,omitempty"`

	GoogleServiceAccount *string `json:"googleServiceAccount,omitempty" tf:"google_service_account,omitempty"`

	LocalSsdCount *float64 `json:"localSsdCount,omitempty" tf:"local_ssd_count,omitempty"`

	UsePreemptibleExecutors *bool `json:"usePreemptibleExecutors,omitempty" tf:"use_preemptible_executors,omitempty"`

	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type NewClusterGCPAttributesObservation struct {
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	BootDiskSize *float64 `json:"bootDiskSize,omitempty" tf:"boot_disk_size,omitempty"`

	GoogleServiceAccount *string `json:"googleServiceAccount,omitempty" tf:"google_service_account,omitempty"`

	LocalSsdCount *float64 `json:"localSsdCount,omitempty" tf:"local_ssd_count,omitempty"`

	UsePreemptibleExecutors *bool `json:"usePreemptibleExecutors,omitempty" tf:"use_preemptible_executors,omitempty"`

	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type NewClusterGCPAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	// +kubebuilder:validation:Optional
	BootDiskSize *float64 `json:"bootDiskSize,omitempty" tf:"boot_disk_size,omitempty"`

	// +kubebuilder:validation:Optional
	GoogleServiceAccount *string `json:"googleServiceAccount,omitempty" tf:"google_service_account,omitempty"`

	// +kubebuilder:validation:Optional
	LocalSsdCount *float64 `json:"localSsdCount,omitempty" tf:"local_ssd_count,omitempty"`

	// +kubebuilder:validation:Optional
	UsePreemptibleExecutors *bool `json:"usePreemptibleExecutors,omitempty" tf:"use_preemptible_executors,omitempty"`

	// +kubebuilder:validation:Optional
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type NewClusterInitParameters struct {
	ApplyPolicyDefaultValues *bool `json:"applyPolicyDefaultValues,omitempty" tf:"apply_policy_default_values,omitempty"`

	Autoscale []NewClusterAutoscaleInitParameters `json:"autoscale,omitempty" tf:"autoscale,omitempty"`

	AwsAttributes []NewClusterAwsAttributesInitParameters `json:"awsAttributes,omitempty" tf:"aws_attributes,omitempty"`

	AzureAttributes []NewClusterAzureAttributesInitParameters `json:"azureAttributes,omitempty" tf:"azure_attributes,omitempty"`

	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	ClusterLogConf []NewClusterClusterLogConfInitParameters `json:"clusterLogConf,omitempty" tf:"cluster_log_conf,omitempty"`

	ClusterMountInfo []NewClusterClusterMountInfoInitParameters `json:"clusterMountInfo,omitempty" tf:"cluster_mount_info,omitempty"`

	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// +mapType=granular
	CustomTags map[string]*string `json:"customTags,omitempty" tf:"custom_tags,omitempty"`

	DataSecurityMode *string `json:"dataSecurityMode,omitempty" tf:"data_security_mode,omitempty"`

	DockerImage []NewClusterDockerImageInitParameters `json:"dockerImage,omitempty" tf:"docker_image,omitempty"`

	DriverInstancePoolID *string `json:"driverInstancePoolId,omitempty" tf:"driver_instance_pool_id,omitempty"`

	DriverNodeTypeID *string `json:"driverNodeTypeId,omitempty" tf:"driver_node_type_id,omitempty"`

	EnableElasticDisk *bool `json:"enableElasticDisk,omitempty" tf:"enable_elastic_disk,omitempty"`

	EnableLocalDiskEncryption *bool `json:"enableLocalDiskEncryption,omitempty" tf:"enable_local_disk_encryption,omitempty"`

	GCPAttributes []NewClusterGCPAttributesInitParameters `json:"gcpAttributes,omitempty" tf:"gcp_attributes,omitempty"`

	IdempotencyToken *string `json:"idempotencyToken,omitempty" tf:"idempotency_token,omitempty"`

	InitScripts []NewClusterInitScriptsInitParameters `json:"initScripts,omitempty" tf:"init_scripts,omitempty"`

	InstancePoolID *string `json:"instancePoolId,omitempty" tf:"instance_pool_id,omitempty"`

	Library []NewClusterLibraryInitParameters `json:"library,omitempty" tf:"library,omitempty"`

	NodeTypeID *string `json:"nodeTypeId,omitempty" tf:"node_type_id,omitempty"`

	NumWorkers *float64 `json:"numWorkers,omitempty" tf:"num_workers,omitempty"`

	PolicyID *string `json:"policyId,omitempty" tf:"policy_id,omitempty"`

	RuntimeEngine *string `json:"runtimeEngine,omitempty" tf:"runtime_engine,omitempty"`

	SSHPublicKeys []*string `json:"sshPublicKeys,omitempty" tf:"ssh_public_keys,omitempty"`

	SingleUserName *string `json:"singleUserName,omitempty" tf:"single_user_name,omitempty"`

	// +mapType=granular
	SparkConf map[string]*string `json:"sparkConf,omitempty" tf:"spark_conf,omitempty"`

	// +mapType=granular
	SparkEnvVars map[string]*string `json:"sparkEnvVars,omitempty" tf:"spark_env_vars,omitempty"`

	SparkVersion *string `json:"sparkVersion,omitempty" tf:"spark_version,omitempty"`

	WorkloadType []NewClusterWorkloadTypeInitParameters `json:"workloadType,omitempty" tf:"workload_type,omitempty"`
}

type NewClusterInitScriptsAbfssInitParameters struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type NewClusterInitScriptsAbfssObservation struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type NewClusterInitScriptsAbfssParameters struct {

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`
}

type NewClusterInitScriptsDbfsInitParameters struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type NewClusterInitScriptsDbfsObservation struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type NewClusterInitScriptsDbfsParameters struct {

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`
}

type NewClusterInitScriptsFileInitParameters struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type NewClusterInitScriptsFileObservation struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type NewClusterInitScriptsFileParameters struct {

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`
}

type NewClusterInitScriptsGcsInitParameters struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type NewClusterInitScriptsGcsObservation struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type NewClusterInitScriptsGcsParameters struct {

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`
}

type NewClusterInitScriptsInitParameters struct {
	Abfss []InitScriptsAbfssInitParameters `json:"abfss,omitempty" tf:"abfss,omitempty"`

	Dbfs []NewClusterInitScriptsDbfsInitParameters `json:"dbfs,omitempty" tf:"dbfs,omitempty"`

	File []InitScriptsFileInitParameters `json:"file,omitempty" tf:"file,omitempty"`

	Gcs []InitScriptsGcsInitParameters `json:"gcs,omitempty" tf:"gcs,omitempty"`

	S3 []NewClusterInitScriptsS3InitParameters `json:"s3,omitempty" tf:"s3,omitempty"`

	Volumes []InitScriptsVolumesInitParameters `json:"volumes,omitempty" tf:"volumes,omitempty"`

	Workspace []InitScriptsWorkspaceInitParameters `json:"workspace,omitempty" tf:"workspace,omitempty"`
}

type NewClusterInitScriptsObservation struct {
	Abfss []InitScriptsAbfssObservation `json:"abfss,omitempty" tf:"abfss,omitempty"`

	Dbfs []NewClusterInitScriptsDbfsObservation `json:"dbfs,omitempty" tf:"dbfs,omitempty"`

	File []InitScriptsFileObservation `json:"file,omitempty" tf:"file,omitempty"`

	Gcs []InitScriptsGcsObservation `json:"gcs,omitempty" tf:"gcs,omitempty"`

	S3 []NewClusterInitScriptsS3Observation `json:"s3,omitempty" tf:"s3,omitempty"`

	Volumes []InitScriptsVolumesObservation `json:"volumes,omitempty" tf:"volumes,omitempty"`

	Workspace []InitScriptsWorkspaceObservation `json:"workspace,omitempty" tf:"workspace,omitempty"`
}

type NewClusterInitScriptsParameters struct {

	// +kubebuilder:validation:Optional
	Abfss []InitScriptsAbfssParameters `json:"abfss,omitempty" tf:"abfss,omitempty"`

	// +kubebuilder:validation:Optional
	Dbfs []NewClusterInitScriptsDbfsParameters `json:"dbfs,omitempty" tf:"dbfs,omitempty"`

	// +kubebuilder:validation:Optional
	File []InitScriptsFileParameters `json:"file,omitempty" tf:"file,omitempty"`

	// +kubebuilder:validation:Optional
	Gcs []InitScriptsGcsParameters `json:"gcs,omitempty" tf:"gcs,omitempty"`

	// +kubebuilder:validation:Optional
	S3 []NewClusterInitScriptsS3Parameters `json:"s3,omitempty" tf:"s3,omitempty"`

	// +kubebuilder:validation:Optional
	Volumes []InitScriptsVolumesParameters `json:"volumes,omitempty" tf:"volumes,omitempty"`

	// +kubebuilder:validation:Optional
	Workspace []InitScriptsWorkspaceParameters `json:"workspace,omitempty" tf:"workspace,omitempty"`
}

type NewClusterInitScriptsS3InitParameters struct {
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	EnableEncryption *bool `json:"enableEncryption,omitempty" tf:"enable_encryption,omitempty"`

	EncryptionType *string `json:"encryptionType,omitempty" tf:"encryption_type,omitempty"`

	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	KMSKey *string `json:"kmsKey,omitempty" tf:"kms_key,omitempty"`

	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type NewClusterInitScriptsS3Observation struct {
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	EnableEncryption *bool `json:"enableEncryption,omitempty" tf:"enable_encryption,omitempty"`

	EncryptionType *string `json:"encryptionType,omitempty" tf:"encryption_type,omitempty"`

	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	KMSKey *string `json:"kmsKey,omitempty" tf:"kms_key,omitempty"`

	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type NewClusterInitScriptsS3Parameters struct {

	// +kubebuilder:validation:Optional
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`

	// +kubebuilder:validation:Optional
	EnableEncryption *bool `json:"enableEncryption,omitempty" tf:"enable_encryption,omitempty"`

	// +kubebuilder:validation:Optional
	EncryptionType *string `json:"encryptionType,omitempty" tf:"encryption_type,omitempty"`

	// +kubebuilder:validation:Optional
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// +kubebuilder:validation:Optional
	KMSKey *string `json:"kmsKey,omitempty" tf:"kms_key,omitempty"`

	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type NewClusterInitScriptsVolumesInitParameters struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type NewClusterInitScriptsVolumesObservation struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type NewClusterInitScriptsVolumesParameters struct {

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`
}

type NewClusterInitScriptsWorkspaceInitParameters struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type NewClusterInitScriptsWorkspaceObservation struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type NewClusterInitScriptsWorkspaceParameters struct {

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`
}

type NewClusterLibraryCranInitParameters struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type NewClusterLibraryCranObservation struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type NewClusterLibraryCranParameters struct {

	// +kubebuilder:validation:Optional
	Package *string `json:"package" tf:"package,omitempty"`

	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type NewClusterLibraryInitParameters struct {
	Cran []LibraryCranInitParameters `json:"cran,omitempty" tf:"cran,omitempty"`

	Egg *string `json:"egg,omitempty" tf:"egg,omitempty"`

	Jar *string `json:"jar,omitempty" tf:"jar,omitempty"`

	Maven []LibraryMavenInitParameters `json:"maven,omitempty" tf:"maven,omitempty"`

	Pypi []LibraryPypiInitParameters `json:"pypi,omitempty" tf:"pypi,omitempty"`

	Requirements *string `json:"requirements,omitempty" tf:"requirements,omitempty"`

	Whl *string `json:"whl,omitempty" tf:"whl,omitempty"`
}

type NewClusterLibraryMavenInitParameters struct {
	Coordinates *string `json:"coordinates,omitempty" tf:"coordinates,omitempty"`

	Exclusions []*string `json:"exclusions,omitempty" tf:"exclusions,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type NewClusterLibraryMavenObservation struct {
	Coordinates *string `json:"coordinates,omitempty" tf:"coordinates,omitempty"`

	Exclusions []*string `json:"exclusions,omitempty" tf:"exclusions,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type NewClusterLibraryMavenParameters struct {

	// +kubebuilder:validation:Optional
	Coordinates *string `json:"coordinates" tf:"coordinates,omitempty"`

	// +kubebuilder:validation:Optional
	Exclusions []*string `json:"exclusions,omitempty" tf:"exclusions,omitempty"`

	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type NewClusterLibraryObservation struct {
	Cran []LibraryCranObservation `json:"cran,omitempty" tf:"cran,omitempty"`

	Egg *string `json:"egg,omitempty" tf:"egg,omitempty"`

	Jar *string `json:"jar,omitempty" tf:"jar,omitempty"`

	Maven []LibraryMavenObservation `json:"maven,omitempty" tf:"maven,omitempty"`

	Pypi []LibraryPypiObservation `json:"pypi,omitempty" tf:"pypi,omitempty"`

	Requirements *string `json:"requirements,omitempty" tf:"requirements,omitempty"`

	Whl *string `json:"whl,omitempty" tf:"whl,omitempty"`
}

type NewClusterLibraryParameters struct {

	// +kubebuilder:validation:Optional
	Cran []LibraryCranParameters `json:"cran,omitempty" tf:"cran,omitempty"`

	// +kubebuilder:validation:Optional
	Egg *string `json:"egg,omitempty" tf:"egg,omitempty"`

	// +kubebuilder:validation:Optional
	Jar *string `json:"jar,omitempty" tf:"jar,omitempty"`

	// +kubebuilder:validation:Optional
	Maven []LibraryMavenParameters `json:"maven,omitempty" tf:"maven,omitempty"`

	// +kubebuilder:validation:Optional
	Pypi []LibraryPypiParameters `json:"pypi,omitempty" tf:"pypi,omitempty"`

	// +kubebuilder:validation:Optional
	Requirements *string `json:"requirements,omitempty" tf:"requirements,omitempty"`

	// +kubebuilder:validation:Optional
	Whl *string `json:"whl,omitempty" tf:"whl,omitempty"`
}

type NewClusterLibraryPypiInitParameters struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type NewClusterLibraryPypiObservation struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type NewClusterLibraryPypiParameters struct {

	// +kubebuilder:validation:Optional
	Package *string `json:"package" tf:"package,omitempty"`

	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type NewClusterObservation struct {
	ApplyPolicyDefaultValues *bool `json:"applyPolicyDefaultValues,omitempty" tf:"apply_policy_default_values,omitempty"`

	Autoscale []NewClusterAutoscaleObservation `json:"autoscale,omitempty" tf:"autoscale,omitempty"`

	AwsAttributes []NewClusterAwsAttributesObservation `json:"awsAttributes,omitempty" tf:"aws_attributes,omitempty"`

	AzureAttributes []NewClusterAzureAttributesObservation `json:"azureAttributes,omitempty" tf:"azure_attributes,omitempty"`

	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	ClusterLogConf []NewClusterClusterLogConfObservation `json:"clusterLogConf,omitempty" tf:"cluster_log_conf,omitempty"`

	ClusterMountInfo []NewClusterClusterMountInfoObservation `json:"clusterMountInfo,omitempty" tf:"cluster_mount_info,omitempty"`

	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// +mapType=granular
	CustomTags map[string]*string `json:"customTags,omitempty" tf:"custom_tags,omitempty"`

	DataSecurityMode *string `json:"dataSecurityMode,omitempty" tf:"data_security_mode,omitempty"`

	DockerImage []NewClusterDockerImageObservation `json:"dockerImage,omitempty" tf:"docker_image,omitempty"`

	DriverInstancePoolID *string `json:"driverInstancePoolId,omitempty" tf:"driver_instance_pool_id,omitempty"`

	DriverNodeTypeID *string `json:"driverNodeTypeId,omitempty" tf:"driver_node_type_id,omitempty"`

	EnableElasticDisk *bool `json:"enableElasticDisk,omitempty" tf:"enable_elastic_disk,omitempty"`

	EnableLocalDiskEncryption *bool `json:"enableLocalDiskEncryption,omitempty" tf:"enable_local_disk_encryption,omitempty"`

	GCPAttributes []NewClusterGCPAttributesObservation `json:"gcpAttributes,omitempty" tf:"gcp_attributes,omitempty"`

	IdempotencyToken *string `json:"idempotencyToken,omitempty" tf:"idempotency_token,omitempty"`

	InitScripts []NewClusterInitScriptsObservation `json:"initScripts,omitempty" tf:"init_scripts,omitempty"`

	InstancePoolID *string `json:"instancePoolId,omitempty" tf:"instance_pool_id,omitempty"`

	Library []NewClusterLibraryObservation `json:"library,omitempty" tf:"library,omitempty"`

	NodeTypeID *string `json:"nodeTypeId,omitempty" tf:"node_type_id,omitempty"`

	NumWorkers *float64 `json:"numWorkers,omitempty" tf:"num_workers,omitempty"`

	PolicyID *string `json:"policyId,omitempty" tf:"policy_id,omitempty"`

	RuntimeEngine *string `json:"runtimeEngine,omitempty" tf:"runtime_engine,omitempty"`

	SSHPublicKeys []*string `json:"sshPublicKeys,omitempty" tf:"ssh_public_keys,omitempty"`

	SingleUserName *string `json:"singleUserName,omitempty" tf:"single_user_name,omitempty"`

	// +mapType=granular
	SparkConf map[string]*string `json:"sparkConf,omitempty" tf:"spark_conf,omitempty"`

	// +mapType=granular
	SparkEnvVars map[string]*string `json:"sparkEnvVars,omitempty" tf:"spark_env_vars,omitempty"`

	SparkVersion *string `json:"sparkVersion,omitempty" tf:"spark_version,omitempty"`

	WorkloadType []NewClusterWorkloadTypeObservation `json:"workloadType,omitempty" tf:"workload_type,omitempty"`
}

type NewClusterParameters struct {

	// +kubebuilder:validation:Optional
	ApplyPolicyDefaultValues *bool `json:"applyPolicyDefaultValues,omitempty" tf:"apply_policy_default_values,omitempty"`

	// +kubebuilder:validation:Optional
	Autoscale []NewClusterAutoscaleParameters `json:"autoscale,omitempty" tf:"autoscale,omitempty"`

	// +kubebuilder:validation:Optional
	AwsAttributes []NewClusterAwsAttributesParameters `json:"awsAttributes,omitempty" tf:"aws_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	AzureAttributes []NewClusterAzureAttributesParameters `json:"azureAttributes,omitempty" tf:"azure_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// +kubebuilder:validation:Optional
	ClusterLogConf []NewClusterClusterLogConfParameters `json:"clusterLogConf,omitempty" tf:"cluster_log_conf,omitempty"`

	// +kubebuilder:validation:Optional
	ClusterMountInfo []NewClusterClusterMountInfoParameters `json:"clusterMountInfo,omitempty" tf:"cluster_mount_info,omitempty"`

	// +kubebuilder:validation:Optional
	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	CustomTags map[string]*string `json:"customTags,omitempty" tf:"custom_tags,omitempty"`

	// +kubebuilder:validation:Optional
	DataSecurityMode *string `json:"dataSecurityMode,omitempty" tf:"data_security_mode,omitempty"`

	// +kubebuilder:validation:Optional
	DockerImage []NewClusterDockerImageParameters `json:"dockerImage,omitempty" tf:"docker_image,omitempty"`

	// +kubebuilder:validation:Optional
	DriverInstancePoolID *string `json:"driverInstancePoolId,omitempty" tf:"driver_instance_pool_id,omitempty"`

	// +kubebuilder:validation:Optional
	DriverNodeTypeID *string `json:"driverNodeTypeId,omitempty" tf:"driver_node_type_id,omitempty"`

	// +kubebuilder:validation:Optional
	EnableElasticDisk *bool `json:"enableElasticDisk,omitempty" tf:"enable_elastic_disk,omitempty"`

	// +kubebuilder:validation:Optional
	EnableLocalDiskEncryption *bool `json:"enableLocalDiskEncryption,omitempty" tf:"enable_local_disk_encryption,omitempty"`

	// +kubebuilder:validation:Optional
	GCPAttributes []NewClusterGCPAttributesParameters `json:"gcpAttributes,omitempty" tf:"gcp_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	IdempotencyToken *string `json:"idempotencyToken,omitempty" tf:"idempotency_token,omitempty"`

	// +kubebuilder:validation:Optional
	InitScripts []NewClusterInitScriptsParameters `json:"initScripts,omitempty" tf:"init_scripts,omitempty"`

	// +kubebuilder:validation:Optional
	InstancePoolID *string `json:"instancePoolId,omitempty" tf:"instance_pool_id,omitempty"`

	// +kubebuilder:validation:Optional
	Library []NewClusterLibraryParameters `json:"library,omitempty" tf:"library,omitempty"`

	// +kubebuilder:validation:Optional
	NodeTypeID *string `json:"nodeTypeId,omitempty" tf:"node_type_id,omitempty"`

	// +kubebuilder:validation:Optional
	NumWorkers *float64 `json:"numWorkers,omitempty" tf:"num_workers,omitempty"`

	// +kubebuilder:validation:Optional
	PolicyID *string `json:"policyId,omitempty" tf:"policy_id,omitempty"`

	// +kubebuilder:validation:Optional
	RuntimeEngine *string `json:"runtimeEngine,omitempty" tf:"runtime_engine,omitempty"`

	// +kubebuilder:validation:Optional
	SSHPublicKeys []*string `json:"sshPublicKeys,omitempty" tf:"ssh_public_keys,omitempty"`

	// +kubebuilder:validation:Optional
	SingleUserName *string `json:"singleUserName,omitempty" tf:"single_user_name,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	SparkConf map[string]*string `json:"sparkConf,omitempty" tf:"spark_conf,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	SparkEnvVars map[string]*string `json:"sparkEnvVars,omitempty" tf:"spark_env_vars,omitempty"`

	// +kubebuilder:validation:Optional
	SparkVersion *string `json:"sparkVersion" tf:"spark_version,omitempty"`

	// +kubebuilder:validation:Optional
	WorkloadType []NewClusterWorkloadTypeParameters `json:"workloadType,omitempty" tf:"workload_type,omitempty"`
}

type NewClusterWorkloadTypeClientsInitParameters struct {
	Jobs *bool `json:"jobs,omitempty" tf:"jobs,omitempty"`

	Notebooks *bool `json:"notebooks,omitempty" tf:"notebooks,omitempty"`
}

type NewClusterWorkloadTypeClientsObservation struct {
	Jobs *bool `json:"jobs,omitempty" tf:"jobs,omitempty"`

	Notebooks *bool `json:"notebooks,omitempty" tf:"notebooks,omitempty"`
}

type NewClusterWorkloadTypeClientsParameters struct {

	// +kubebuilder:validation:Optional
	Jobs *bool `json:"jobs,omitempty" tf:"jobs,omitempty"`

	// +kubebuilder:validation:Optional
	Notebooks *bool `json:"notebooks,omitempty" tf:"notebooks,omitempty"`
}

type NewClusterWorkloadTypeInitParameters struct {
	Clients []WorkloadTypeClientsInitParameters `json:"clients,omitempty" tf:"clients,omitempty"`
}

type NewClusterWorkloadTypeObservation struct {
	Clients []WorkloadTypeClientsObservation `json:"clients,omitempty" tf:"clients,omitempty"`
}

type NewClusterWorkloadTypeParameters struct {

	// +kubebuilder:validation:Optional
	Clients []WorkloadTypeClientsParameters `json:"clients" tf:"clients,omitempty"`
}

type NotebookTaskInitParameters struct {

	// +mapType=granular
	BaseParameters map[string]*string `json:"baseParameters,omitempty" tf:"base_parameters,omitempty"`

	NotebookPath *string `json:"notebookPath,omitempty" tf:"notebook_path,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	WarehouseID *string `json:"warehouseId,omitempty" tf:"warehouse_id,omitempty"`
}

type NotebookTaskObservation struct {

	// +mapType=granular
	BaseParameters map[string]*string `json:"baseParameters,omitempty" tf:"base_parameters,omitempty"`

	NotebookPath *string `json:"notebookPath,omitempty" tf:"notebook_path,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	WarehouseID *string `json:"warehouseId,omitempty" tf:"warehouse_id,omitempty"`
}

type NotebookTaskParameters struct {

	// +kubebuilder:validation:Optional
	// +mapType=granular
	BaseParameters map[string]*string `json:"baseParameters,omitempty" tf:"base_parameters,omitempty"`

	// +kubebuilder:validation:Optional
	NotebookPath *string `json:"notebookPath" tf:"notebook_path,omitempty"`

	// +kubebuilder:validation:Optional
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// +kubebuilder:validation:Optional
	WarehouseID *string `json:"warehouseId,omitempty" tf:"warehouse_id,omitempty"`
}

type NotificationSettingsInitParameters struct {
	NoAlertForCanceledRuns *bool `json:"noAlertForCanceledRuns,omitempty" tf:"no_alert_for_canceled_runs,omitempty"`

	NoAlertForSkippedRuns *bool `json:"noAlertForSkippedRuns,omitempty" tf:"no_alert_for_skipped_runs,omitempty"`
}

type NotificationSettingsObservation struct {
	NoAlertForCanceledRuns *bool `json:"noAlertForCanceledRuns,omitempty" tf:"no_alert_for_canceled_runs,omitempty"`

	NoAlertForSkippedRuns *bool `json:"noAlertForSkippedRuns,omitempty" tf:"no_alert_for_skipped_runs,omitempty"`
}

type NotificationSettingsParameters struct {

	// +kubebuilder:validation:Optional
	NoAlertForCanceledRuns *bool `json:"noAlertForCanceledRuns,omitempty" tf:"no_alert_for_canceled_runs,omitempty"`

	// +kubebuilder:validation:Optional
	NoAlertForSkippedRuns *bool `json:"noAlertForSkippedRuns,omitempty" tf:"no_alert_for_skipped_runs,omitempty"`
}

type OnDurationWarningThresholdExceededInitParameters struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type OnDurationWarningThresholdExceededObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type OnDurationWarningThresholdExceededParameters struct {

	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`
}

type OnFailureInitParameters struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type OnFailureObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type OnFailureParameters struct {

	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`
}

type OnStartInitParameters struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type OnStartObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type OnStartParameters struct {

	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`
}

type OnStreamingBacklogExceededInitParameters struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type OnStreamingBacklogExceededObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type OnStreamingBacklogExceededParameters struct {

	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`
}

type OnSuccessInitParameters struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type OnSuccessObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type OnSuccessParameters struct {

	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`
}

type ParameterInitParameters struct {
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type ParameterObservation struct {
	Default *string `json:"default,omitempty" tf:"default,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type ParameterParameters struct {

	// +kubebuilder:validation:Optional
	Default *string `json:"default" tf:"default,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type PeriodicInitParameters struct {
	Interval *float64 `json:"interval,omitempty" tf:"interval,omitempty"`

	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type PeriodicObservation struct {
	Interval *float64 `json:"interval,omitempty" tf:"interval,omitempty"`

	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type PeriodicParameters struct {

	// +kubebuilder:validation:Optional
	Interval *float64 `json:"interval" tf:"interval,omitempty"`

	// +kubebuilder:validation:Optional
	Unit *string `json:"unit" tf:"unit,omitempty"`
}

type PipelineParamsInitParameters struct {
	FullRefresh *bool `json:"fullRefresh,omitempty" tf:"full_refresh,omitempty"`
}

type PipelineParamsObservation struct {
	FullRefresh *bool `json:"fullRefresh,omitempty" tf:"full_refresh,omitempty"`
}

type PipelineParamsParameters struct {

	// +kubebuilder:validation:Optional
	FullRefresh *bool `json:"fullRefresh,omitempty" tf:"full_refresh,omitempty"`
}

type PipelineTaskInitParameters struct {
	FullRefresh *bool `json:"fullRefresh,omitempty" tf:"full_refresh,omitempty"`

	PipelineID *string `json:"pipelineId,omitempty" tf:"pipeline_id,omitempty"`
}

type PipelineTaskObservation struct {
	FullRefresh *bool `json:"fullRefresh,omitempty" tf:"full_refresh,omitempty"`

	PipelineID *string `json:"pipelineId,omitempty" tf:"pipeline_id,omitempty"`
}

type PipelineTaskParameters struct {

	// +kubebuilder:validation:Optional
	FullRefresh *bool `json:"fullRefresh,omitempty" tf:"full_refresh,omitempty"`

	// +kubebuilder:validation:Optional
	PipelineID *string `json:"pipelineId" tf:"pipeline_id,omitempty"`
}

type PythonWheelTaskInitParameters struct {
	EntryPoint *string `json:"entryPoint,omitempty" tf:"entry_point,omitempty"`

	// +mapType=granular
	NamedParameters map[string]*string `json:"namedParameters,omitempty" tf:"named_parameters,omitempty"`

	PackageName *string `json:"packageName,omitempty" tf:"package_name,omitempty"`

	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type PythonWheelTaskObservation struct {
	EntryPoint *string `json:"entryPoint,omitempty" tf:"entry_point,omitempty"`

	// +mapType=granular
	NamedParameters map[string]*string `json:"namedParameters,omitempty" tf:"named_parameters,omitempty"`

	PackageName *string `json:"packageName,omitempty" tf:"package_name,omitempty"`

	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type PythonWheelTaskParameters struct {

	// +kubebuilder:validation:Optional
	EntryPoint *string `json:"entryPoint,omitempty" tf:"entry_point,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	NamedParameters map[string]*string `json:"namedParameters,omitempty" tf:"named_parameters,omitempty"`

	// +kubebuilder:validation:Optional
	PackageName *string `json:"packageName,omitempty" tf:"package_name,omitempty"`

	// +kubebuilder:validation:Optional
	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type QueryInitParameters struct {
	QueryID *string `json:"queryId,omitempty" tf:"query_id,omitempty"`
}

type QueryObservation struct {
	QueryID *string `json:"queryId,omitempty" tf:"query_id,omitempty"`
}

type QueryParameters struct {

	// +kubebuilder:validation:Optional
	QueryID *string `json:"queryId" tf:"query_id,omitempty"`
}

type QueueInitParameters struct {
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type QueueObservation struct {
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type QueueParameters struct {

	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`
}

type RulesInitParameters struct {
	Metric *string `json:"metric,omitempty" tf:"metric,omitempty"`

	Op *string `json:"op,omitempty" tf:"op,omitempty"`

	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`
}

type RulesObservation struct {
	Metric *string `json:"metric,omitempty" tf:"metric,omitempty"`

	Op *string `json:"op,omitempty" tf:"op,omitempty"`

	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`
}

type RulesParameters struct {

	// +kubebuilder:validation:Optional
	Metric *string `json:"metric" tf:"metric,omitempty"`

	// +kubebuilder:validation:Optional
	Op *string `json:"op" tf:"op,omitempty"`

	// +kubebuilder:validation:Optional
	Value *float64 `json:"value" tf:"value,omitempty"`
}

type RunAsInitParameters struct {
	ServicePrincipalName *string `json:"servicePrincipalName,omitempty" tf:"service_principal_name,omitempty"`

	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

type RunAsObservation struct {
	ServicePrincipalName *string `json:"servicePrincipalName,omitempty" tf:"service_principal_name,omitempty"`

	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

type RunAsParameters struct {

	// +kubebuilder:validation:Optional
	ServicePrincipalName *string `json:"servicePrincipalName,omitempty" tf:"service_principal_name,omitempty"`

	// +kubebuilder:validation:Optional
	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

type RunJobTaskInitParameters struct {
	JobID *float64 `json:"jobId,omitempty" tf:"job_id,omitempty"`

	// +mapType=granular
	JobParameters map[string]*string `json:"jobParameters,omitempty" tf:"job_parameters,omitempty"`
}

type RunJobTaskObservation struct {
	JobID *float64 `json:"jobId,omitempty" tf:"job_id,omitempty"`

	// +mapType=granular
	JobParameters map[string]*string `json:"jobParameters,omitempty" tf:"job_parameters,omitempty"`
}

type RunJobTaskParameters struct {

	// +kubebuilder:validation:Optional
	JobID *float64 `json:"jobId" tf:"job_id,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	JobParameters map[string]*string `json:"jobParameters,omitempty" tf:"job_parameters,omitempty"`
}

type RunJobTaskPipelineParamsInitParameters struct {
	FullRefresh *bool `json:"fullRefresh,omitempty" tf:"full_refresh,omitempty"`
}

type RunJobTaskPipelineParamsObservation struct {
	FullRefresh *bool `json:"fullRefresh,omitempty" tf:"full_refresh,omitempty"`
}

type RunJobTaskPipelineParamsParameters struct {

	// +kubebuilder:validation:Optional
	FullRefresh *bool `json:"fullRefresh,omitempty" tf:"full_refresh,omitempty"`
}

type SQLTaskAlertInitParameters struct {
	AlertID *string `json:"alertId,omitempty" tf:"alert_id,omitempty"`

	PauseSubscriptions *bool `json:"pauseSubscriptions,omitempty" tf:"pause_subscriptions,omitempty"`

	Subscriptions []AlertSubscriptionsInitParameters `json:"subscriptions,omitempty" tf:"subscriptions,omitempty"`
}

type SQLTaskAlertObservation struct {
	AlertID *string `json:"alertId,omitempty" tf:"alert_id,omitempty"`

	PauseSubscriptions *bool `json:"pauseSubscriptions,omitempty" tf:"pause_subscriptions,omitempty"`

	Subscriptions []AlertSubscriptionsObservation `json:"subscriptions,omitempty" tf:"subscriptions,omitempty"`
}

type SQLTaskAlertParameters struct {

	// +kubebuilder:validation:Optional
	AlertID *string `json:"alertId" tf:"alert_id,omitempty"`

	// +kubebuilder:validation:Optional
	PauseSubscriptions *bool `json:"pauseSubscriptions,omitempty" tf:"pause_subscriptions,omitempty"`

	// +kubebuilder:validation:Optional
	Subscriptions []AlertSubscriptionsParameters `json:"subscriptions,omitempty" tf:"subscriptions,omitempty"`
}

type SQLTaskDashboardInitParameters struct {
	CustomSubject *string `json:"customSubject,omitempty" tf:"custom_subject,omitempty"`

	DashboardID *string `json:"dashboardId,omitempty" tf:"dashboard_id,omitempty"`

	PauseSubscriptions *bool `json:"pauseSubscriptions,omitempty" tf:"pause_subscriptions,omitempty"`

	Subscriptions []SQLTaskDashboardSubscriptionsInitParameters `json:"subscriptions,omitempty" tf:"subscriptions,omitempty"`
}

type SQLTaskDashboardObservation struct {
	CustomSubject *string `json:"customSubject,omitempty" tf:"custom_subject,omitempty"`

	DashboardID *string `json:"dashboardId,omitempty" tf:"dashboard_id,omitempty"`

	PauseSubscriptions *bool `json:"pauseSubscriptions,omitempty" tf:"pause_subscriptions,omitempty"`

	Subscriptions []SQLTaskDashboardSubscriptionsObservation `json:"subscriptions,omitempty" tf:"subscriptions,omitempty"`
}

type SQLTaskDashboardParameters struct {

	// +kubebuilder:validation:Optional
	CustomSubject *string `json:"customSubject,omitempty" tf:"custom_subject,omitempty"`

	// +kubebuilder:validation:Optional
	DashboardID *string `json:"dashboardId" tf:"dashboard_id,omitempty"`

	// +kubebuilder:validation:Optional
	PauseSubscriptions *bool `json:"pauseSubscriptions,omitempty" tf:"pause_subscriptions,omitempty"`

	// +kubebuilder:validation:Optional
	Subscriptions []SQLTaskDashboardSubscriptionsParameters `json:"subscriptions,omitempty" tf:"subscriptions,omitempty"`
}

type SQLTaskDashboardSubscriptionsInitParameters struct {
	DestinationID *string `json:"destinationId,omitempty" tf:"destination_id,omitempty"`

	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

type SQLTaskDashboardSubscriptionsObservation struct {
	DestinationID *string `json:"destinationId,omitempty" tf:"destination_id,omitempty"`

	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

type SQLTaskDashboardSubscriptionsParameters struct {

	// +kubebuilder:validation:Optional
	DestinationID *string `json:"destinationId,omitempty" tf:"destination_id,omitempty"`

	// +kubebuilder:validation:Optional
	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

type SQLTaskFileInitParameters struct {
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`
}

type SQLTaskFileObservation struct {
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`
}

type SQLTaskFileParameters struct {

	// +kubebuilder:validation:Optional
	Path *string `json:"path" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Source *string `json:"source,omitempty" tf:"source,omitempty"`
}

type SQLTaskInitParameters struct {
	Alert []AlertInitParameters `json:"alert,omitempty" tf:"alert,omitempty"`

	Dashboard []DashboardInitParameters `json:"dashboard,omitempty" tf:"dashboard,omitempty"`

	File []SQLTaskFileInitParameters `json:"file,omitempty" tf:"file,omitempty"`

	// +mapType=granular
	Parameters map[string]*string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	Query []QueryInitParameters `json:"query,omitempty" tf:"query,omitempty"`

	WarehouseID *string `json:"warehouseId,omitempty" tf:"warehouse_id,omitempty"`
}

type SQLTaskObservation struct {
	Alert []AlertObservation `json:"alert,omitempty" tf:"alert,omitempty"`

	Dashboard []DashboardObservation `json:"dashboard,omitempty" tf:"dashboard,omitempty"`

	File []SQLTaskFileObservation `json:"file,omitempty" tf:"file,omitempty"`

	// +mapType=granular
	Parameters map[string]*string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	Query []QueryObservation `json:"query,omitempty" tf:"query,omitempty"`

	WarehouseID *string `json:"warehouseId,omitempty" tf:"warehouse_id,omitempty"`
}

type SQLTaskParameters struct {

	// +kubebuilder:validation:Optional
	Alert []AlertParameters `json:"alert,omitempty" tf:"alert,omitempty"`

	// +kubebuilder:validation:Optional
	Dashboard []DashboardParameters `json:"dashboard,omitempty" tf:"dashboard,omitempty"`

	// +kubebuilder:validation:Optional
	File []SQLTaskFileParameters `json:"file,omitempty" tf:"file,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	Parameters map[string]*string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// +kubebuilder:validation:Optional
	Query []QueryParameters `json:"query,omitempty" tf:"query,omitempty"`

	// +kubebuilder:validation:Optional
	WarehouseID *string `json:"warehouseId" tf:"warehouse_id,omitempty"`
}

type SQLTaskQueryInitParameters struct {
	QueryID *string `json:"queryId,omitempty" tf:"query_id,omitempty"`
}

type SQLTaskQueryObservation struct {
	QueryID *string `json:"queryId,omitempty" tf:"query_id,omitempty"`
}

type SQLTaskQueryParameters struct {

	// +kubebuilder:validation:Optional
	QueryID *string `json:"queryId" tf:"query_id,omitempty"`
}

type ScheduleInitParameters struct {
	PauseStatus *string `json:"pauseStatus,omitempty" tf:"pause_status,omitempty"`

	QuartzCronExpression *string `json:"quartzCronExpression,omitempty" tf:"quartz_cron_expression,omitempty"`

	TimezoneID *string `json:"timezoneId,omitempty" tf:"timezone_id,omitempty"`
}

type ScheduleObservation struct {
	PauseStatus *string `json:"pauseStatus,omitempty" tf:"pause_status,omitempty"`

	QuartzCronExpression *string `json:"quartzCronExpression,omitempty" tf:"quartz_cron_expression,omitempty"`

	TimezoneID *string `json:"timezoneId,omitempty" tf:"timezone_id,omitempty"`
}

type ScheduleParameters struct {

	// +kubebuilder:validation:Optional
	PauseStatus *string `json:"pauseStatus,omitempty" tf:"pause_status,omitempty"`

	// +kubebuilder:validation:Optional
	QuartzCronExpression *string `json:"quartzCronExpression" tf:"quartz_cron_expression,omitempty"`

	// +kubebuilder:validation:Optional
	TimezoneID *string `json:"timezoneId" tf:"timezone_id,omitempty"`
}

type SparkJarTaskInitParameters struct {
	JarURI *string `json:"jarUri,omitempty" tf:"jar_uri,omitempty"`

	MainClassName *string `json:"mainClassName,omitempty" tf:"main_class_name,omitempty"`

	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type SparkJarTaskObservation struct {
	JarURI *string `json:"jarUri,omitempty" tf:"jar_uri,omitempty"`

	MainClassName *string `json:"mainClassName,omitempty" tf:"main_class_name,omitempty"`

	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type SparkJarTaskParameters struct {

	// +kubebuilder:validation:Optional
	JarURI *string `json:"jarUri,omitempty" tf:"jar_uri,omitempty"`

	// +kubebuilder:validation:Optional
	MainClassName *string `json:"mainClassName,omitempty" tf:"main_class_name,omitempty"`

	// +kubebuilder:validation:Optional
	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type SparkPythonTaskInitParameters struct {
	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	PythonFile *string `json:"pythonFile,omitempty" tf:"python_file,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`
}

type SparkPythonTaskObservation struct {
	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	PythonFile *string `json:"pythonFile,omitempty" tf:"python_file,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`
}

type SparkPythonTaskParameters struct {

	// +kubebuilder:validation:Optional
	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// +kubebuilder:validation:Optional
	PythonFile *string `json:"pythonFile" tf:"python_file,omitempty"`

	// +kubebuilder:validation:Optional
	Source *string `json:"source,omitempty" tf:"source,omitempty"`
}

type SparkSubmitTaskInitParameters struct {
	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type SparkSubmitTaskObservation struct {
	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type SparkSubmitTaskParameters struct {

	// +kubebuilder:validation:Optional
	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type SpecInitParameters struct {
	Client *string `json:"client,omitempty" tf:"client,omitempty"`

	Dependencies []*string `json:"dependencies,omitempty" tf:"dependencies,omitempty"`
}

type SpecObservation struct {
	Client *string `json:"client,omitempty" tf:"client,omitempty"`

	Dependencies []*string `json:"dependencies,omitempty" tf:"dependencies,omitempty"`
}

type SpecParameters struct {

	// +kubebuilder:validation:Optional
	Client *string `json:"client" tf:"client,omitempty"`

	// +kubebuilder:validation:Optional
	Dependencies []*string `json:"dependencies,omitempty" tf:"dependencies,omitempty"`
}

type SubscriptionsInitParameters struct {
	DestinationID *string `json:"destinationId,omitempty" tf:"destination_id,omitempty"`

	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

type SubscriptionsObservation struct {
	DestinationID *string `json:"destinationId,omitempty" tf:"destination_id,omitempty"`

	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

type SubscriptionsParameters struct {

	// +kubebuilder:validation:Optional
	DestinationID *string `json:"destinationId,omitempty" tf:"destination_id,omitempty"`

	// +kubebuilder:validation:Optional
	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

type TableInitParameters struct {
	Condition *string `json:"condition,omitempty" tf:"condition,omitempty"`

	MinTimeBetweenTriggersSeconds *float64 `json:"minTimeBetweenTriggersSeconds,omitempty" tf:"min_time_between_triggers_seconds,omitempty"`

	TableNames []*string `json:"tableNames,omitempty" tf:"table_names,omitempty"`

	WaitAfterLastChangeSeconds *float64 `json:"waitAfterLastChangeSeconds,omitempty" tf:"wait_after_last_change_seconds,omitempty"`
}

type TableObservation struct {
	Condition *string `json:"condition,omitempty" tf:"condition,omitempty"`

	MinTimeBetweenTriggersSeconds *float64 `json:"minTimeBetweenTriggersSeconds,omitempty" tf:"min_time_between_triggers_seconds,omitempty"`

	TableNames []*string `json:"tableNames,omitempty" tf:"table_names,omitempty"`

	WaitAfterLastChangeSeconds *float64 `json:"waitAfterLastChangeSeconds,omitempty" tf:"wait_after_last_change_seconds,omitempty"`
}

type TableParameters struct {

	// +kubebuilder:validation:Optional
	Condition *string `json:"condition,omitempty" tf:"condition,omitempty"`

	// +kubebuilder:validation:Optional
	MinTimeBetweenTriggersSeconds *float64 `json:"minTimeBetweenTriggersSeconds,omitempty" tf:"min_time_between_triggers_seconds,omitempty"`

	// +kubebuilder:validation:Optional
	TableNames []*string `json:"tableNames,omitempty" tf:"table_names,omitempty"`

	// +kubebuilder:validation:Optional
	WaitAfterLastChangeSeconds *float64 `json:"waitAfterLastChangeSeconds,omitempty" tf:"wait_after_last_change_seconds,omitempty"`
}

type TableUpdateInitParameters struct {
	Condition *string `json:"condition,omitempty" tf:"condition,omitempty"`

	MinTimeBetweenTriggersSeconds *float64 `json:"minTimeBetweenTriggersSeconds,omitempty" tf:"min_time_between_triggers_seconds,omitempty"`

	TableNames []*string `json:"tableNames,omitempty" tf:"table_names,omitempty"`

	WaitAfterLastChangeSeconds *float64 `json:"waitAfterLastChangeSeconds,omitempty" tf:"wait_after_last_change_seconds,omitempty"`
}

type TableUpdateObservation struct {
	Condition *string `json:"condition,omitempty" tf:"condition,omitempty"`

	MinTimeBetweenTriggersSeconds *float64 `json:"minTimeBetweenTriggersSeconds,omitempty" tf:"min_time_between_triggers_seconds,omitempty"`

	TableNames []*string `json:"tableNames,omitempty" tf:"table_names,omitempty"`

	WaitAfterLastChangeSeconds *float64 `json:"waitAfterLastChangeSeconds,omitempty" tf:"wait_after_last_change_seconds,omitempty"`
}

type TableUpdateParameters struct {

	// +kubebuilder:validation:Optional
	Condition *string `json:"condition,omitempty" tf:"condition,omitempty"`

	// +kubebuilder:validation:Optional
	MinTimeBetweenTriggersSeconds *float64 `json:"minTimeBetweenTriggersSeconds,omitempty" tf:"min_time_between_triggers_seconds,omitempty"`

	// +kubebuilder:validation:Optional
	TableNames []*string `json:"tableNames" tf:"table_names,omitempty"`

	// +kubebuilder:validation:Optional
	WaitAfterLastChangeSeconds *float64 `json:"waitAfterLastChangeSeconds,omitempty" tf:"wait_after_last_change_seconds,omitempty"`
}

type TaskConditionTaskInitParameters struct {
	Left *string `json:"left,omitempty" tf:"left,omitempty"`

	Op *string `json:"op,omitempty" tf:"op,omitempty"`

	Right *string `json:"right,omitempty" tf:"right,omitempty"`
}

type TaskConditionTaskObservation struct {
	Left *string `json:"left,omitempty" tf:"left,omitempty"`

	Op *string `json:"op,omitempty" tf:"op,omitempty"`

	Right *string `json:"right,omitempty" tf:"right,omitempty"`
}

type TaskConditionTaskParameters struct {

	// +kubebuilder:validation:Optional
	Left *string `json:"left" tf:"left,omitempty"`

	// +kubebuilder:validation:Optional
	Op *string `json:"op" tf:"op,omitempty"`

	// +kubebuilder:validation:Optional
	Right *string `json:"right" tf:"right,omitempty"`
}

type TaskDbtTaskInitParameters struct {
	Catalog *string `json:"catalog,omitempty" tf:"catalog,omitempty"`

	Commands []*string `json:"commands,omitempty" tf:"commands,omitempty"`

	ProfilesDirectory *string `json:"profilesDirectory,omitempty" tf:"profiles_directory,omitempty"`

	ProjectDirectory *string `json:"projectDirectory,omitempty" tf:"project_directory,omitempty"`

	Schema *string `json:"schema,omitempty" tf:"schema,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	WarehouseID *string `json:"warehouseId,omitempty" tf:"warehouse_id,omitempty"`
}

type TaskDbtTaskObservation struct {
	Catalog *string `json:"catalog,omitempty" tf:"catalog,omitempty"`

	Commands []*string `json:"commands,omitempty" tf:"commands,omitempty"`

	ProfilesDirectory *string `json:"profilesDirectory,omitempty" tf:"profiles_directory,omitempty"`

	ProjectDirectory *string `json:"projectDirectory,omitempty" tf:"project_directory,omitempty"`

	Schema *string `json:"schema,omitempty" tf:"schema,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	WarehouseID *string `json:"warehouseId,omitempty" tf:"warehouse_id,omitempty"`
}

type TaskDbtTaskParameters struct {

	// +kubebuilder:validation:Optional
	Catalog *string `json:"catalog,omitempty" tf:"catalog,omitempty"`

	// +kubebuilder:validation:Optional
	Commands []*string `json:"commands" tf:"commands,omitempty"`

	// +kubebuilder:validation:Optional
	ProfilesDirectory *string `json:"profilesDirectory,omitempty" tf:"profiles_directory,omitempty"`

	// +kubebuilder:validation:Optional
	ProjectDirectory *string `json:"projectDirectory,omitempty" tf:"project_directory,omitempty"`

	// +kubebuilder:validation:Optional
	Schema *string `json:"schema,omitempty" tf:"schema,omitempty"`

	// +kubebuilder:validation:Optional
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// +kubebuilder:validation:Optional
	WarehouseID *string `json:"warehouseId,omitempty" tf:"warehouse_id,omitempty"`
}

type TaskDependsOnInitParameters struct {
	Outcome *string `json:"outcome,omitempty" tf:"outcome,omitempty"`

	TaskKey *string `json:"taskKey,omitempty" tf:"task_key,omitempty"`
}

type TaskDependsOnObservation struct {
	Outcome *string `json:"outcome,omitempty" tf:"outcome,omitempty"`

	TaskKey *string `json:"taskKey,omitempty" tf:"task_key,omitempty"`
}

type TaskDependsOnParameters struct {

	// +kubebuilder:validation:Optional
	Outcome *string `json:"outcome,omitempty" tf:"outcome,omitempty"`

	// +kubebuilder:validation:Optional
	TaskKey *string `json:"taskKey" tf:"task_key,omitempty"`
}

type TaskEmailNotificationsInitParameters struct {
	NoAlertForSkippedRuns *bool `json:"noAlertForSkippedRuns,omitempty" tf:"no_alert_for_skipped_runs,omitempty"`

	OnDurationWarningThresholdExceeded []*string `json:"onDurationWarningThresholdExceeded,omitempty" tf:"on_duration_warning_threshold_exceeded,omitempty"`

	OnFailure []*string `json:"onFailure,omitempty" tf:"on_failure,omitempty"`

	OnStart []*string `json:"onStart,omitempty" tf:"on_start,omitempty"`

	OnStreamingBacklogExceeded []*string `json:"onStreamingBacklogExceeded,omitempty" tf:"on_streaming_backlog_exceeded,omitempty"`

	OnSuccess []*string `json:"onSuccess,omitempty" tf:"on_success,omitempty"`
}

type TaskEmailNotificationsObservation struct {
	NoAlertForSkippedRuns *bool `json:"noAlertForSkippedRuns,omitempty" tf:"no_alert_for_skipped_runs,omitempty"`

	OnDurationWarningThresholdExceeded []*string `json:"onDurationWarningThresholdExceeded,omitempty" tf:"on_duration_warning_threshold_exceeded,omitempty"`

	OnFailure []*string `json:"onFailure,omitempty" tf:"on_failure,omitempty"`

	OnStart []*string `json:"onStart,omitempty" tf:"on_start,omitempty"`

	OnStreamingBacklogExceeded []*string `json:"onStreamingBacklogExceeded,omitempty" tf:"on_streaming_backlog_exceeded,omitempty"`

	OnSuccess []*string `json:"onSuccess,omitempty" tf:"on_success,omitempty"`
}

type TaskEmailNotificationsParameters struct {

	// +kubebuilder:validation:Optional
	NoAlertForSkippedRuns *bool `json:"noAlertForSkippedRuns,omitempty" tf:"no_alert_for_skipped_runs,omitempty"`

	// +kubebuilder:validation:Optional
	OnDurationWarningThresholdExceeded []*string `json:"onDurationWarningThresholdExceeded,omitempty" tf:"on_duration_warning_threshold_exceeded,omitempty"`

	// +kubebuilder:validation:Optional
	OnFailure []*string `json:"onFailure,omitempty" tf:"on_failure,omitempty"`

	// +kubebuilder:validation:Optional
	OnStart []*string `json:"onStart,omitempty" tf:"on_start,omitempty"`

	// +kubebuilder:validation:Optional
	OnStreamingBacklogExceeded []*string `json:"onStreamingBacklogExceeded,omitempty" tf:"on_streaming_backlog_exceeded,omitempty"`

	// +kubebuilder:validation:Optional
	OnSuccess []*string `json:"onSuccess,omitempty" tf:"on_success,omitempty"`
}

type TaskHealthInitParameters struct {
	Rules []HealthRulesInitParameters `json:"rules,omitempty" tf:"rules,omitempty"`
}

type TaskHealthObservation struct {
	Rules []HealthRulesObservation `json:"rules,omitempty" tf:"rules,omitempty"`
}

type TaskHealthParameters struct {

	// +kubebuilder:validation:Optional
	Rules []HealthRulesParameters `json:"rules" tf:"rules,omitempty"`
}

type TaskHealthRulesInitParameters struct {
	Metric *string `json:"metric,omitempty" tf:"metric,omitempty"`

	Op *string `json:"op,omitempty" tf:"op,omitempty"`

	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`
}

type TaskHealthRulesObservation struct {
	Metric *string `json:"metric,omitempty" tf:"metric,omitempty"`

	Op *string `json:"op,omitempty" tf:"op,omitempty"`

	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`
}

type TaskHealthRulesParameters struct {

	// +kubebuilder:validation:Optional
	Metric *string `json:"metric" tf:"metric,omitempty"`

	// +kubebuilder:validation:Optional
	Op *string `json:"op" tf:"op,omitempty"`

	// +kubebuilder:validation:Optional
	Value *float64 `json:"value" tf:"value,omitempty"`
}

type TaskInitParameters struct {
	ConditionTask []ConditionTaskInitParameters `json:"conditionTask,omitempty" tf:"condition_task,omitempty"`

	DbtTask []TaskDbtTaskInitParameters `json:"dbtTask,omitempty" tf:"dbt_task,omitempty"`

	DependsOn []DependsOnInitParameters `json:"dependsOn,omitempty" tf:"depends_on,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	DisableAutoOptimization *bool `json:"disableAutoOptimization,omitempty" tf:"disable_auto_optimization,omitempty"`

	EmailNotifications []TaskEmailNotificationsInitParameters `json:"emailNotifications,omitempty" tf:"email_notifications,omitempty"`

	EnvironmentKey *string `json:"environmentKey,omitempty" tf:"environment_key,omitempty"`

	ExistingClusterID *string `json:"existingClusterId,omitempty" tf:"existing_cluster_id,omitempty"`

	ForEachTask []ForEachTaskInitParameters `json:"forEachTask,omitempty" tf:"for_each_task,omitempty"`

	Health []JobTaskHealthInitParameters `json:"health,omitempty" tf:"health,omitempty"`

	JobClusterKey *string `json:"jobClusterKey,omitempty" tf:"job_cluster_key,omitempty"`

	Library []JobTaskLibraryInitParameters `json:"library,omitempty" tf:"library,omitempty"`

	MaxRetries *float64 `json:"maxRetries,omitempty" tf:"max_retries,omitempty"`

	MinRetryIntervalMillis *float64 `json:"minRetryIntervalMillis,omitempty" tf:"min_retry_interval_millis,omitempty"`

	NewCluster []JobTaskNewClusterInitParameters `json:"newCluster,omitempty" tf:"new_cluster,omitempty"`

	NotebookTask []JobTaskNotebookTaskInitParameters `json:"notebookTask,omitempty" tf:"notebook_task,omitempty"`

	NotificationSettings []JobTaskNotificationSettingsInitParameters `json:"notificationSettings,omitempty" tf:"notification_settings,omitempty"`

	PipelineTask []JobTaskPipelineTaskInitParameters `json:"pipelineTask,omitempty" tf:"pipeline_task,omitempty"`

	PythonWheelTask []JobTaskPythonWheelTaskInitParameters `json:"pythonWheelTask,omitempty" tf:"python_wheel_task,omitempty"`

	RetryOnTimeout *bool `json:"retryOnTimeout,omitempty" tf:"retry_on_timeout,omitempty"`

	RunIf *string `json:"runIf,omitempty" tf:"run_if,omitempty"`

	RunJobTask []JobTaskRunJobTaskInitParameters `json:"runJobTask,omitempty" tf:"run_job_task,omitempty"`

	SQLTask []TaskSQLTaskInitParameters `json:"sqlTask,omitempty" tf:"sql_task,omitempty"`

	SparkJarTask []JobTaskSparkJarTaskInitParameters `json:"sparkJarTask,omitempty" tf:"spark_jar_task,omitempty"`

	SparkPythonTask []JobTaskSparkPythonTaskInitParameters `json:"sparkPythonTask,omitempty" tf:"spark_python_task,omitempty"`

	SparkSubmitTask []JobTaskSparkSubmitTaskInitParameters `json:"sparkSubmitTask,omitempty" tf:"spark_submit_task,omitempty"`

	TaskKey *string `json:"taskKey,omitempty" tf:"task_key,omitempty"`

	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`

	WebhookNotifications []TaskWebhookNotificationsInitParameters `json:"webhookNotifications,omitempty" tf:"webhook_notifications,omitempty"`
}

type TaskLibraryCranInitParameters struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type TaskLibraryCranObservation struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type TaskLibraryCranParameters struct {

	// +kubebuilder:validation:Optional
	Package *string `json:"package" tf:"package,omitempty"`

	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type TaskLibraryInitParameters struct {
	Cran []TaskLibraryCranInitParameters `json:"cran,omitempty" tf:"cran,omitempty"`

	Egg *string `json:"egg,omitempty" tf:"egg,omitempty"`

	Jar *string `json:"jar,omitempty" tf:"jar,omitempty"`

	Maven []TaskLibraryMavenInitParameters `json:"maven,omitempty" tf:"maven,omitempty"`

	Pypi []TaskLibraryPypiInitParameters `json:"pypi,omitempty" tf:"pypi,omitempty"`

	Requirements *string `json:"requirements,omitempty" tf:"requirements,omitempty"`

	Whl *string `json:"whl,omitempty" tf:"whl,omitempty"`
}

type TaskLibraryMavenInitParameters struct {
	Coordinates *string `json:"coordinates,omitempty" tf:"coordinates,omitempty"`

	Exclusions []*string `json:"exclusions,omitempty" tf:"exclusions,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type TaskLibraryMavenObservation struct {
	Coordinates *string `json:"coordinates,omitempty" tf:"coordinates,omitempty"`

	Exclusions []*string `json:"exclusions,omitempty" tf:"exclusions,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type TaskLibraryMavenParameters struct {

	// +kubebuilder:validation:Optional
	Coordinates *string `json:"coordinates" tf:"coordinates,omitempty"`

	// +kubebuilder:validation:Optional
	Exclusions []*string `json:"exclusions,omitempty" tf:"exclusions,omitempty"`

	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type TaskLibraryObservation struct {
	Cran []TaskLibraryCranObservation `json:"cran,omitempty" tf:"cran,omitempty"`

	Egg *string `json:"egg,omitempty" tf:"egg,omitempty"`

	Jar *string `json:"jar,omitempty" tf:"jar,omitempty"`

	Maven []TaskLibraryMavenObservation `json:"maven,omitempty" tf:"maven,omitempty"`

	Pypi []TaskLibraryPypiObservation `json:"pypi,omitempty" tf:"pypi,omitempty"`

	Requirements *string `json:"requirements,omitempty" tf:"requirements,omitempty"`

	Whl *string `json:"whl,omitempty" tf:"whl,omitempty"`
}

type TaskLibraryParameters struct {

	// +kubebuilder:validation:Optional
	Cran []TaskLibraryCranParameters `json:"cran,omitempty" tf:"cran,omitempty"`

	// +kubebuilder:validation:Optional
	Egg *string `json:"egg,omitempty" tf:"egg,omitempty"`

	// +kubebuilder:validation:Optional
	Jar *string `json:"jar,omitempty" tf:"jar,omitempty"`

	// +kubebuilder:validation:Optional
	Maven []TaskLibraryMavenParameters `json:"maven,omitempty" tf:"maven,omitempty"`

	// +kubebuilder:validation:Optional
	Pypi []TaskLibraryPypiParameters `json:"pypi,omitempty" tf:"pypi,omitempty"`

	// +kubebuilder:validation:Optional
	Requirements *string `json:"requirements,omitempty" tf:"requirements,omitempty"`

	// +kubebuilder:validation:Optional
	Whl *string `json:"whl,omitempty" tf:"whl,omitempty"`
}

type TaskLibraryPypiInitParameters struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type TaskLibraryPypiObservation struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type TaskLibraryPypiParameters struct {

	// +kubebuilder:validation:Optional
	Package *string `json:"package" tf:"package,omitempty"`

	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type TaskNewClusterAutoscaleInitParameters struct {
	MaxWorkers *float64 `json:"maxWorkers,omitempty" tf:"max_workers,omitempty"`

	MinWorkers *float64 `json:"minWorkers,omitempty" tf:"min_workers,omitempty"`
}

type TaskNewClusterAutoscaleObservation struct {
	MaxWorkers *float64 `json:"maxWorkers,omitempty" tf:"max_workers,omitempty"`

	MinWorkers *float64 `json:"minWorkers,omitempty" tf:"min_workers,omitempty"`
}

type TaskNewClusterAutoscaleParameters struct {

	// +kubebuilder:validation:Optional
	MaxWorkers *float64 `json:"maxWorkers,omitempty" tf:"max_workers,omitempty"`

	// +kubebuilder:validation:Optional
	MinWorkers *float64 `json:"minWorkers,omitempty" tf:"min_workers,omitempty"`
}

type TaskNewClusterAwsAttributesInitParameters struct {
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	EBSVolumeCount *float64 `json:"ebsVolumeCount,omitempty" tf:"ebs_volume_count,omitempty"`

	EBSVolumeIops *float64 `json:"ebsVolumeIops,omitempty" tf:"ebs_volume_iops,omitempty"`

	EBSVolumeSize *float64 `json:"ebsVolumeSize,omitempty" tf:"ebs_volume_size,omitempty"`

	EBSVolumeThroughput *float64 `json:"ebsVolumeThroughput,omitempty" tf:"ebs_volume_throughput,omitempty"`

	EBSVolumeType *string `json:"ebsVolumeType,omitempty" tf:"ebs_volume_type,omitempty"`

	FirstOnDemand *float64 `json:"firstOnDemand,omitempty" tf:"first_on_demand,omitempty"`

	InstanceProfileArn *string `json:"instanceProfileArn,omitempty" tf:"instance_profile_arn,omitempty"`

	SpotBidPricePercent *float64 `json:"spotBidPricePercent,omitempty" tf:"spot_bid_price_percent,omitempty"`

	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type TaskNewClusterAwsAttributesObservation struct {
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	EBSVolumeCount *float64 `json:"ebsVolumeCount,omitempty" tf:"ebs_volume_count,omitempty"`

	EBSVolumeIops *float64 `json:"ebsVolumeIops,omitempty" tf:"ebs_volume_iops,omitempty"`

	EBSVolumeSize *float64 `json:"ebsVolumeSize,omitempty" tf:"ebs_volume_size,omitempty"`

	EBSVolumeThroughput *float64 `json:"ebsVolumeThroughput,omitempty" tf:"ebs_volume_throughput,omitempty"`

	EBSVolumeType *string `json:"ebsVolumeType,omitempty" tf:"ebs_volume_type,omitempty"`

	FirstOnDemand *float64 `json:"firstOnDemand,omitempty" tf:"first_on_demand,omitempty"`

	InstanceProfileArn *string `json:"instanceProfileArn,omitempty" tf:"instance_profile_arn,omitempty"`

	SpotBidPricePercent *float64 `json:"spotBidPricePercent,omitempty" tf:"spot_bid_price_percent,omitempty"`

	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type TaskNewClusterAwsAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	// +kubebuilder:validation:Optional
	EBSVolumeCount *float64 `json:"ebsVolumeCount,omitempty" tf:"ebs_volume_count,omitempty"`

	// +kubebuilder:validation:Optional
	EBSVolumeIops *float64 `json:"ebsVolumeIops,omitempty" tf:"ebs_volume_iops,omitempty"`

	// +kubebuilder:validation:Optional
	EBSVolumeSize *float64 `json:"ebsVolumeSize,omitempty" tf:"ebs_volume_size,omitempty"`

	// +kubebuilder:validation:Optional
	EBSVolumeThroughput *float64 `json:"ebsVolumeThroughput,omitempty" tf:"ebs_volume_throughput,omitempty"`

	// +kubebuilder:validation:Optional
	EBSVolumeType *string `json:"ebsVolumeType,omitempty" tf:"ebs_volume_type,omitempty"`

	// +kubebuilder:validation:Optional
	FirstOnDemand *float64 `json:"firstOnDemand,omitempty" tf:"first_on_demand,omitempty"`

	// +kubebuilder:validation:Optional
	InstanceProfileArn *string `json:"instanceProfileArn,omitempty" tf:"instance_profile_arn,omitempty"`

	// +kubebuilder:validation:Optional
	SpotBidPricePercent *float64 `json:"spotBidPricePercent,omitempty" tf:"spot_bid_price_percent,omitempty"`

	// +kubebuilder:validation:Optional
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type TaskNewClusterAzureAttributesInitParameters struct {
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	FirstOnDemand *float64 `json:"firstOnDemand,omitempty" tf:"first_on_demand,omitempty"`

	LogAnalyticsInfo []TaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters `json:"logAnalyticsInfo,omitempty" tf:"log_analytics_info,omitempty"`

	SpotBidMaxPrice *float64 `json:"spotBidMaxPrice,omitempty" tf:"spot_bid_max_price,omitempty"`
}

type TaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters struct {
	LogAnalyticsPrimaryKey *string `json:"logAnalyticsPrimaryKey,omitempty" tf:"log_analytics_primary_key,omitempty"`

	LogAnalyticsWorkspaceID *string `json:"logAnalyticsWorkspaceId,omitempty" tf:"log_analytics_workspace_id,omitempty"`
}

type TaskNewClusterAzureAttributesLogAnalyticsInfoObservation struct {
	LogAnalyticsPrimaryKey *string `json:"logAnalyticsPrimaryKey,omitempty" tf:"log_analytics_primary_key,omitempty"`

	LogAnalyticsWorkspaceID *string `json:"logAnalyticsWorkspaceId,omitempty" tf:"log_analytics_workspace_id,omitempty"`
}

type TaskNewClusterAzureAttributesLogAnalyticsInfoParameters struct {

	// +kubebuilder:validation:Optional
	LogAnalyticsPrimaryKey *string `json:"logAnalyticsPrimaryKey,omitempty" tf:"log_analytics_primary_key,omitempty"`

	// +kubebuilder:validation:Optional
	LogAnalyticsWorkspaceID *string `json:"logAnalyticsWorkspaceId,omitempty" tf:"log_analytics_workspace_id,omitempty"`
}

type TaskNewClusterAzureAttributesObservation struct {
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	FirstOnDemand *float64 `json:"firstOnDemand,omitempty" tf:"first_on_demand,omitempty"`

	LogAnalyticsInfo []TaskNewClusterAzureAttributesLogAnalyticsInfoObservation `json:"logAnalyticsInfo,omitempty" tf:"log_analytics_info,omitempty"`

	SpotBidMaxPrice *float64 `json:"spotBidMaxPrice,omitempty" tf:"spot_bid_max_price,omitempty"`
}

type TaskNewClusterAzureAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	// +kubebuilder:validation:Optional
	FirstOnDemand *float64 `json:"firstOnDemand,omitempty" tf:"first_on_demand,omitempty"`

	// +kubebuilder:validation:Optional
	LogAnalyticsInfo []TaskNewClusterAzureAttributesLogAnalyticsInfoParameters `json:"logAnalyticsInfo,omitempty" tf:"log_analytics_info,omitempty"`

	// +kubebuilder:validation:Optional
	SpotBidMaxPrice *float64 `json:"spotBidMaxPrice,omitempty" tf:"spot_bid_max_price,omitempty"`
}

type TaskNewClusterClusterLogConfDbfsInitParameters struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type TaskNewClusterClusterLogConfDbfsObservation struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type TaskNewClusterClusterLogConfDbfsParameters struct {

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`
}

type TaskNewClusterClusterLogConfInitParameters struct {
	Dbfs []TaskNewClusterClusterLogConfDbfsInitParameters `json:"dbfs,omitempty" tf:"dbfs,omitempty"`

	S3 []TaskNewClusterClusterLogConfS3InitParameters `json:"s3,omitempty" tf:"s3,omitempty"`
}

type TaskNewClusterClusterLogConfObservation struct {
	Dbfs []TaskNewClusterClusterLogConfDbfsObservation `json:"dbfs,omitempty" tf:"dbfs,omitempty"`

	S3 []TaskNewClusterClusterLogConfS3Observation `json:"s3,omitempty" tf:"s3,omitempty"`
}

type TaskNewClusterClusterLogConfParameters struct {

	// +kubebuilder:validation:Optional
	Dbfs []TaskNewClusterClusterLogConfDbfsParameters `json:"dbfs,omitempty" tf:"dbfs,omitempty"`

	// +kubebuilder:validation:Optional
	S3 []TaskNewClusterClusterLogConfS3Parameters `json:"s3,omitempty" tf:"s3,omitempty"`
}

type TaskNewClusterClusterLogConfS3InitParameters struct {
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	EnableEncryption *bool `json:"enableEncryption,omitempty" tf:"enable_encryption,omitempty"`

	EncryptionType *string `json:"encryptionType,omitempty" tf:"encryption_type,omitempty"`

	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	KMSKey *string `json:"kmsKey,omitempty" tf:"kms_key,omitempty"`

	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type TaskNewClusterClusterLogConfS3Observation struct {
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	EnableEncryption *bool `json:"enableEncryption,omitempty" tf:"enable_encryption,omitempty"`

	EncryptionType *string `json:"encryptionType,omitempty" tf:"encryption_type,omitempty"`

	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	KMSKey *string `json:"kmsKey,omitempty" tf:"kms_key,omitempty"`

	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type TaskNewClusterClusterLogConfS3Parameters struct {

	// +kubebuilder:validation:Optional
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`

	// +kubebuilder:validation:Optional
	EnableEncryption *bool `json:"enableEncryption,omitempty" tf:"enable_encryption,omitempty"`

	// +kubebuilder:validation:Optional
	EncryptionType *string `json:"encryptionType,omitempty" tf:"encryption_type,omitempty"`

	// +kubebuilder:validation:Optional
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// +kubebuilder:validation:Optional
	KMSKey *string `json:"kmsKey,omitempty" tf:"kms_key,omitempty"`

	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type TaskNewClusterClusterMountInfoInitParameters struct {
	LocalMountDirPath *string `json:"localMountDirPath,omitempty" tf:"local_mount_dir_path,omitempty"`

	NetworkFilesystemInfo []TaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters `json:"networkFilesystemInfo,omitempty" tf:"network_filesystem_info,omitempty"`

	RemoteMountDirPath *string `json:"remoteMountDirPath,omitempty" tf:"remote_mount_dir_path,omitempty"`
}

type TaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters struct {
	MountOptions *string `json:"mountOptions,omitempty" tf:"mount_options,omitempty"`

	ServerAddress *string `json:"serverAddress,omitempty" tf:"server_address,omitempty"`
}

type TaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation struct {
	MountOptions *string `json:"mountOptions,omitempty" tf:"mount_options,omitempty"`

	ServerAddress *string `json:"serverAddress,omitempty" tf:"server_address,omitempty"`
}

type TaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters struct {

	// +kubebuilder:validation:Optional
	MountOptions *string `json:"mountOptions,omitempty" tf:"mount_options,omitempty"`

	// +kubebuilder:validation:Optional
	ServerAddress *string `json:"serverAddress" tf:"server_address,omitempty"`
}

type TaskNewClusterClusterMountInfoObservation struct {
	LocalMountDirPath *string `json:"localMountDirPath,omitempty" tf:"local_mount_dir_path,omitempty"`

	NetworkFilesystemInfo []TaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation `json:"networkFilesystemInfo,omitempty" tf:"network_filesystem_info,omitempty"`

	RemoteMountDirPath *string `json:"remoteMountDirPath,omitempty" tf:"remote_mount_dir_path,omitempty"`
}

type TaskNewClusterClusterMountInfoParameters struct {

	// +kubebuilder:validation:Optional
	LocalMountDirPath *string `json:"localMountDirPath" tf:"local_mount_dir_path,omitempty"`

	// +kubebuilder:validation:Optional
	NetworkFilesystemInfo []TaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters `json:"networkFilesystemInfo" tf:"network_filesystem_info,omitempty"`

	// +kubebuilder:validation:Optional
	RemoteMountDirPath *string `json:"remoteMountDirPath,omitempty" tf:"remote_mount_dir_path,omitempty"`
}

type TaskNewClusterDockerImageBasicAuthInitParameters struct {
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type TaskNewClusterDockerImageBasicAuthObservation struct {
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type TaskNewClusterDockerImageBasicAuthParameters struct {

	// +kubebuilder:validation:Optional
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// +kubebuilder:validation:Optional
	Username *string `json:"username" tf:"username,omitempty"`
}

type TaskNewClusterDockerImageInitParameters struct {
	BasicAuth []TaskNewClusterDockerImageBasicAuthInitParameters `json:"basicAuth,omitempty" tf:"basic_auth,omitempty"`

	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type TaskNewClusterDockerImageObservation struct {
	BasicAuth []TaskNewClusterDockerImageBasicAuthObservation `json:"basicAuth,omitempty" tf:"basic_auth,omitempty"`

	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type TaskNewClusterDockerImageParameters struct {

	// +kubebuilder:validation:Optional
	BasicAuth []TaskNewClusterDockerImageBasicAuthParameters `json:"basicAuth,omitempty" tf:"basic_auth,omitempty"`

	// +kubebuilder:validation:Optional
	URL *string `json:"url" tf:"url,omitempty"`
}

type TaskNewClusterGCPAttributesInitParameters struct {
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	BootDiskSize *float64 `json:"bootDiskSize,omitempty" tf:"boot_disk_size,omitempty"`

	GoogleServiceAccount *string `json:"googleServiceAccount,omitempty" tf:"google_service_account,omitempty"`

	LocalSsdCount *float64 `json:"localSsdCount,omitempty" tf:"local_ssd_count,omitempty"`

	UsePreemptibleExecutors *bool `json:"usePreemptibleExecutors,omitempty" tf:"use_preemptible_executors,omitempty"`

	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type TaskNewClusterGCPAttributesObservation struct {
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	BootDiskSize *float64 `json:"bootDiskSize,omitempty" tf:"boot_disk_size,omitempty"`

	GoogleServiceAccount *string `json:"googleServiceAccount,omitempty" tf:"google_service_account,omitempty"`

	LocalSsdCount *float64 `json:"localSsdCount,omitempty" tf:"local_ssd_count,omitempty"`

	UsePreemptibleExecutors *bool `json:"usePreemptibleExecutors,omitempty" tf:"use_preemptible_executors,omitempty"`

	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type TaskNewClusterGCPAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Availability *string `json:"availability,omitempty" tf:"availability,omitempty"`

	// +kubebuilder:validation:Optional
	BootDiskSize *float64 `json:"bootDiskSize,omitempty" tf:"boot_disk_size,omitempty"`

	// +kubebuilder:validation:Optional
	GoogleServiceAccount *string `json:"googleServiceAccount,omitempty" tf:"google_service_account,omitempty"`

	// +kubebuilder:validation:Optional
	LocalSsdCount *float64 `json:"localSsdCount,omitempty" tf:"local_ssd_count,omitempty"`

	// +kubebuilder:validation:Optional
	UsePreemptibleExecutors *bool `json:"usePreemptibleExecutors,omitempty" tf:"use_preemptible_executors,omitempty"`

	// +kubebuilder:validation:Optional
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type TaskNewClusterInitParameters struct {
	ApplyPolicyDefaultValues *bool `json:"applyPolicyDefaultValues,omitempty" tf:"apply_policy_default_values,omitempty"`

	Autoscale []TaskNewClusterAutoscaleInitParameters `json:"autoscale,omitempty" tf:"autoscale,omitempty"`

	AwsAttributes []TaskNewClusterAwsAttributesInitParameters `json:"awsAttributes,omitempty" tf:"aws_attributes,omitempty"`

	AzureAttributes []TaskNewClusterAzureAttributesInitParameters `json:"azureAttributes,omitempty" tf:"azure_attributes,omitempty"`

	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	ClusterLogConf []TaskNewClusterClusterLogConfInitParameters `json:"clusterLogConf,omitempty" tf:"cluster_log_conf,omitempty"`

	ClusterMountInfo []TaskNewClusterClusterMountInfoInitParameters `json:"clusterMountInfo,omitempty" tf:"cluster_mount_info,omitempty"`

	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// +mapType=granular
	CustomTags map[string]*string `json:"customTags,omitempty" tf:"custom_tags,omitempty"`

	DataSecurityMode *string `json:"dataSecurityMode,omitempty" tf:"data_security_mode,omitempty"`

	DockerImage []TaskNewClusterDockerImageInitParameters `json:"dockerImage,omitempty" tf:"docker_image,omitempty"`

	DriverInstancePoolID *string `json:"driverInstancePoolId,omitempty" tf:"driver_instance_pool_id,omitempty"`

	DriverNodeTypeID *string `json:"driverNodeTypeId,omitempty" tf:"driver_node_type_id,omitempty"`

	EnableElasticDisk *bool `json:"enableElasticDisk,omitempty" tf:"enable_elastic_disk,omitempty"`

	EnableLocalDiskEncryption *bool `json:"enableLocalDiskEncryption,omitempty" tf:"enable_local_disk_encryption,omitempty"`

	GCPAttributes []TaskNewClusterGCPAttributesInitParameters `json:"gcpAttributes,omitempty" tf:"gcp_attributes,omitempty"`

	IdempotencyToken *string `json:"idempotencyToken,omitempty" tf:"idempotency_token,omitempty"`

	InitScripts []TaskNewClusterInitScriptsInitParameters `json:"initScripts,omitempty" tf:"init_scripts,omitempty"`

	InstancePoolID *string `json:"instancePoolId,omitempty" tf:"instance_pool_id,omitempty"`

	Library []TaskNewClusterLibraryInitParameters `json:"library,omitempty" tf:"library,omitempty"`

	NodeTypeID *string `json:"nodeTypeId,omitempty" tf:"node_type_id,omitempty"`

	NumWorkers *float64 `json:"numWorkers,omitempty" tf:"num_workers,omitempty"`

	PolicyID *string `json:"policyId,omitempty" tf:"policy_id,omitempty"`

	RuntimeEngine *string `json:"runtimeEngine,omitempty" tf:"runtime_engine,omitempty"`

	SSHPublicKeys []*string `json:"sshPublicKeys,omitempty" tf:"ssh_public_keys,omitempty"`

	SingleUserName *string `json:"singleUserName,omitempty" tf:"single_user_name,omitempty"`

	// +mapType=granular
	SparkConf map[string]*string `json:"sparkConf,omitempty" tf:"spark_conf,omitempty"`

	// +mapType=granular
	SparkEnvVars map[string]*string `json:"sparkEnvVars,omitempty" tf:"spark_env_vars,omitempty"`

	SparkVersion *string `json:"sparkVersion,omitempty" tf:"spark_version,omitempty"`

	WorkloadType []TaskNewClusterWorkloadTypeInitParameters `json:"workloadType,omitempty" tf:"workload_type,omitempty"`
}

type TaskNewClusterInitScriptsAbfssInitParameters struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type TaskNewClusterInitScriptsAbfssObservation struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type TaskNewClusterInitScriptsAbfssParameters struct {

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`
}

type TaskNewClusterInitScriptsDbfsInitParameters struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type TaskNewClusterInitScriptsDbfsObservation struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type TaskNewClusterInitScriptsDbfsParameters struct {

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`
}

type TaskNewClusterInitScriptsFileInitParameters struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type TaskNewClusterInitScriptsFileObservation struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type TaskNewClusterInitScriptsFileParameters struct {

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`
}

type TaskNewClusterInitScriptsGcsInitParameters struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type TaskNewClusterInitScriptsGcsObservation struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type TaskNewClusterInitScriptsGcsParameters struct {

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`
}

type TaskNewClusterInitScriptsInitParameters struct {
	Abfss []TaskNewClusterInitScriptsAbfssInitParameters `json:"abfss,omitempty" tf:"abfss,omitempty"`

	Dbfs []TaskNewClusterInitScriptsDbfsInitParameters `json:"dbfs,omitempty" tf:"dbfs,omitempty"`

	File []TaskNewClusterInitScriptsFileInitParameters `json:"file,omitempty" tf:"file,omitempty"`

	Gcs []TaskNewClusterInitScriptsGcsInitParameters `json:"gcs,omitempty" tf:"gcs,omitempty"`

	S3 []TaskNewClusterInitScriptsS3InitParameters `json:"s3,omitempty" tf:"s3,omitempty"`

	Volumes []TaskNewClusterInitScriptsVolumesInitParameters `json:"volumes,omitempty" tf:"volumes,omitempty"`

	Workspace []TaskNewClusterInitScriptsWorkspaceInitParameters `json:"workspace,omitempty" tf:"workspace,omitempty"`
}

type TaskNewClusterInitScriptsObservation struct {
	Abfss []TaskNewClusterInitScriptsAbfssObservation `json:"abfss,omitempty" tf:"abfss,omitempty"`

	Dbfs []TaskNewClusterInitScriptsDbfsObservation `json:"dbfs,omitempty" tf:"dbfs,omitempty"`

	File []TaskNewClusterInitScriptsFileObservation `json:"file,omitempty" tf:"file,omitempty"`

	Gcs []TaskNewClusterInitScriptsGcsObservation `json:"gcs,omitempty" tf:"gcs,omitempty"`

	S3 []TaskNewClusterInitScriptsS3Observation `json:"s3,omitempty" tf:"s3,omitempty"`

	Volumes []TaskNewClusterInitScriptsVolumesObservation `json:"volumes,omitempty" tf:"volumes,omitempty"`

	Workspace []TaskNewClusterInitScriptsWorkspaceObservation `json:"workspace,omitempty" tf:"workspace,omitempty"`
}

type TaskNewClusterInitScriptsParameters struct {

	// +kubebuilder:validation:Optional
	Abfss []TaskNewClusterInitScriptsAbfssParameters `json:"abfss,omitempty" tf:"abfss,omitempty"`

	// +kubebuilder:validation:Optional
	Dbfs []TaskNewClusterInitScriptsDbfsParameters `json:"dbfs,omitempty" tf:"dbfs,omitempty"`

	// +kubebuilder:validation:Optional
	File []TaskNewClusterInitScriptsFileParameters `json:"file,omitempty" tf:"file,omitempty"`

	// +kubebuilder:validation:Optional
	Gcs []TaskNewClusterInitScriptsGcsParameters `json:"gcs,omitempty" tf:"gcs,omitempty"`

	// +kubebuilder:validation:Optional
	S3 []TaskNewClusterInitScriptsS3Parameters `json:"s3,omitempty" tf:"s3,omitempty"`

	// +kubebuilder:validation:Optional
	Volumes []TaskNewClusterInitScriptsVolumesParameters `json:"volumes,omitempty" tf:"volumes,omitempty"`

	// +kubebuilder:validation:Optional
	Workspace []TaskNewClusterInitScriptsWorkspaceParameters `json:"workspace,omitempty" tf:"workspace,omitempty"`
}

type TaskNewClusterInitScriptsS3InitParameters struct {
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	EnableEncryption *bool `json:"enableEncryption,omitempty" tf:"enable_encryption,omitempty"`

	EncryptionType *string `json:"encryptionType,omitempty" tf:"encryption_type,omitempty"`

	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	KMSKey *string `json:"kmsKey,omitempty" tf:"kms_key,omitempty"`

	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type TaskNewClusterInitScriptsS3Observation struct {
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	EnableEncryption *bool `json:"enableEncryption,omitempty" tf:"enable_encryption,omitempty"`

	EncryptionType *string `json:"encryptionType,omitempty" tf:"encryption_type,omitempty"`

	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	KMSKey *string `json:"kmsKey,omitempty" tf:"kms_key,omitempty"`

	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type TaskNewClusterInitScriptsS3Parameters struct {

	// +kubebuilder:validation:Optional
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`

	// +kubebuilder:validation:Optional
	EnableEncryption *bool `json:"enableEncryption,omitempty" tf:"enable_encryption,omitempty"`

	// +kubebuilder:validation:Optional
	EncryptionType *string `json:"encryptionType,omitempty" tf:"encryption_type,omitempty"`

	// +kubebuilder:validation:Optional
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// +kubebuilder:validation:Optional
	KMSKey *string `json:"kmsKey,omitempty" tf:"kms_key,omitempty"`

	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type TaskNewClusterInitScriptsVolumesInitParameters struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type TaskNewClusterInitScriptsVolumesObservation struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type TaskNewClusterInitScriptsVolumesParameters struct {

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`
}

type TaskNewClusterInitScriptsWorkspaceInitParameters struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type TaskNewClusterInitScriptsWorkspaceObservation struct {
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type TaskNewClusterInitScriptsWorkspaceParameters struct {

	// +kubebuilder:validation:Optional
	Destination *string `json:"destination" tf:"destination,omitempty"`
}

type TaskNewClusterLibraryCranInitParameters struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type TaskNewClusterLibraryCranObservation struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type TaskNewClusterLibraryCranParameters struct {

	// +kubebuilder:validation:Optional
	Package *string `json:"package" tf:"package,omitempty"`

	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type TaskNewClusterLibraryInitParameters struct {
	Cran []TaskNewClusterLibraryCranInitParameters `json:"cran,omitempty" tf:"cran,omitempty"`

	Egg *string `json:"egg,omitempty" tf:"egg,omitempty"`

	Jar *string `json:"jar,omitempty" tf:"jar,omitempty"`

	Maven []TaskNewClusterLibraryMavenInitParameters `json:"maven,omitempty" tf:"maven,omitempty"`

	Pypi []TaskNewClusterLibraryPypiInitParameters `json:"pypi,omitempty" tf:"pypi,omitempty"`

	Requirements *string `json:"requirements,omitempty" tf:"requirements,omitempty"`

	Whl *string `json:"whl,omitempty" tf:"whl,omitempty"`
}

type TaskNewClusterLibraryMavenInitParameters struct {
	Coordinates *string `json:"coordinates,omitempty" tf:"coordinates,omitempty"`

	Exclusions []*string `json:"exclusions,omitempty" tf:"exclusions,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type TaskNewClusterLibraryMavenObservation struct {
	Coordinates *string `json:"coordinates,omitempty" tf:"coordinates,omitempty"`

	Exclusions []*string `json:"exclusions,omitempty" tf:"exclusions,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type TaskNewClusterLibraryMavenParameters struct {

	// +kubebuilder:validation:Optional
	Coordinates *string `json:"coordinates" tf:"coordinates,omitempty"`

	// +kubebuilder:validation:Optional
	Exclusions []*string `json:"exclusions,omitempty" tf:"exclusions,omitempty"`

	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type TaskNewClusterLibraryObservation struct {
	Cran []TaskNewClusterLibraryCranObservation `json:"cran,omitempty" tf:"cran,omitempty"`

	Egg *string `json:"egg,omitempty" tf:"egg,omitempty"`

	Jar *string `json:"jar,omitempty" tf:"jar,omitempty"`

	Maven []TaskNewClusterLibraryMavenObservation `json:"maven,omitempty" tf:"maven,omitempty"`

	Pypi []TaskNewClusterLibraryPypiObservation `json:"pypi,omitempty" tf:"pypi,omitempty"`

	Requirements *string `json:"requirements,omitempty" tf:"requirements,omitempty"`

	Whl *string `json:"whl,omitempty" tf:"whl,omitempty"`
}

type TaskNewClusterLibraryParameters struct {

	// +kubebuilder:validation:Optional
	Cran []TaskNewClusterLibraryCranParameters `json:"cran,omitempty" tf:"cran,omitempty"`

	// +kubebuilder:validation:Optional
	Egg *string `json:"egg,omitempty" tf:"egg,omitempty"`

	// +kubebuilder:validation:Optional
	Jar *string `json:"jar,omitempty" tf:"jar,omitempty"`

	// +kubebuilder:validation:Optional
	Maven []TaskNewClusterLibraryMavenParameters `json:"maven,omitempty" tf:"maven,omitempty"`

	// +kubebuilder:validation:Optional
	Pypi []TaskNewClusterLibraryPypiParameters `json:"pypi,omitempty" tf:"pypi,omitempty"`

	// +kubebuilder:validation:Optional
	Requirements *string `json:"requirements,omitempty" tf:"requirements,omitempty"`

	// +kubebuilder:validation:Optional
	Whl *string `json:"whl,omitempty" tf:"whl,omitempty"`
}

type TaskNewClusterLibraryPypiInitParameters struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type TaskNewClusterLibraryPypiObservation struct {
	Package *string `json:"package,omitempty" tf:"package,omitempty"`

	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type TaskNewClusterLibraryPypiParameters struct {

	// +kubebuilder:validation:Optional
	Package *string `json:"package" tf:"package,omitempty"`

	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type TaskNewClusterObservation struct {
	ApplyPolicyDefaultValues *bool `json:"applyPolicyDefaultValues,omitempty" tf:"apply_policy_default_values,omitempty"`

	Autoscale []TaskNewClusterAutoscaleObservation `json:"autoscale,omitempty" tf:"autoscale,omitempty"`

	AwsAttributes []TaskNewClusterAwsAttributesObservation `json:"awsAttributes,omitempty" tf:"aws_attributes,omitempty"`

	AzureAttributes []TaskNewClusterAzureAttributesObservation `json:"azureAttributes,omitempty" tf:"azure_attributes,omitempty"`

	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	ClusterLogConf []TaskNewClusterClusterLogConfObservation `json:"clusterLogConf,omitempty" tf:"cluster_log_conf,omitempty"`

	ClusterMountInfo []TaskNewClusterClusterMountInfoObservation `json:"clusterMountInfo,omitempty" tf:"cluster_mount_info,omitempty"`

	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// +mapType=granular
	CustomTags map[string]*string `json:"customTags,omitempty" tf:"custom_tags,omitempty"`

	DataSecurityMode *string `json:"dataSecurityMode,omitempty" tf:"data_security_mode,omitempty"`

	DockerImage []TaskNewClusterDockerImageObservation `json:"dockerImage,omitempty" tf:"docker_image,omitempty"`

	DriverInstancePoolID *string `json:"driverInstancePoolId,omitempty" tf:"driver_instance_pool_id,omitempty"`

	DriverNodeTypeID *string `json:"driverNodeTypeId,omitempty" tf:"driver_node_type_id,omitempty"`

	EnableElasticDisk *bool `json:"enableElasticDisk,omitempty" tf:"enable_elastic_disk,omitempty"`

	EnableLocalDiskEncryption *bool `json:"enableLocalDiskEncryption,omitempty" tf:"enable_local_disk_encryption,omitempty"`

	GCPAttributes []TaskNewClusterGCPAttributesObservation `json:"gcpAttributes,omitempty" tf:"gcp_attributes,omitempty"`

	IdempotencyToken *string `json:"idempotencyToken,omitempty" tf:"idempotency_token,omitempty"`

	InitScripts []TaskNewClusterInitScriptsObservation `json:"initScripts,omitempty" tf:"init_scripts,omitempty"`

	InstancePoolID *string `json:"instancePoolId,omitempty" tf:"instance_pool_id,omitempty"`

	Library []TaskNewClusterLibraryObservation `json:"library,omitempty" tf:"library,omitempty"`

	NodeTypeID *string `json:"nodeTypeId,omitempty" tf:"node_type_id,omitempty"`

	NumWorkers *float64 `json:"numWorkers,omitempty" tf:"num_workers,omitempty"`

	PolicyID *string `json:"policyId,omitempty" tf:"policy_id,omitempty"`

	RuntimeEngine *string `json:"runtimeEngine,omitempty" tf:"runtime_engine,omitempty"`

	SSHPublicKeys []*string `json:"sshPublicKeys,omitempty" tf:"ssh_public_keys,omitempty"`

	SingleUserName *string `json:"singleUserName,omitempty" tf:"single_user_name,omitempty"`

	// +mapType=granular
	SparkConf map[string]*string `json:"sparkConf,omitempty" tf:"spark_conf,omitempty"`

	// +mapType=granular
	SparkEnvVars map[string]*string `json:"sparkEnvVars,omitempty" tf:"spark_env_vars,omitempty"`

	SparkVersion *string `json:"sparkVersion,omitempty" tf:"spark_version,omitempty"`

	WorkloadType []TaskNewClusterWorkloadTypeObservation `json:"workloadType,omitempty" tf:"workload_type,omitempty"`
}

type TaskNewClusterParameters struct {

	// +kubebuilder:validation:Optional
	ApplyPolicyDefaultValues *bool `json:"applyPolicyDefaultValues,omitempty" tf:"apply_policy_default_values,omitempty"`

	// +kubebuilder:validation:Optional
	Autoscale []TaskNewClusterAutoscaleParameters `json:"autoscale,omitempty" tf:"autoscale,omitempty"`

	// +kubebuilder:validation:Optional
	AwsAttributes []TaskNewClusterAwsAttributesParameters `json:"awsAttributes,omitempty" tf:"aws_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	AzureAttributes []TaskNewClusterAzureAttributesParameters `json:"azureAttributes,omitempty" tf:"azure_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// +kubebuilder:validation:Optional
	ClusterLogConf []TaskNewClusterClusterLogConfParameters `json:"clusterLogConf,omitempty" tf:"cluster_log_conf,omitempty"`

	// +kubebuilder:validation:Optional
	ClusterMountInfo []TaskNewClusterClusterMountInfoParameters `json:"clusterMountInfo,omitempty" tf:"cluster_mount_info,omitempty"`

	// +kubebuilder:validation:Optional
	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	CustomTags map[string]*string `json:"customTags,omitempty" tf:"custom_tags,omitempty"`

	// +kubebuilder:validation:Optional
	DataSecurityMode *string `json:"dataSecurityMode,omitempty" tf:"data_security_mode,omitempty"`

	// +kubebuilder:validation:Optional
	DockerImage []TaskNewClusterDockerImageParameters `json:"dockerImage,omitempty" tf:"docker_image,omitempty"`

	// +kubebuilder:validation:Optional
	DriverInstancePoolID *string `json:"driverInstancePoolId,omitempty" tf:"driver_instance_pool_id,omitempty"`

	// +kubebuilder:validation:Optional
	DriverNodeTypeID *string `json:"driverNodeTypeId,omitempty" tf:"driver_node_type_id,omitempty"`

	// +kubebuilder:validation:Optional
	EnableElasticDisk *bool `json:"enableElasticDisk,omitempty" tf:"enable_elastic_disk,omitempty"`

	// +kubebuilder:validation:Optional
	EnableLocalDiskEncryption *bool `json:"enableLocalDiskEncryption,omitempty" tf:"enable_local_disk_encryption,omitempty"`

	// +kubebuilder:validation:Optional
	GCPAttributes []TaskNewClusterGCPAttributesParameters `json:"gcpAttributes,omitempty" tf:"gcp_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	IdempotencyToken *string `json:"idempotencyToken,omitempty" tf:"idempotency_token,omitempty"`

	// +kubebuilder:validation:Optional
	InitScripts []TaskNewClusterInitScriptsParameters `json:"initScripts,omitempty" tf:"init_scripts,omitempty"`

	// +kubebuilder:validation:Optional
	InstancePoolID *string `json:"instancePoolId,omitempty" tf:"instance_pool_id,omitempty"`

	// +kubebuilder:validation:Optional
	Library []TaskNewClusterLibraryParameters `json:"library,omitempty" tf:"library,omitempty"`

	// +kubebuilder:validation:Optional
	NodeTypeID *string `json:"nodeTypeId,omitempty" tf:"node_type_id,omitempty"`

	// +kubebuilder:validation:Optional
	NumWorkers *float64 `json:"numWorkers,omitempty" tf:"num_workers,omitempty"`

	// +kubebuilder:validation:Optional
	PolicyID *string `json:"policyId,omitempty" tf:"policy_id,omitempty"`

	// +kubebuilder:validation:Optional
	RuntimeEngine *string `json:"runtimeEngine,omitempty" tf:"runtime_engine,omitempty"`

	// +kubebuilder:validation:Optional
	SSHPublicKeys []*string `json:"sshPublicKeys,omitempty" tf:"ssh_public_keys,omitempty"`

	// +kubebuilder:validation:Optional
	SingleUserName *string `json:"singleUserName,omitempty" tf:"single_user_name,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	SparkConf map[string]*string `json:"sparkConf,omitempty" tf:"spark_conf,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	SparkEnvVars map[string]*string `json:"sparkEnvVars,omitempty" tf:"spark_env_vars,omitempty"`

	// +kubebuilder:validation:Optional
	SparkVersion *string `json:"sparkVersion" tf:"spark_version,omitempty"`

	// +kubebuilder:validation:Optional
	WorkloadType []TaskNewClusterWorkloadTypeParameters `json:"workloadType,omitempty" tf:"workload_type,omitempty"`
}

type TaskNewClusterWorkloadTypeClientsInitParameters struct {
	Jobs *bool `json:"jobs,omitempty" tf:"jobs,omitempty"`

	Notebooks *bool `json:"notebooks,omitempty" tf:"notebooks,omitempty"`
}

type TaskNewClusterWorkloadTypeClientsObservation struct {
	Jobs *bool `json:"jobs,omitempty" tf:"jobs,omitempty"`

	Notebooks *bool `json:"notebooks,omitempty" tf:"notebooks,omitempty"`
}

type TaskNewClusterWorkloadTypeClientsParameters struct {

	// +kubebuilder:validation:Optional
	Jobs *bool `json:"jobs,omitempty" tf:"jobs,omitempty"`

	// +kubebuilder:validation:Optional
	Notebooks *bool `json:"notebooks,omitempty" tf:"notebooks,omitempty"`
}

type TaskNewClusterWorkloadTypeInitParameters struct {
	Clients []TaskNewClusterWorkloadTypeClientsInitParameters `json:"clients,omitempty" tf:"clients,omitempty"`
}

type TaskNewClusterWorkloadTypeObservation struct {
	Clients []TaskNewClusterWorkloadTypeClientsObservation `json:"clients,omitempty" tf:"clients,omitempty"`
}

type TaskNewClusterWorkloadTypeParameters struct {

	// +kubebuilder:validation:Optional
	Clients []TaskNewClusterWorkloadTypeClientsParameters `json:"clients" tf:"clients,omitempty"`
}

type TaskNotebookTaskInitParameters struct {

	// +mapType=granular
	BaseParameters map[string]*string `json:"baseParameters,omitempty" tf:"base_parameters,omitempty"`

	NotebookPath *string `json:"notebookPath,omitempty" tf:"notebook_path,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	WarehouseID *string `json:"warehouseId,omitempty" tf:"warehouse_id,omitempty"`
}

type TaskNotebookTaskObservation struct {

	// +mapType=granular
	BaseParameters map[string]*string `json:"baseParameters,omitempty" tf:"base_parameters,omitempty"`

	NotebookPath *string `json:"notebookPath,omitempty" tf:"notebook_path,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	WarehouseID *string `json:"warehouseId,omitempty" tf:"warehouse_id,omitempty"`
}

type TaskNotebookTaskParameters struct {

	// +kubebuilder:validation:Optional
	// +mapType=granular
	BaseParameters map[string]*string `json:"baseParameters,omitempty" tf:"base_parameters,omitempty"`

	// +kubebuilder:validation:Optional
	NotebookPath *string `json:"notebookPath" tf:"notebook_path,omitempty"`

	// +kubebuilder:validation:Optional
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// +kubebuilder:validation:Optional
	WarehouseID *string `json:"warehouseId,omitempty" tf:"warehouse_id,omitempty"`
}

type TaskNotificationSettingsInitParameters struct {
	AlertOnLastAttempt *bool `json:"alertOnLastAttempt,omitempty" tf:"alert_on_last_attempt,omitempty"`

	NoAlertForCanceledRuns *bool `json:"noAlertForCanceledRuns,omitempty" tf:"no_alert_for_canceled_runs,omitempty"`

	NoAlertForSkippedRuns *bool `json:"noAlertForSkippedRuns,omitempty" tf:"no_alert_for_skipped_runs,omitempty"`
}

type TaskNotificationSettingsObservation struct {
	AlertOnLastAttempt *bool `json:"alertOnLastAttempt,omitempty" tf:"alert_on_last_attempt,omitempty"`

	NoAlertForCanceledRuns *bool `json:"noAlertForCanceledRuns,omitempty" tf:"no_alert_for_canceled_runs,omitempty"`

	NoAlertForSkippedRuns *bool `json:"noAlertForSkippedRuns,omitempty" tf:"no_alert_for_skipped_runs,omitempty"`
}

type TaskNotificationSettingsParameters struct {

	// +kubebuilder:validation:Optional
	AlertOnLastAttempt *bool `json:"alertOnLastAttempt,omitempty" tf:"alert_on_last_attempt,omitempty"`

	// +kubebuilder:validation:Optional
	NoAlertForCanceledRuns *bool `json:"noAlertForCanceledRuns,omitempty" tf:"no_alert_for_canceled_runs,omitempty"`

	// +kubebuilder:validation:Optional
	NoAlertForSkippedRuns *bool `json:"noAlertForSkippedRuns,omitempty" tf:"no_alert_for_skipped_runs,omitempty"`
}

type TaskObservation struct {
	ConditionTask []ConditionTaskObservation `json:"conditionTask,omitempty" tf:"condition_task,omitempty"`

	DbtTask []TaskDbtTaskObservation `json:"dbtTask,omitempty" tf:"dbt_task,omitempty"`

	DependsOn []DependsOnObservation `json:"dependsOn,omitempty" tf:"depends_on,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	DisableAutoOptimization *bool `json:"disableAutoOptimization,omitempty" tf:"disable_auto_optimization,omitempty"`

	EmailNotifications []TaskEmailNotificationsObservation `json:"emailNotifications,omitempty" tf:"email_notifications,omitempty"`

	EnvironmentKey *string `json:"environmentKey,omitempty" tf:"environment_key,omitempty"`

	ExistingClusterID *string `json:"existingClusterId,omitempty" tf:"existing_cluster_id,omitempty"`

	ForEachTask []ForEachTaskObservation `json:"forEachTask,omitempty" tf:"for_each_task,omitempty"`

	Health []JobTaskHealthObservation `json:"health,omitempty" tf:"health,omitempty"`

	JobClusterKey *string `json:"jobClusterKey,omitempty" tf:"job_cluster_key,omitempty"`

	Library []JobTaskLibraryObservation `json:"library,omitempty" tf:"library,omitempty"`

	MaxRetries *float64 `json:"maxRetries,omitempty" tf:"max_retries,omitempty"`

	MinRetryIntervalMillis *float64 `json:"minRetryIntervalMillis,omitempty" tf:"min_retry_interval_millis,omitempty"`

	NewCluster []JobTaskNewClusterObservation `json:"newCluster,omitempty" tf:"new_cluster,omitempty"`

	NotebookTask []JobTaskNotebookTaskObservation `json:"notebookTask,omitempty" tf:"notebook_task,omitempty"`

	NotificationSettings []JobTaskNotificationSettingsObservation `json:"notificationSettings,omitempty" tf:"notification_settings,omitempty"`

	PipelineTask []JobTaskPipelineTaskObservation `json:"pipelineTask,omitempty" tf:"pipeline_task,omitempty"`

	PythonWheelTask []JobTaskPythonWheelTaskObservation `json:"pythonWheelTask,omitempty" tf:"python_wheel_task,omitempty"`

	RetryOnTimeout *bool `json:"retryOnTimeout,omitempty" tf:"retry_on_timeout,omitempty"`

	RunIf *string `json:"runIf,omitempty" tf:"run_if,omitempty"`

	RunJobTask []JobTaskRunJobTaskObservation `json:"runJobTask,omitempty" tf:"run_job_task,omitempty"`

	SQLTask []TaskSQLTaskObservation `json:"sqlTask,omitempty" tf:"sql_task,omitempty"`

	SparkJarTask []JobTaskSparkJarTaskObservation `json:"sparkJarTask,omitempty" tf:"spark_jar_task,omitempty"`

	SparkPythonTask []JobTaskSparkPythonTaskObservation `json:"sparkPythonTask,omitempty" tf:"spark_python_task,omitempty"`

	SparkSubmitTask []JobTaskSparkSubmitTaskObservation `json:"sparkSubmitTask,omitempty" tf:"spark_submit_task,omitempty"`

	TaskKey *string `json:"taskKey,omitempty" tf:"task_key,omitempty"`

	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`

	WebhookNotifications []TaskWebhookNotificationsObservation `json:"webhookNotifications,omitempty" tf:"webhook_notifications,omitempty"`
}

type TaskParameters struct {

	// +kubebuilder:validation:Optional
	ConditionTask []ConditionTaskParameters `json:"conditionTask,omitempty" tf:"condition_task,omitempty"`

	// +kubebuilder:validation:Optional
	DbtTask []TaskDbtTaskParameters `json:"dbtTask,omitempty" tf:"dbt_task,omitempty"`

	// +kubebuilder:validation:Optional
	DependsOn []DependsOnParameters `json:"dependsOn,omitempty" tf:"depends_on,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	DisableAutoOptimization *bool `json:"disableAutoOptimization,omitempty" tf:"disable_auto_optimization,omitempty"`

	// +kubebuilder:validation:Optional
	EmailNotifications []TaskEmailNotificationsParameters `json:"emailNotifications,omitempty" tf:"email_notifications,omitempty"`

	// +kubebuilder:validation:Optional
	EnvironmentKey *string `json:"environmentKey,omitempty" tf:"environment_key,omitempty"`

	// +kubebuilder:validation:Optional
	ExistingClusterID *string `json:"existingClusterId,omitempty" tf:"existing_cluster_id,omitempty"`

	// +kubebuilder:validation:Optional
	ForEachTask []ForEachTaskParameters `json:"forEachTask,omitempty" tf:"for_each_task,omitempty"`

	// +kubebuilder:validation:Optional
	Health []JobTaskHealthParameters `json:"health,omitempty" tf:"health,omitempty"`

	// +kubebuilder:validation:Optional
	JobClusterKey *string `json:"jobClusterKey,omitempty" tf:"job_cluster_key,omitempty"`

	// +kubebuilder:validation:Optional
	Library []JobTaskLibraryParameters `json:"library,omitempty" tf:"library,omitempty"`

	// +kubebuilder:validation:Optional
	MaxRetries *float64 `json:"maxRetries,omitempty" tf:"max_retries,omitempty"`

	// +kubebuilder:validation:Optional
	MinRetryIntervalMillis *float64 `json:"minRetryIntervalMillis,omitempty" tf:"min_retry_interval_millis,omitempty"`

	// +kubebuilder:validation:Optional
	NewCluster []JobTaskNewClusterParameters `json:"newCluster,omitempty" tf:"new_cluster,omitempty"`

	// +kubebuilder:validation:Optional
	NotebookTask []JobTaskNotebookTaskParameters `json:"notebookTask,omitempty" tf:"notebook_task,omitempty"`

	// +kubebuilder:validation:Optional
	NotificationSettings []JobTaskNotificationSettingsParameters `json:"notificationSettings,omitempty" tf:"notification_settings,omitempty"`

	// +kubebuilder:validation:Optional
	PipelineTask []JobTaskPipelineTaskParameters `json:"pipelineTask,omitempty" tf:"pipeline_task,omitempty"`

	// +kubebuilder:validation:Optional
	PythonWheelTask []JobTaskPythonWheelTaskParameters `json:"pythonWheelTask,omitempty" tf:"python_wheel_task,omitempty"`

	// +kubebuilder:validation:Optional
	RetryOnTimeout *bool `json:"retryOnTimeout,omitempty" tf:"retry_on_timeout,omitempty"`

	// +kubebuilder:validation:Optional
	RunIf *string `json:"runIf,omitempty" tf:"run_if,omitempty"`

	// +kubebuilder:validation:Optional
	RunJobTask []JobTaskRunJobTaskParameters `json:"runJobTask,omitempty" tf:"run_job_task,omitempty"`

	// +kubebuilder:validation:Optional
	SQLTask []TaskSQLTaskParameters `json:"sqlTask,omitempty" tf:"sql_task,omitempty"`

	// +kubebuilder:validation:Optional
	SparkJarTask []JobTaskSparkJarTaskParameters `json:"sparkJarTask,omitempty" tf:"spark_jar_task,omitempty"`

	// +kubebuilder:validation:Optional
	SparkPythonTask []JobTaskSparkPythonTaskParameters `json:"sparkPythonTask,omitempty" tf:"spark_python_task,omitempty"`

	// +kubebuilder:validation:Optional
	SparkSubmitTask []JobTaskSparkSubmitTaskParameters `json:"sparkSubmitTask,omitempty" tf:"spark_submit_task,omitempty"`

	// +kubebuilder:validation:Optional
	TaskKey *string `json:"taskKey" tf:"task_key,omitempty"`

	// +kubebuilder:validation:Optional
	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`

	// +kubebuilder:validation:Optional
	WebhookNotifications []TaskWebhookNotificationsParameters `json:"webhookNotifications,omitempty" tf:"webhook_notifications,omitempty"`
}

type TaskPipelineTaskInitParameters struct {
	FullRefresh *bool `json:"fullRefresh,omitempty" tf:"full_refresh,omitempty"`

	PipelineID *string `json:"pipelineId,omitempty" tf:"pipeline_id,omitempty"`
}

type TaskPipelineTaskObservation struct {
	FullRefresh *bool `json:"fullRefresh,omitempty" tf:"full_refresh,omitempty"`

	PipelineID *string `json:"pipelineId,omitempty" tf:"pipeline_id,omitempty"`
}

type TaskPipelineTaskParameters struct {

	// +kubebuilder:validation:Optional
	FullRefresh *bool `json:"fullRefresh,omitempty" tf:"full_refresh,omitempty"`

	// +kubebuilder:validation:Optional
	PipelineID *string `json:"pipelineId" tf:"pipeline_id,omitempty"`
}

type TaskPythonWheelTaskInitParameters struct {
	EntryPoint *string `json:"entryPoint,omitempty" tf:"entry_point,omitempty"`

	// +mapType=granular
	NamedParameters map[string]*string `json:"namedParameters,omitempty" tf:"named_parameters,omitempty"`

	PackageName *string `json:"packageName,omitempty" tf:"package_name,omitempty"`

	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type TaskPythonWheelTaskObservation struct {
	EntryPoint *string `json:"entryPoint,omitempty" tf:"entry_point,omitempty"`

	// +mapType=granular
	NamedParameters map[string]*string `json:"namedParameters,omitempty" tf:"named_parameters,omitempty"`

	PackageName *string `json:"packageName,omitempty" tf:"package_name,omitempty"`

	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type TaskPythonWheelTaskParameters struct {

	// +kubebuilder:validation:Optional
	EntryPoint *string `json:"entryPoint,omitempty" tf:"entry_point,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	NamedParameters map[string]*string `json:"namedParameters,omitempty" tf:"named_parameters,omitempty"`

	// +kubebuilder:validation:Optional
	PackageName *string `json:"packageName,omitempty" tf:"package_name,omitempty"`

	// +kubebuilder:validation:Optional
	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type TaskRunJobTaskInitParameters struct {
	DbtCommands []*string `json:"dbtCommands,omitempty" tf:"dbt_commands,omitempty"`

	JarParams []*string `json:"jarParams,omitempty" tf:"jar_params,omitempty"`

	JobID *float64 `json:"jobId,omitempty" tf:"job_id,omitempty"`

	// +mapType=granular
	JobParameters map[string]*string `json:"jobParameters,omitempty" tf:"job_parameters,omitempty"`

	// +mapType=granular
	NotebookParams map[string]*string `json:"notebookParams,omitempty" tf:"notebook_params,omitempty"`

	PipelineParams []PipelineParamsInitParameters `json:"pipelineParams,omitempty" tf:"pipeline_params,omitempty"`

	// +mapType=granular
	PythonNamedParams map[string]*string `json:"pythonNamedParams,omitempty" tf:"python_named_params,omitempty"`

	PythonParams []*string `json:"pythonParams,omitempty" tf:"python_params,omitempty"`

	// +mapType=granular
	SQLParams map[string]*string `json:"sqlParams,omitempty" tf:"sql_params,omitempty"`

	SparkSubmitParams []*string `json:"sparkSubmitParams,omitempty" tf:"spark_submit_params,omitempty"`
}

type TaskRunJobTaskObservation struct {
	DbtCommands []*string `json:"dbtCommands,omitempty" tf:"dbt_commands,omitempty"`

	JarParams []*string `json:"jarParams,omitempty" tf:"jar_params,omitempty"`

	JobID *float64 `json:"jobId,omitempty" tf:"job_id,omitempty"`

	// +mapType=granular
	JobParameters map[string]*string `json:"jobParameters,omitempty" tf:"job_parameters,omitempty"`

	// +mapType=granular
	NotebookParams map[string]*string `json:"notebookParams,omitempty" tf:"notebook_params,omitempty"`

	PipelineParams []PipelineParamsObservation `json:"pipelineParams,omitempty" tf:"pipeline_params,omitempty"`

	// +mapType=granular
	PythonNamedParams map[string]*string `json:"pythonNamedParams,omitempty" tf:"python_named_params,omitempty"`

	PythonParams []*string `json:"pythonParams,omitempty" tf:"python_params,omitempty"`

	// +mapType=granular
	SQLParams map[string]*string `json:"sqlParams,omitempty" tf:"sql_params,omitempty"`

	SparkSubmitParams []*string `json:"sparkSubmitParams,omitempty" tf:"spark_submit_params,omitempty"`
}

type TaskRunJobTaskParameters struct {

	// +kubebuilder:validation:Optional
	DbtCommands []*string `json:"dbtCommands,omitempty" tf:"dbt_commands,omitempty"`

	// +kubebuilder:validation:Optional
	JarParams []*string `json:"jarParams,omitempty" tf:"jar_params,omitempty"`

	// +kubebuilder:validation:Optional
	JobID *float64 `json:"jobId" tf:"job_id,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	JobParameters map[string]*string `json:"jobParameters,omitempty" tf:"job_parameters,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	NotebookParams map[string]*string `json:"notebookParams,omitempty" tf:"notebook_params,omitempty"`

	// +kubebuilder:validation:Optional
	PipelineParams []PipelineParamsParameters `json:"pipelineParams,omitempty" tf:"pipeline_params,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	PythonNamedParams map[string]*string `json:"pythonNamedParams,omitempty" tf:"python_named_params,omitempty"`

	// +kubebuilder:validation:Optional
	PythonParams []*string `json:"pythonParams,omitempty" tf:"python_params,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	SQLParams map[string]*string `json:"sqlParams,omitempty" tf:"sql_params,omitempty"`

	// +kubebuilder:validation:Optional
	SparkSubmitParams []*string `json:"sparkSubmitParams,omitempty" tf:"spark_submit_params,omitempty"`
}

type TaskSQLTaskFileInitParameters struct {
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`
}

type TaskSQLTaskFileObservation struct {
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`
}

type TaskSQLTaskFileParameters struct {

	// +kubebuilder:validation:Optional
	Path *string `json:"path" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Source *string `json:"source,omitempty" tf:"source,omitempty"`
}

type TaskSQLTaskInitParameters struct {
	Alert []SQLTaskAlertInitParameters `json:"alert,omitempty" tf:"alert,omitempty"`

	Dashboard []SQLTaskDashboardInitParameters `json:"dashboard,omitempty" tf:"dashboard,omitempty"`

	File []TaskSQLTaskFileInitParameters `json:"file,omitempty" tf:"file,omitempty"`

	// +mapType=granular
	Parameters map[string]*string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	Query []SQLTaskQueryInitParameters `json:"query,omitempty" tf:"query,omitempty"`

	WarehouseID *string `json:"warehouseId,omitempty" tf:"warehouse_id,omitempty"`
}

type TaskSQLTaskObservation struct {
	Alert []SQLTaskAlertObservation `json:"alert,omitempty" tf:"alert,omitempty"`

	Dashboard []SQLTaskDashboardObservation `json:"dashboard,omitempty" tf:"dashboard,omitempty"`

	File []TaskSQLTaskFileObservation `json:"file,omitempty" tf:"file,omitempty"`

	// +mapType=granular
	Parameters map[string]*string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	Query []SQLTaskQueryObservation `json:"query,omitempty" tf:"query,omitempty"`

	WarehouseID *string `json:"warehouseId,omitempty" tf:"warehouse_id,omitempty"`
}

type TaskSQLTaskParameters struct {

	// +kubebuilder:validation:Optional
	Alert []SQLTaskAlertParameters `json:"alert,omitempty" tf:"alert,omitempty"`

	// +kubebuilder:validation:Optional
	Dashboard []SQLTaskDashboardParameters `json:"dashboard,omitempty" tf:"dashboard,omitempty"`

	// +kubebuilder:validation:Optional
	File []TaskSQLTaskFileParameters `json:"file,omitempty" tf:"file,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	Parameters map[string]*string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// +kubebuilder:validation:Optional
	Query []SQLTaskQueryParameters `json:"query,omitempty" tf:"query,omitempty"`

	// +kubebuilder:validation:Optional
	WarehouseID *string `json:"warehouseId" tf:"warehouse_id,omitempty"`
}

type TaskSparkJarTaskInitParameters struct {
	JarURI *string `json:"jarUri,omitempty" tf:"jar_uri,omitempty"`

	MainClassName *string `json:"mainClassName,omitempty" tf:"main_class_name,omitempty"`

	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type TaskSparkJarTaskObservation struct {
	JarURI *string `json:"jarUri,omitempty" tf:"jar_uri,omitempty"`

	MainClassName *string `json:"mainClassName,omitempty" tf:"main_class_name,omitempty"`

	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type TaskSparkJarTaskParameters struct {

	// +kubebuilder:validation:Optional
	JarURI *string `json:"jarUri,omitempty" tf:"jar_uri,omitempty"`

	// +kubebuilder:validation:Optional
	MainClassName *string `json:"mainClassName,omitempty" tf:"main_class_name,omitempty"`

	// +kubebuilder:validation:Optional
	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type TaskSparkPythonTaskInitParameters struct {
	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	PythonFile *string `json:"pythonFile,omitempty" tf:"python_file,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`
}

type TaskSparkPythonTaskObservation struct {
	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	PythonFile *string `json:"pythonFile,omitempty" tf:"python_file,omitempty"`

	Source *string `json:"source,omitempty" tf:"source,omitempty"`
}

type TaskSparkPythonTaskParameters struct {

	// +kubebuilder:validation:Optional
	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// +kubebuilder:validation:Optional
	PythonFile *string `json:"pythonFile" tf:"python_file,omitempty"`

	// +kubebuilder:validation:Optional
	Source *string `json:"source,omitempty" tf:"source,omitempty"`
}

type TaskSparkSubmitTaskInitParameters struct {
	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type TaskSparkSubmitTaskObservation struct {
	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type TaskSparkSubmitTaskParameters struct {

	// +kubebuilder:validation:Optional
	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type TaskWebhookNotificationsInitParameters struct {
	OnDurationWarningThresholdExceeded []WebhookNotificationsOnDurationWarningThresholdExceededInitParameters `json:"onDurationWarningThresholdExceeded,omitempty" tf:"on_duration_warning_threshold_exceeded,omitempty"`

	OnFailure []WebhookNotificationsOnFailureInitParameters `json:"onFailure,omitempty" tf:"on_failure,omitempty"`

	OnStart []WebhookNotificationsOnStartInitParameters `json:"onStart,omitempty" tf:"on_start,omitempty"`

	OnStreamingBacklogExceeded []WebhookNotificationsOnStreamingBacklogExceededInitParameters `json:"onStreamingBacklogExceeded,omitempty" tf:"on_streaming_backlog_exceeded,omitempty"`

	OnSuccess []WebhookNotificationsOnSuccessInitParameters `json:"onSuccess,omitempty" tf:"on_success,omitempty"`
}

type TaskWebhookNotificationsObservation struct {
	OnDurationWarningThresholdExceeded []WebhookNotificationsOnDurationWarningThresholdExceededObservation `json:"onDurationWarningThresholdExceeded,omitempty" tf:"on_duration_warning_threshold_exceeded,omitempty"`

	OnFailure []WebhookNotificationsOnFailureObservation `json:"onFailure,omitempty" tf:"on_failure,omitempty"`

	OnStart []WebhookNotificationsOnStartObservation `json:"onStart,omitempty" tf:"on_start,omitempty"`

	OnStreamingBacklogExceeded []WebhookNotificationsOnStreamingBacklogExceededObservation `json:"onStreamingBacklogExceeded,omitempty" tf:"on_streaming_backlog_exceeded,omitempty"`

	OnSuccess []WebhookNotificationsOnSuccessObservation `json:"onSuccess,omitempty" tf:"on_success,omitempty"`
}

type TaskWebhookNotificationsParameters struct {

	// +kubebuilder:validation:Optional
	OnDurationWarningThresholdExceeded []WebhookNotificationsOnDurationWarningThresholdExceededParameters `json:"onDurationWarningThresholdExceeded,omitempty" tf:"on_duration_warning_threshold_exceeded,omitempty"`

	// +kubebuilder:validation:Optional
	OnFailure []WebhookNotificationsOnFailureParameters `json:"onFailure,omitempty" tf:"on_failure,omitempty"`

	// +kubebuilder:validation:Optional
	OnStart []WebhookNotificationsOnStartParameters `json:"onStart,omitempty" tf:"on_start,omitempty"`

	// +kubebuilder:validation:Optional
	OnStreamingBacklogExceeded []WebhookNotificationsOnStreamingBacklogExceededParameters `json:"onStreamingBacklogExceeded,omitempty" tf:"on_streaming_backlog_exceeded,omitempty"`

	// +kubebuilder:validation:Optional
	OnSuccess []WebhookNotificationsOnSuccessParameters `json:"onSuccess,omitempty" tf:"on_success,omitempty"`
}

type TriggerInitParameters struct {
	FileArrival []FileArrivalInitParameters `json:"fileArrival,omitempty" tf:"file_arrival,omitempty"`

	PauseStatus *string `json:"pauseStatus,omitempty" tf:"pause_status,omitempty"`

	Periodic []PeriodicInitParameters `json:"periodic,omitempty" tf:"periodic,omitempty"`

	Table []TableInitParameters `json:"table,omitempty" tf:"table,omitempty"`

	TableUpdate []TableUpdateInitParameters `json:"tableUpdate,omitempty" tf:"table_update,omitempty"`
}

type TriggerObservation struct {
	FileArrival []FileArrivalObservation `json:"fileArrival,omitempty" tf:"file_arrival,omitempty"`

	PauseStatus *string `json:"pauseStatus,omitempty" tf:"pause_status,omitempty"`

	Periodic []PeriodicObservation `json:"periodic,omitempty" tf:"periodic,omitempty"`

	Table []TableObservation `json:"table,omitempty" tf:"table,omitempty"`

	TableUpdate []TableUpdateObservation `json:"tableUpdate,omitempty" tf:"table_update,omitempty"`
}

type TriggerParameters struct {

	// +kubebuilder:validation:Optional
	FileArrival []FileArrivalParameters `json:"fileArrival,omitempty" tf:"file_arrival,omitempty"`

	// +kubebuilder:validation:Optional
	PauseStatus *string `json:"pauseStatus,omitempty" tf:"pause_status,omitempty"`

	// +kubebuilder:validation:Optional
	Periodic []PeriodicParameters `json:"periodic,omitempty" tf:"periodic,omitempty"`

	// +kubebuilder:validation:Optional
	Table []TableParameters `json:"table,omitempty" tf:"table,omitempty"`

	// +kubebuilder:validation:Optional
	TableUpdate []TableUpdateParameters `json:"tableUpdate,omitempty" tf:"table_update,omitempty"`
}

type WebhookNotificationsInitParameters struct {
	OnDurationWarningThresholdExceeded []OnDurationWarningThresholdExceededInitParameters `json:"onDurationWarningThresholdExceeded,omitempty" tf:"on_duration_warning_threshold_exceeded,omitempty"`

	OnFailure []OnFailureInitParameters `json:"onFailure,omitempty" tf:"on_failure,omitempty"`

	OnStart []OnStartInitParameters `json:"onStart,omitempty" tf:"on_start,omitempty"`

	OnStreamingBacklogExceeded []OnStreamingBacklogExceededInitParameters `json:"onStreamingBacklogExceeded,omitempty" tf:"on_streaming_backlog_exceeded,omitempty"`

	OnSuccess []OnSuccessInitParameters `json:"onSuccess,omitempty" tf:"on_success,omitempty"`
}

type WebhookNotificationsObservation struct {
	OnDurationWarningThresholdExceeded []OnDurationWarningThresholdExceededObservation `json:"onDurationWarningThresholdExceeded,omitempty" tf:"on_duration_warning_threshold_exceeded,omitempty"`

	OnFailure []OnFailureObservation `json:"onFailure,omitempty" tf:"on_failure,omitempty"`

	OnStart []OnStartObservation `json:"onStart,omitempty" tf:"on_start,omitempty"`

	OnStreamingBacklogExceeded []OnStreamingBacklogExceededObservation `json:"onStreamingBacklogExceeded,omitempty" tf:"on_streaming_backlog_exceeded,omitempty"`

	OnSuccess []OnSuccessObservation `json:"onSuccess,omitempty" tf:"on_success,omitempty"`
}

type WebhookNotificationsOnDurationWarningThresholdExceededInitParameters struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type WebhookNotificationsOnDurationWarningThresholdExceededObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type WebhookNotificationsOnDurationWarningThresholdExceededParameters struct {

	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`
}

type WebhookNotificationsOnFailureInitParameters struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type WebhookNotificationsOnFailureObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type WebhookNotificationsOnFailureParameters struct {

	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`
}

type WebhookNotificationsOnStartInitParameters struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type WebhookNotificationsOnStartObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type WebhookNotificationsOnStartParameters struct {

	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`
}

type WebhookNotificationsOnStreamingBacklogExceededInitParameters struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type WebhookNotificationsOnStreamingBacklogExceededObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type WebhookNotificationsOnStreamingBacklogExceededParameters struct {

	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`
}

type WebhookNotificationsOnSuccessInitParameters struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type WebhookNotificationsOnSuccessObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type WebhookNotificationsOnSuccessParameters struct {

	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`
}

type WebhookNotificationsParameters struct {

	// +kubebuilder:validation:Optional
	OnDurationWarningThresholdExceeded []OnDurationWarningThresholdExceededParameters `json:"onDurationWarningThresholdExceeded,omitempty" tf:"on_duration_warning_threshold_exceeded,omitempty"`

	// +kubebuilder:validation:Optional
	OnFailure []OnFailureParameters `json:"onFailure,omitempty" tf:"on_failure,omitempty"`

	// +kubebuilder:validation:Optional
	OnStart []OnStartParameters `json:"onStart,omitempty" tf:"on_start,omitempty"`

	// +kubebuilder:validation:Optional
	OnStreamingBacklogExceeded []OnStreamingBacklogExceededParameters `json:"onStreamingBacklogExceeded,omitempty" tf:"on_streaming_backlog_exceeded,omitempty"`

	// +kubebuilder:validation:Optional
	OnSuccess []OnSuccessParameters `json:"onSuccess,omitempty" tf:"on_success,omitempty"`
}

type WorkloadTypeClientsInitParameters struct {
	Jobs *bool `json:"jobs,omitempty" tf:"jobs,omitempty"`

	Notebooks *bool `json:"notebooks,omitempty" tf:"notebooks,omitempty"`
}

type WorkloadTypeClientsObservation struct {
	Jobs *bool `json:"jobs,omitempty" tf:"jobs,omitempty"`

	Notebooks *bool `json:"notebooks,omitempty" tf:"notebooks,omitempty"`
}

type WorkloadTypeClientsParameters struct {

	// +kubebuilder:validation:Optional
	Jobs *bool `json:"jobs,omitempty" tf:"jobs,omitempty"`

	// +kubebuilder:validation:Optional
	Notebooks *bool `json:"notebooks,omitempty" tf:"notebooks,omitempty"`
}

// JobSpec defines the desired state of Job
type JobSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     JobParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider JobInitParameters `json:"initProvider,omitempty"`
}

// JobStatus defines the observed state of Job.
type JobStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        JobObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Job is the Schema for the Jobs API. <no value>
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,databricks}
type Job struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              JobSpec   `json:"spec"`
	Status            JobStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// JobList contains a list of Jobs
type JobList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Job `json:"items"`
}

// Repository type metadata.
var (
	Job_Kind             = "Job"
	Job_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Job_Kind}.String()
	Job_KindAPIVersion   = Job_Kind + "." + CRDGroupVersion.String()
	Job_GroupVersionKind = CRDGroupVersion.WithKind(Job_Kind)
)

func init() {
	SchemeBuilder.Register(&Job{}, &JobList{})
}
