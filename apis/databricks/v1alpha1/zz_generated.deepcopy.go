//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AbfssInitParameters) DeepCopyInto(out *AbfssInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AbfssInitParameters.
func (in *AbfssInitParameters) DeepCopy() *AbfssInitParameters {
	if in == nil {
		return nil
	}
	out := new(AbfssInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AbfssObservation) DeepCopyInto(out *AbfssObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AbfssObservation.
func (in *AbfssObservation) DeepCopy() *AbfssObservation {
	if in == nil {
		return nil
	}
	out := new(AbfssObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AbfssParameters) DeepCopyInto(out *AbfssParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AbfssParameters.
func (in *AbfssParameters) DeepCopy() *AbfssParameters {
	if in == nil {
		return nil
	}
	out := new(AbfssParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessControlInitParameters) DeepCopyInto(out *AccessControlInitParameters) {
	*out = *in
	if in.GroupName != nil {
		in, out := &in.GroupName, &out.GroupName
		*out = new(string)
		**out = **in
	}
	if in.PermissionLevel != nil {
		in, out := &in.PermissionLevel, &out.PermissionLevel
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalName != nil {
		in, out := &in.ServicePrincipalName, &out.ServicePrincipalName
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessControlInitParameters.
func (in *AccessControlInitParameters) DeepCopy() *AccessControlInitParameters {
	if in == nil {
		return nil
	}
	out := new(AccessControlInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessControlObservation) DeepCopyInto(out *AccessControlObservation) {
	*out = *in
	if in.GroupName != nil {
		in, out := &in.GroupName, &out.GroupName
		*out = new(string)
		**out = **in
	}
	if in.PermissionLevel != nil {
		in, out := &in.PermissionLevel, &out.PermissionLevel
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalName != nil {
		in, out := &in.ServicePrincipalName, &out.ServicePrincipalName
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessControlObservation.
func (in *AccessControlObservation) DeepCopy() *AccessControlObservation {
	if in == nil {
		return nil
	}
	out := new(AccessControlObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessControlParameters) DeepCopyInto(out *AccessControlParameters) {
	*out = *in
	if in.GroupName != nil {
		in, out := &in.GroupName, &out.GroupName
		*out = new(string)
		**out = **in
	}
	if in.PermissionLevel != nil {
		in, out := &in.PermissionLevel, &out.PermissionLevel
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalName != nil {
		in, out := &in.ServicePrincipalName, &out.ServicePrincipalName
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessControlParameters.
func (in *AccessControlParameters) DeepCopy() *AccessControlParameters {
	if in == nil {
		return nil
	}
	out := new(AccessControlParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionConfigurationsInitParameters) DeepCopyInto(out *ActionConfigurationsInitParameters) {
	*out = *in
	if in.ActionConfigurationID != nil {
		in, out := &in.ActionConfigurationID, &out.ActionConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.ActionType != nil {
		in, out := &in.ActionType, &out.ActionType
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionConfigurationsInitParameters.
func (in *ActionConfigurationsInitParameters) DeepCopy() *ActionConfigurationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActionConfigurationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionConfigurationsObservation) DeepCopyInto(out *ActionConfigurationsObservation) {
	*out = *in
	if in.ActionConfigurationID != nil {
		in, out := &in.ActionConfigurationID, &out.ActionConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.ActionType != nil {
		in, out := &in.ActionType, &out.ActionType
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionConfigurationsObservation.
func (in *ActionConfigurationsObservation) DeepCopy() *ActionConfigurationsObservation {
	if in == nil {
		return nil
	}
	out := new(ActionConfigurationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionConfigurationsParameters) DeepCopyInto(out *ActionConfigurationsParameters) {
	*out = *in
	if in.ActionConfigurationID != nil {
		in, out := &in.ActionConfigurationID, &out.ActionConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.ActionType != nil {
		in, out := &in.ActionType, &out.ActionType
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionConfigurationsParameters.
func (in *ActionConfigurationsParameters) DeepCopy() *ActionConfigurationsParameters {
	if in == nil {
		return nil
	}
	out := new(ActionConfigurationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Alert) DeepCopyInto(out *Alert) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Alert.
func (in *Alert) DeepCopy() *Alert {
	if in == nil {
		return nil
	}
	out := new(Alert)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Alert) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertConfigurationsInitParameters) DeepCopyInto(out *AlertConfigurationsInitParameters) {
	*out = *in
	if in.ActionConfigurations != nil {
		in, out := &in.ActionConfigurations, &out.ActionConfigurations
		*out = make([]ActionConfigurationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AlertConfigurationID != nil {
		in, out := &in.AlertConfigurationID, &out.AlertConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.QuantityThreshold != nil {
		in, out := &in.QuantityThreshold, &out.QuantityThreshold
		*out = new(string)
		**out = **in
	}
	if in.QuantityType != nil {
		in, out := &in.QuantityType, &out.QuantityType
		*out = new(string)
		**out = **in
	}
	if in.TimePeriod != nil {
		in, out := &in.TimePeriod, &out.TimePeriod
		*out = new(string)
		**out = **in
	}
	if in.TriggerType != nil {
		in, out := &in.TriggerType, &out.TriggerType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertConfigurationsInitParameters.
func (in *AlertConfigurationsInitParameters) DeepCopy() *AlertConfigurationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AlertConfigurationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertConfigurationsObservation) DeepCopyInto(out *AlertConfigurationsObservation) {
	*out = *in
	if in.ActionConfigurations != nil {
		in, out := &in.ActionConfigurations, &out.ActionConfigurations
		*out = make([]ActionConfigurationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AlertConfigurationID != nil {
		in, out := &in.AlertConfigurationID, &out.AlertConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.QuantityThreshold != nil {
		in, out := &in.QuantityThreshold, &out.QuantityThreshold
		*out = new(string)
		**out = **in
	}
	if in.QuantityType != nil {
		in, out := &in.QuantityType, &out.QuantityType
		*out = new(string)
		**out = **in
	}
	if in.TimePeriod != nil {
		in, out := &in.TimePeriod, &out.TimePeriod
		*out = new(string)
		**out = **in
	}
	if in.TriggerType != nil {
		in, out := &in.TriggerType, &out.TriggerType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertConfigurationsObservation.
func (in *AlertConfigurationsObservation) DeepCopy() *AlertConfigurationsObservation {
	if in == nil {
		return nil
	}
	out := new(AlertConfigurationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertConfigurationsParameters) DeepCopyInto(out *AlertConfigurationsParameters) {
	*out = *in
	if in.ActionConfigurations != nil {
		in, out := &in.ActionConfigurations, &out.ActionConfigurations
		*out = make([]ActionConfigurationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AlertConfigurationID != nil {
		in, out := &in.AlertConfigurationID, &out.AlertConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.QuantityThreshold != nil {
		in, out := &in.QuantityThreshold, &out.QuantityThreshold
		*out = new(string)
		**out = **in
	}
	if in.QuantityType != nil {
		in, out := &in.QuantityType, &out.QuantityType
		*out = new(string)
		**out = **in
	}
	if in.TimePeriod != nil {
		in, out := &in.TimePeriod, &out.TimePeriod
		*out = new(string)
		**out = **in
	}
	if in.TriggerType != nil {
		in, out := &in.TriggerType, &out.TriggerType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertConfigurationsParameters.
func (in *AlertConfigurationsParameters) DeepCopy() *AlertConfigurationsParameters {
	if in == nil {
		return nil
	}
	out := new(AlertConfigurationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertInitParameters) DeepCopyInto(out *AlertInitParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomBody != nil {
		in, out := &in.CustomBody, &out.CustomBody
		*out = new(string)
		**out = **in
	}
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.NotifyOnOk != nil {
		in, out := &in.NotifyOnOk, &out.NotifyOnOk
		*out = new(bool)
		**out = **in
	}
	if in.OwnerUserName != nil {
		in, out := &in.OwnerUserName, &out.OwnerUserName
		*out = new(string)
		**out = **in
	}
	if in.ParentPath != nil {
		in, out := &in.ParentPath, &out.ParentPath
		*out = new(string)
		**out = **in
	}
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
	if in.SecondsToRetrigger != nil {
		in, out := &in.SecondsToRetrigger, &out.SecondsToRetrigger
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertInitParameters.
func (in *AlertInitParameters) DeepCopy() *AlertInitParameters {
	if in == nil {
		return nil
	}
	out := new(AlertInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertList) DeepCopyInto(out *AlertList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Alert, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertList.
func (in *AlertList) DeepCopy() *AlertList {
	if in == nil {
		return nil
	}
	out := new(AlertList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlertList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertObservation) DeepCopyInto(out *AlertObservation) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.CustomBody != nil {
		in, out := &in.CustomBody, &out.CustomBody
		*out = new(string)
		**out = **in
	}
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LifecycleState != nil {
		in, out := &in.LifecycleState, &out.LifecycleState
		*out = new(string)
		**out = **in
	}
	if in.NotifyOnOk != nil {
		in, out := &in.NotifyOnOk, &out.NotifyOnOk
		*out = new(bool)
		**out = **in
	}
	if in.OwnerUserName != nil {
		in, out := &in.OwnerUserName, &out.OwnerUserName
		*out = new(string)
		**out = **in
	}
	if in.ParentPath != nil {
		in, out := &in.ParentPath, &out.ParentPath
		*out = new(string)
		**out = **in
	}
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
	if in.SecondsToRetrigger != nil {
		in, out := &in.SecondsToRetrigger, &out.SecondsToRetrigger
		*out = new(float64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TriggerTime != nil {
		in, out := &in.TriggerTime, &out.TriggerTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertObservation.
func (in *AlertObservation) DeepCopy() *AlertObservation {
	if in == nil {
		return nil
	}
	out := new(AlertObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertParameters) DeepCopyInto(out *AlertParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomBody != nil {
		in, out := &in.CustomBody, &out.CustomBody
		*out = new(string)
		**out = **in
	}
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.NotifyOnOk != nil {
		in, out := &in.NotifyOnOk, &out.NotifyOnOk
		*out = new(bool)
		**out = **in
	}
	if in.OwnerUserName != nil {
		in, out := &in.OwnerUserName, &out.OwnerUserName
		*out = new(string)
		**out = **in
	}
	if in.ParentPath != nil {
		in, out := &in.ParentPath, &out.ParentPath
		*out = new(string)
		**out = **in
	}
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
	if in.SecondsToRetrigger != nil {
		in, out := &in.SecondsToRetrigger, &out.SecondsToRetrigger
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertParameters.
func (in *AlertParameters) DeepCopy() *AlertParameters {
	if in == nil {
		return nil
	}
	out := new(AlertParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertSpec) DeepCopyInto(out *AlertSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertSpec.
func (in *AlertSpec) DeepCopy() *AlertSpec {
	if in == nil {
		return nil
	}
	out := new(AlertSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertStatus) DeepCopyInto(out *AlertStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertStatus.
func (in *AlertStatus) DeepCopy() *AlertStatus {
	if in == nil {
		return nil
	}
	out := new(AlertStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertSubscriptionsInitParameters) DeepCopyInto(out *AlertSubscriptionsInitParameters) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertSubscriptionsInitParameters.
func (in *AlertSubscriptionsInitParameters) DeepCopy() *AlertSubscriptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AlertSubscriptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertSubscriptionsObservation) DeepCopyInto(out *AlertSubscriptionsObservation) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertSubscriptionsObservation.
func (in *AlertSubscriptionsObservation) DeepCopy() *AlertSubscriptionsObservation {
	if in == nil {
		return nil
	}
	out := new(AlertSubscriptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertSubscriptionsParameters) DeepCopyInto(out *AlertSubscriptionsParameters) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertSubscriptionsParameters.
func (in *AlertSubscriptionsParameters) DeepCopy() *AlertSubscriptionsParameters {
	if in == nil {
		return nil
	}
	out := new(AlertSubscriptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleInitParameters) DeepCopyInto(out *AutoscaleInitParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleInitParameters.
func (in *AutoscaleInitParameters) DeepCopy() *AutoscaleInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscaleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleObservation) DeepCopyInto(out *AutoscaleObservation) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleObservation.
func (in *AutoscaleObservation) DeepCopy() *AutoscaleObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscaleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleParameters) DeepCopyInto(out *AutoscaleParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleParameters.
func (in *AutoscaleParameters) DeepCopy() *AutoscaleParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscaleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsAttributesInitParameters) DeepCopyInto(out *AwsAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsAttributesInitParameters.
func (in *AwsAttributesInitParameters) DeepCopy() *AwsAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AwsAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsAttributesObservation) DeepCopyInto(out *AwsAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsAttributesObservation.
func (in *AwsAttributesObservation) DeepCopy() *AwsAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(AwsAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsAttributesParameters) DeepCopyInto(out *AwsAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsAttributesParameters.
func (in *AwsAttributesParameters) DeepCopy() *AwsAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(AwsAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAttributesInitParameters) DeepCopyInto(out *AzureAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]LogAnalyticsInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAttributesInitParameters.
func (in *AzureAttributesInitParameters) DeepCopy() *AzureAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAttributesLogAnalyticsInfoInitParameters) DeepCopyInto(out *AzureAttributesLogAnalyticsInfoInitParameters) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAttributesLogAnalyticsInfoInitParameters.
func (in *AzureAttributesLogAnalyticsInfoInitParameters) DeepCopy() *AzureAttributesLogAnalyticsInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureAttributesLogAnalyticsInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAttributesLogAnalyticsInfoObservation) DeepCopyInto(out *AzureAttributesLogAnalyticsInfoObservation) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAttributesLogAnalyticsInfoObservation.
func (in *AzureAttributesLogAnalyticsInfoObservation) DeepCopy() *AzureAttributesLogAnalyticsInfoObservation {
	if in == nil {
		return nil
	}
	out := new(AzureAttributesLogAnalyticsInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAttributesLogAnalyticsInfoParameters) DeepCopyInto(out *AzureAttributesLogAnalyticsInfoParameters) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAttributesLogAnalyticsInfoParameters.
func (in *AzureAttributesLogAnalyticsInfoParameters) DeepCopy() *AzureAttributesLogAnalyticsInfoParameters {
	if in == nil {
		return nil
	}
	out := new(AzureAttributesLogAnalyticsInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAttributesObservation) DeepCopyInto(out *AzureAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]LogAnalyticsInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAttributesObservation.
func (in *AzureAttributesObservation) DeepCopy() *AzureAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(AzureAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAttributesParameters) DeepCopyInto(out *AzureAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]LogAnalyticsInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAttributesParameters.
func (in *AzureAttributesParameters) DeepCopy() *AzureAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(AzureAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuthInitParameters) DeepCopyInto(out *BasicAuthInitParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuthInitParameters.
func (in *BasicAuthInitParameters) DeepCopy() *BasicAuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(BasicAuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuthObservation) DeepCopyInto(out *BasicAuthObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuthObservation.
func (in *BasicAuthObservation) DeepCopy() *BasicAuthObservation {
	if in == nil {
		return nil
	}
	out := new(BasicAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuthParameters) DeepCopyInto(out *BasicAuthParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuthParameters.
func (in *BasicAuthParameters) DeepCopy() *BasicAuthParameters {
	if in == nil {
		return nil
	}
	out := new(BasicAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Budget) DeepCopyInto(out *Budget) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Budget.
func (in *Budget) DeepCopy() *Budget {
	if in == nil {
		return nil
	}
	out := new(Budget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Budget) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BudgetInitParameters) DeepCopyInto(out *BudgetInitParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.AlertConfigurations != nil {
		in, out := &in.AlertConfigurations, &out.AlertConfigurations
		*out = make([]AlertConfigurationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BudgetConfigurationID != nil {
		in, out := &in.BudgetConfigurationID, &out.BudgetConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(float64)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BudgetInitParameters.
func (in *BudgetInitParameters) DeepCopy() *BudgetInitParameters {
	if in == nil {
		return nil
	}
	out := new(BudgetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BudgetList) DeepCopyInto(out *BudgetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Budget, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BudgetList.
func (in *BudgetList) DeepCopy() *BudgetList {
	if in == nil {
		return nil
	}
	out := new(BudgetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BudgetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BudgetObservation) DeepCopyInto(out *BudgetObservation) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.AlertConfigurations != nil {
		in, out := &in.AlertConfigurations, &out.AlertConfigurations
		*out = make([]AlertConfigurationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BudgetConfigurationID != nil {
		in, out := &in.BudgetConfigurationID, &out.BudgetConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(float64)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BudgetObservation.
func (in *BudgetObservation) DeepCopy() *BudgetObservation {
	if in == nil {
		return nil
	}
	out := new(BudgetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BudgetParameters) DeepCopyInto(out *BudgetParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.AlertConfigurations != nil {
		in, out := &in.AlertConfigurations, &out.AlertConfigurations
		*out = make([]AlertConfigurationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BudgetConfigurationID != nil {
		in, out := &in.BudgetConfigurationID, &out.BudgetConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(float64)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BudgetParameters.
func (in *BudgetParameters) DeepCopy() *BudgetParameters {
	if in == nil {
		return nil
	}
	out := new(BudgetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BudgetSpec) DeepCopyInto(out *BudgetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BudgetSpec.
func (in *BudgetSpec) DeepCopy() *BudgetSpec {
	if in == nil {
		return nil
	}
	out := new(BudgetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BudgetStatus) DeepCopyInto(out *BudgetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BudgetStatus.
func (in *BudgetStatus) DeepCopy() *BudgetStatus {
	if in == nil {
		return nil
	}
	out := new(BudgetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Catalog) DeepCopyInto(out *Catalog) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Catalog.
func (in *Catalog) DeepCopy() *Catalog {
	if in == nil {
		return nil
	}
	out := new(Catalog)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Catalog) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogInitParameters) DeepCopyInto(out *CatalogInitParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.EnablePredictiveOptimization != nil {
		in, out := &in.EnablePredictiveOptimization, &out.EnablePredictiveOptimization
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogInitParameters.
func (in *CatalogInitParameters) DeepCopy() *CatalogInitParameters {
	if in == nil {
		return nil
	}
	out := new(CatalogInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogList) DeepCopyInto(out *CatalogList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Catalog, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogList.
func (in *CatalogList) DeepCopy() *CatalogList {
	if in == nil {
		return nil
	}
	out := new(CatalogList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CatalogList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogObservation) DeepCopyInto(out *CatalogObservation) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.EnablePredictiveOptimization != nil {
		in, out := &in.EnablePredictiveOptimization, &out.EnablePredictiveOptimization
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogObservation.
func (in *CatalogObservation) DeepCopy() *CatalogObservation {
	if in == nil {
		return nil
	}
	out := new(CatalogObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogParameters) DeepCopyInto(out *CatalogParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.EnablePredictiveOptimization != nil {
		in, out := &in.EnablePredictiveOptimization, &out.EnablePredictiveOptimization
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogParameters.
func (in *CatalogParameters) DeepCopy() *CatalogParameters {
	if in == nil {
		return nil
	}
	out := new(CatalogParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogSpec) DeepCopyInto(out *CatalogSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogSpec.
func (in *CatalogSpec) DeepCopy() *CatalogSpec {
	if in == nil {
		return nil
	}
	out := new(CatalogSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogStatus) DeepCopyInto(out *CatalogStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogStatus.
func (in *CatalogStatus) DeepCopy() *CatalogStatus {
	if in == nil {
		return nil
	}
	out := new(CatalogStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChannelInitParameters) DeepCopyInto(out *ChannelInitParameters) {
	*out = *in
	if in.DbsqlVersion != nil {
		in, out := &in.DbsqlVersion, &out.DbsqlVersion
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChannelInitParameters.
func (in *ChannelInitParameters) DeepCopy() *ChannelInitParameters {
	if in == nil {
		return nil
	}
	out := new(ChannelInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChannelObservation) DeepCopyInto(out *ChannelObservation) {
	*out = *in
	if in.DbsqlVersion != nil {
		in, out := &in.DbsqlVersion, &out.DbsqlVersion
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChannelObservation.
func (in *ChannelObservation) DeepCopy() *ChannelObservation {
	if in == nil {
		return nil
	}
	out := new(ChannelObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChannelParameters) DeepCopyInto(out *ChannelParameters) {
	*out = *in
	if in.DbsqlVersion != nil {
		in, out := &in.DbsqlVersion, &out.DbsqlVersion
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChannelParameters.
func (in *ChannelParameters) DeepCopy() *ChannelParameters {
	if in == nil {
		return nil
	}
	out := new(ChannelParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientsInitParameters) DeepCopyInto(out *ClientsInitParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientsInitParameters.
func (in *ClientsInitParameters) DeepCopy() *ClientsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientsObservation) DeepCopyInto(out *ClientsObservation) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientsObservation.
func (in *ClientsObservation) DeepCopy() *ClientsObservation {
	if in == nil {
		return nil
	}
	out := new(ClientsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientsParameters) DeepCopyInto(out *ClientsParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientsParameters.
func (in *ClientsParameters) DeepCopy() *ClientsParameters {
	if in == nil {
		return nil
	}
	out := new(ClientsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster) DeepCopyInto(out *Cluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster.
func (in *Cluster) DeepCopy() *Cluster {
	if in == nil {
		return nil
	}
	out := new(Cluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAutoscaleInitParameters) DeepCopyInto(out *ClusterAutoscaleInitParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAutoscaleInitParameters.
func (in *ClusterAutoscaleInitParameters) DeepCopy() *ClusterAutoscaleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterAutoscaleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAutoscaleObservation) DeepCopyInto(out *ClusterAutoscaleObservation) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAutoscaleObservation.
func (in *ClusterAutoscaleObservation) DeepCopy() *ClusterAutoscaleObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterAutoscaleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAutoscaleParameters) DeepCopyInto(out *ClusterAutoscaleParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAutoscaleParameters.
func (in *ClusterAutoscaleParameters) DeepCopy() *ClusterAutoscaleParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterAutoscaleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAwsAttributesInitParameters) DeepCopyInto(out *ClusterAwsAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAwsAttributesInitParameters.
func (in *ClusterAwsAttributesInitParameters) DeepCopy() *ClusterAwsAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterAwsAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAwsAttributesObservation) DeepCopyInto(out *ClusterAwsAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAwsAttributesObservation.
func (in *ClusterAwsAttributesObservation) DeepCopy() *ClusterAwsAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterAwsAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAwsAttributesParameters) DeepCopyInto(out *ClusterAwsAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAwsAttributesParameters.
func (in *ClusterAwsAttributesParameters) DeepCopy() *ClusterAwsAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterAwsAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAzureAttributesInitParameters) DeepCopyInto(out *ClusterAzureAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]ClusterAzureAttributesLogAnalyticsInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAzureAttributesInitParameters.
func (in *ClusterAzureAttributesInitParameters) DeepCopy() *ClusterAzureAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterAzureAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAzureAttributesLogAnalyticsInfoInitParameters) DeepCopyInto(out *ClusterAzureAttributesLogAnalyticsInfoInitParameters) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAzureAttributesLogAnalyticsInfoInitParameters.
func (in *ClusterAzureAttributesLogAnalyticsInfoInitParameters) DeepCopy() *ClusterAzureAttributesLogAnalyticsInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterAzureAttributesLogAnalyticsInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAzureAttributesLogAnalyticsInfoObservation) DeepCopyInto(out *ClusterAzureAttributesLogAnalyticsInfoObservation) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAzureAttributesLogAnalyticsInfoObservation.
func (in *ClusterAzureAttributesLogAnalyticsInfoObservation) DeepCopy() *ClusterAzureAttributesLogAnalyticsInfoObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterAzureAttributesLogAnalyticsInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAzureAttributesLogAnalyticsInfoParameters) DeepCopyInto(out *ClusterAzureAttributesLogAnalyticsInfoParameters) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAzureAttributesLogAnalyticsInfoParameters.
func (in *ClusterAzureAttributesLogAnalyticsInfoParameters) DeepCopy() *ClusterAzureAttributesLogAnalyticsInfoParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterAzureAttributesLogAnalyticsInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAzureAttributesObservation) DeepCopyInto(out *ClusterAzureAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]ClusterAzureAttributesLogAnalyticsInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAzureAttributesObservation.
func (in *ClusterAzureAttributesObservation) DeepCopy() *ClusterAzureAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterAzureAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAzureAttributesParameters) DeepCopyInto(out *ClusterAzureAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]ClusterAzureAttributesLogAnalyticsInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAzureAttributesParameters.
func (in *ClusterAzureAttributesParameters) DeepCopy() *ClusterAzureAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterAzureAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterClusterLogConfDbfsInitParameters) DeepCopyInto(out *ClusterClusterLogConfDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterClusterLogConfDbfsInitParameters.
func (in *ClusterClusterLogConfDbfsInitParameters) DeepCopy() *ClusterClusterLogConfDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterClusterLogConfDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterClusterLogConfDbfsObservation) DeepCopyInto(out *ClusterClusterLogConfDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterClusterLogConfDbfsObservation.
func (in *ClusterClusterLogConfDbfsObservation) DeepCopy() *ClusterClusterLogConfDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterClusterLogConfDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterClusterLogConfDbfsParameters) DeepCopyInto(out *ClusterClusterLogConfDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterClusterLogConfDbfsParameters.
func (in *ClusterClusterLogConfDbfsParameters) DeepCopy() *ClusterClusterLogConfDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterClusterLogConfDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterClusterLogConfInitParameters) DeepCopyInto(out *ClusterClusterLogConfInitParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]ClusterClusterLogConfDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]ClusterClusterLogConfS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterClusterLogConfInitParameters.
func (in *ClusterClusterLogConfInitParameters) DeepCopy() *ClusterClusterLogConfInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterClusterLogConfInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterClusterLogConfObservation) DeepCopyInto(out *ClusterClusterLogConfObservation) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]ClusterClusterLogConfDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]ClusterClusterLogConfS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterClusterLogConfObservation.
func (in *ClusterClusterLogConfObservation) DeepCopy() *ClusterClusterLogConfObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterClusterLogConfObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterClusterLogConfParameters) DeepCopyInto(out *ClusterClusterLogConfParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]ClusterClusterLogConfDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]ClusterClusterLogConfS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterClusterLogConfParameters.
func (in *ClusterClusterLogConfParameters) DeepCopy() *ClusterClusterLogConfParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterClusterLogConfParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterClusterLogConfS3InitParameters) DeepCopyInto(out *ClusterClusterLogConfS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterClusterLogConfS3InitParameters.
func (in *ClusterClusterLogConfS3InitParameters) DeepCopy() *ClusterClusterLogConfS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterClusterLogConfS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterClusterLogConfS3Observation) DeepCopyInto(out *ClusterClusterLogConfS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterClusterLogConfS3Observation.
func (in *ClusterClusterLogConfS3Observation) DeepCopy() *ClusterClusterLogConfS3Observation {
	if in == nil {
		return nil
	}
	out := new(ClusterClusterLogConfS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterClusterLogConfS3Parameters) DeepCopyInto(out *ClusterClusterLogConfS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterClusterLogConfS3Parameters.
func (in *ClusterClusterLogConfS3Parameters) DeepCopy() *ClusterClusterLogConfS3Parameters {
	if in == nil {
		return nil
	}
	out := new(ClusterClusterLogConfS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGCPAttributesInitParameters) DeepCopyInto(out *ClusterGCPAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGCPAttributesInitParameters.
func (in *ClusterGCPAttributesInitParameters) DeepCopy() *ClusterGCPAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterGCPAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGCPAttributesObservation) DeepCopyInto(out *ClusterGCPAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGCPAttributesObservation.
func (in *ClusterGCPAttributesObservation) DeepCopy() *ClusterGCPAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterGCPAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGCPAttributesParameters) DeepCopyInto(out *ClusterGCPAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGCPAttributesParameters.
func (in *ClusterGCPAttributesParameters) DeepCopy() *ClusterGCPAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterGCPAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitParameters) DeepCopyInto(out *ClusterInitParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]AutoscaleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoterminationMinutes != nil {
		in, out := &in.AutoterminationMinutes, &out.AutoterminationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]AwsAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]AzureAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]ClusterLogConfInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]ClusterMountInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]DockerImageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]GCPAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]InitScriptsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.IsPinned != nil {
		in, out := &in.IsPinned, &out.IsPinned
		*out = new(bool)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]LibraryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NoWait != nil {
		in, out := &in.NoWait, &out.NoWait
		*out = new(bool)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]WorkloadTypeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitParameters.
func (in *ClusterInitParameters) DeepCopy() *ClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsAbfssInitParameters) DeepCopyInto(out *ClusterInitScriptsAbfssInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsAbfssInitParameters.
func (in *ClusterInitScriptsAbfssInitParameters) DeepCopy() *ClusterInitScriptsAbfssInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsAbfssInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsAbfssObservation) DeepCopyInto(out *ClusterInitScriptsAbfssObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsAbfssObservation.
func (in *ClusterInitScriptsAbfssObservation) DeepCopy() *ClusterInitScriptsAbfssObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsAbfssObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsAbfssParameters) DeepCopyInto(out *ClusterInitScriptsAbfssParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsAbfssParameters.
func (in *ClusterInitScriptsAbfssParameters) DeepCopy() *ClusterInitScriptsAbfssParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsAbfssParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsDbfsInitParameters) DeepCopyInto(out *ClusterInitScriptsDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsDbfsInitParameters.
func (in *ClusterInitScriptsDbfsInitParameters) DeepCopy() *ClusterInitScriptsDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsDbfsObservation) DeepCopyInto(out *ClusterInitScriptsDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsDbfsObservation.
func (in *ClusterInitScriptsDbfsObservation) DeepCopy() *ClusterInitScriptsDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsDbfsParameters) DeepCopyInto(out *ClusterInitScriptsDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsDbfsParameters.
func (in *ClusterInitScriptsDbfsParameters) DeepCopy() *ClusterInitScriptsDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsFileInitParameters) DeepCopyInto(out *ClusterInitScriptsFileInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsFileInitParameters.
func (in *ClusterInitScriptsFileInitParameters) DeepCopy() *ClusterInitScriptsFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsFileObservation) DeepCopyInto(out *ClusterInitScriptsFileObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsFileObservation.
func (in *ClusterInitScriptsFileObservation) DeepCopy() *ClusterInitScriptsFileObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsFileParameters) DeepCopyInto(out *ClusterInitScriptsFileParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsFileParameters.
func (in *ClusterInitScriptsFileParameters) DeepCopy() *ClusterInitScriptsFileParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsGcsInitParameters) DeepCopyInto(out *ClusterInitScriptsGcsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsGcsInitParameters.
func (in *ClusterInitScriptsGcsInitParameters) DeepCopy() *ClusterInitScriptsGcsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsGcsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsGcsObservation) DeepCopyInto(out *ClusterInitScriptsGcsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsGcsObservation.
func (in *ClusterInitScriptsGcsObservation) DeepCopy() *ClusterInitScriptsGcsObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsGcsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsGcsParameters) DeepCopyInto(out *ClusterInitScriptsGcsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsGcsParameters.
func (in *ClusterInitScriptsGcsParameters) DeepCopy() *ClusterInitScriptsGcsParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsGcsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsInitParameters) DeepCopyInto(out *ClusterInitScriptsInitParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]ClusterInitScriptsAbfssInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]ClusterInitScriptsDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]ClusterInitScriptsFileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]ClusterInitScriptsGcsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]ClusterInitScriptsS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]ClusterInitScriptsVolumesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]ClusterInitScriptsWorkspaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsInitParameters.
func (in *ClusterInitScriptsInitParameters) DeepCopy() *ClusterInitScriptsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsObservation) DeepCopyInto(out *ClusterInitScriptsObservation) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]ClusterInitScriptsAbfssObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]ClusterInitScriptsDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]ClusterInitScriptsFileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]ClusterInitScriptsGcsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]ClusterInitScriptsS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]ClusterInitScriptsVolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]ClusterInitScriptsWorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsObservation.
func (in *ClusterInitScriptsObservation) DeepCopy() *ClusterInitScriptsObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsParameters) DeepCopyInto(out *ClusterInitScriptsParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]ClusterInitScriptsAbfssParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]ClusterInitScriptsDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]ClusterInitScriptsFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]ClusterInitScriptsGcsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]ClusterInitScriptsS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]ClusterInitScriptsVolumesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]ClusterInitScriptsWorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsParameters.
func (in *ClusterInitScriptsParameters) DeepCopy() *ClusterInitScriptsParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsS3InitParameters) DeepCopyInto(out *ClusterInitScriptsS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsS3InitParameters.
func (in *ClusterInitScriptsS3InitParameters) DeepCopy() *ClusterInitScriptsS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsS3Observation) DeepCopyInto(out *ClusterInitScriptsS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsS3Observation.
func (in *ClusterInitScriptsS3Observation) DeepCopy() *ClusterInitScriptsS3Observation {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsS3Parameters) DeepCopyInto(out *ClusterInitScriptsS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsS3Parameters.
func (in *ClusterInitScriptsS3Parameters) DeepCopy() *ClusterInitScriptsS3Parameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsVolumesInitParameters) DeepCopyInto(out *ClusterInitScriptsVolumesInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsVolumesInitParameters.
func (in *ClusterInitScriptsVolumesInitParameters) DeepCopy() *ClusterInitScriptsVolumesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsVolumesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsVolumesObservation) DeepCopyInto(out *ClusterInitScriptsVolumesObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsVolumesObservation.
func (in *ClusterInitScriptsVolumesObservation) DeepCopy() *ClusterInitScriptsVolumesObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsVolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsVolumesParameters) DeepCopyInto(out *ClusterInitScriptsVolumesParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsVolumesParameters.
func (in *ClusterInitScriptsVolumesParameters) DeepCopy() *ClusterInitScriptsVolumesParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsVolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsWorkspaceInitParameters) DeepCopyInto(out *ClusterInitScriptsWorkspaceInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsWorkspaceInitParameters.
func (in *ClusterInitScriptsWorkspaceInitParameters) DeepCopy() *ClusterInitScriptsWorkspaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsWorkspaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsWorkspaceObservation) DeepCopyInto(out *ClusterInitScriptsWorkspaceObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsWorkspaceObservation.
func (in *ClusterInitScriptsWorkspaceObservation) DeepCopy() *ClusterInitScriptsWorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsWorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsWorkspaceParameters) DeepCopyInto(out *ClusterInitScriptsWorkspaceParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsWorkspaceParameters.
func (in *ClusterInitScriptsWorkspaceParameters) DeepCopy() *ClusterInitScriptsWorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsWorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterList) DeepCopyInto(out *ClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterList.
func (in *ClusterList) DeepCopy() *ClusterList {
	if in == nil {
		return nil
	}
	out := new(ClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfDbfsInitParameters) DeepCopyInto(out *ClusterLogConfDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfDbfsInitParameters.
func (in *ClusterLogConfDbfsInitParameters) DeepCopy() *ClusterLogConfDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfDbfsObservation) DeepCopyInto(out *ClusterLogConfDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfDbfsObservation.
func (in *ClusterLogConfDbfsObservation) DeepCopy() *ClusterLogConfDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfDbfsParameters) DeepCopyInto(out *ClusterLogConfDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfDbfsParameters.
func (in *ClusterLogConfDbfsParameters) DeepCopy() *ClusterLogConfDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfInitParameters) DeepCopyInto(out *ClusterLogConfInitParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]DbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfInitParameters.
func (in *ClusterLogConfInitParameters) DeepCopy() *ClusterLogConfInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfObservation) DeepCopyInto(out *ClusterLogConfObservation) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]DbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfObservation.
func (in *ClusterLogConfObservation) DeepCopy() *ClusterLogConfObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfParameters) DeepCopyInto(out *ClusterLogConfParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]DbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfParameters.
func (in *ClusterLogConfParameters) DeepCopy() *ClusterLogConfParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfS3InitParameters) DeepCopyInto(out *ClusterLogConfS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfS3InitParameters.
func (in *ClusterLogConfS3InitParameters) DeepCopy() *ClusterLogConfS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfS3Observation) DeepCopyInto(out *ClusterLogConfS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfS3Observation.
func (in *ClusterLogConfS3Observation) DeepCopy() *ClusterLogConfS3Observation {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfS3Parameters) DeepCopyInto(out *ClusterLogConfS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfS3Parameters.
func (in *ClusterLogConfS3Parameters) DeepCopy() *ClusterLogConfS3Parameters {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterMountInfoInitParameters) DeepCopyInto(out *ClusterMountInfoInitParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]NetworkFilesystemInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterMountInfoInitParameters.
func (in *ClusterMountInfoInitParameters) DeepCopy() *ClusterMountInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterMountInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterMountInfoNetworkFilesystemInfoInitParameters) DeepCopyInto(out *ClusterMountInfoNetworkFilesystemInfoInitParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterMountInfoNetworkFilesystemInfoInitParameters.
func (in *ClusterMountInfoNetworkFilesystemInfoInitParameters) DeepCopy() *ClusterMountInfoNetworkFilesystemInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterMountInfoNetworkFilesystemInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterMountInfoNetworkFilesystemInfoObservation) DeepCopyInto(out *ClusterMountInfoNetworkFilesystemInfoObservation) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterMountInfoNetworkFilesystemInfoObservation.
func (in *ClusterMountInfoNetworkFilesystemInfoObservation) DeepCopy() *ClusterMountInfoNetworkFilesystemInfoObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterMountInfoNetworkFilesystemInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterMountInfoNetworkFilesystemInfoParameters) DeepCopyInto(out *ClusterMountInfoNetworkFilesystemInfoParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterMountInfoNetworkFilesystemInfoParameters.
func (in *ClusterMountInfoNetworkFilesystemInfoParameters) DeepCopy() *ClusterMountInfoNetworkFilesystemInfoParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterMountInfoNetworkFilesystemInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterMountInfoObservation) DeepCopyInto(out *ClusterMountInfoObservation) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]NetworkFilesystemInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterMountInfoObservation.
func (in *ClusterMountInfoObservation) DeepCopy() *ClusterMountInfoObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterMountInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterMountInfoParameters) DeepCopyInto(out *ClusterMountInfoParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]NetworkFilesystemInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterMountInfoParameters.
func (in *ClusterMountInfoParameters) DeepCopy() *ClusterMountInfoParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterMountInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterObservation) DeepCopyInto(out *ClusterObservation) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]AutoscaleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoterminationMinutes != nil {
		in, out := &in.AutoterminationMinutes, &out.AutoterminationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]AwsAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]AzureAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]ClusterLogConfObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]ClusterMountInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DefaultTags != nil {
		in, out := &in.DefaultTags, &out.DefaultTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]DockerImageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]GCPAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]InitScriptsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.IsPinned != nil {
		in, out := &in.IsPinned, &out.IsPinned
		*out = new(bool)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]LibraryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NoWait != nil {
		in, out := &in.NoWait, &out.NoWait
		*out = new(bool)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]WorkloadTypeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterObservation.
func (in *ClusterObservation) DeepCopy() *ClusterObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterParameters) DeepCopyInto(out *ClusterParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]AutoscaleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoterminationMinutes != nil {
		in, out := &in.AutoterminationMinutes, &out.AutoterminationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]AwsAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]AzureAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]ClusterLogConfParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]ClusterMountInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]DockerImageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]GCPAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]InitScriptsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.IsPinned != nil {
		in, out := &in.IsPinned, &out.IsPinned
		*out = new(bool)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]LibraryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NoWait != nil {
		in, out := &in.NoWait, &out.NoWait
		*out = new(bool)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]WorkloadTypeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterParameters.
func (in *ClusterParameters) DeepCopy() *ClusterParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterPolicy) DeepCopyInto(out *ClusterPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterPolicy.
func (in *ClusterPolicy) DeepCopy() *ClusterPolicy {
	if in == nil {
		return nil
	}
	out := new(ClusterPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterPolicyInitParameters) DeepCopyInto(out *ClusterPolicyInitParameters) {
	*out = *in
	if in.Definition != nil {
		in, out := &in.Definition, &out.Definition
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Libraries != nil {
		in, out := &in.Libraries, &out.Libraries
		*out = make([]LibrariesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxClustersPerUser != nil {
		in, out := &in.MaxClustersPerUser, &out.MaxClustersPerUser
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PolicyFamilyDefinitionOverrides != nil {
		in, out := &in.PolicyFamilyDefinitionOverrides, &out.PolicyFamilyDefinitionOverrides
		*out = new(string)
		**out = **in
	}
	if in.PolicyFamilyID != nil {
		in, out := &in.PolicyFamilyID, &out.PolicyFamilyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterPolicyInitParameters.
func (in *ClusterPolicyInitParameters) DeepCopy() *ClusterPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterPolicyList) DeepCopyInto(out *ClusterPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterPolicyList.
func (in *ClusterPolicyList) DeepCopy() *ClusterPolicyList {
	if in == nil {
		return nil
	}
	out := new(ClusterPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterPolicyObservation) DeepCopyInto(out *ClusterPolicyObservation) {
	*out = *in
	if in.Definition != nil {
		in, out := &in.Definition, &out.Definition
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Libraries != nil {
		in, out := &in.Libraries, &out.Libraries
		*out = make([]LibrariesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxClustersPerUser != nil {
		in, out := &in.MaxClustersPerUser, &out.MaxClustersPerUser
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PolicyFamilyDefinitionOverrides != nil {
		in, out := &in.PolicyFamilyDefinitionOverrides, &out.PolicyFamilyDefinitionOverrides
		*out = new(string)
		**out = **in
	}
	if in.PolicyFamilyID != nil {
		in, out := &in.PolicyFamilyID, &out.PolicyFamilyID
		*out = new(string)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterPolicyObservation.
func (in *ClusterPolicyObservation) DeepCopy() *ClusterPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterPolicyParameters) DeepCopyInto(out *ClusterPolicyParameters) {
	*out = *in
	if in.Definition != nil {
		in, out := &in.Definition, &out.Definition
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Libraries != nil {
		in, out := &in.Libraries, &out.Libraries
		*out = make([]LibrariesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxClustersPerUser != nil {
		in, out := &in.MaxClustersPerUser, &out.MaxClustersPerUser
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PolicyFamilyDefinitionOverrides != nil {
		in, out := &in.PolicyFamilyDefinitionOverrides, &out.PolicyFamilyDefinitionOverrides
		*out = new(string)
		**out = **in
	}
	if in.PolicyFamilyID != nil {
		in, out := &in.PolicyFamilyID, &out.PolicyFamilyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterPolicyParameters.
func (in *ClusterPolicyParameters) DeepCopy() *ClusterPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterPolicySpec) DeepCopyInto(out *ClusterPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterPolicySpec.
func (in *ClusterPolicySpec) DeepCopy() *ClusterPolicySpec {
	if in == nil {
		return nil
	}
	out := new(ClusterPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterPolicyStatus) DeepCopyInto(out *ClusterPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterPolicyStatus.
func (in *ClusterPolicyStatus) DeepCopy() *ClusterPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpec) DeepCopyInto(out *ClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpec.
func (in *ClusterSpec) DeepCopy() *ClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterStatus) DeepCopyInto(out *ClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterStatus.
func (in *ClusterStatus) DeepCopy() *ClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnInitParameters) DeepCopyInto(out *ColumnInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnInitParameters.
func (in *ColumnInitParameters) DeepCopy() *ColumnInitParameters {
	if in == nil {
		return nil
	}
	out := new(ColumnInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnObservation) DeepCopyInto(out *ColumnObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnObservation.
func (in *ColumnObservation) DeepCopy() *ColumnObservation {
	if in == nil {
		return nil
	}
	out := new(ColumnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnParameters) DeepCopyInto(out *ColumnParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnParameters.
func (in *ColumnParameters) DeepCopy() *ColumnParameters {
	if in == nil {
		return nil
	}
	out := new(ColumnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionInitParameters) DeepCopyInto(out *ConditionInitParameters) {
	*out = *in
	if in.EmptyResultState != nil {
		in, out := &in.EmptyResultState, &out.EmptyResultState
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Operand != nil {
		in, out := &in.Operand, &out.Operand
		*out = make([]OperandInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = make([]ThresholdInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionInitParameters.
func (in *ConditionInitParameters) DeepCopy() *ConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionObservation) DeepCopyInto(out *ConditionObservation) {
	*out = *in
	if in.EmptyResultState != nil {
		in, out := &in.EmptyResultState, &out.EmptyResultState
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Operand != nil {
		in, out := &in.Operand, &out.Operand
		*out = make([]OperandObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = make([]ThresholdObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionObservation.
func (in *ConditionObservation) DeepCopy() *ConditionObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionParameters) DeepCopyInto(out *ConditionParameters) {
	*out = *in
	if in.EmptyResultState != nil {
		in, out := &in.EmptyResultState, &out.EmptyResultState
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Operand != nil {
		in, out := &in.Operand, &out.Operand
		*out = make([]OperandParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = make([]ThresholdParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionParameters.
func (in *ConditionParameters) DeepCopy() *ConditionParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionTaskInitParameters) DeepCopyInto(out *ConditionTaskInitParameters) {
	*out = *in
	if in.Left != nil {
		in, out := &in.Left, &out.Left
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Right != nil {
		in, out := &in.Right, &out.Right
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionTaskInitParameters.
func (in *ConditionTaskInitParameters) DeepCopy() *ConditionTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionTaskObservation) DeepCopyInto(out *ConditionTaskObservation) {
	*out = *in
	if in.Left != nil {
		in, out := &in.Left, &out.Left
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Right != nil {
		in, out := &in.Right, &out.Right
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionTaskObservation.
func (in *ConditionTaskObservation) DeepCopy() *ConditionTaskObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionTaskParameters) DeepCopyInto(out *ConditionTaskParameters) {
	*out = *in
	if in.Left != nil {
		in, out := &in.Left, &out.Left
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Right != nil {
		in, out := &in.Right, &out.Right
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionTaskParameters.
func (in *ConditionTaskParameters) DeepCopy() *ConditionTaskParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Connection) DeepCopyInto(out *Connection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Connection.
func (in *Connection) DeepCopy() *Connection {
	if in == nil {
		return nil
	}
	out := new(Connection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Connection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionInitParameters) DeepCopyInto(out *ConnectionInitParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.ConnectionType != nil {
		in, out := &in.ConnectionType, &out.ConnectionType
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionInitParameters.
func (in *ConnectionInitParameters) DeepCopy() *ConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionList) DeepCopyInto(out *ConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Connection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionList.
func (in *ConnectionList) DeepCopy() *ConnectionList {
	if in == nil {
		return nil
	}
	out := new(ConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionObservation) DeepCopyInto(out *ConnectionObservation) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.ConnectionType != nil {
		in, out := &in.ConnectionType, &out.ConnectionType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionObservation.
func (in *ConnectionObservation) DeepCopy() *ConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionParameters) DeepCopyInto(out *ConnectionParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.ConnectionType != nil {
		in, out := &in.ConnectionType, &out.ConnectionType
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	out.OptionsSecretRef = in.OptionsSecretRef
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionParameters.
func (in *ConnectionParameters) DeepCopy() *ConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionSpec) DeepCopyInto(out *ConnectionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionSpec.
func (in *ConnectionSpec) DeepCopy() *ConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(ConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionStatus) DeepCopyInto(out *ConnectionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionStatus.
func (in *ConnectionStatus) DeepCopy() *ConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(ConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContinuousInitParameters) DeepCopyInto(out *ContinuousInitParameters) {
	*out = *in
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContinuousInitParameters.
func (in *ContinuousInitParameters) DeepCopy() *ContinuousInitParameters {
	if in == nil {
		return nil
	}
	out := new(ContinuousInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContinuousObservation) DeepCopyInto(out *ContinuousObservation) {
	*out = *in
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContinuousObservation.
func (in *ContinuousObservation) DeepCopy() *ContinuousObservation {
	if in == nil {
		return nil
	}
	out := new(ContinuousObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContinuousParameters) DeepCopyInto(out *ContinuousParameters) {
	*out = *in
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContinuousParameters.
func (in *ContinuousParameters) DeepCopy() *ContinuousParameters {
	if in == nil {
		return nil
	}
	out := new(ContinuousParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CranInitParameters) DeepCopyInto(out *CranInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CranInitParameters.
func (in *CranInitParameters) DeepCopy() *CranInitParameters {
	if in == nil {
		return nil
	}
	out := new(CranInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CranObservation) DeepCopyInto(out *CranObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CranObservation.
func (in *CranObservation) DeepCopy() *CranObservation {
	if in == nil {
		return nil
	}
	out := new(CranObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CranParameters) DeepCopyInto(out *CranParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CranParameters.
func (in *CranParameters) DeepCopy() *CranParameters {
	if in == nil {
		return nil
	}
	out := new(CranParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CronInitParameters) DeepCopyInto(out *CronInitParameters) {
	*out = *in
	if in.QuartzCronSchedule != nil {
		in, out := &in.QuartzCronSchedule, &out.QuartzCronSchedule
		*out = new(string)
		**out = **in
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CronInitParameters.
func (in *CronInitParameters) DeepCopy() *CronInitParameters {
	if in == nil {
		return nil
	}
	out := new(CronInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CronObservation) DeepCopyInto(out *CronObservation) {
	*out = *in
	if in.QuartzCronSchedule != nil {
		in, out := &in.QuartzCronSchedule, &out.QuartzCronSchedule
		*out = new(string)
		**out = **in
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CronObservation.
func (in *CronObservation) DeepCopy() *CronObservation {
	if in == nil {
		return nil
	}
	out := new(CronObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CronParameters) DeepCopyInto(out *CronParameters) {
	*out = *in
	if in.QuartzCronSchedule != nil {
		in, out := &in.QuartzCronSchedule, &out.QuartzCronSchedule
		*out = new(string)
		**out = **in
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CronParameters.
func (in *CronParameters) DeepCopy() *CronParameters {
	if in == nil {
		return nil
	}
	out := new(CronParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomTagsInitParameters) DeepCopyInto(out *CustomTagsInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomTagsInitParameters.
func (in *CustomTagsInitParameters) DeepCopy() *CustomTagsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomTagsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomTagsObservation) DeepCopyInto(out *CustomTagsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomTagsObservation.
func (in *CustomTagsObservation) DeepCopy() *CustomTagsObservation {
	if in == nil {
		return nil
	}
	out := new(CustomTagsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomTagsParameters) DeepCopyInto(out *CustomTagsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomTagsParameters.
func (in *CustomTagsParameters) DeepCopy() *CustomTagsParameters {
	if in == nil {
		return nil
	}
	out := new(CustomTagsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DailyInitParameters) DeepCopyInto(out *DailyInitParameters) {
	*out = *in
	if in.IntervalDays != nil {
		in, out := &in.IntervalDays, &out.IntervalDays
		*out = new(float64)
		**out = **in
	}
	if in.TimeOfDay != nil {
		in, out := &in.TimeOfDay, &out.TimeOfDay
		*out = new(string)
		**out = **in
	}
	if in.UntilDate != nil {
		in, out := &in.UntilDate, &out.UntilDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DailyInitParameters.
func (in *DailyInitParameters) DeepCopy() *DailyInitParameters {
	if in == nil {
		return nil
	}
	out := new(DailyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DailyObservation) DeepCopyInto(out *DailyObservation) {
	*out = *in
	if in.IntervalDays != nil {
		in, out := &in.IntervalDays, &out.IntervalDays
		*out = new(float64)
		**out = **in
	}
	if in.TimeOfDay != nil {
		in, out := &in.TimeOfDay, &out.TimeOfDay
		*out = new(string)
		**out = **in
	}
	if in.UntilDate != nil {
		in, out := &in.UntilDate, &out.UntilDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DailyObservation.
func (in *DailyObservation) DeepCopy() *DailyObservation {
	if in == nil {
		return nil
	}
	out := new(DailyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DailyParameters) DeepCopyInto(out *DailyParameters) {
	*out = *in
	if in.IntervalDays != nil {
		in, out := &in.IntervalDays, &out.IntervalDays
		*out = new(float64)
		**out = **in
	}
	if in.TimeOfDay != nil {
		in, out := &in.TimeOfDay, &out.TimeOfDay
		*out = new(string)
		**out = **in
	}
	if in.UntilDate != nil {
		in, out := &in.UntilDate, &out.UntilDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DailyParameters.
func (in *DailyParameters) DeepCopy() *DailyParameters {
	if in == nil {
		return nil
	}
	out := new(DailyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardInitParameters) DeepCopyInto(out *DashboardInitParameters) {
	*out = *in
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]DashboardSubscriptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardInitParameters.
func (in *DashboardInitParameters) DeepCopy() *DashboardInitParameters {
	if in == nil {
		return nil
	}
	out := new(DashboardInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardObservation) DeepCopyInto(out *DashboardObservation) {
	*out = *in
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]DashboardSubscriptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardObservation.
func (in *DashboardObservation) DeepCopy() *DashboardObservation {
	if in == nil {
		return nil
	}
	out := new(DashboardObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardParameters) DeepCopyInto(out *DashboardParameters) {
	*out = *in
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]DashboardSubscriptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardParameters.
func (in *DashboardParameters) DeepCopy() *DashboardParameters {
	if in == nil {
		return nil
	}
	out := new(DashboardParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardSubscriptionsInitParameters) DeepCopyInto(out *DashboardSubscriptionsInitParameters) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardSubscriptionsInitParameters.
func (in *DashboardSubscriptionsInitParameters) DeepCopy() *DashboardSubscriptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DashboardSubscriptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardSubscriptionsObservation) DeepCopyInto(out *DashboardSubscriptionsObservation) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardSubscriptionsObservation.
func (in *DashboardSubscriptionsObservation) DeepCopy() *DashboardSubscriptionsObservation {
	if in == nil {
		return nil
	}
	out := new(DashboardSubscriptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardSubscriptionsParameters) DeepCopyInto(out *DashboardSubscriptionsParameters) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardSubscriptionsParameters.
func (in *DashboardSubscriptionsParameters) DeepCopy() *DashboardSubscriptionsParameters {
	if in == nil {
		return nil
	}
	out := new(DashboardSubscriptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateInitParameters) DeepCopyInto(out *DateInitParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateInitParameters.
func (in *DateInitParameters) DeepCopy() *DateInitParameters {
	if in == nil {
		return nil
	}
	out := new(DateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateObservation) DeepCopyInto(out *DateObservation) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateObservation.
func (in *DateObservation) DeepCopy() *DateObservation {
	if in == nil {
		return nil
	}
	out := new(DateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateParameters) DeepCopyInto(out *DateParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateParameters.
func (in *DateParameters) DeepCopy() *DateParameters {
	if in == nil {
		return nil
	}
	out := new(DateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateRangeInitParameters) DeepCopyInto(out *DateRangeInitParameters) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]RangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateRangeInitParameters.
func (in *DateRangeInitParameters) DeepCopy() *DateRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(DateRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateRangeObservation) DeepCopyInto(out *DateRangeObservation) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]RangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateRangeObservation.
func (in *DateRangeObservation) DeepCopy() *DateRangeObservation {
	if in == nil {
		return nil
	}
	out := new(DateRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateRangeParameters) DeepCopyInto(out *DateRangeParameters) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]RangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateRangeParameters.
func (in *DateRangeParameters) DeepCopy() *DateRangeParameters {
	if in == nil {
		return nil
	}
	out := new(DateRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateRangeValueDateRangeValueInitParameters) DeepCopyInto(out *DateRangeValueDateRangeValueInitParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateRangeValueDateRangeValueInitParameters.
func (in *DateRangeValueDateRangeValueInitParameters) DeepCopy() *DateRangeValueDateRangeValueInitParameters {
	if in == nil {
		return nil
	}
	out := new(DateRangeValueDateRangeValueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateRangeValueDateRangeValueObservation) DeepCopyInto(out *DateRangeValueDateRangeValueObservation) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateRangeValueDateRangeValueObservation.
func (in *DateRangeValueDateRangeValueObservation) DeepCopy() *DateRangeValueDateRangeValueObservation {
	if in == nil {
		return nil
	}
	out := new(DateRangeValueDateRangeValueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateRangeValueDateRangeValueParameters) DeepCopyInto(out *DateRangeValueDateRangeValueParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateRangeValueDateRangeValueParameters.
func (in *DateRangeValueDateRangeValueParameters) DeepCopy() *DateRangeValueDateRangeValueParameters {
	if in == nil {
		return nil
	}
	out := new(DateRangeValueDateRangeValueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateRangeValueInitParameters) DeepCopyInto(out *DateRangeValueInitParameters) {
	*out = *in
	if in.DateRangeValue != nil {
		in, out := &in.DateRangeValue, &out.DateRangeValue
		*out = make([]DateRangeValueDateRangeValueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DynamicDateRangeValue != nil {
		in, out := &in.DynamicDateRangeValue, &out.DynamicDateRangeValue
		*out = new(string)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(string)
		**out = **in
	}
	if in.StartDayOfWeek != nil {
		in, out := &in.StartDayOfWeek, &out.StartDayOfWeek
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateRangeValueInitParameters.
func (in *DateRangeValueInitParameters) DeepCopy() *DateRangeValueInitParameters {
	if in == nil {
		return nil
	}
	out := new(DateRangeValueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateRangeValueObservation) DeepCopyInto(out *DateRangeValueObservation) {
	*out = *in
	if in.DateRangeValue != nil {
		in, out := &in.DateRangeValue, &out.DateRangeValue
		*out = make([]DateRangeValueDateRangeValueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DynamicDateRangeValue != nil {
		in, out := &in.DynamicDateRangeValue, &out.DynamicDateRangeValue
		*out = new(string)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(string)
		**out = **in
	}
	if in.StartDayOfWeek != nil {
		in, out := &in.StartDayOfWeek, &out.StartDayOfWeek
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateRangeValueObservation.
func (in *DateRangeValueObservation) DeepCopy() *DateRangeValueObservation {
	if in == nil {
		return nil
	}
	out := new(DateRangeValueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateRangeValueParameters) DeepCopyInto(out *DateRangeValueParameters) {
	*out = *in
	if in.DateRangeValue != nil {
		in, out := &in.DateRangeValue, &out.DateRangeValue
		*out = make([]DateRangeValueDateRangeValueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DynamicDateRangeValue != nil {
		in, out := &in.DynamicDateRangeValue, &out.DynamicDateRangeValue
		*out = new(string)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(string)
		**out = **in
	}
	if in.StartDayOfWeek != nil {
		in, out := &in.StartDayOfWeek, &out.StartDayOfWeek
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateRangeValueParameters.
func (in *DateRangeValueParameters) DeepCopy() *DateRangeValueParameters {
	if in == nil {
		return nil
	}
	out := new(DateRangeValueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateValueInitParameters) DeepCopyInto(out *DateValueInitParameters) {
	*out = *in
	if in.DateValue != nil {
		in, out := &in.DateValue, &out.DateValue
		*out = new(string)
		**out = **in
	}
	if in.DynamicDateValue != nil {
		in, out := &in.DynamicDateValue, &out.DynamicDateValue
		*out = new(string)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateValueInitParameters.
func (in *DateValueInitParameters) DeepCopy() *DateValueInitParameters {
	if in == nil {
		return nil
	}
	out := new(DateValueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateValueObservation) DeepCopyInto(out *DateValueObservation) {
	*out = *in
	if in.DateValue != nil {
		in, out := &in.DateValue, &out.DateValue
		*out = new(string)
		**out = **in
	}
	if in.DynamicDateValue != nil {
		in, out := &in.DynamicDateValue, &out.DynamicDateValue
		*out = new(string)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateValueObservation.
func (in *DateValueObservation) DeepCopy() *DateValueObservation {
	if in == nil {
		return nil
	}
	out := new(DateValueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateValueParameters) DeepCopyInto(out *DateValueParameters) {
	*out = *in
	if in.DateValue != nil {
		in, out := &in.DateValue, &out.DateValue
		*out = new(string)
		**out = **in
	}
	if in.DynamicDateValue != nil {
		in, out := &in.DynamicDateValue, &out.DynamicDateValue
		*out = new(string)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateValueParameters.
func (in *DateValueParameters) DeepCopy() *DateValueParameters {
	if in == nil {
		return nil
	}
	out := new(DateValueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimeInitParameters) DeepCopyInto(out *DatetimeInitParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimeInitParameters.
func (in *DatetimeInitParameters) DeepCopy() *DatetimeInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatetimeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimeObservation) DeepCopyInto(out *DatetimeObservation) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimeObservation.
func (in *DatetimeObservation) DeepCopy() *DatetimeObservation {
	if in == nil {
		return nil
	}
	out := new(DatetimeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimeParameters) DeepCopyInto(out *DatetimeParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimeParameters.
func (in *DatetimeParameters) DeepCopy() *DatetimeParameters {
	if in == nil {
		return nil
	}
	out := new(DatetimeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimeRangeInitParameters) DeepCopyInto(out *DatetimeRangeInitParameters) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]DatetimeRangeRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimeRangeInitParameters.
func (in *DatetimeRangeInitParameters) DeepCopy() *DatetimeRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatetimeRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimeRangeObservation) DeepCopyInto(out *DatetimeRangeObservation) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]DatetimeRangeRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimeRangeObservation.
func (in *DatetimeRangeObservation) DeepCopy() *DatetimeRangeObservation {
	if in == nil {
		return nil
	}
	out := new(DatetimeRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimeRangeParameters) DeepCopyInto(out *DatetimeRangeParameters) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]DatetimeRangeRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimeRangeParameters.
func (in *DatetimeRangeParameters) DeepCopy() *DatetimeRangeParameters {
	if in == nil {
		return nil
	}
	out := new(DatetimeRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimeRangeRangeInitParameters) DeepCopyInto(out *DatetimeRangeRangeInitParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimeRangeRangeInitParameters.
func (in *DatetimeRangeRangeInitParameters) DeepCopy() *DatetimeRangeRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatetimeRangeRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimeRangeRangeObservation) DeepCopyInto(out *DatetimeRangeRangeObservation) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimeRangeRangeObservation.
func (in *DatetimeRangeRangeObservation) DeepCopy() *DatetimeRangeRangeObservation {
	if in == nil {
		return nil
	}
	out := new(DatetimeRangeRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimeRangeRangeParameters) DeepCopyInto(out *DatetimeRangeRangeParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimeRangeRangeParameters.
func (in *DatetimeRangeRangeParameters) DeepCopy() *DatetimeRangeRangeParameters {
	if in == nil {
		return nil
	}
	out := new(DatetimeRangeRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimesecInitParameters) DeepCopyInto(out *DatetimesecInitParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimesecInitParameters.
func (in *DatetimesecInitParameters) DeepCopy() *DatetimesecInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatetimesecInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimesecObservation) DeepCopyInto(out *DatetimesecObservation) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimesecObservation.
func (in *DatetimesecObservation) DeepCopy() *DatetimesecObservation {
	if in == nil {
		return nil
	}
	out := new(DatetimesecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimesecParameters) DeepCopyInto(out *DatetimesecParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimesecParameters.
func (in *DatetimesecParameters) DeepCopy() *DatetimesecParameters {
	if in == nil {
		return nil
	}
	out := new(DatetimesecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimesecRangeInitParameters) DeepCopyInto(out *DatetimesecRangeInitParameters) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]DatetimesecRangeRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimesecRangeInitParameters.
func (in *DatetimesecRangeInitParameters) DeepCopy() *DatetimesecRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatetimesecRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimesecRangeObservation) DeepCopyInto(out *DatetimesecRangeObservation) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]DatetimesecRangeRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimesecRangeObservation.
func (in *DatetimesecRangeObservation) DeepCopy() *DatetimesecRangeObservation {
	if in == nil {
		return nil
	}
	out := new(DatetimesecRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimesecRangeParameters) DeepCopyInto(out *DatetimesecRangeParameters) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]DatetimesecRangeRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimesecRangeParameters.
func (in *DatetimesecRangeParameters) DeepCopy() *DatetimesecRangeParameters {
	if in == nil {
		return nil
	}
	out := new(DatetimesecRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimesecRangeRangeInitParameters) DeepCopyInto(out *DatetimesecRangeRangeInitParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimesecRangeRangeInitParameters.
func (in *DatetimesecRangeRangeInitParameters) DeepCopy() *DatetimesecRangeRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatetimesecRangeRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimesecRangeRangeObservation) DeepCopyInto(out *DatetimesecRangeRangeObservation) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimesecRangeRangeObservation.
func (in *DatetimesecRangeRangeObservation) DeepCopy() *DatetimesecRangeRangeObservation {
	if in == nil {
		return nil
	}
	out := new(DatetimesecRangeRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimesecRangeRangeParameters) DeepCopyInto(out *DatetimesecRangeRangeParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimesecRangeRangeParameters.
func (in *DatetimesecRangeRangeParameters) DeepCopy() *DatetimesecRangeRangeParameters {
	if in == nil {
		return nil
	}
	out := new(DatetimesecRangeRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbfsInitParameters) DeepCopyInto(out *DbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbfsInitParameters.
func (in *DbfsInitParameters) DeepCopy() *DbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbfsObservation) DeepCopyInto(out *DbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbfsObservation.
func (in *DbfsObservation) DeepCopy() *DbfsObservation {
	if in == nil {
		return nil
	}
	out := new(DbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbfsParameters) DeepCopyInto(out *DbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbfsParameters.
func (in *DbfsParameters) DeepCopy() *DbfsParameters {
	if in == nil {
		return nil
	}
	out := new(DbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbtTaskInitParameters) DeepCopyInto(out *DbtTaskInitParameters) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProfilesDirectory != nil {
		in, out := &in.ProfilesDirectory, &out.ProfilesDirectory
		*out = new(string)
		**out = **in
	}
	if in.ProjectDirectory != nil {
		in, out := &in.ProjectDirectory, &out.ProjectDirectory
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbtTaskInitParameters.
func (in *DbtTaskInitParameters) DeepCopy() *DbtTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(DbtTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbtTaskObservation) DeepCopyInto(out *DbtTaskObservation) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProfilesDirectory != nil {
		in, out := &in.ProfilesDirectory, &out.ProfilesDirectory
		*out = new(string)
		**out = **in
	}
	if in.ProjectDirectory != nil {
		in, out := &in.ProjectDirectory, &out.ProjectDirectory
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbtTaskObservation.
func (in *DbtTaskObservation) DeepCopy() *DbtTaskObservation {
	if in == nil {
		return nil
	}
	out := new(DbtTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbtTaskParameters) DeepCopyInto(out *DbtTaskParameters) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProfilesDirectory != nil {
		in, out := &in.ProfilesDirectory, &out.ProfilesDirectory
		*out = new(string)
		**out = **in
	}
	if in.ProjectDirectory != nil {
		in, out := &in.ProjectDirectory, &out.ProjectDirectory
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbtTaskParameters.
func (in *DbtTaskParameters) DeepCopy() *DbtTaskParameters {
	if in == nil {
		return nil
	}
	out := new(DbtTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DependsOnInitParameters) DeepCopyInto(out *DependsOnInitParameters) {
	*out = *in
	if in.Outcome != nil {
		in, out := &in.Outcome, &out.Outcome
		*out = new(string)
		**out = **in
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DependsOnInitParameters.
func (in *DependsOnInitParameters) DeepCopy() *DependsOnInitParameters {
	if in == nil {
		return nil
	}
	out := new(DependsOnInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DependsOnObservation) DeepCopyInto(out *DependsOnObservation) {
	*out = *in
	if in.Outcome != nil {
		in, out := &in.Outcome, &out.Outcome
		*out = new(string)
		**out = **in
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DependsOnObservation.
func (in *DependsOnObservation) DeepCopy() *DependsOnObservation {
	if in == nil {
		return nil
	}
	out := new(DependsOnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DependsOnParameters) DeepCopyInto(out *DependsOnParameters) {
	*out = *in
	if in.Outcome != nil {
		in, out := &in.Outcome, &out.Outcome
		*out = new(string)
		**out = **in
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DependsOnParameters.
func (in *DependsOnParameters) DeepCopy() *DependsOnParameters {
	if in == nil {
		return nil
	}
	out := new(DependsOnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentInitParameters) DeepCopyInto(out *DeploymentInitParameters) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.MetadataFilePath != nil {
		in, out := &in.MetadataFilePath, &out.MetadataFilePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentInitParameters.
func (in *DeploymentInitParameters) DeepCopy() *DeploymentInitParameters {
	if in == nil {
		return nil
	}
	out := new(DeploymentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentObservation) DeepCopyInto(out *DeploymentObservation) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.MetadataFilePath != nil {
		in, out := &in.MetadataFilePath, &out.MetadataFilePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentObservation.
func (in *DeploymentObservation) DeepCopy() *DeploymentObservation {
	if in == nil {
		return nil
	}
	out := new(DeploymentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentParameters) DeepCopyInto(out *DeploymentParameters) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.MetadataFilePath != nil {
		in, out := &in.MetadataFilePath, &out.MetadataFilePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentParameters.
func (in *DeploymentParameters) DeepCopy() *DeploymentParameters {
	if in == nil {
		return nil
	}
	out := new(DeploymentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskSpecInitParameters) DeepCopyInto(out *DiskSpecInitParameters) {
	*out = *in
	if in.DiskCount != nil {
		in, out := &in.DiskCount, &out.DiskCount
		*out = new(float64)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = make([]DiskTypeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskSpecInitParameters.
func (in *DiskSpecInitParameters) DeepCopy() *DiskSpecInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiskSpecInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskSpecObservation) DeepCopyInto(out *DiskSpecObservation) {
	*out = *in
	if in.DiskCount != nil {
		in, out := &in.DiskCount, &out.DiskCount
		*out = new(float64)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = make([]DiskTypeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskSpecObservation.
func (in *DiskSpecObservation) DeepCopy() *DiskSpecObservation {
	if in == nil {
		return nil
	}
	out := new(DiskSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskSpecParameters) DeepCopyInto(out *DiskSpecParameters) {
	*out = *in
	if in.DiskCount != nil {
		in, out := &in.DiskCount, &out.DiskCount
		*out = new(float64)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = make([]DiskTypeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskSpecParameters.
func (in *DiskSpecParameters) DeepCopy() *DiskSpecParameters {
	if in == nil {
		return nil
	}
	out := new(DiskSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskTypeInitParameters) DeepCopyInto(out *DiskTypeInitParameters) {
	*out = *in
	if in.AzureDiskVolumeType != nil {
		in, out := &in.AzureDiskVolumeType, &out.AzureDiskVolumeType
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskTypeInitParameters.
func (in *DiskTypeInitParameters) DeepCopy() *DiskTypeInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiskTypeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskTypeObservation) DeepCopyInto(out *DiskTypeObservation) {
	*out = *in
	if in.AzureDiskVolumeType != nil {
		in, out := &in.AzureDiskVolumeType, &out.AzureDiskVolumeType
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskTypeObservation.
func (in *DiskTypeObservation) DeepCopy() *DiskTypeObservation {
	if in == nil {
		return nil
	}
	out := new(DiskTypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskTypeParameters) DeepCopyInto(out *DiskTypeParameters) {
	*out = *in
	if in.AzureDiskVolumeType != nil {
		in, out := &in.AzureDiskVolumeType, &out.AzureDiskVolumeType
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskTypeParameters.
func (in *DiskTypeParameters) DeepCopy() *DiskTypeParameters {
	if in == nil {
		return nil
	}
	out := new(DiskTypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerImageBasicAuthInitParameters) DeepCopyInto(out *DockerImageBasicAuthInitParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerImageBasicAuthInitParameters.
func (in *DockerImageBasicAuthInitParameters) DeepCopy() *DockerImageBasicAuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(DockerImageBasicAuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerImageBasicAuthObservation) DeepCopyInto(out *DockerImageBasicAuthObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerImageBasicAuthObservation.
func (in *DockerImageBasicAuthObservation) DeepCopy() *DockerImageBasicAuthObservation {
	if in == nil {
		return nil
	}
	out := new(DockerImageBasicAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerImageBasicAuthParameters) DeepCopyInto(out *DockerImageBasicAuthParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerImageBasicAuthParameters.
func (in *DockerImageBasicAuthParameters) DeepCopy() *DockerImageBasicAuthParameters {
	if in == nil {
		return nil
	}
	out := new(DockerImageBasicAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerImageInitParameters) DeepCopyInto(out *DockerImageInitParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]BasicAuthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerImageInitParameters.
func (in *DockerImageInitParameters) DeepCopy() *DockerImageInitParameters {
	if in == nil {
		return nil
	}
	out := new(DockerImageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerImageObservation) DeepCopyInto(out *DockerImageObservation) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]BasicAuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerImageObservation.
func (in *DockerImageObservation) DeepCopy() *DockerImageObservation {
	if in == nil {
		return nil
	}
	out := new(DockerImageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerImageParameters) DeepCopyInto(out *DockerImageParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]BasicAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerImageParameters.
func (in *DockerImageParameters) DeepCopy() *DockerImageParameters {
	if in == nil {
		return nil
	}
	out := new(DockerImageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailNotificationsInitParameters) DeepCopyInto(out *EmailNotificationsInitParameters) {
	*out = *in
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailNotificationsInitParameters.
func (in *EmailNotificationsInitParameters) DeepCopy() *EmailNotificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EmailNotificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailNotificationsObservation) DeepCopyInto(out *EmailNotificationsObservation) {
	*out = *in
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailNotificationsObservation.
func (in *EmailNotificationsObservation) DeepCopy() *EmailNotificationsObservation {
	if in == nil {
		return nil
	}
	out := new(EmailNotificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailNotificationsParameters) DeepCopyInto(out *EmailNotificationsParameters) {
	*out = *in
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailNotificationsParameters.
func (in *EmailNotificationsParameters) DeepCopy() *EmailNotificationsParameters {
	if in == nil {
		return nil
	}
	out := new(EmailNotificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionDetailsInitParameters) DeepCopyInto(out *EncryptionDetailsInitParameters) {
	*out = *in
	if in.SseEncryptionDetails != nil {
		in, out := &in.SseEncryptionDetails, &out.SseEncryptionDetails
		*out = make([]SseEncryptionDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionDetailsInitParameters.
func (in *EncryptionDetailsInitParameters) DeepCopy() *EncryptionDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptionDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionDetailsObservation) DeepCopyInto(out *EncryptionDetailsObservation) {
	*out = *in
	if in.SseEncryptionDetails != nil {
		in, out := &in.SseEncryptionDetails, &out.SseEncryptionDetails
		*out = make([]SseEncryptionDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionDetailsObservation.
func (in *EncryptionDetailsObservation) DeepCopy() *EncryptionDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(EncryptionDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionDetailsParameters) DeepCopyInto(out *EncryptionDetailsParameters) {
	*out = *in
	if in.SseEncryptionDetails != nil {
		in, out := &in.SseEncryptionDetails, &out.SseEncryptionDetails
		*out = make([]SseEncryptionDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionDetailsParameters.
func (in *EncryptionDetailsParameters) DeepCopy() *EncryptionDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptionDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Entitlements) DeepCopyInto(out *Entitlements) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Entitlements.
func (in *Entitlements) DeepCopy() *Entitlements {
	if in == nil {
		return nil
	}
	out := new(Entitlements)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Entitlements) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntitlementsInitParameters) DeepCopyInto(out *EntitlementsInitParameters) {
	*out = *in
	if in.AllowClusterCreate != nil {
		in, out := &in.AllowClusterCreate, &out.AllowClusterCreate
		*out = new(bool)
		**out = **in
	}
	if in.AllowInstancePoolCreate != nil {
		in, out := &in.AllowInstancePoolCreate, &out.AllowInstancePoolCreate
		*out = new(bool)
		**out = **in
	}
	if in.DatabricksSQLAccess != nil {
		in, out := &in.DatabricksSQLAccess, &out.DatabricksSQLAccess
		*out = new(bool)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalID != nil {
		in, out := &in.ServicePrincipalID, &out.ServicePrincipalID
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceAccess != nil {
		in, out := &in.WorkspaceAccess, &out.WorkspaceAccess
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntitlementsInitParameters.
func (in *EntitlementsInitParameters) DeepCopy() *EntitlementsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EntitlementsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntitlementsList) DeepCopyInto(out *EntitlementsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Entitlements, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntitlementsList.
func (in *EntitlementsList) DeepCopy() *EntitlementsList {
	if in == nil {
		return nil
	}
	out := new(EntitlementsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EntitlementsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntitlementsObservation) DeepCopyInto(out *EntitlementsObservation) {
	*out = *in
	if in.AllowClusterCreate != nil {
		in, out := &in.AllowClusterCreate, &out.AllowClusterCreate
		*out = new(bool)
		**out = **in
	}
	if in.AllowInstancePoolCreate != nil {
		in, out := &in.AllowInstancePoolCreate, &out.AllowInstancePoolCreate
		*out = new(bool)
		**out = **in
	}
	if in.DatabricksSQLAccess != nil {
		in, out := &in.DatabricksSQLAccess, &out.DatabricksSQLAccess
		*out = new(bool)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalID != nil {
		in, out := &in.ServicePrincipalID, &out.ServicePrincipalID
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceAccess != nil {
		in, out := &in.WorkspaceAccess, &out.WorkspaceAccess
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntitlementsObservation.
func (in *EntitlementsObservation) DeepCopy() *EntitlementsObservation {
	if in == nil {
		return nil
	}
	out := new(EntitlementsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntitlementsParameters) DeepCopyInto(out *EntitlementsParameters) {
	*out = *in
	if in.AllowClusterCreate != nil {
		in, out := &in.AllowClusterCreate, &out.AllowClusterCreate
		*out = new(bool)
		**out = **in
	}
	if in.AllowInstancePoolCreate != nil {
		in, out := &in.AllowInstancePoolCreate, &out.AllowInstancePoolCreate
		*out = new(bool)
		**out = **in
	}
	if in.DatabricksSQLAccess != nil {
		in, out := &in.DatabricksSQLAccess, &out.DatabricksSQLAccess
		*out = new(bool)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalID != nil {
		in, out := &in.ServicePrincipalID, &out.ServicePrincipalID
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceAccess != nil {
		in, out := &in.WorkspaceAccess, &out.WorkspaceAccess
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntitlementsParameters.
func (in *EntitlementsParameters) DeepCopy() *EntitlementsParameters {
	if in == nil {
		return nil
	}
	out := new(EntitlementsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntitlementsSpec) DeepCopyInto(out *EntitlementsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntitlementsSpec.
func (in *EntitlementsSpec) DeepCopy() *EntitlementsSpec {
	if in == nil {
		return nil
	}
	out := new(EntitlementsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntitlementsStatus) DeepCopyInto(out *EntitlementsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntitlementsStatus.
func (in *EntitlementsStatus) DeepCopy() *EntitlementsStatus {
	if in == nil {
		return nil
	}
	out := new(EntitlementsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnumInitParameters) DeepCopyInto(out *EnumInitParameters) {
	*out = *in
	if in.Multiple != nil {
		in, out := &in.Multiple, &out.Multiple
		*out = make([]MultipleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnumInitParameters.
func (in *EnumInitParameters) DeepCopy() *EnumInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnumInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnumObservation) DeepCopyInto(out *EnumObservation) {
	*out = *in
	if in.Multiple != nil {
		in, out := &in.Multiple, &out.Multiple
		*out = make([]MultipleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnumObservation.
func (in *EnumObservation) DeepCopy() *EnumObservation {
	if in == nil {
		return nil
	}
	out := new(EnumObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnumParameters) DeepCopyInto(out *EnumParameters) {
	*out = *in
	if in.Multiple != nil {
		in, out := &in.Multiple, &out.Multiple
		*out = make([]MultipleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnumParameters.
func (in *EnumParameters) DeepCopy() *EnumParameters {
	if in == nil {
		return nil
	}
	out := new(EnumParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnumValueInitParameters) DeepCopyInto(out *EnumValueInitParameters) {
	*out = *in
	if in.EnumOptions != nil {
		in, out := &in.EnumOptions, &out.EnumOptions
		*out = new(string)
		**out = **in
	}
	if in.MultiValuesOptions != nil {
		in, out := &in.MultiValuesOptions, &out.MultiValuesOptions
		*out = make([]MultiValuesOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnumValueInitParameters.
func (in *EnumValueInitParameters) DeepCopy() *EnumValueInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnumValueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnumValueObservation) DeepCopyInto(out *EnumValueObservation) {
	*out = *in
	if in.EnumOptions != nil {
		in, out := &in.EnumOptions, &out.EnumOptions
		*out = new(string)
		**out = **in
	}
	if in.MultiValuesOptions != nil {
		in, out := &in.MultiValuesOptions, &out.MultiValuesOptions
		*out = make([]MultiValuesOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnumValueObservation.
func (in *EnumValueObservation) DeepCopy() *EnumValueObservation {
	if in == nil {
		return nil
	}
	out := new(EnumValueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnumValueParameters) DeepCopyInto(out *EnumValueParameters) {
	*out = *in
	if in.EnumOptions != nil {
		in, out := &in.EnumOptions, &out.EnumOptions
		*out = new(string)
		**out = **in
	}
	if in.MultiValuesOptions != nil {
		in, out := &in.MultiValuesOptions, &out.MultiValuesOptions
		*out = make([]MultiValuesOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnumValueParameters.
func (in *EnumValueParameters) DeepCopy() *EnumValueParameters {
	if in == nil {
		return nil
	}
	out := new(EnumValueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentInitParameters) DeepCopyInto(out *EnvironmentInitParameters) {
	*out = *in
	if in.EnvironmentKey != nil {
		in, out := &in.EnvironmentKey, &out.EnvironmentKey
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]SpecInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentInitParameters.
func (in *EnvironmentInitParameters) DeepCopy() *EnvironmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentObservation) DeepCopyInto(out *EnvironmentObservation) {
	*out = *in
	if in.EnvironmentKey != nil {
		in, out := &in.EnvironmentKey, &out.EnvironmentKey
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]SpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentObservation.
func (in *EnvironmentObservation) DeepCopy() *EnvironmentObservation {
	if in == nil {
		return nil
	}
	out := new(EnvironmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentParameters) DeepCopyInto(out *EnvironmentParameters) {
	*out = *in
	if in.EnvironmentKey != nil {
		in, out := &in.EnvironmentKey, &out.EnvironmentKey
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]SpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentParameters.
func (in *EnvironmentParameters) DeepCopy() *EnvironmentParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalLocation) DeepCopyInto(out *ExternalLocation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalLocation.
func (in *ExternalLocation) DeepCopy() *ExternalLocation {
	if in == nil {
		return nil
	}
	out := new(ExternalLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExternalLocation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalLocationInitParameters) DeepCopyInto(out *ExternalLocationInitParameters) {
	*out = *in
	if in.AccessPoint != nil {
		in, out := &in.AccessPoint, &out.AccessPoint
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CredentialName != nil {
		in, out := &in.CredentialName, &out.CredentialName
		*out = new(string)
		**out = **in
	}
	if in.EncryptionDetails != nil {
		in, out := &in.EncryptionDetails, &out.EncryptionDetails
		*out = make([]EncryptionDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ForceUpdate != nil {
		in, out := &in.ForceUpdate, &out.ForceUpdate
		*out = new(bool)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SkipValidation != nil {
		in, out := &in.SkipValidation, &out.SkipValidation
		*out = new(bool)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalLocationInitParameters.
func (in *ExternalLocationInitParameters) DeepCopy() *ExternalLocationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExternalLocationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalLocationList) DeepCopyInto(out *ExternalLocationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ExternalLocation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalLocationList.
func (in *ExternalLocationList) DeepCopy() *ExternalLocationList {
	if in == nil {
		return nil
	}
	out := new(ExternalLocationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExternalLocationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalLocationObservation) DeepCopyInto(out *ExternalLocationObservation) {
	*out = *in
	if in.AccessPoint != nil {
		in, out := &in.AccessPoint, &out.AccessPoint
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CredentialName != nil {
		in, out := &in.CredentialName, &out.CredentialName
		*out = new(string)
		**out = **in
	}
	if in.EncryptionDetails != nil {
		in, out := &in.EncryptionDetails, &out.EncryptionDetails
		*out = make([]EncryptionDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ForceUpdate != nil {
		in, out := &in.ForceUpdate, &out.ForceUpdate
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SkipValidation != nil {
		in, out := &in.SkipValidation, &out.SkipValidation
		*out = new(bool)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalLocationObservation.
func (in *ExternalLocationObservation) DeepCopy() *ExternalLocationObservation {
	if in == nil {
		return nil
	}
	out := new(ExternalLocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalLocationParameters) DeepCopyInto(out *ExternalLocationParameters) {
	*out = *in
	if in.AccessPoint != nil {
		in, out := &in.AccessPoint, &out.AccessPoint
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CredentialName != nil {
		in, out := &in.CredentialName, &out.CredentialName
		*out = new(string)
		**out = **in
	}
	if in.EncryptionDetails != nil {
		in, out := &in.EncryptionDetails, &out.EncryptionDetails
		*out = make([]EncryptionDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ForceUpdate != nil {
		in, out := &in.ForceUpdate, &out.ForceUpdate
		*out = new(bool)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SkipValidation != nil {
		in, out := &in.SkipValidation, &out.SkipValidation
		*out = new(bool)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalLocationParameters.
func (in *ExternalLocationParameters) DeepCopy() *ExternalLocationParameters {
	if in == nil {
		return nil
	}
	out := new(ExternalLocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalLocationSpec) DeepCopyInto(out *ExternalLocationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalLocationSpec.
func (in *ExternalLocationSpec) DeepCopy() *ExternalLocationSpec {
	if in == nil {
		return nil
	}
	out := new(ExternalLocationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalLocationStatus) DeepCopyInto(out *ExternalLocationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalLocationStatus.
func (in *ExternalLocationStatus) DeepCopy() *ExternalLocationStatus {
	if in == nil {
		return nil
	}
	out := new(ExternalLocationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailureReasonInitParameters) DeepCopyInto(out *FailureReasonInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailureReasonInitParameters.
func (in *FailureReasonInitParameters) DeepCopy() *FailureReasonInitParameters {
	if in == nil {
		return nil
	}
	out := new(FailureReasonInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailureReasonObservation) DeepCopyInto(out *FailureReasonObservation) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailureReasonObservation.
func (in *FailureReasonObservation) DeepCopy() *FailureReasonObservation {
	if in == nil {
		return nil
	}
	out := new(FailureReasonObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailureReasonParameters) DeepCopyInto(out *FailureReasonParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailureReasonParameters.
func (in *FailureReasonParameters) DeepCopy() *FailureReasonParameters {
	if in == nil {
		return nil
	}
	out := new(FailureReasonParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileArrivalInitParameters) DeepCopyInto(out *FileArrivalInitParameters) {
	*out = *in
	if in.MinTimeBetweenTriggersSeconds != nil {
		in, out := &in.MinTimeBetweenTriggersSeconds, &out.MinTimeBetweenTriggersSeconds
		*out = new(float64)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WaitAfterLastChangeSeconds != nil {
		in, out := &in.WaitAfterLastChangeSeconds, &out.WaitAfterLastChangeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileArrivalInitParameters.
func (in *FileArrivalInitParameters) DeepCopy() *FileArrivalInitParameters {
	if in == nil {
		return nil
	}
	out := new(FileArrivalInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileArrivalObservation) DeepCopyInto(out *FileArrivalObservation) {
	*out = *in
	if in.MinTimeBetweenTriggersSeconds != nil {
		in, out := &in.MinTimeBetweenTriggersSeconds, &out.MinTimeBetweenTriggersSeconds
		*out = new(float64)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WaitAfterLastChangeSeconds != nil {
		in, out := &in.WaitAfterLastChangeSeconds, &out.WaitAfterLastChangeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileArrivalObservation.
func (in *FileArrivalObservation) DeepCopy() *FileArrivalObservation {
	if in == nil {
		return nil
	}
	out := new(FileArrivalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileArrivalParameters) DeepCopyInto(out *FileArrivalParameters) {
	*out = *in
	if in.MinTimeBetweenTriggersSeconds != nil {
		in, out := &in.MinTimeBetweenTriggersSeconds, &out.MinTimeBetweenTriggersSeconds
		*out = new(float64)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WaitAfterLastChangeSeconds != nil {
		in, out := &in.WaitAfterLastChangeSeconds, &out.WaitAfterLastChangeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileArrivalParameters.
func (in *FileArrivalParameters) DeepCopy() *FileArrivalParameters {
	if in == nil {
		return nil
	}
	out := new(FileArrivalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileInitParameters) DeepCopyInto(out *FileInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileInitParameters.
func (in *FileInitParameters) DeepCopy() *FileInitParameters {
	if in == nil {
		return nil
	}
	out := new(FileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileObservation) DeepCopyInto(out *FileObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileObservation.
func (in *FileObservation) DeepCopy() *FileObservation {
	if in == nil {
		return nil
	}
	out := new(FileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileParameters) DeepCopyInto(out *FileParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileParameters.
func (in *FileParameters) DeepCopy() *FileParameters {
	if in == nil {
		return nil
	}
	out := new(FileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterInitParameters) DeepCopyInto(out *FilterInitParameters) {
	*out = *in
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]TagsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = make([]WorkspaceIDInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterInitParameters.
func (in *FilterInitParameters) DeepCopy() *FilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(FilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterObservation) DeepCopyInto(out *FilterObservation) {
	*out = *in
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]TagsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = make([]WorkspaceIDObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterObservation.
func (in *FilterObservation) DeepCopy() *FilterObservation {
	if in == nil {
		return nil
	}
	out := new(FilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterParameters) DeepCopyInto(out *FilterParameters) {
	*out = *in
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]TagsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = make([]WorkspaceIDParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterParameters.
func (in *FilterParameters) DeepCopy() *FilterParameters {
	if in == nil {
		return nil
	}
	out := new(FilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FiltersInitParameters) DeepCopyInto(out *FiltersInitParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FiltersInitParameters.
func (in *FiltersInitParameters) DeepCopy() *FiltersInitParameters {
	if in == nil {
		return nil
	}
	out := new(FiltersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FiltersObservation) DeepCopyInto(out *FiltersObservation) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FiltersObservation.
func (in *FiltersObservation) DeepCopy() *FiltersObservation {
	if in == nil {
		return nil
	}
	out := new(FiltersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FiltersParameters) DeepCopyInto(out *FiltersParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FiltersParameters.
func (in *FiltersParameters) DeepCopy() *FiltersParameters {
	if in == nil {
		return nil
	}
	out := new(FiltersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetOnDemandOptionInitParameters) DeepCopyInto(out *FleetOnDemandOptionInitParameters) {
	*out = *in
	if in.AllocationStrategy != nil {
		in, out := &in.AllocationStrategy, &out.AllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolsToUseCount != nil {
		in, out := &in.InstancePoolsToUseCount, &out.InstancePoolsToUseCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetOnDemandOptionInitParameters.
func (in *FleetOnDemandOptionInitParameters) DeepCopy() *FleetOnDemandOptionInitParameters {
	if in == nil {
		return nil
	}
	out := new(FleetOnDemandOptionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetOnDemandOptionObservation) DeepCopyInto(out *FleetOnDemandOptionObservation) {
	*out = *in
	if in.AllocationStrategy != nil {
		in, out := &in.AllocationStrategy, &out.AllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolsToUseCount != nil {
		in, out := &in.InstancePoolsToUseCount, &out.InstancePoolsToUseCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetOnDemandOptionObservation.
func (in *FleetOnDemandOptionObservation) DeepCopy() *FleetOnDemandOptionObservation {
	if in == nil {
		return nil
	}
	out := new(FleetOnDemandOptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetOnDemandOptionParameters) DeepCopyInto(out *FleetOnDemandOptionParameters) {
	*out = *in
	if in.AllocationStrategy != nil {
		in, out := &in.AllocationStrategy, &out.AllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolsToUseCount != nil {
		in, out := &in.InstancePoolsToUseCount, &out.InstancePoolsToUseCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetOnDemandOptionParameters.
func (in *FleetOnDemandOptionParameters) DeepCopy() *FleetOnDemandOptionParameters {
	if in == nil {
		return nil
	}
	out := new(FleetOnDemandOptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetSpotOptionInitParameters) DeepCopyInto(out *FleetSpotOptionInitParameters) {
	*out = *in
	if in.AllocationStrategy != nil {
		in, out := &in.AllocationStrategy, &out.AllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolsToUseCount != nil {
		in, out := &in.InstancePoolsToUseCount, &out.InstancePoolsToUseCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetSpotOptionInitParameters.
func (in *FleetSpotOptionInitParameters) DeepCopy() *FleetSpotOptionInitParameters {
	if in == nil {
		return nil
	}
	out := new(FleetSpotOptionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetSpotOptionObservation) DeepCopyInto(out *FleetSpotOptionObservation) {
	*out = *in
	if in.AllocationStrategy != nil {
		in, out := &in.AllocationStrategy, &out.AllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolsToUseCount != nil {
		in, out := &in.InstancePoolsToUseCount, &out.InstancePoolsToUseCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetSpotOptionObservation.
func (in *FleetSpotOptionObservation) DeepCopy() *FleetSpotOptionObservation {
	if in == nil {
		return nil
	}
	out := new(FleetSpotOptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetSpotOptionParameters) DeepCopyInto(out *FleetSpotOptionParameters) {
	*out = *in
	if in.AllocationStrategy != nil {
		in, out := &in.AllocationStrategy, &out.AllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolsToUseCount != nil {
		in, out := &in.InstancePoolsToUseCount, &out.InstancePoolsToUseCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetSpotOptionParameters.
func (in *FleetSpotOptionParameters) DeepCopy() *FleetSpotOptionParameters {
	if in == nil {
		return nil
	}
	out := new(FleetSpotOptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskInitParameters) DeepCopyInto(out *ForEachTaskInitParameters) {
	*out = *in
	if in.Concurrency != nil {
		in, out := &in.Concurrency, &out.Concurrency
		*out = new(float64)
		**out = **in
	}
	if in.Inputs != nil {
		in, out := &in.Inputs, &out.Inputs
		*out = new(string)
		**out = **in
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = make([]ForEachTaskTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskInitParameters.
func (in *ForEachTaskInitParameters) DeepCopy() *ForEachTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskObservation) DeepCopyInto(out *ForEachTaskObservation) {
	*out = *in
	if in.Concurrency != nil {
		in, out := &in.Concurrency, &out.Concurrency
		*out = new(float64)
		**out = **in
	}
	if in.Inputs != nil {
		in, out := &in.Inputs, &out.Inputs
		*out = new(string)
		**out = **in
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = make([]ForEachTaskTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskObservation.
func (in *ForEachTaskObservation) DeepCopy() *ForEachTaskObservation {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskParameters) DeepCopyInto(out *ForEachTaskParameters) {
	*out = *in
	if in.Concurrency != nil {
		in, out := &in.Concurrency, &out.Concurrency
		*out = new(float64)
		**out = **in
	}
	if in.Inputs != nil {
		in, out := &in.Inputs, &out.Inputs
		*out = new(string)
		**out = **in
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = make([]ForEachTaskTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskParameters.
func (in *ForEachTaskParameters) DeepCopy() *ForEachTaskParameters {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskTaskDbtTaskInitParameters) DeepCopyInto(out *ForEachTaskTaskDbtTaskInitParameters) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProfilesDirectory != nil {
		in, out := &in.ProfilesDirectory, &out.ProfilesDirectory
		*out = new(string)
		**out = **in
	}
	if in.ProjectDirectory != nil {
		in, out := &in.ProjectDirectory, &out.ProjectDirectory
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskTaskDbtTaskInitParameters.
func (in *ForEachTaskTaskDbtTaskInitParameters) DeepCopy() *ForEachTaskTaskDbtTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskTaskDbtTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskTaskDbtTaskObservation) DeepCopyInto(out *ForEachTaskTaskDbtTaskObservation) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProfilesDirectory != nil {
		in, out := &in.ProfilesDirectory, &out.ProfilesDirectory
		*out = new(string)
		**out = **in
	}
	if in.ProjectDirectory != nil {
		in, out := &in.ProjectDirectory, &out.ProjectDirectory
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskTaskDbtTaskObservation.
func (in *ForEachTaskTaskDbtTaskObservation) DeepCopy() *ForEachTaskTaskDbtTaskObservation {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskTaskDbtTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskTaskDbtTaskParameters) DeepCopyInto(out *ForEachTaskTaskDbtTaskParameters) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProfilesDirectory != nil {
		in, out := &in.ProfilesDirectory, &out.ProfilesDirectory
		*out = new(string)
		**out = **in
	}
	if in.ProjectDirectory != nil {
		in, out := &in.ProjectDirectory, &out.ProjectDirectory
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskTaskDbtTaskParameters.
func (in *ForEachTaskTaskDbtTaskParameters) DeepCopy() *ForEachTaskTaskDbtTaskParameters {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskTaskDbtTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskTaskEmailNotificationsInitParameters) DeepCopyInto(out *ForEachTaskTaskEmailNotificationsInitParameters) {
	*out = *in
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskTaskEmailNotificationsInitParameters.
func (in *ForEachTaskTaskEmailNotificationsInitParameters) DeepCopy() *ForEachTaskTaskEmailNotificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskTaskEmailNotificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskTaskEmailNotificationsObservation) DeepCopyInto(out *ForEachTaskTaskEmailNotificationsObservation) {
	*out = *in
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskTaskEmailNotificationsObservation.
func (in *ForEachTaskTaskEmailNotificationsObservation) DeepCopy() *ForEachTaskTaskEmailNotificationsObservation {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskTaskEmailNotificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskTaskEmailNotificationsParameters) DeepCopyInto(out *ForEachTaskTaskEmailNotificationsParameters) {
	*out = *in
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskTaskEmailNotificationsParameters.
func (in *ForEachTaskTaskEmailNotificationsParameters) DeepCopy() *ForEachTaskTaskEmailNotificationsParameters {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskTaskEmailNotificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskTaskInitParameters) DeepCopyInto(out *ForEachTaskTaskInitParameters) {
	*out = *in
	if in.ConditionTask != nil {
		in, out := &in.ConditionTask, &out.ConditionTask
		*out = make([]TaskConditionTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DbtTask != nil {
		in, out := &in.DbtTask, &out.DbtTask
		*out = make([]ForEachTaskTaskDbtTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DependsOn != nil {
		in, out := &in.DependsOn, &out.DependsOn
		*out = make([]TaskDependsOnInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableAutoOptimization != nil {
		in, out := &in.DisableAutoOptimization, &out.DisableAutoOptimization
		*out = new(bool)
		**out = **in
	}
	if in.EmailNotifications != nil {
		in, out := &in.EmailNotifications, &out.EmailNotifications
		*out = make([]ForEachTaskTaskEmailNotificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvironmentKey != nil {
		in, out := &in.EnvironmentKey, &out.EnvironmentKey
		*out = new(string)
		**out = **in
	}
	if in.ExistingClusterID != nil {
		in, out := &in.ExistingClusterID, &out.ExistingClusterID
		*out = new(string)
		**out = **in
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]TaskHealthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobClusterKey != nil {
		in, out := &in.JobClusterKey, &out.JobClusterKey
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]TaskLibraryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MinRetryIntervalMillis != nil {
		in, out := &in.MinRetryIntervalMillis, &out.MinRetryIntervalMillis
		*out = new(float64)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]TaskNewClusterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotebookTask != nil {
		in, out := &in.NotebookTask, &out.NotebookTask
		*out = make([]TaskNotebookTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]TaskNotificationSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PipelineTask != nil {
		in, out := &in.PipelineTask, &out.PipelineTask
		*out = make([]TaskPipelineTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonWheelTask != nil {
		in, out := &in.PythonWheelTask, &out.PythonWheelTask
		*out = make([]TaskPythonWheelTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryOnTimeout != nil {
		in, out := &in.RetryOnTimeout, &out.RetryOnTimeout
		*out = new(bool)
		**out = **in
	}
	if in.RunIf != nil {
		in, out := &in.RunIf, &out.RunIf
		*out = new(string)
		**out = **in
	}
	if in.RunJobTask != nil {
		in, out := &in.RunJobTask, &out.RunJobTask
		*out = make([]TaskRunJobTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SQLTask != nil {
		in, out := &in.SQLTask, &out.SQLTask
		*out = make([]SQLTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJarTask != nil {
		in, out := &in.SparkJarTask, &out.SparkJarTask
		*out = make([]TaskSparkJarTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkPythonTask != nil {
		in, out := &in.SparkPythonTask, &out.SparkPythonTask
		*out = make([]TaskSparkPythonTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSubmitTask != nil {
		in, out := &in.SparkSubmitTask, &out.SparkSubmitTask
		*out = make([]TaskSparkSubmitTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.WebhookNotifications != nil {
		in, out := &in.WebhookNotifications, &out.WebhookNotifications
		*out = make([]WebhookNotificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskTaskInitParameters.
func (in *ForEachTaskTaskInitParameters) DeepCopy() *ForEachTaskTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskTaskObservation) DeepCopyInto(out *ForEachTaskTaskObservation) {
	*out = *in
	if in.ConditionTask != nil {
		in, out := &in.ConditionTask, &out.ConditionTask
		*out = make([]TaskConditionTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DbtTask != nil {
		in, out := &in.DbtTask, &out.DbtTask
		*out = make([]ForEachTaskTaskDbtTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DependsOn != nil {
		in, out := &in.DependsOn, &out.DependsOn
		*out = make([]TaskDependsOnObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableAutoOptimization != nil {
		in, out := &in.DisableAutoOptimization, &out.DisableAutoOptimization
		*out = new(bool)
		**out = **in
	}
	if in.EmailNotifications != nil {
		in, out := &in.EmailNotifications, &out.EmailNotifications
		*out = make([]ForEachTaskTaskEmailNotificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvironmentKey != nil {
		in, out := &in.EnvironmentKey, &out.EnvironmentKey
		*out = new(string)
		**out = **in
	}
	if in.ExistingClusterID != nil {
		in, out := &in.ExistingClusterID, &out.ExistingClusterID
		*out = new(string)
		**out = **in
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]TaskHealthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobClusterKey != nil {
		in, out := &in.JobClusterKey, &out.JobClusterKey
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]TaskLibraryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MinRetryIntervalMillis != nil {
		in, out := &in.MinRetryIntervalMillis, &out.MinRetryIntervalMillis
		*out = new(float64)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]TaskNewClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotebookTask != nil {
		in, out := &in.NotebookTask, &out.NotebookTask
		*out = make([]TaskNotebookTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]TaskNotificationSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PipelineTask != nil {
		in, out := &in.PipelineTask, &out.PipelineTask
		*out = make([]TaskPipelineTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonWheelTask != nil {
		in, out := &in.PythonWheelTask, &out.PythonWheelTask
		*out = make([]TaskPythonWheelTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryOnTimeout != nil {
		in, out := &in.RetryOnTimeout, &out.RetryOnTimeout
		*out = new(bool)
		**out = **in
	}
	if in.RunIf != nil {
		in, out := &in.RunIf, &out.RunIf
		*out = new(string)
		**out = **in
	}
	if in.RunJobTask != nil {
		in, out := &in.RunJobTask, &out.RunJobTask
		*out = make([]TaskRunJobTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SQLTask != nil {
		in, out := &in.SQLTask, &out.SQLTask
		*out = make([]SQLTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJarTask != nil {
		in, out := &in.SparkJarTask, &out.SparkJarTask
		*out = make([]TaskSparkJarTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkPythonTask != nil {
		in, out := &in.SparkPythonTask, &out.SparkPythonTask
		*out = make([]TaskSparkPythonTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSubmitTask != nil {
		in, out := &in.SparkSubmitTask, &out.SparkSubmitTask
		*out = make([]TaskSparkSubmitTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.WebhookNotifications != nil {
		in, out := &in.WebhookNotifications, &out.WebhookNotifications
		*out = make([]WebhookNotificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskTaskObservation.
func (in *ForEachTaskTaskObservation) DeepCopy() *ForEachTaskTaskObservation {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskTaskParameters) DeepCopyInto(out *ForEachTaskTaskParameters) {
	*out = *in
	if in.ConditionTask != nil {
		in, out := &in.ConditionTask, &out.ConditionTask
		*out = make([]TaskConditionTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DbtTask != nil {
		in, out := &in.DbtTask, &out.DbtTask
		*out = make([]ForEachTaskTaskDbtTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DependsOn != nil {
		in, out := &in.DependsOn, &out.DependsOn
		*out = make([]TaskDependsOnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableAutoOptimization != nil {
		in, out := &in.DisableAutoOptimization, &out.DisableAutoOptimization
		*out = new(bool)
		**out = **in
	}
	if in.EmailNotifications != nil {
		in, out := &in.EmailNotifications, &out.EmailNotifications
		*out = make([]ForEachTaskTaskEmailNotificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvironmentKey != nil {
		in, out := &in.EnvironmentKey, &out.EnvironmentKey
		*out = new(string)
		**out = **in
	}
	if in.ExistingClusterID != nil {
		in, out := &in.ExistingClusterID, &out.ExistingClusterID
		*out = new(string)
		**out = **in
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]TaskHealthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobClusterKey != nil {
		in, out := &in.JobClusterKey, &out.JobClusterKey
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]TaskLibraryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MinRetryIntervalMillis != nil {
		in, out := &in.MinRetryIntervalMillis, &out.MinRetryIntervalMillis
		*out = new(float64)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]TaskNewClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotebookTask != nil {
		in, out := &in.NotebookTask, &out.NotebookTask
		*out = make([]TaskNotebookTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]TaskNotificationSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PipelineTask != nil {
		in, out := &in.PipelineTask, &out.PipelineTask
		*out = make([]TaskPipelineTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonWheelTask != nil {
		in, out := &in.PythonWheelTask, &out.PythonWheelTask
		*out = make([]TaskPythonWheelTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryOnTimeout != nil {
		in, out := &in.RetryOnTimeout, &out.RetryOnTimeout
		*out = new(bool)
		**out = **in
	}
	if in.RunIf != nil {
		in, out := &in.RunIf, &out.RunIf
		*out = new(string)
		**out = **in
	}
	if in.RunJobTask != nil {
		in, out := &in.RunJobTask, &out.RunJobTask
		*out = make([]TaskRunJobTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SQLTask != nil {
		in, out := &in.SQLTask, &out.SQLTask
		*out = make([]SQLTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJarTask != nil {
		in, out := &in.SparkJarTask, &out.SparkJarTask
		*out = make([]TaskSparkJarTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkPythonTask != nil {
		in, out := &in.SparkPythonTask, &out.SparkPythonTask
		*out = make([]TaskSparkPythonTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSubmitTask != nil {
		in, out := &in.SparkSubmitTask, &out.SparkSubmitTask
		*out = make([]TaskSparkSubmitTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.WebhookNotifications != nil {
		in, out := &in.WebhookNotifications, &out.WebhookNotifications
		*out = make([]WebhookNotificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskTaskParameters.
func (in *ForEachTaskTaskParameters) DeepCopy() *ForEachTaskTaskParameters {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPAttributesInitParameters) DeepCopyInto(out *GCPAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPAttributesInitParameters.
func (in *GCPAttributesInitParameters) DeepCopy() *GCPAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPAttributesObservation) DeepCopyInto(out *GCPAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPAttributesObservation.
func (in *GCPAttributesObservation) DeepCopy() *GCPAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(GCPAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPAttributesParameters) DeepCopyInto(out *GCPAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPAttributesParameters.
func (in *GCPAttributesParameters) DeepCopy() *GCPAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(GCPAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayDefinitionInitParameters) DeepCopyInto(out *GatewayDefinitionInitParameters) {
	*out = *in
	if in.ConnectionID != nil {
		in, out := &in.ConnectionID, &out.ConnectionID
		*out = new(string)
		**out = **in
	}
	if in.GatewayStorageCatalog != nil {
		in, out := &in.GatewayStorageCatalog, &out.GatewayStorageCatalog
		*out = new(string)
		**out = **in
	}
	if in.GatewayStorageName != nil {
		in, out := &in.GatewayStorageName, &out.GatewayStorageName
		*out = new(string)
		**out = **in
	}
	if in.GatewayStorageSchema != nil {
		in, out := &in.GatewayStorageSchema, &out.GatewayStorageSchema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayDefinitionInitParameters.
func (in *GatewayDefinitionInitParameters) DeepCopy() *GatewayDefinitionInitParameters {
	if in == nil {
		return nil
	}
	out := new(GatewayDefinitionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayDefinitionObservation) DeepCopyInto(out *GatewayDefinitionObservation) {
	*out = *in
	if in.ConnectionID != nil {
		in, out := &in.ConnectionID, &out.ConnectionID
		*out = new(string)
		**out = **in
	}
	if in.GatewayStorageCatalog != nil {
		in, out := &in.GatewayStorageCatalog, &out.GatewayStorageCatalog
		*out = new(string)
		**out = **in
	}
	if in.GatewayStorageName != nil {
		in, out := &in.GatewayStorageName, &out.GatewayStorageName
		*out = new(string)
		**out = **in
	}
	if in.GatewayStorageSchema != nil {
		in, out := &in.GatewayStorageSchema, &out.GatewayStorageSchema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayDefinitionObservation.
func (in *GatewayDefinitionObservation) DeepCopy() *GatewayDefinitionObservation {
	if in == nil {
		return nil
	}
	out := new(GatewayDefinitionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayDefinitionParameters) DeepCopyInto(out *GatewayDefinitionParameters) {
	*out = *in
	if in.ConnectionID != nil {
		in, out := &in.ConnectionID, &out.ConnectionID
		*out = new(string)
		**out = **in
	}
	if in.GatewayStorageCatalog != nil {
		in, out := &in.GatewayStorageCatalog, &out.GatewayStorageCatalog
		*out = new(string)
		**out = **in
	}
	if in.GatewayStorageName != nil {
		in, out := &in.GatewayStorageName, &out.GatewayStorageName
		*out = new(string)
		**out = **in
	}
	if in.GatewayStorageSchema != nil {
		in, out := &in.GatewayStorageSchema, &out.GatewayStorageSchema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayDefinitionParameters.
func (in *GatewayDefinitionParameters) DeepCopy() *GatewayDefinitionParameters {
	if in == nil {
		return nil
	}
	out := new(GatewayDefinitionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsInitParameters) DeepCopyInto(out *GcsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsInitParameters.
func (in *GcsInitParameters) DeepCopy() *GcsInitParameters {
	if in == nil {
		return nil
	}
	out := new(GcsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsObservation) DeepCopyInto(out *GcsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsObservation.
func (in *GcsObservation) DeepCopy() *GcsObservation {
	if in == nil {
		return nil
	}
	out := new(GcsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsParameters) DeepCopyInto(out *GcsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsParameters.
func (in *GcsParameters) DeepCopy() *GcsParameters {
	if in == nil {
		return nil
	}
	out := new(GcsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCredential) DeepCopyInto(out *GitCredential) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCredential.
func (in *GitCredential) DeepCopy() *GitCredential {
	if in == nil {
		return nil
	}
	out := new(GitCredential)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GitCredential) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCredentialInitParameters) DeepCopyInto(out *GitCredentialInitParameters) {
	*out = *in
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.GitProvider != nil {
		in, out := &in.GitProvider, &out.GitProvider
		*out = new(string)
		**out = **in
	}
	if in.GitUsername != nil {
		in, out := &in.GitUsername, &out.GitUsername
		*out = new(string)
		**out = **in
	}
	if in.PersonalAccessToken != nil {
		in, out := &in.PersonalAccessToken, &out.PersonalAccessToken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCredentialInitParameters.
func (in *GitCredentialInitParameters) DeepCopy() *GitCredentialInitParameters {
	if in == nil {
		return nil
	}
	out := new(GitCredentialInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCredentialList) DeepCopyInto(out *GitCredentialList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GitCredential, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCredentialList.
func (in *GitCredentialList) DeepCopy() *GitCredentialList {
	if in == nil {
		return nil
	}
	out := new(GitCredentialList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GitCredentialList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCredentialObservation) DeepCopyInto(out *GitCredentialObservation) {
	*out = *in
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.GitProvider != nil {
		in, out := &in.GitProvider, &out.GitProvider
		*out = new(string)
		**out = **in
	}
	if in.GitUsername != nil {
		in, out := &in.GitUsername, &out.GitUsername
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PersonalAccessToken != nil {
		in, out := &in.PersonalAccessToken, &out.PersonalAccessToken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCredentialObservation.
func (in *GitCredentialObservation) DeepCopy() *GitCredentialObservation {
	if in == nil {
		return nil
	}
	out := new(GitCredentialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCredentialParameters) DeepCopyInto(out *GitCredentialParameters) {
	*out = *in
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.GitProvider != nil {
		in, out := &in.GitProvider, &out.GitProvider
		*out = new(string)
		**out = **in
	}
	if in.GitUsername != nil {
		in, out := &in.GitUsername, &out.GitUsername
		*out = new(string)
		**out = **in
	}
	if in.PersonalAccessToken != nil {
		in, out := &in.PersonalAccessToken, &out.PersonalAccessToken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCredentialParameters.
func (in *GitCredentialParameters) DeepCopy() *GitCredentialParameters {
	if in == nil {
		return nil
	}
	out := new(GitCredentialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCredentialSpec) DeepCopyInto(out *GitCredentialSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCredentialSpec.
func (in *GitCredentialSpec) DeepCopy() *GitCredentialSpec {
	if in == nil {
		return nil
	}
	out := new(GitCredentialSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCredentialStatus) DeepCopyInto(out *GitCredentialStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCredentialStatus.
func (in *GitCredentialStatus) DeepCopy() *GitCredentialStatus {
	if in == nil {
		return nil
	}
	out := new(GitCredentialStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitSnapshotInitParameters) DeepCopyInto(out *GitSnapshotInitParameters) {
	*out = *in
	if in.UsedCommit != nil {
		in, out := &in.UsedCommit, &out.UsedCommit
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitSnapshotInitParameters.
func (in *GitSnapshotInitParameters) DeepCopy() *GitSnapshotInitParameters {
	if in == nil {
		return nil
	}
	out := new(GitSnapshotInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitSnapshotObservation) DeepCopyInto(out *GitSnapshotObservation) {
	*out = *in
	if in.UsedCommit != nil {
		in, out := &in.UsedCommit, &out.UsedCommit
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitSnapshotObservation.
func (in *GitSnapshotObservation) DeepCopy() *GitSnapshotObservation {
	if in == nil {
		return nil
	}
	out := new(GitSnapshotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitSnapshotParameters) DeepCopyInto(out *GitSnapshotParameters) {
	*out = *in
	if in.UsedCommit != nil {
		in, out := &in.UsedCommit, &out.UsedCommit
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitSnapshotParameters.
func (in *GitSnapshotParameters) DeepCopy() *GitSnapshotParameters {
	if in == nil {
		return nil
	}
	out := new(GitSnapshotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitSourceInitParameters) DeepCopyInto(out *GitSourceInitParameters) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.Commit != nil {
		in, out := &in.Commit, &out.Commit
		*out = new(string)
		**out = **in
	}
	if in.GitSnapshot != nil {
		in, out := &in.GitSnapshot, &out.GitSnapshot
		*out = make([]GitSnapshotInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobSource != nil {
		in, out := &in.JobSource, &out.JobSource
		*out = make([]JobSourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitSourceInitParameters.
func (in *GitSourceInitParameters) DeepCopy() *GitSourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(GitSourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitSourceObservation) DeepCopyInto(out *GitSourceObservation) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.Commit != nil {
		in, out := &in.Commit, &out.Commit
		*out = new(string)
		**out = **in
	}
	if in.GitSnapshot != nil {
		in, out := &in.GitSnapshot, &out.GitSnapshot
		*out = make([]GitSnapshotObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobSource != nil {
		in, out := &in.JobSource, &out.JobSource
		*out = make([]JobSourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitSourceObservation.
func (in *GitSourceObservation) DeepCopy() *GitSourceObservation {
	if in == nil {
		return nil
	}
	out := new(GitSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitSourceParameters) DeepCopyInto(out *GitSourceParameters) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.Commit != nil {
		in, out := &in.Commit, &out.Commit
		*out = new(string)
		**out = **in
	}
	if in.GitSnapshot != nil {
		in, out := &in.GitSnapshot, &out.GitSnapshot
		*out = make([]GitSnapshotParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobSource != nil {
		in, out := &in.JobSource, &out.JobSource
		*out = make([]JobSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitSourceParameters.
func (in *GitSourceParameters) DeepCopy() *GitSourceParameters {
	if in == nil {
		return nil
	}
	out := new(GitSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantInitParameters) DeepCopyInto(out *GrantInitParameters) {
	*out = *in
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantInitParameters.
func (in *GrantInitParameters) DeepCopy() *GrantInitParameters {
	if in == nil {
		return nil
	}
	out := new(GrantInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantObservation) DeepCopyInto(out *GrantObservation) {
	*out = *in
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantObservation.
func (in *GrantObservation) DeepCopy() *GrantObservation {
	if in == nil {
		return nil
	}
	out := new(GrantObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantParameters) DeepCopyInto(out *GrantParameters) {
	*out = *in
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantParameters.
func (in *GrantParameters) DeepCopy() *GrantParameters {
	if in == nil {
		return nil
	}
	out := new(GrantParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Grants) DeepCopyInto(out *Grants) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Grants.
func (in *Grants) DeepCopy() *Grants {
	if in == nil {
		return nil
	}
	out := new(Grants)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Grants) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantsInitParameters) DeepCopyInto(out *GrantsInitParameters) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.ExternalLocation != nil {
		in, out := &in.ExternalLocation, &out.ExternalLocation
		*out = new(string)
		**out = **in
	}
	if in.ForeignConnection != nil {
		in, out := &in.ForeignConnection, &out.ForeignConnection
		*out = new(string)
		**out = **in
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.Grant != nil {
		in, out := &in.Grant, &out.Grant
		*out = make([]GrantInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metastore != nil {
		in, out := &in.Metastore, &out.Metastore
		*out = new(string)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = new(string)
		**out = **in
	}
	if in.Recipient != nil {
		in, out := &in.Recipient, &out.Recipient
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Share != nil {
		in, out := &in.Share, &out.Share
		*out = new(string)
		**out = **in
	}
	if in.StorageCredential != nil {
		in, out := &in.StorageCredential, &out.StorageCredential
		*out = new(string)
		**out = **in
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantsInitParameters.
func (in *GrantsInitParameters) DeepCopy() *GrantsInitParameters {
	if in == nil {
		return nil
	}
	out := new(GrantsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantsList) DeepCopyInto(out *GrantsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Grants, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantsList.
func (in *GrantsList) DeepCopy() *GrantsList {
	if in == nil {
		return nil
	}
	out := new(GrantsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GrantsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantsObservation) DeepCopyInto(out *GrantsObservation) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.ExternalLocation != nil {
		in, out := &in.ExternalLocation, &out.ExternalLocation
		*out = new(string)
		**out = **in
	}
	if in.ForeignConnection != nil {
		in, out := &in.ForeignConnection, &out.ForeignConnection
		*out = new(string)
		**out = **in
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.Grant != nil {
		in, out := &in.Grant, &out.Grant
		*out = make([]GrantObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Metastore != nil {
		in, out := &in.Metastore, &out.Metastore
		*out = new(string)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = new(string)
		**out = **in
	}
	if in.Recipient != nil {
		in, out := &in.Recipient, &out.Recipient
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Share != nil {
		in, out := &in.Share, &out.Share
		*out = new(string)
		**out = **in
	}
	if in.StorageCredential != nil {
		in, out := &in.StorageCredential, &out.StorageCredential
		*out = new(string)
		**out = **in
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantsObservation.
func (in *GrantsObservation) DeepCopy() *GrantsObservation {
	if in == nil {
		return nil
	}
	out := new(GrantsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantsParameters) DeepCopyInto(out *GrantsParameters) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.ExternalLocation != nil {
		in, out := &in.ExternalLocation, &out.ExternalLocation
		*out = new(string)
		**out = **in
	}
	if in.ForeignConnection != nil {
		in, out := &in.ForeignConnection, &out.ForeignConnection
		*out = new(string)
		**out = **in
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.Grant != nil {
		in, out := &in.Grant, &out.Grant
		*out = make([]GrantParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metastore != nil {
		in, out := &in.Metastore, &out.Metastore
		*out = new(string)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = new(string)
		**out = **in
	}
	if in.Recipient != nil {
		in, out := &in.Recipient, &out.Recipient
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Share != nil {
		in, out := &in.Share, &out.Share
		*out = new(string)
		**out = **in
	}
	if in.StorageCredential != nil {
		in, out := &in.StorageCredential, &out.StorageCredential
		*out = new(string)
		**out = **in
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantsParameters.
func (in *GrantsParameters) DeepCopy() *GrantsParameters {
	if in == nil {
		return nil
	}
	out := new(GrantsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantsSpec) DeepCopyInto(out *GrantsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantsSpec.
func (in *GrantsSpec) DeepCopy() *GrantsSpec {
	if in == nil {
		return nil
	}
	out := new(GrantsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantsStatus) DeepCopyInto(out *GrantsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantsStatus.
func (in *GrantsStatus) DeepCopy() *GrantsStatus {
	if in == nil {
		return nil
	}
	out := new(GrantsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Group) DeepCopyInto(out *Group) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Group.
func (in *Group) DeepCopy() *Group {
	if in == nil {
		return nil
	}
	out := new(Group)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Group) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupInitParameters) DeepCopyInto(out *GroupInitParameters) {
	*out = *in
	if in.ACLPrincipalID != nil {
		in, out := &in.ACLPrincipalID, &out.ACLPrincipalID
		*out = new(string)
		**out = **in
	}
	if in.AllowClusterCreate != nil {
		in, out := &in.AllowClusterCreate, &out.AllowClusterCreate
		*out = new(bool)
		**out = **in
	}
	if in.AllowInstancePoolCreate != nil {
		in, out := &in.AllowInstancePoolCreate, &out.AllowInstancePoolCreate
		*out = new(bool)
		**out = **in
	}
	if in.DatabricksSQLAccess != nil {
		in, out := &in.DatabricksSQLAccess, &out.DatabricksSQLAccess
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceAccess != nil {
		in, out := &in.WorkspaceAccess, &out.WorkspaceAccess
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupInitParameters.
func (in *GroupInitParameters) DeepCopy() *GroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(GroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupList) DeepCopyInto(out *GroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Group, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupList.
func (in *GroupList) DeepCopy() *GroupList {
	if in == nil {
		return nil
	}
	out := new(GroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupMember) DeepCopyInto(out *GroupMember) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupMember.
func (in *GroupMember) DeepCopy() *GroupMember {
	if in == nil {
		return nil
	}
	out := new(GroupMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GroupMember) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupMemberInitParameters) DeepCopyInto(out *GroupMemberInitParameters) {
	*out = *in
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.MemberID != nil {
		in, out := &in.MemberID, &out.MemberID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupMemberInitParameters.
func (in *GroupMemberInitParameters) DeepCopy() *GroupMemberInitParameters {
	if in == nil {
		return nil
	}
	out := new(GroupMemberInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupMemberList) DeepCopyInto(out *GroupMemberList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GroupMember, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupMemberList.
func (in *GroupMemberList) DeepCopy() *GroupMemberList {
	if in == nil {
		return nil
	}
	out := new(GroupMemberList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GroupMemberList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupMemberObservation) DeepCopyInto(out *GroupMemberObservation) {
	*out = *in
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MemberID != nil {
		in, out := &in.MemberID, &out.MemberID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupMemberObservation.
func (in *GroupMemberObservation) DeepCopy() *GroupMemberObservation {
	if in == nil {
		return nil
	}
	out := new(GroupMemberObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupMemberParameters) DeepCopyInto(out *GroupMemberParameters) {
	*out = *in
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.MemberID != nil {
		in, out := &in.MemberID, &out.MemberID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupMemberParameters.
func (in *GroupMemberParameters) DeepCopy() *GroupMemberParameters {
	if in == nil {
		return nil
	}
	out := new(GroupMemberParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupMemberSpec) DeepCopyInto(out *GroupMemberSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupMemberSpec.
func (in *GroupMemberSpec) DeepCopy() *GroupMemberSpec {
	if in == nil {
		return nil
	}
	out := new(GroupMemberSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupMemberStatus) DeepCopyInto(out *GroupMemberStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupMemberStatus.
func (in *GroupMemberStatus) DeepCopy() *GroupMemberStatus {
	if in == nil {
		return nil
	}
	out := new(GroupMemberStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupObservation) DeepCopyInto(out *GroupObservation) {
	*out = *in
	if in.ACLPrincipalID != nil {
		in, out := &in.ACLPrincipalID, &out.ACLPrincipalID
		*out = new(string)
		**out = **in
	}
	if in.AllowClusterCreate != nil {
		in, out := &in.AllowClusterCreate, &out.AllowClusterCreate
		*out = new(bool)
		**out = **in
	}
	if in.AllowInstancePoolCreate != nil {
		in, out := &in.AllowInstancePoolCreate, &out.AllowInstancePoolCreate
		*out = new(bool)
		**out = **in
	}
	if in.DatabricksSQLAccess != nil {
		in, out := &in.DatabricksSQLAccess, &out.DatabricksSQLAccess
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceAccess != nil {
		in, out := &in.WorkspaceAccess, &out.WorkspaceAccess
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupObservation.
func (in *GroupObservation) DeepCopy() *GroupObservation {
	if in == nil {
		return nil
	}
	out := new(GroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupParameters) DeepCopyInto(out *GroupParameters) {
	*out = *in
	if in.ACLPrincipalID != nil {
		in, out := &in.ACLPrincipalID, &out.ACLPrincipalID
		*out = new(string)
		**out = **in
	}
	if in.AllowClusterCreate != nil {
		in, out := &in.AllowClusterCreate, &out.AllowClusterCreate
		*out = new(bool)
		**out = **in
	}
	if in.AllowInstancePoolCreate != nil {
		in, out := &in.AllowInstancePoolCreate, &out.AllowInstancePoolCreate
		*out = new(bool)
		**out = **in
	}
	if in.DatabricksSQLAccess != nil {
		in, out := &in.DatabricksSQLAccess, &out.DatabricksSQLAccess
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceAccess != nil {
		in, out := &in.WorkspaceAccess, &out.WorkspaceAccess
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupParameters.
func (in *GroupParameters) DeepCopy() *GroupParameters {
	if in == nil {
		return nil
	}
	out := new(GroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupRole) DeepCopyInto(out *GroupRole) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupRole.
func (in *GroupRole) DeepCopy() *GroupRole {
	if in == nil {
		return nil
	}
	out := new(GroupRole)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GroupRole) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupRoleInitParameters) DeepCopyInto(out *GroupRoleInitParameters) {
	*out = *in
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupRoleInitParameters.
func (in *GroupRoleInitParameters) DeepCopy() *GroupRoleInitParameters {
	if in == nil {
		return nil
	}
	out := new(GroupRoleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupRoleList) DeepCopyInto(out *GroupRoleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GroupRole, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupRoleList.
func (in *GroupRoleList) DeepCopy() *GroupRoleList {
	if in == nil {
		return nil
	}
	out := new(GroupRoleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GroupRoleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupRoleObservation) DeepCopyInto(out *GroupRoleObservation) {
	*out = *in
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupRoleObservation.
func (in *GroupRoleObservation) DeepCopy() *GroupRoleObservation {
	if in == nil {
		return nil
	}
	out := new(GroupRoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupRoleParameters) DeepCopyInto(out *GroupRoleParameters) {
	*out = *in
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupRoleParameters.
func (in *GroupRoleParameters) DeepCopy() *GroupRoleParameters {
	if in == nil {
		return nil
	}
	out := new(GroupRoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupRoleSpec) DeepCopyInto(out *GroupRoleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupRoleSpec.
func (in *GroupRoleSpec) DeepCopy() *GroupRoleSpec {
	if in == nil {
		return nil
	}
	out := new(GroupRoleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupRoleStatus) DeepCopyInto(out *GroupRoleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupRoleStatus.
func (in *GroupRoleStatus) DeepCopy() *GroupRoleStatus {
	if in == nil {
		return nil
	}
	out := new(GroupRoleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSpec) DeepCopyInto(out *GroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSpec.
func (in *GroupSpec) DeepCopy() *GroupSpec {
	if in == nil {
		return nil
	}
	out := new(GroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupStatus) DeepCopyInto(out *GroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupStatus.
func (in *GroupStatus) DeepCopy() *GroupStatus {
	if in == nil {
		return nil
	}
	out := new(GroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthInitParameters) DeepCopyInto(out *HealthInitParameters) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthInitParameters.
func (in *HealthInitParameters) DeepCopy() *HealthInitParameters {
	if in == nil {
		return nil
	}
	out := new(HealthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthObservation) DeepCopyInto(out *HealthObservation) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthObservation.
func (in *HealthObservation) DeepCopy() *HealthObservation {
	if in == nil {
		return nil
	}
	out := new(HealthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthParameters) DeepCopyInto(out *HealthParameters) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthParameters.
func (in *HealthParameters) DeepCopy() *HealthParameters {
	if in == nil {
		return nil
	}
	out := new(HealthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthRulesInitParameters) DeepCopyInto(out *HealthRulesInitParameters) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthRulesInitParameters.
func (in *HealthRulesInitParameters) DeepCopy() *HealthRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(HealthRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthRulesObservation) DeepCopyInto(out *HealthRulesObservation) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthRulesObservation.
func (in *HealthRulesObservation) DeepCopy() *HealthRulesObservation {
	if in == nil {
		return nil
	}
	out := new(HealthRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthRulesParameters) DeepCopyInto(out *HealthRulesParameters) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthRulesParameters.
func (in *HealthRulesParameters) DeepCopy() *HealthRulesParameters {
	if in == nil {
		return nil
	}
	out := new(HealthRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAccessList) DeepCopyInto(out *IPAccessList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAccessList.
func (in *IPAccessList) DeepCopy() *IPAccessList {
	if in == nil {
		return nil
	}
	out := new(IPAccessList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IPAccessList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAccessListInitParameters) DeepCopyInto(out *IPAccessListInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPAddresses != nil {
		in, out := &in.IPAddresses, &out.IPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.ListType != nil {
		in, out := &in.ListType, &out.ListType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAccessListInitParameters.
func (in *IPAccessListInitParameters) DeepCopy() *IPAccessListInitParameters {
	if in == nil {
		return nil
	}
	out := new(IPAccessListInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAccessListList) DeepCopyInto(out *IPAccessListList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IPAccessList, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAccessListList.
func (in *IPAccessListList) DeepCopy() *IPAccessListList {
	if in == nil {
		return nil
	}
	out := new(IPAccessListList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IPAccessListList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAccessListObservation) DeepCopyInto(out *IPAccessListObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddresses != nil {
		in, out := &in.IPAddresses, &out.IPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.ListType != nil {
		in, out := &in.ListType, &out.ListType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAccessListObservation.
func (in *IPAccessListObservation) DeepCopy() *IPAccessListObservation {
	if in == nil {
		return nil
	}
	out := new(IPAccessListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAccessListParameters) DeepCopyInto(out *IPAccessListParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPAddresses != nil {
		in, out := &in.IPAddresses, &out.IPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.ListType != nil {
		in, out := &in.ListType, &out.ListType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAccessListParameters.
func (in *IPAccessListParameters) DeepCopy() *IPAccessListParameters {
	if in == nil {
		return nil
	}
	out := new(IPAccessListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAccessListSpec) DeepCopyInto(out *IPAccessListSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAccessListSpec.
func (in *IPAccessListSpec) DeepCopy() *IPAccessListSpec {
	if in == nil {
		return nil
	}
	out := new(IPAccessListSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAccessListStatus) DeepCopyInto(out *IPAccessListStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAccessListStatus.
func (in *IPAccessListStatus) DeepCopy() *IPAccessListStatus {
	if in == nil {
		return nil
	}
	out := new(IPAccessListStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngestionDefinitionInitParameters) DeepCopyInto(out *IngestionDefinitionInitParameters) {
	*out = *in
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.IngestionGatewayID != nil {
		in, out := &in.IngestionGatewayID, &out.IngestionGatewayID
		*out = new(string)
		**out = **in
	}
	if in.Objects != nil {
		in, out := &in.Objects, &out.Objects
		*out = make([]ObjectsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableConfiguration != nil {
		in, out := &in.TableConfiguration, &out.TableConfiguration
		*out = make([]IngestionDefinitionTableConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngestionDefinitionInitParameters.
func (in *IngestionDefinitionInitParameters) DeepCopy() *IngestionDefinitionInitParameters {
	if in == nil {
		return nil
	}
	out := new(IngestionDefinitionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngestionDefinitionObservation) DeepCopyInto(out *IngestionDefinitionObservation) {
	*out = *in
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.IngestionGatewayID != nil {
		in, out := &in.IngestionGatewayID, &out.IngestionGatewayID
		*out = new(string)
		**out = **in
	}
	if in.Objects != nil {
		in, out := &in.Objects, &out.Objects
		*out = make([]ObjectsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableConfiguration != nil {
		in, out := &in.TableConfiguration, &out.TableConfiguration
		*out = make([]IngestionDefinitionTableConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngestionDefinitionObservation.
func (in *IngestionDefinitionObservation) DeepCopy() *IngestionDefinitionObservation {
	if in == nil {
		return nil
	}
	out := new(IngestionDefinitionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngestionDefinitionParameters) DeepCopyInto(out *IngestionDefinitionParameters) {
	*out = *in
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.IngestionGatewayID != nil {
		in, out := &in.IngestionGatewayID, &out.IngestionGatewayID
		*out = new(string)
		**out = **in
	}
	if in.Objects != nil {
		in, out := &in.Objects, &out.Objects
		*out = make([]ObjectsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableConfiguration != nil {
		in, out := &in.TableConfiguration, &out.TableConfiguration
		*out = make([]IngestionDefinitionTableConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngestionDefinitionParameters.
func (in *IngestionDefinitionParameters) DeepCopy() *IngestionDefinitionParameters {
	if in == nil {
		return nil
	}
	out := new(IngestionDefinitionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngestionDefinitionTableConfigurationInitParameters) DeepCopyInto(out *IngestionDefinitionTableConfigurationInitParameters) {
	*out = *in
	if in.PrimaryKeys != nil {
		in, out := &in.PrimaryKeys, &out.PrimaryKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SalesforceIncludeFormulaFields != nil {
		in, out := &in.SalesforceIncludeFormulaFields, &out.SalesforceIncludeFormulaFields
		*out = new(bool)
		**out = **in
	}
	if in.ScdType != nil {
		in, out := &in.ScdType, &out.ScdType
		*out = new(string)
		**out = **in
	}
	if in.SequenceBy != nil {
		in, out := &in.SequenceBy, &out.SequenceBy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngestionDefinitionTableConfigurationInitParameters.
func (in *IngestionDefinitionTableConfigurationInitParameters) DeepCopy() *IngestionDefinitionTableConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(IngestionDefinitionTableConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngestionDefinitionTableConfigurationObservation) DeepCopyInto(out *IngestionDefinitionTableConfigurationObservation) {
	*out = *in
	if in.PrimaryKeys != nil {
		in, out := &in.PrimaryKeys, &out.PrimaryKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SalesforceIncludeFormulaFields != nil {
		in, out := &in.SalesforceIncludeFormulaFields, &out.SalesforceIncludeFormulaFields
		*out = new(bool)
		**out = **in
	}
	if in.ScdType != nil {
		in, out := &in.ScdType, &out.ScdType
		*out = new(string)
		**out = **in
	}
	if in.SequenceBy != nil {
		in, out := &in.SequenceBy, &out.SequenceBy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngestionDefinitionTableConfigurationObservation.
func (in *IngestionDefinitionTableConfigurationObservation) DeepCopy() *IngestionDefinitionTableConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(IngestionDefinitionTableConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngestionDefinitionTableConfigurationParameters) DeepCopyInto(out *IngestionDefinitionTableConfigurationParameters) {
	*out = *in
	if in.PrimaryKeys != nil {
		in, out := &in.PrimaryKeys, &out.PrimaryKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SalesforceIncludeFormulaFields != nil {
		in, out := &in.SalesforceIncludeFormulaFields, &out.SalesforceIncludeFormulaFields
		*out = new(bool)
		**out = **in
	}
	if in.ScdType != nil {
		in, out := &in.ScdType, &out.ScdType
		*out = new(string)
		**out = **in
	}
	if in.SequenceBy != nil {
		in, out := &in.SequenceBy, &out.SequenceBy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngestionDefinitionTableConfigurationParameters.
func (in *IngestionDefinitionTableConfigurationParameters) DeepCopy() *IngestionDefinitionTableConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(IngestionDefinitionTableConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsAbfssInitParameters) DeepCopyInto(out *InitScriptsAbfssInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsAbfssInitParameters.
func (in *InitScriptsAbfssInitParameters) DeepCopy() *InitScriptsAbfssInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsAbfssInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsAbfssObservation) DeepCopyInto(out *InitScriptsAbfssObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsAbfssObservation.
func (in *InitScriptsAbfssObservation) DeepCopy() *InitScriptsAbfssObservation {
	if in == nil {
		return nil
	}
	out := new(InitScriptsAbfssObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsAbfssParameters) DeepCopyInto(out *InitScriptsAbfssParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsAbfssParameters.
func (in *InitScriptsAbfssParameters) DeepCopy() *InitScriptsAbfssParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsAbfssParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsDbfsInitParameters) DeepCopyInto(out *InitScriptsDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsDbfsInitParameters.
func (in *InitScriptsDbfsInitParameters) DeepCopy() *InitScriptsDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsDbfsObservation) DeepCopyInto(out *InitScriptsDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsDbfsObservation.
func (in *InitScriptsDbfsObservation) DeepCopy() *InitScriptsDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(InitScriptsDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsDbfsParameters) DeepCopyInto(out *InitScriptsDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsDbfsParameters.
func (in *InitScriptsDbfsParameters) DeepCopy() *InitScriptsDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsFileInitParameters) DeepCopyInto(out *InitScriptsFileInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsFileInitParameters.
func (in *InitScriptsFileInitParameters) DeepCopy() *InitScriptsFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsFileObservation) DeepCopyInto(out *InitScriptsFileObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsFileObservation.
func (in *InitScriptsFileObservation) DeepCopy() *InitScriptsFileObservation {
	if in == nil {
		return nil
	}
	out := new(InitScriptsFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsFileParameters) DeepCopyInto(out *InitScriptsFileParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsFileParameters.
func (in *InitScriptsFileParameters) DeepCopy() *InitScriptsFileParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsGcsInitParameters) DeepCopyInto(out *InitScriptsGcsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsGcsInitParameters.
func (in *InitScriptsGcsInitParameters) DeepCopy() *InitScriptsGcsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsGcsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsGcsObservation) DeepCopyInto(out *InitScriptsGcsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsGcsObservation.
func (in *InitScriptsGcsObservation) DeepCopy() *InitScriptsGcsObservation {
	if in == nil {
		return nil
	}
	out := new(InitScriptsGcsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsGcsParameters) DeepCopyInto(out *InitScriptsGcsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsGcsParameters.
func (in *InitScriptsGcsParameters) DeepCopy() *InitScriptsGcsParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsGcsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsInitParameters) DeepCopyInto(out *InitScriptsInitParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]AbfssInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]InitScriptsDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]FileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]GcsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]InitScriptsS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]VolumesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]WorkspaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsInitParameters.
func (in *InitScriptsInitParameters) DeepCopy() *InitScriptsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsObservation) DeepCopyInto(out *InitScriptsObservation) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]AbfssObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]InitScriptsDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]FileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]GcsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]InitScriptsS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]VolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]WorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsObservation.
func (in *InitScriptsObservation) DeepCopy() *InitScriptsObservation {
	if in == nil {
		return nil
	}
	out := new(InitScriptsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsParameters) DeepCopyInto(out *InitScriptsParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]AbfssParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]InitScriptsDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]FileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]GcsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]InitScriptsS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]VolumesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]WorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsParameters.
func (in *InitScriptsParameters) DeepCopy() *InitScriptsParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsS3InitParameters) DeepCopyInto(out *InitScriptsS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsS3InitParameters.
func (in *InitScriptsS3InitParameters) DeepCopy() *InitScriptsS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsS3Observation) DeepCopyInto(out *InitScriptsS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsS3Observation.
func (in *InitScriptsS3Observation) DeepCopy() *InitScriptsS3Observation {
	if in == nil {
		return nil
	}
	out := new(InitScriptsS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsS3Parameters) DeepCopyInto(out *InitScriptsS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsS3Parameters.
func (in *InitScriptsS3Parameters) DeepCopy() *InitScriptsS3Parameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsVolumesInitParameters) DeepCopyInto(out *InitScriptsVolumesInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsVolumesInitParameters.
func (in *InitScriptsVolumesInitParameters) DeepCopy() *InitScriptsVolumesInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsVolumesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsVolumesObservation) DeepCopyInto(out *InitScriptsVolumesObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsVolumesObservation.
func (in *InitScriptsVolumesObservation) DeepCopy() *InitScriptsVolumesObservation {
	if in == nil {
		return nil
	}
	out := new(InitScriptsVolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsVolumesParameters) DeepCopyInto(out *InitScriptsVolumesParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsVolumesParameters.
func (in *InitScriptsVolumesParameters) DeepCopy() *InitScriptsVolumesParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsVolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsWorkspaceInitParameters) DeepCopyInto(out *InitScriptsWorkspaceInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsWorkspaceInitParameters.
func (in *InitScriptsWorkspaceInitParameters) DeepCopy() *InitScriptsWorkspaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsWorkspaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsWorkspaceObservation) DeepCopyInto(out *InitScriptsWorkspaceObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsWorkspaceObservation.
func (in *InitScriptsWorkspaceObservation) DeepCopy() *InitScriptsWorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(InitScriptsWorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsWorkspaceParameters) DeepCopyInto(out *InitScriptsWorkspaceParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsWorkspaceParameters.
func (in *InitScriptsWorkspaceParameters) DeepCopy() *InitScriptsWorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsWorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePool) DeepCopyInto(out *InstancePool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePool.
func (in *InstancePool) DeepCopy() *InstancePool {
	if in == nil {
		return nil
	}
	out := new(InstancePool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstancePool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolAwsAttributesInitParameters) DeepCopyInto(out *InstancePoolAwsAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolAwsAttributesInitParameters.
func (in *InstancePoolAwsAttributesInitParameters) DeepCopy() *InstancePoolAwsAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolAwsAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolAwsAttributesObservation) DeepCopyInto(out *InstancePoolAwsAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolAwsAttributesObservation.
func (in *InstancePoolAwsAttributesObservation) DeepCopy() *InstancePoolAwsAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(InstancePoolAwsAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolAwsAttributesParameters) DeepCopyInto(out *InstancePoolAwsAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolAwsAttributesParameters.
func (in *InstancePoolAwsAttributesParameters) DeepCopy() *InstancePoolAwsAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolAwsAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolAzureAttributesInitParameters) DeepCopyInto(out *InstancePoolAzureAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolAzureAttributesInitParameters.
func (in *InstancePoolAzureAttributesInitParameters) DeepCopy() *InstancePoolAzureAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolAzureAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolAzureAttributesObservation) DeepCopyInto(out *InstancePoolAzureAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolAzureAttributesObservation.
func (in *InstancePoolAzureAttributesObservation) DeepCopy() *InstancePoolAzureAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(InstancePoolAzureAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolAzureAttributesParameters) DeepCopyInto(out *InstancePoolAzureAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolAzureAttributesParameters.
func (in *InstancePoolAzureAttributesParameters) DeepCopy() *InstancePoolAzureAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolAzureAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolFleetAttributesInitParameters) DeepCopyInto(out *InstancePoolFleetAttributesInitParameters) {
	*out = *in
	if in.FleetOnDemandOption != nil {
		in, out := &in.FleetOnDemandOption, &out.FleetOnDemandOption
		*out = make([]FleetOnDemandOptionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FleetSpotOption != nil {
		in, out := &in.FleetSpotOption, &out.FleetSpotOption
		*out = make([]FleetSpotOptionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchTemplateOverride != nil {
		in, out := &in.LaunchTemplateOverride, &out.LaunchTemplateOverride
		*out = make([]LaunchTemplateOverrideInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolFleetAttributesInitParameters.
func (in *InstancePoolFleetAttributesInitParameters) DeepCopy() *InstancePoolFleetAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolFleetAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolFleetAttributesObservation) DeepCopyInto(out *InstancePoolFleetAttributesObservation) {
	*out = *in
	if in.FleetOnDemandOption != nil {
		in, out := &in.FleetOnDemandOption, &out.FleetOnDemandOption
		*out = make([]FleetOnDemandOptionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FleetSpotOption != nil {
		in, out := &in.FleetSpotOption, &out.FleetSpotOption
		*out = make([]FleetSpotOptionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchTemplateOverride != nil {
		in, out := &in.LaunchTemplateOverride, &out.LaunchTemplateOverride
		*out = make([]LaunchTemplateOverrideObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolFleetAttributesObservation.
func (in *InstancePoolFleetAttributesObservation) DeepCopy() *InstancePoolFleetAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(InstancePoolFleetAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolFleetAttributesParameters) DeepCopyInto(out *InstancePoolFleetAttributesParameters) {
	*out = *in
	if in.FleetOnDemandOption != nil {
		in, out := &in.FleetOnDemandOption, &out.FleetOnDemandOption
		*out = make([]FleetOnDemandOptionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FleetSpotOption != nil {
		in, out := &in.FleetSpotOption, &out.FleetSpotOption
		*out = make([]FleetSpotOptionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchTemplateOverride != nil {
		in, out := &in.LaunchTemplateOverride, &out.LaunchTemplateOverride
		*out = make([]LaunchTemplateOverrideParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolFleetAttributesParameters.
func (in *InstancePoolFleetAttributesParameters) DeepCopy() *InstancePoolFleetAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolFleetAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolGCPAttributesInitParameters) DeepCopyInto(out *InstancePoolGCPAttributesInitParameters) {
	*out = *in
	if in.GCPAvailability != nil {
		in, out := &in.GCPAvailability, &out.GCPAvailability
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolGCPAttributesInitParameters.
func (in *InstancePoolGCPAttributesInitParameters) DeepCopy() *InstancePoolGCPAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolGCPAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolGCPAttributesObservation) DeepCopyInto(out *InstancePoolGCPAttributesObservation) {
	*out = *in
	if in.GCPAvailability != nil {
		in, out := &in.GCPAvailability, &out.GCPAvailability
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolGCPAttributesObservation.
func (in *InstancePoolGCPAttributesObservation) DeepCopy() *InstancePoolGCPAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(InstancePoolGCPAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolGCPAttributesParameters) DeepCopyInto(out *InstancePoolGCPAttributesParameters) {
	*out = *in
	if in.GCPAvailability != nil {
		in, out := &in.GCPAvailability, &out.GCPAvailability
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolGCPAttributesParameters.
func (in *InstancePoolGCPAttributesParameters) DeepCopy() *InstancePoolGCPAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolGCPAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolInitParameters) DeepCopyInto(out *InstancePoolInitParameters) {
	*out = *in
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]InstancePoolAwsAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]InstancePoolAzureAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DiskSpec != nil {
		in, out := &in.DiskSpec, &out.DiskSpec
		*out = make([]DiskSpecInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]InstancePoolGCPAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdleInstanceAutoterminationMinutes != nil {
		in, out := &in.IdleInstanceAutoterminationMinutes, &out.IdleInstanceAutoterminationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.InstancePoolFleetAttributes != nil {
		in, out := &in.InstancePoolFleetAttributes, &out.InstancePoolFleetAttributes
		*out = make([]InstancePoolFleetAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolName != nil {
		in, out := &in.InstancePoolName, &out.InstancePoolName
		*out = new(string)
		**out = **in
	}
	if in.MaxCapacity != nil {
		in, out := &in.MaxCapacity, &out.MaxCapacity
		*out = new(float64)
		**out = **in
	}
	if in.MinIdleInstances != nil {
		in, out := &in.MinIdleInstances, &out.MinIdleInstances
		*out = new(float64)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.PreloadedDockerImage != nil {
		in, out := &in.PreloadedDockerImage, &out.PreloadedDockerImage
		*out = make([]PreloadedDockerImageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreloadedSparkVersions != nil {
		in, out := &in.PreloadedSparkVersions, &out.PreloadedSparkVersions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolInitParameters.
func (in *InstancePoolInitParameters) DeepCopy() *InstancePoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolList) DeepCopyInto(out *InstancePoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InstancePool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolList.
func (in *InstancePoolList) DeepCopy() *InstancePoolList {
	if in == nil {
		return nil
	}
	out := new(InstancePoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstancePoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolObservation) DeepCopyInto(out *InstancePoolObservation) {
	*out = *in
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]InstancePoolAwsAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]InstancePoolAzureAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DiskSpec != nil {
		in, out := &in.DiskSpec, &out.DiskSpec
		*out = make([]DiskSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]InstancePoolGCPAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IdleInstanceAutoterminationMinutes != nil {
		in, out := &in.IdleInstanceAutoterminationMinutes, &out.IdleInstanceAutoterminationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.InstancePoolFleetAttributes != nil {
		in, out := &in.InstancePoolFleetAttributes, &out.InstancePoolFleetAttributes
		*out = make([]InstancePoolFleetAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolName != nil {
		in, out := &in.InstancePoolName, &out.InstancePoolName
		*out = new(string)
		**out = **in
	}
	if in.MaxCapacity != nil {
		in, out := &in.MaxCapacity, &out.MaxCapacity
		*out = new(float64)
		**out = **in
	}
	if in.MinIdleInstances != nil {
		in, out := &in.MinIdleInstances, &out.MinIdleInstances
		*out = new(float64)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.PreloadedDockerImage != nil {
		in, out := &in.PreloadedDockerImage, &out.PreloadedDockerImage
		*out = make([]PreloadedDockerImageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreloadedSparkVersions != nil {
		in, out := &in.PreloadedSparkVersions, &out.PreloadedSparkVersions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolObservation.
func (in *InstancePoolObservation) DeepCopy() *InstancePoolObservation {
	if in == nil {
		return nil
	}
	out := new(InstancePoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolParameters) DeepCopyInto(out *InstancePoolParameters) {
	*out = *in
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]InstancePoolAwsAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]InstancePoolAzureAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DiskSpec != nil {
		in, out := &in.DiskSpec, &out.DiskSpec
		*out = make([]DiskSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]InstancePoolGCPAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdleInstanceAutoterminationMinutes != nil {
		in, out := &in.IdleInstanceAutoterminationMinutes, &out.IdleInstanceAutoterminationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.InstancePoolFleetAttributes != nil {
		in, out := &in.InstancePoolFleetAttributes, &out.InstancePoolFleetAttributes
		*out = make([]InstancePoolFleetAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolName != nil {
		in, out := &in.InstancePoolName, &out.InstancePoolName
		*out = new(string)
		**out = **in
	}
	if in.MaxCapacity != nil {
		in, out := &in.MaxCapacity, &out.MaxCapacity
		*out = new(float64)
		**out = **in
	}
	if in.MinIdleInstances != nil {
		in, out := &in.MinIdleInstances, &out.MinIdleInstances
		*out = new(float64)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.PreloadedDockerImage != nil {
		in, out := &in.PreloadedDockerImage, &out.PreloadedDockerImage
		*out = make([]PreloadedDockerImageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreloadedSparkVersions != nil {
		in, out := &in.PreloadedSparkVersions, &out.PreloadedSparkVersions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolParameters.
func (in *InstancePoolParameters) DeepCopy() *InstancePoolParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolSpec) DeepCopyInto(out *InstancePoolSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolSpec.
func (in *InstancePoolSpec) DeepCopy() *InstancePoolSpec {
	if in == nil {
		return nil
	}
	out := new(InstancePoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolStatus) DeepCopyInto(out *InstancePoolStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolStatus.
func (in *InstancePoolStatus) DeepCopy() *InstancePoolStatus {
	if in == nil {
		return nil
	}
	out := new(InstancePoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Job) DeepCopyInto(out *Job) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Job.
func (in *Job) DeepCopy() *Job {
	if in == nil {
		return nil
	}
	out := new(Job)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Job) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobClusterInitParameters) DeepCopyInto(out *JobClusterInitParameters) {
	*out = *in
	if in.JobClusterKey != nil {
		in, out := &in.JobClusterKey, &out.JobClusterKey
		*out = new(string)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]NewClusterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobClusterInitParameters.
func (in *JobClusterInitParameters) DeepCopy() *JobClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobClusterObservation) DeepCopyInto(out *JobClusterObservation) {
	*out = *in
	if in.JobClusterKey != nil {
		in, out := &in.JobClusterKey, &out.JobClusterKey
		*out = new(string)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]NewClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobClusterObservation.
func (in *JobClusterObservation) DeepCopy() *JobClusterObservation {
	if in == nil {
		return nil
	}
	out := new(JobClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobClusterParameters) DeepCopyInto(out *JobClusterParameters) {
	*out = *in
	if in.JobClusterKey != nil {
		in, out := &in.JobClusterKey, &out.JobClusterKey
		*out = new(string)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]NewClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobClusterParameters.
func (in *JobClusterParameters) DeepCopy() *JobClusterParameters {
	if in == nil {
		return nil
	}
	out := new(JobClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobInitParameters) DeepCopyInto(out *JobInitParameters) {
	*out = *in
	if in.AlwaysRunning != nil {
		in, out := &in.AlwaysRunning, &out.AlwaysRunning
		*out = new(bool)
		**out = **in
	}
	if in.BudgetPolicyID != nil {
		in, out := &in.BudgetPolicyID, &out.BudgetPolicyID
		*out = new(string)
		**out = **in
	}
	if in.Continuous != nil {
		in, out := &in.Continuous, &out.Continuous
		*out = make([]ContinuousInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ControlRunState != nil {
		in, out := &in.ControlRunState, &out.ControlRunState
		*out = new(bool)
		**out = **in
	}
	if in.DbtTask != nil {
		in, out := &in.DbtTask, &out.DbtTask
		*out = make([]DbtTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = make([]DeploymentInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EditMode != nil {
		in, out := &in.EditMode, &out.EditMode
		*out = new(string)
		**out = **in
	}
	if in.EmailNotifications != nil {
		in, out := &in.EmailNotifications, &out.EmailNotifications
		*out = make([]EmailNotificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make([]EnvironmentInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExistingClusterID != nil {
		in, out := &in.ExistingClusterID, &out.ExistingClusterID
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.GitSource != nil {
		in, out := &in.GitSource, &out.GitSource
		*out = make([]GitSourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]HealthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobCluster != nil {
		in, out := &in.JobCluster, &out.JobCluster
		*out = make([]JobClusterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]JobLibraryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxConcurrentRuns != nil {
		in, out := &in.MaxConcurrentRuns, &out.MaxConcurrentRuns
		*out = new(float64)
		**out = **in
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MinRetryIntervalMillis != nil {
		in, out := &in.MinRetryIntervalMillis, &out.MinRetryIntervalMillis
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]JobNewClusterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotebookTask != nil {
		in, out := &in.NotebookTask, &out.NotebookTask
		*out = make([]NotebookTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]NotificationSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]ParameterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PipelineTask != nil {
		in, out := &in.PipelineTask, &out.PipelineTask
		*out = make([]PipelineTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonWheelTask != nil {
		in, out := &in.PythonWheelTask, &out.PythonWheelTask
		*out = make([]PythonWheelTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Queue != nil {
		in, out := &in.Queue, &out.Queue
		*out = make([]QueueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryOnTimeout != nil {
		in, out := &in.RetryOnTimeout, &out.RetryOnTimeout
		*out = new(bool)
		**out = **in
	}
	if in.RunAs != nil {
		in, out := &in.RunAs, &out.RunAs
		*out = make([]RunAsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RunJobTask != nil {
		in, out := &in.RunJobTask, &out.RunJobTask
		*out = make([]RunJobTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJarTask != nil {
		in, out := &in.SparkJarTask, &out.SparkJarTask
		*out = make([]SparkJarTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkPythonTask != nil {
		in, out := &in.SparkPythonTask, &out.SparkPythonTask
		*out = make([]SparkPythonTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSubmitTask != nil {
		in, out := &in.SparkSubmitTask, &out.SparkSubmitTask
		*out = make([]SparkSubmitTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = make([]TaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]TriggerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WebhookNotifications != nil {
		in, out := &in.WebhookNotifications, &out.WebhookNotifications
		*out = make([]JobWebhookNotificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobInitParameters.
func (in *JobInitParameters) DeepCopy() *JobInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobLibraryCranInitParameters) DeepCopyInto(out *JobLibraryCranInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobLibraryCranInitParameters.
func (in *JobLibraryCranInitParameters) DeepCopy() *JobLibraryCranInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobLibraryCranInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobLibraryCranObservation) DeepCopyInto(out *JobLibraryCranObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobLibraryCranObservation.
func (in *JobLibraryCranObservation) DeepCopy() *JobLibraryCranObservation {
	if in == nil {
		return nil
	}
	out := new(JobLibraryCranObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobLibraryCranParameters) DeepCopyInto(out *JobLibraryCranParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobLibraryCranParameters.
func (in *JobLibraryCranParameters) DeepCopy() *JobLibraryCranParameters {
	if in == nil {
		return nil
	}
	out := new(JobLibraryCranParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobLibraryInitParameters) DeepCopyInto(out *JobLibraryInitParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]JobLibraryCranInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]JobLibraryMavenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]JobLibraryPypiInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobLibraryInitParameters.
func (in *JobLibraryInitParameters) DeepCopy() *JobLibraryInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobLibraryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobLibraryMavenInitParameters) DeepCopyInto(out *JobLibraryMavenInitParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobLibraryMavenInitParameters.
func (in *JobLibraryMavenInitParameters) DeepCopy() *JobLibraryMavenInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobLibraryMavenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobLibraryMavenObservation) DeepCopyInto(out *JobLibraryMavenObservation) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobLibraryMavenObservation.
func (in *JobLibraryMavenObservation) DeepCopy() *JobLibraryMavenObservation {
	if in == nil {
		return nil
	}
	out := new(JobLibraryMavenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobLibraryMavenParameters) DeepCopyInto(out *JobLibraryMavenParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobLibraryMavenParameters.
func (in *JobLibraryMavenParameters) DeepCopy() *JobLibraryMavenParameters {
	if in == nil {
		return nil
	}
	out := new(JobLibraryMavenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobLibraryObservation) DeepCopyInto(out *JobLibraryObservation) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]JobLibraryCranObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]JobLibraryMavenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]JobLibraryPypiObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobLibraryObservation.
func (in *JobLibraryObservation) DeepCopy() *JobLibraryObservation {
	if in == nil {
		return nil
	}
	out := new(JobLibraryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobLibraryParameters) DeepCopyInto(out *JobLibraryParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]JobLibraryCranParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]JobLibraryMavenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]JobLibraryPypiParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobLibraryParameters.
func (in *JobLibraryParameters) DeepCopy() *JobLibraryParameters {
	if in == nil {
		return nil
	}
	out := new(JobLibraryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobLibraryPypiInitParameters) DeepCopyInto(out *JobLibraryPypiInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobLibraryPypiInitParameters.
func (in *JobLibraryPypiInitParameters) DeepCopy() *JobLibraryPypiInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobLibraryPypiInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobLibraryPypiObservation) DeepCopyInto(out *JobLibraryPypiObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobLibraryPypiObservation.
func (in *JobLibraryPypiObservation) DeepCopy() *JobLibraryPypiObservation {
	if in == nil {
		return nil
	}
	out := new(JobLibraryPypiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobLibraryPypiParameters) DeepCopyInto(out *JobLibraryPypiParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobLibraryPypiParameters.
func (in *JobLibraryPypiParameters) DeepCopy() *JobLibraryPypiParameters {
	if in == nil {
		return nil
	}
	out := new(JobLibraryPypiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobList) DeepCopyInto(out *JobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Job, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobList.
func (in *JobList) DeepCopy() *JobList {
	if in == nil {
		return nil
	}
	out := new(JobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *JobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterAutoscaleInitParameters) DeepCopyInto(out *JobNewClusterAutoscaleInitParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterAutoscaleInitParameters.
func (in *JobNewClusterAutoscaleInitParameters) DeepCopy() *JobNewClusterAutoscaleInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterAutoscaleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterAutoscaleObservation) DeepCopyInto(out *JobNewClusterAutoscaleObservation) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterAutoscaleObservation.
func (in *JobNewClusterAutoscaleObservation) DeepCopy() *JobNewClusterAutoscaleObservation {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterAutoscaleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterAutoscaleParameters) DeepCopyInto(out *JobNewClusterAutoscaleParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterAutoscaleParameters.
func (in *JobNewClusterAutoscaleParameters) DeepCopy() *JobNewClusterAutoscaleParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterAutoscaleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterAwsAttributesInitParameters) DeepCopyInto(out *JobNewClusterAwsAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterAwsAttributesInitParameters.
func (in *JobNewClusterAwsAttributesInitParameters) DeepCopy() *JobNewClusterAwsAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterAwsAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterAwsAttributesObservation) DeepCopyInto(out *JobNewClusterAwsAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterAwsAttributesObservation.
func (in *JobNewClusterAwsAttributesObservation) DeepCopy() *JobNewClusterAwsAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterAwsAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterAwsAttributesParameters) DeepCopyInto(out *JobNewClusterAwsAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterAwsAttributesParameters.
func (in *JobNewClusterAwsAttributesParameters) DeepCopy() *JobNewClusterAwsAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterAwsAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterAzureAttributesInitParameters) DeepCopyInto(out *JobNewClusterAzureAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]NewClusterAzureAttributesLogAnalyticsInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterAzureAttributesInitParameters.
func (in *JobNewClusterAzureAttributesInitParameters) DeepCopy() *JobNewClusterAzureAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterAzureAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterAzureAttributesObservation) DeepCopyInto(out *JobNewClusterAzureAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]NewClusterAzureAttributesLogAnalyticsInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterAzureAttributesObservation.
func (in *JobNewClusterAzureAttributesObservation) DeepCopy() *JobNewClusterAzureAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterAzureAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterAzureAttributesParameters) DeepCopyInto(out *JobNewClusterAzureAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]NewClusterAzureAttributesLogAnalyticsInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterAzureAttributesParameters.
func (in *JobNewClusterAzureAttributesParameters) DeepCopy() *JobNewClusterAzureAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterAzureAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterClusterLogConfInitParameters) DeepCopyInto(out *JobNewClusterClusterLogConfInitParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]NewClusterClusterLogConfDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]NewClusterClusterLogConfS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterClusterLogConfInitParameters.
func (in *JobNewClusterClusterLogConfInitParameters) DeepCopy() *JobNewClusterClusterLogConfInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterClusterLogConfInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterClusterLogConfObservation) DeepCopyInto(out *JobNewClusterClusterLogConfObservation) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]NewClusterClusterLogConfDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]NewClusterClusterLogConfS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterClusterLogConfObservation.
func (in *JobNewClusterClusterLogConfObservation) DeepCopy() *JobNewClusterClusterLogConfObservation {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterClusterLogConfObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterClusterLogConfParameters) DeepCopyInto(out *JobNewClusterClusterLogConfParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]NewClusterClusterLogConfDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]NewClusterClusterLogConfS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterClusterLogConfParameters.
func (in *JobNewClusterClusterLogConfParameters) DeepCopy() *JobNewClusterClusterLogConfParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterClusterLogConfParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterClusterMountInfoInitParameters) DeepCopyInto(out *JobNewClusterClusterMountInfoInitParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]NewClusterClusterMountInfoNetworkFilesystemInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterClusterMountInfoInitParameters.
func (in *JobNewClusterClusterMountInfoInitParameters) DeepCopy() *JobNewClusterClusterMountInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterClusterMountInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterClusterMountInfoObservation) DeepCopyInto(out *JobNewClusterClusterMountInfoObservation) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]NewClusterClusterMountInfoNetworkFilesystemInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterClusterMountInfoObservation.
func (in *JobNewClusterClusterMountInfoObservation) DeepCopy() *JobNewClusterClusterMountInfoObservation {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterClusterMountInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterClusterMountInfoParameters) DeepCopyInto(out *JobNewClusterClusterMountInfoParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]NewClusterClusterMountInfoNetworkFilesystemInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterClusterMountInfoParameters.
func (in *JobNewClusterClusterMountInfoParameters) DeepCopy() *JobNewClusterClusterMountInfoParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterClusterMountInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterDockerImageInitParameters) DeepCopyInto(out *JobNewClusterDockerImageInitParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]NewClusterDockerImageBasicAuthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterDockerImageInitParameters.
func (in *JobNewClusterDockerImageInitParameters) DeepCopy() *JobNewClusterDockerImageInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterDockerImageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterDockerImageObservation) DeepCopyInto(out *JobNewClusterDockerImageObservation) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]NewClusterDockerImageBasicAuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterDockerImageObservation.
func (in *JobNewClusterDockerImageObservation) DeepCopy() *JobNewClusterDockerImageObservation {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterDockerImageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterDockerImageParameters) DeepCopyInto(out *JobNewClusterDockerImageParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]NewClusterDockerImageBasicAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterDockerImageParameters.
func (in *JobNewClusterDockerImageParameters) DeepCopy() *JobNewClusterDockerImageParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterDockerImageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterGCPAttributesInitParameters) DeepCopyInto(out *JobNewClusterGCPAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterGCPAttributesInitParameters.
func (in *JobNewClusterGCPAttributesInitParameters) DeepCopy() *JobNewClusterGCPAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterGCPAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterGCPAttributesObservation) DeepCopyInto(out *JobNewClusterGCPAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterGCPAttributesObservation.
func (in *JobNewClusterGCPAttributesObservation) DeepCopy() *JobNewClusterGCPAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterGCPAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterGCPAttributesParameters) DeepCopyInto(out *JobNewClusterGCPAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterGCPAttributesParameters.
func (in *JobNewClusterGCPAttributesParameters) DeepCopy() *JobNewClusterGCPAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterGCPAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterInitParameters) DeepCopyInto(out *JobNewClusterInitParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]JobNewClusterAutoscaleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]JobNewClusterAwsAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]JobNewClusterAzureAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]JobNewClusterClusterLogConfInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]JobNewClusterClusterMountInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]JobNewClusterDockerImageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]JobNewClusterGCPAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]JobNewClusterInitScriptsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]JobNewClusterLibraryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]JobNewClusterWorkloadTypeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterInitParameters.
func (in *JobNewClusterInitParameters) DeepCopy() *JobNewClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterInitScriptsDbfsInitParameters) DeepCopyInto(out *JobNewClusterInitScriptsDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterInitScriptsDbfsInitParameters.
func (in *JobNewClusterInitScriptsDbfsInitParameters) DeepCopy() *JobNewClusterInitScriptsDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterInitScriptsDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterInitScriptsDbfsObservation) DeepCopyInto(out *JobNewClusterInitScriptsDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterInitScriptsDbfsObservation.
func (in *JobNewClusterInitScriptsDbfsObservation) DeepCopy() *JobNewClusterInitScriptsDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterInitScriptsDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterInitScriptsDbfsParameters) DeepCopyInto(out *JobNewClusterInitScriptsDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterInitScriptsDbfsParameters.
func (in *JobNewClusterInitScriptsDbfsParameters) DeepCopy() *JobNewClusterInitScriptsDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterInitScriptsDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterInitScriptsInitParameters) DeepCopyInto(out *JobNewClusterInitScriptsInitParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]NewClusterInitScriptsAbfssInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]JobNewClusterInitScriptsDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]NewClusterInitScriptsFileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]NewClusterInitScriptsGcsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]JobNewClusterInitScriptsS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]NewClusterInitScriptsVolumesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]NewClusterInitScriptsWorkspaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterInitScriptsInitParameters.
func (in *JobNewClusterInitScriptsInitParameters) DeepCopy() *JobNewClusterInitScriptsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterInitScriptsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterInitScriptsObservation) DeepCopyInto(out *JobNewClusterInitScriptsObservation) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]NewClusterInitScriptsAbfssObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]JobNewClusterInitScriptsDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]NewClusterInitScriptsFileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]NewClusterInitScriptsGcsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]JobNewClusterInitScriptsS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]NewClusterInitScriptsVolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]NewClusterInitScriptsWorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterInitScriptsObservation.
func (in *JobNewClusterInitScriptsObservation) DeepCopy() *JobNewClusterInitScriptsObservation {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterInitScriptsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterInitScriptsParameters) DeepCopyInto(out *JobNewClusterInitScriptsParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]NewClusterInitScriptsAbfssParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]JobNewClusterInitScriptsDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]NewClusterInitScriptsFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]NewClusterInitScriptsGcsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]JobNewClusterInitScriptsS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]NewClusterInitScriptsVolumesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]NewClusterInitScriptsWorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterInitScriptsParameters.
func (in *JobNewClusterInitScriptsParameters) DeepCopy() *JobNewClusterInitScriptsParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterInitScriptsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterInitScriptsS3InitParameters) DeepCopyInto(out *JobNewClusterInitScriptsS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterInitScriptsS3InitParameters.
func (in *JobNewClusterInitScriptsS3InitParameters) DeepCopy() *JobNewClusterInitScriptsS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterInitScriptsS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterInitScriptsS3Observation) DeepCopyInto(out *JobNewClusterInitScriptsS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterInitScriptsS3Observation.
func (in *JobNewClusterInitScriptsS3Observation) DeepCopy() *JobNewClusterInitScriptsS3Observation {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterInitScriptsS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterInitScriptsS3Parameters) DeepCopyInto(out *JobNewClusterInitScriptsS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterInitScriptsS3Parameters.
func (in *JobNewClusterInitScriptsS3Parameters) DeepCopy() *JobNewClusterInitScriptsS3Parameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterInitScriptsS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterLibraryInitParameters) DeepCopyInto(out *JobNewClusterLibraryInitParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]NewClusterLibraryCranInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]NewClusterLibraryMavenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]NewClusterLibraryPypiInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterLibraryInitParameters.
func (in *JobNewClusterLibraryInitParameters) DeepCopy() *JobNewClusterLibraryInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterLibraryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterLibraryObservation) DeepCopyInto(out *JobNewClusterLibraryObservation) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]NewClusterLibraryCranObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]NewClusterLibraryMavenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]NewClusterLibraryPypiObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterLibraryObservation.
func (in *JobNewClusterLibraryObservation) DeepCopy() *JobNewClusterLibraryObservation {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterLibraryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterLibraryParameters) DeepCopyInto(out *JobNewClusterLibraryParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]NewClusterLibraryCranParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]NewClusterLibraryMavenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]NewClusterLibraryPypiParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterLibraryParameters.
func (in *JobNewClusterLibraryParameters) DeepCopy() *JobNewClusterLibraryParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterLibraryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterObservation) DeepCopyInto(out *JobNewClusterObservation) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]JobNewClusterAutoscaleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]JobNewClusterAwsAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]JobNewClusterAzureAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]JobNewClusterClusterLogConfObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]JobNewClusterClusterMountInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]JobNewClusterDockerImageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]JobNewClusterGCPAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]JobNewClusterInitScriptsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]JobNewClusterLibraryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]JobNewClusterWorkloadTypeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterObservation.
func (in *JobNewClusterObservation) DeepCopy() *JobNewClusterObservation {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterParameters) DeepCopyInto(out *JobNewClusterParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]JobNewClusterAutoscaleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]JobNewClusterAwsAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]JobNewClusterAzureAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]JobNewClusterClusterLogConfParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]JobNewClusterClusterMountInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]JobNewClusterDockerImageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]JobNewClusterGCPAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]JobNewClusterInitScriptsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]JobNewClusterLibraryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]JobNewClusterWorkloadTypeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterParameters.
func (in *JobNewClusterParameters) DeepCopy() *JobNewClusterParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterWorkloadTypeInitParameters) DeepCopyInto(out *JobNewClusterWorkloadTypeInitParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]NewClusterWorkloadTypeClientsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterWorkloadTypeInitParameters.
func (in *JobNewClusterWorkloadTypeInitParameters) DeepCopy() *JobNewClusterWorkloadTypeInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterWorkloadTypeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterWorkloadTypeObservation) DeepCopyInto(out *JobNewClusterWorkloadTypeObservation) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]NewClusterWorkloadTypeClientsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterWorkloadTypeObservation.
func (in *JobNewClusterWorkloadTypeObservation) DeepCopy() *JobNewClusterWorkloadTypeObservation {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterWorkloadTypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterWorkloadTypeParameters) DeepCopyInto(out *JobNewClusterWorkloadTypeParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]NewClusterWorkloadTypeClientsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterWorkloadTypeParameters.
func (in *JobNewClusterWorkloadTypeParameters) DeepCopy() *JobNewClusterWorkloadTypeParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterWorkloadTypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobObservation) DeepCopyInto(out *JobObservation) {
	*out = *in
	if in.AlwaysRunning != nil {
		in, out := &in.AlwaysRunning, &out.AlwaysRunning
		*out = new(bool)
		**out = **in
	}
	if in.BudgetPolicyID != nil {
		in, out := &in.BudgetPolicyID, &out.BudgetPolicyID
		*out = new(string)
		**out = **in
	}
	if in.Continuous != nil {
		in, out := &in.Continuous, &out.Continuous
		*out = make([]ContinuousObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ControlRunState != nil {
		in, out := &in.ControlRunState, &out.ControlRunState
		*out = new(bool)
		**out = **in
	}
	if in.DbtTask != nil {
		in, out := &in.DbtTask, &out.DbtTask
		*out = make([]DbtTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = make([]DeploymentObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EditMode != nil {
		in, out := &in.EditMode, &out.EditMode
		*out = new(string)
		**out = **in
	}
	if in.EmailNotifications != nil {
		in, out := &in.EmailNotifications, &out.EmailNotifications
		*out = make([]EmailNotificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make([]EnvironmentObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExistingClusterID != nil {
		in, out := &in.ExistingClusterID, &out.ExistingClusterID
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.GitSource != nil {
		in, out := &in.GitSource, &out.GitSource
		*out = make([]GitSourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]HealthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.JobCluster != nil {
		in, out := &in.JobCluster, &out.JobCluster
		*out = make([]JobClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]JobLibraryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxConcurrentRuns != nil {
		in, out := &in.MaxConcurrentRuns, &out.MaxConcurrentRuns
		*out = new(float64)
		**out = **in
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MinRetryIntervalMillis != nil {
		in, out := &in.MinRetryIntervalMillis, &out.MinRetryIntervalMillis
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]JobNewClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotebookTask != nil {
		in, out := &in.NotebookTask, &out.NotebookTask
		*out = make([]NotebookTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]NotificationSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]ParameterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PipelineTask != nil {
		in, out := &in.PipelineTask, &out.PipelineTask
		*out = make([]PipelineTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonWheelTask != nil {
		in, out := &in.PythonWheelTask, &out.PythonWheelTask
		*out = make([]PythonWheelTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Queue != nil {
		in, out := &in.Queue, &out.Queue
		*out = make([]QueueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryOnTimeout != nil {
		in, out := &in.RetryOnTimeout, &out.RetryOnTimeout
		*out = new(bool)
		**out = **in
	}
	if in.RunAs != nil {
		in, out := &in.RunAs, &out.RunAs
		*out = make([]RunAsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RunJobTask != nil {
		in, out := &in.RunJobTask, &out.RunJobTask
		*out = make([]RunJobTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJarTask != nil {
		in, out := &in.SparkJarTask, &out.SparkJarTask
		*out = make([]SparkJarTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkPythonTask != nil {
		in, out := &in.SparkPythonTask, &out.SparkPythonTask
		*out = make([]SparkPythonTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSubmitTask != nil {
		in, out := &in.SparkSubmitTask, &out.SparkSubmitTask
		*out = make([]SparkSubmitTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = make([]TaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]TriggerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WebhookNotifications != nil {
		in, out := &in.WebhookNotifications, &out.WebhookNotifications
		*out = make([]JobWebhookNotificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobObservation.
func (in *JobObservation) DeepCopy() *JobObservation {
	if in == nil {
		return nil
	}
	out := new(JobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobParameters) DeepCopyInto(out *JobParameters) {
	*out = *in
	if in.AlwaysRunning != nil {
		in, out := &in.AlwaysRunning, &out.AlwaysRunning
		*out = new(bool)
		**out = **in
	}
	if in.BudgetPolicyID != nil {
		in, out := &in.BudgetPolicyID, &out.BudgetPolicyID
		*out = new(string)
		**out = **in
	}
	if in.Continuous != nil {
		in, out := &in.Continuous, &out.Continuous
		*out = make([]ContinuousParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ControlRunState != nil {
		in, out := &in.ControlRunState, &out.ControlRunState
		*out = new(bool)
		**out = **in
	}
	if in.DbtTask != nil {
		in, out := &in.DbtTask, &out.DbtTask
		*out = make([]DbtTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = make([]DeploymentParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EditMode != nil {
		in, out := &in.EditMode, &out.EditMode
		*out = new(string)
		**out = **in
	}
	if in.EmailNotifications != nil {
		in, out := &in.EmailNotifications, &out.EmailNotifications
		*out = make([]EmailNotificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make([]EnvironmentParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExistingClusterID != nil {
		in, out := &in.ExistingClusterID, &out.ExistingClusterID
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.GitSource != nil {
		in, out := &in.GitSource, &out.GitSource
		*out = make([]GitSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]HealthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobCluster != nil {
		in, out := &in.JobCluster, &out.JobCluster
		*out = make([]JobClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]JobLibraryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxConcurrentRuns != nil {
		in, out := &in.MaxConcurrentRuns, &out.MaxConcurrentRuns
		*out = new(float64)
		**out = **in
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MinRetryIntervalMillis != nil {
		in, out := &in.MinRetryIntervalMillis, &out.MinRetryIntervalMillis
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]JobNewClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotebookTask != nil {
		in, out := &in.NotebookTask, &out.NotebookTask
		*out = make([]NotebookTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]NotificationSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]ParameterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PipelineTask != nil {
		in, out := &in.PipelineTask, &out.PipelineTask
		*out = make([]PipelineTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonWheelTask != nil {
		in, out := &in.PythonWheelTask, &out.PythonWheelTask
		*out = make([]PythonWheelTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Queue != nil {
		in, out := &in.Queue, &out.Queue
		*out = make([]QueueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryOnTimeout != nil {
		in, out := &in.RetryOnTimeout, &out.RetryOnTimeout
		*out = new(bool)
		**out = **in
	}
	if in.RunAs != nil {
		in, out := &in.RunAs, &out.RunAs
		*out = make([]RunAsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RunJobTask != nil {
		in, out := &in.RunJobTask, &out.RunJobTask
		*out = make([]RunJobTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJarTask != nil {
		in, out := &in.SparkJarTask, &out.SparkJarTask
		*out = make([]SparkJarTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkPythonTask != nil {
		in, out := &in.SparkPythonTask, &out.SparkPythonTask
		*out = make([]SparkPythonTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSubmitTask != nil {
		in, out := &in.SparkSubmitTask, &out.SparkSubmitTask
		*out = make([]SparkSubmitTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = make([]TaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]TriggerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WebhookNotifications != nil {
		in, out := &in.WebhookNotifications, &out.WebhookNotifications
		*out = make([]JobWebhookNotificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobParameters.
func (in *JobParameters) DeepCopy() *JobParameters {
	if in == nil {
		return nil
	}
	out := new(JobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobSourceInitParameters) DeepCopyInto(out *JobSourceInitParameters) {
	*out = *in
	if in.DirtyState != nil {
		in, out := &in.DirtyState, &out.DirtyState
		*out = new(string)
		**out = **in
	}
	if in.ImportFromGitBranch != nil {
		in, out := &in.ImportFromGitBranch, &out.ImportFromGitBranch
		*out = new(string)
		**out = **in
	}
	if in.JobConfigPath != nil {
		in, out := &in.JobConfigPath, &out.JobConfigPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobSourceInitParameters.
func (in *JobSourceInitParameters) DeepCopy() *JobSourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobSourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobSourceObservation) DeepCopyInto(out *JobSourceObservation) {
	*out = *in
	if in.DirtyState != nil {
		in, out := &in.DirtyState, &out.DirtyState
		*out = new(string)
		**out = **in
	}
	if in.ImportFromGitBranch != nil {
		in, out := &in.ImportFromGitBranch, &out.ImportFromGitBranch
		*out = new(string)
		**out = **in
	}
	if in.JobConfigPath != nil {
		in, out := &in.JobConfigPath, &out.JobConfigPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobSourceObservation.
func (in *JobSourceObservation) DeepCopy() *JobSourceObservation {
	if in == nil {
		return nil
	}
	out := new(JobSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobSourceParameters) DeepCopyInto(out *JobSourceParameters) {
	*out = *in
	if in.DirtyState != nil {
		in, out := &in.DirtyState, &out.DirtyState
		*out = new(string)
		**out = **in
	}
	if in.ImportFromGitBranch != nil {
		in, out := &in.ImportFromGitBranch, &out.ImportFromGitBranch
		*out = new(string)
		**out = **in
	}
	if in.JobConfigPath != nil {
		in, out := &in.JobConfigPath, &out.JobConfigPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobSourceParameters.
func (in *JobSourceParameters) DeepCopy() *JobSourceParameters {
	if in == nil {
		return nil
	}
	out := new(JobSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobSpec) DeepCopyInto(out *JobSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobSpec.
func (in *JobSpec) DeepCopy() *JobSpec {
	if in == nil {
		return nil
	}
	out := new(JobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobStatus) DeepCopyInto(out *JobStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobStatus.
func (in *JobStatus) DeepCopy() *JobStatus {
	if in == nil {
		return nil
	}
	out := new(JobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskHealthInitParameters) DeepCopyInto(out *JobTaskHealthInitParameters) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]TaskHealthRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskHealthInitParameters.
func (in *JobTaskHealthInitParameters) DeepCopy() *JobTaskHealthInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskHealthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskHealthObservation) DeepCopyInto(out *JobTaskHealthObservation) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]TaskHealthRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskHealthObservation.
func (in *JobTaskHealthObservation) DeepCopy() *JobTaskHealthObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskHealthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskHealthParameters) DeepCopyInto(out *JobTaskHealthParameters) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]TaskHealthRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskHealthParameters.
func (in *JobTaskHealthParameters) DeepCopy() *JobTaskHealthParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskHealthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskLibraryCranInitParameters) DeepCopyInto(out *JobTaskLibraryCranInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskLibraryCranInitParameters.
func (in *JobTaskLibraryCranInitParameters) DeepCopy() *JobTaskLibraryCranInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskLibraryCranInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskLibraryCranObservation) DeepCopyInto(out *JobTaskLibraryCranObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskLibraryCranObservation.
func (in *JobTaskLibraryCranObservation) DeepCopy() *JobTaskLibraryCranObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskLibraryCranObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskLibraryCranParameters) DeepCopyInto(out *JobTaskLibraryCranParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskLibraryCranParameters.
func (in *JobTaskLibraryCranParameters) DeepCopy() *JobTaskLibraryCranParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskLibraryCranParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskLibraryInitParameters) DeepCopyInto(out *JobTaskLibraryInitParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]JobTaskLibraryCranInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]JobTaskLibraryMavenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]JobTaskLibraryPypiInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskLibraryInitParameters.
func (in *JobTaskLibraryInitParameters) DeepCopy() *JobTaskLibraryInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskLibraryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskLibraryMavenInitParameters) DeepCopyInto(out *JobTaskLibraryMavenInitParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskLibraryMavenInitParameters.
func (in *JobTaskLibraryMavenInitParameters) DeepCopy() *JobTaskLibraryMavenInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskLibraryMavenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskLibraryMavenObservation) DeepCopyInto(out *JobTaskLibraryMavenObservation) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskLibraryMavenObservation.
func (in *JobTaskLibraryMavenObservation) DeepCopy() *JobTaskLibraryMavenObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskLibraryMavenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskLibraryMavenParameters) DeepCopyInto(out *JobTaskLibraryMavenParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskLibraryMavenParameters.
func (in *JobTaskLibraryMavenParameters) DeepCopy() *JobTaskLibraryMavenParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskLibraryMavenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskLibraryObservation) DeepCopyInto(out *JobTaskLibraryObservation) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]JobTaskLibraryCranObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]JobTaskLibraryMavenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]JobTaskLibraryPypiObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskLibraryObservation.
func (in *JobTaskLibraryObservation) DeepCopy() *JobTaskLibraryObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskLibraryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskLibraryParameters) DeepCopyInto(out *JobTaskLibraryParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]JobTaskLibraryCranParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]JobTaskLibraryMavenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]JobTaskLibraryPypiParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskLibraryParameters.
func (in *JobTaskLibraryParameters) DeepCopy() *JobTaskLibraryParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskLibraryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskLibraryPypiInitParameters) DeepCopyInto(out *JobTaskLibraryPypiInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskLibraryPypiInitParameters.
func (in *JobTaskLibraryPypiInitParameters) DeepCopy() *JobTaskLibraryPypiInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskLibraryPypiInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskLibraryPypiObservation) DeepCopyInto(out *JobTaskLibraryPypiObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskLibraryPypiObservation.
func (in *JobTaskLibraryPypiObservation) DeepCopy() *JobTaskLibraryPypiObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskLibraryPypiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskLibraryPypiParameters) DeepCopyInto(out *JobTaskLibraryPypiParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskLibraryPypiParameters.
func (in *JobTaskLibraryPypiParameters) DeepCopy() *JobTaskLibraryPypiParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskLibraryPypiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAutoscaleInitParameters) DeepCopyInto(out *JobTaskNewClusterAutoscaleInitParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAutoscaleInitParameters.
func (in *JobTaskNewClusterAutoscaleInitParameters) DeepCopy() *JobTaskNewClusterAutoscaleInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAutoscaleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAutoscaleObservation) DeepCopyInto(out *JobTaskNewClusterAutoscaleObservation) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAutoscaleObservation.
func (in *JobTaskNewClusterAutoscaleObservation) DeepCopy() *JobTaskNewClusterAutoscaleObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAutoscaleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAutoscaleParameters) DeepCopyInto(out *JobTaskNewClusterAutoscaleParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAutoscaleParameters.
func (in *JobTaskNewClusterAutoscaleParameters) DeepCopy() *JobTaskNewClusterAutoscaleParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAutoscaleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAwsAttributesInitParameters) DeepCopyInto(out *JobTaskNewClusterAwsAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAwsAttributesInitParameters.
func (in *JobTaskNewClusterAwsAttributesInitParameters) DeepCopy() *JobTaskNewClusterAwsAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAwsAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAwsAttributesObservation) DeepCopyInto(out *JobTaskNewClusterAwsAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAwsAttributesObservation.
func (in *JobTaskNewClusterAwsAttributesObservation) DeepCopy() *JobTaskNewClusterAwsAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAwsAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAwsAttributesParameters) DeepCopyInto(out *JobTaskNewClusterAwsAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAwsAttributesParameters.
func (in *JobTaskNewClusterAwsAttributesParameters) DeepCopy() *JobTaskNewClusterAwsAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAwsAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAzureAttributesInitParameters) DeepCopyInto(out *JobTaskNewClusterAzureAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]JobTaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAzureAttributesInitParameters.
func (in *JobTaskNewClusterAzureAttributesInitParameters) DeepCopy() *JobTaskNewClusterAzureAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAzureAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters) DeepCopyInto(out *JobTaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters.
func (in *JobTaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters) DeepCopy() *JobTaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAzureAttributesLogAnalyticsInfoObservation) DeepCopyInto(out *JobTaskNewClusterAzureAttributesLogAnalyticsInfoObservation) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAzureAttributesLogAnalyticsInfoObservation.
func (in *JobTaskNewClusterAzureAttributesLogAnalyticsInfoObservation) DeepCopy() *JobTaskNewClusterAzureAttributesLogAnalyticsInfoObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAzureAttributesLogAnalyticsInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAzureAttributesLogAnalyticsInfoParameters) DeepCopyInto(out *JobTaskNewClusterAzureAttributesLogAnalyticsInfoParameters) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAzureAttributesLogAnalyticsInfoParameters.
func (in *JobTaskNewClusterAzureAttributesLogAnalyticsInfoParameters) DeepCopy() *JobTaskNewClusterAzureAttributesLogAnalyticsInfoParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAzureAttributesLogAnalyticsInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAzureAttributesObservation) DeepCopyInto(out *JobTaskNewClusterAzureAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]JobTaskNewClusterAzureAttributesLogAnalyticsInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAzureAttributesObservation.
func (in *JobTaskNewClusterAzureAttributesObservation) DeepCopy() *JobTaskNewClusterAzureAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAzureAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAzureAttributesParameters) DeepCopyInto(out *JobTaskNewClusterAzureAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]JobTaskNewClusterAzureAttributesLogAnalyticsInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAzureAttributesParameters.
func (in *JobTaskNewClusterAzureAttributesParameters) DeepCopy() *JobTaskNewClusterAzureAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAzureAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterLogConfDbfsInitParameters) DeepCopyInto(out *JobTaskNewClusterClusterLogConfDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterLogConfDbfsInitParameters.
func (in *JobTaskNewClusterClusterLogConfDbfsInitParameters) DeepCopy() *JobTaskNewClusterClusterLogConfDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterLogConfDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterLogConfDbfsObservation) DeepCopyInto(out *JobTaskNewClusterClusterLogConfDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterLogConfDbfsObservation.
func (in *JobTaskNewClusterClusterLogConfDbfsObservation) DeepCopy() *JobTaskNewClusterClusterLogConfDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterLogConfDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterLogConfDbfsParameters) DeepCopyInto(out *JobTaskNewClusterClusterLogConfDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterLogConfDbfsParameters.
func (in *JobTaskNewClusterClusterLogConfDbfsParameters) DeepCopy() *JobTaskNewClusterClusterLogConfDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterLogConfDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterLogConfInitParameters) DeepCopyInto(out *JobTaskNewClusterClusterLogConfInitParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]JobTaskNewClusterClusterLogConfDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]JobTaskNewClusterClusterLogConfS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterLogConfInitParameters.
func (in *JobTaskNewClusterClusterLogConfInitParameters) DeepCopy() *JobTaskNewClusterClusterLogConfInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterLogConfInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterLogConfObservation) DeepCopyInto(out *JobTaskNewClusterClusterLogConfObservation) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]JobTaskNewClusterClusterLogConfDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]JobTaskNewClusterClusterLogConfS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterLogConfObservation.
func (in *JobTaskNewClusterClusterLogConfObservation) DeepCopy() *JobTaskNewClusterClusterLogConfObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterLogConfObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterLogConfParameters) DeepCopyInto(out *JobTaskNewClusterClusterLogConfParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]JobTaskNewClusterClusterLogConfDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]JobTaskNewClusterClusterLogConfS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterLogConfParameters.
func (in *JobTaskNewClusterClusterLogConfParameters) DeepCopy() *JobTaskNewClusterClusterLogConfParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterLogConfParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterLogConfS3InitParameters) DeepCopyInto(out *JobTaskNewClusterClusterLogConfS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterLogConfS3InitParameters.
func (in *JobTaskNewClusterClusterLogConfS3InitParameters) DeepCopy() *JobTaskNewClusterClusterLogConfS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterLogConfS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterLogConfS3Observation) DeepCopyInto(out *JobTaskNewClusterClusterLogConfS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterLogConfS3Observation.
func (in *JobTaskNewClusterClusterLogConfS3Observation) DeepCopy() *JobTaskNewClusterClusterLogConfS3Observation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterLogConfS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterLogConfS3Parameters) DeepCopyInto(out *JobTaskNewClusterClusterLogConfS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterLogConfS3Parameters.
func (in *JobTaskNewClusterClusterLogConfS3Parameters) DeepCopy() *JobTaskNewClusterClusterLogConfS3Parameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterLogConfS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterMountInfoInitParameters) DeepCopyInto(out *JobTaskNewClusterClusterMountInfoInitParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterMountInfoInitParameters.
func (in *JobTaskNewClusterClusterMountInfoInitParameters) DeepCopy() *JobTaskNewClusterClusterMountInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterMountInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters) DeepCopyInto(out *JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters.
func (in *JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters) DeepCopy() *JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation) DeepCopyInto(out *JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation.
func (in *JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation) DeepCopy() *JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters) DeepCopyInto(out *JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters.
func (in *JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters) DeepCopy() *JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterMountInfoObservation) DeepCopyInto(out *JobTaskNewClusterClusterMountInfoObservation) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterMountInfoObservation.
func (in *JobTaskNewClusterClusterMountInfoObservation) DeepCopy() *JobTaskNewClusterClusterMountInfoObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterMountInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterMountInfoParameters) DeepCopyInto(out *JobTaskNewClusterClusterMountInfoParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterMountInfoParameters.
func (in *JobTaskNewClusterClusterMountInfoParameters) DeepCopy() *JobTaskNewClusterClusterMountInfoParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterMountInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterDockerImageBasicAuthInitParameters) DeepCopyInto(out *JobTaskNewClusterDockerImageBasicAuthInitParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterDockerImageBasicAuthInitParameters.
func (in *JobTaskNewClusterDockerImageBasicAuthInitParameters) DeepCopy() *JobTaskNewClusterDockerImageBasicAuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterDockerImageBasicAuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterDockerImageBasicAuthObservation) DeepCopyInto(out *JobTaskNewClusterDockerImageBasicAuthObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterDockerImageBasicAuthObservation.
func (in *JobTaskNewClusterDockerImageBasicAuthObservation) DeepCopy() *JobTaskNewClusterDockerImageBasicAuthObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterDockerImageBasicAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterDockerImageBasicAuthParameters) DeepCopyInto(out *JobTaskNewClusterDockerImageBasicAuthParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterDockerImageBasicAuthParameters.
func (in *JobTaskNewClusterDockerImageBasicAuthParameters) DeepCopy() *JobTaskNewClusterDockerImageBasicAuthParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterDockerImageBasicAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterDockerImageInitParameters) DeepCopyInto(out *JobTaskNewClusterDockerImageInitParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]JobTaskNewClusterDockerImageBasicAuthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterDockerImageInitParameters.
func (in *JobTaskNewClusterDockerImageInitParameters) DeepCopy() *JobTaskNewClusterDockerImageInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterDockerImageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterDockerImageObservation) DeepCopyInto(out *JobTaskNewClusterDockerImageObservation) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]JobTaskNewClusterDockerImageBasicAuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterDockerImageObservation.
func (in *JobTaskNewClusterDockerImageObservation) DeepCopy() *JobTaskNewClusterDockerImageObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterDockerImageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterDockerImageParameters) DeepCopyInto(out *JobTaskNewClusterDockerImageParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]JobTaskNewClusterDockerImageBasicAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterDockerImageParameters.
func (in *JobTaskNewClusterDockerImageParameters) DeepCopy() *JobTaskNewClusterDockerImageParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterDockerImageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterGCPAttributesInitParameters) DeepCopyInto(out *JobTaskNewClusterGCPAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterGCPAttributesInitParameters.
func (in *JobTaskNewClusterGCPAttributesInitParameters) DeepCopy() *JobTaskNewClusterGCPAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterGCPAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterGCPAttributesObservation) DeepCopyInto(out *JobTaskNewClusterGCPAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterGCPAttributesObservation.
func (in *JobTaskNewClusterGCPAttributesObservation) DeepCopy() *JobTaskNewClusterGCPAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterGCPAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterGCPAttributesParameters) DeepCopyInto(out *JobTaskNewClusterGCPAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterGCPAttributesParameters.
func (in *JobTaskNewClusterGCPAttributesParameters) DeepCopy() *JobTaskNewClusterGCPAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterGCPAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitParameters) DeepCopyInto(out *JobTaskNewClusterInitParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]JobTaskNewClusterAutoscaleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]JobTaskNewClusterAwsAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]JobTaskNewClusterAzureAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]JobTaskNewClusterClusterLogConfInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]JobTaskNewClusterClusterMountInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]JobTaskNewClusterDockerImageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]JobTaskNewClusterGCPAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]JobTaskNewClusterInitScriptsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]JobTaskNewClusterLibraryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]JobTaskNewClusterWorkloadTypeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitParameters.
func (in *JobTaskNewClusterInitParameters) DeepCopy() *JobTaskNewClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsAbfssInitParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsAbfssInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsAbfssInitParameters.
func (in *JobTaskNewClusterInitScriptsAbfssInitParameters) DeepCopy() *JobTaskNewClusterInitScriptsAbfssInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsAbfssInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsAbfssObservation) DeepCopyInto(out *JobTaskNewClusterInitScriptsAbfssObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsAbfssObservation.
func (in *JobTaskNewClusterInitScriptsAbfssObservation) DeepCopy() *JobTaskNewClusterInitScriptsAbfssObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsAbfssObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsAbfssParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsAbfssParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsAbfssParameters.
func (in *JobTaskNewClusterInitScriptsAbfssParameters) DeepCopy() *JobTaskNewClusterInitScriptsAbfssParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsAbfssParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsDbfsInitParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsDbfsInitParameters.
func (in *JobTaskNewClusterInitScriptsDbfsInitParameters) DeepCopy() *JobTaskNewClusterInitScriptsDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsDbfsObservation) DeepCopyInto(out *JobTaskNewClusterInitScriptsDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsDbfsObservation.
func (in *JobTaskNewClusterInitScriptsDbfsObservation) DeepCopy() *JobTaskNewClusterInitScriptsDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsDbfsParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsDbfsParameters.
func (in *JobTaskNewClusterInitScriptsDbfsParameters) DeepCopy() *JobTaskNewClusterInitScriptsDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsFileInitParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsFileInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsFileInitParameters.
func (in *JobTaskNewClusterInitScriptsFileInitParameters) DeepCopy() *JobTaskNewClusterInitScriptsFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsFileObservation) DeepCopyInto(out *JobTaskNewClusterInitScriptsFileObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsFileObservation.
func (in *JobTaskNewClusterInitScriptsFileObservation) DeepCopy() *JobTaskNewClusterInitScriptsFileObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsFileParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsFileParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsFileParameters.
func (in *JobTaskNewClusterInitScriptsFileParameters) DeepCopy() *JobTaskNewClusterInitScriptsFileParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsGcsInitParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsGcsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsGcsInitParameters.
func (in *JobTaskNewClusterInitScriptsGcsInitParameters) DeepCopy() *JobTaskNewClusterInitScriptsGcsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsGcsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsGcsObservation) DeepCopyInto(out *JobTaskNewClusterInitScriptsGcsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsGcsObservation.
func (in *JobTaskNewClusterInitScriptsGcsObservation) DeepCopy() *JobTaskNewClusterInitScriptsGcsObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsGcsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsGcsParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsGcsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsGcsParameters.
func (in *JobTaskNewClusterInitScriptsGcsParameters) DeepCopy() *JobTaskNewClusterInitScriptsGcsParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsGcsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsInitParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsInitParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]JobTaskNewClusterInitScriptsAbfssInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]JobTaskNewClusterInitScriptsDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]JobTaskNewClusterInitScriptsFileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]JobTaskNewClusterInitScriptsGcsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]JobTaskNewClusterInitScriptsS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]JobTaskNewClusterInitScriptsVolumesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]JobTaskNewClusterInitScriptsWorkspaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsInitParameters.
func (in *JobTaskNewClusterInitScriptsInitParameters) DeepCopy() *JobTaskNewClusterInitScriptsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsObservation) DeepCopyInto(out *JobTaskNewClusterInitScriptsObservation) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]JobTaskNewClusterInitScriptsAbfssObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]JobTaskNewClusterInitScriptsDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]JobTaskNewClusterInitScriptsFileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]JobTaskNewClusterInitScriptsGcsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]JobTaskNewClusterInitScriptsS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]JobTaskNewClusterInitScriptsVolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]JobTaskNewClusterInitScriptsWorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsObservation.
func (in *JobTaskNewClusterInitScriptsObservation) DeepCopy() *JobTaskNewClusterInitScriptsObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]JobTaskNewClusterInitScriptsAbfssParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]JobTaskNewClusterInitScriptsDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]JobTaskNewClusterInitScriptsFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]JobTaskNewClusterInitScriptsGcsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]JobTaskNewClusterInitScriptsS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]JobTaskNewClusterInitScriptsVolumesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]JobTaskNewClusterInitScriptsWorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsParameters.
func (in *JobTaskNewClusterInitScriptsParameters) DeepCopy() *JobTaskNewClusterInitScriptsParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsS3InitParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsS3InitParameters.
func (in *JobTaskNewClusterInitScriptsS3InitParameters) DeepCopy() *JobTaskNewClusterInitScriptsS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsS3Observation) DeepCopyInto(out *JobTaskNewClusterInitScriptsS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsS3Observation.
func (in *JobTaskNewClusterInitScriptsS3Observation) DeepCopy() *JobTaskNewClusterInitScriptsS3Observation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsS3Parameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsS3Parameters.
func (in *JobTaskNewClusterInitScriptsS3Parameters) DeepCopy() *JobTaskNewClusterInitScriptsS3Parameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsVolumesInitParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsVolumesInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsVolumesInitParameters.
func (in *JobTaskNewClusterInitScriptsVolumesInitParameters) DeepCopy() *JobTaskNewClusterInitScriptsVolumesInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsVolumesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsVolumesObservation) DeepCopyInto(out *JobTaskNewClusterInitScriptsVolumesObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsVolumesObservation.
func (in *JobTaskNewClusterInitScriptsVolumesObservation) DeepCopy() *JobTaskNewClusterInitScriptsVolumesObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsVolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsVolumesParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsVolumesParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsVolumesParameters.
func (in *JobTaskNewClusterInitScriptsVolumesParameters) DeepCopy() *JobTaskNewClusterInitScriptsVolumesParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsVolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsWorkspaceInitParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsWorkspaceInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsWorkspaceInitParameters.
func (in *JobTaskNewClusterInitScriptsWorkspaceInitParameters) DeepCopy() *JobTaskNewClusterInitScriptsWorkspaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsWorkspaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsWorkspaceObservation) DeepCopyInto(out *JobTaskNewClusterInitScriptsWorkspaceObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsWorkspaceObservation.
func (in *JobTaskNewClusterInitScriptsWorkspaceObservation) DeepCopy() *JobTaskNewClusterInitScriptsWorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsWorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsWorkspaceParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsWorkspaceParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsWorkspaceParameters.
func (in *JobTaskNewClusterInitScriptsWorkspaceParameters) DeepCopy() *JobTaskNewClusterInitScriptsWorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsWorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterLibraryCranInitParameters) DeepCopyInto(out *JobTaskNewClusterLibraryCranInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterLibraryCranInitParameters.
func (in *JobTaskNewClusterLibraryCranInitParameters) DeepCopy() *JobTaskNewClusterLibraryCranInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterLibraryCranInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterLibraryCranObservation) DeepCopyInto(out *JobTaskNewClusterLibraryCranObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterLibraryCranObservation.
func (in *JobTaskNewClusterLibraryCranObservation) DeepCopy() *JobTaskNewClusterLibraryCranObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterLibraryCranObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterLibraryCranParameters) DeepCopyInto(out *JobTaskNewClusterLibraryCranParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterLibraryCranParameters.
func (in *JobTaskNewClusterLibraryCranParameters) DeepCopy() *JobTaskNewClusterLibraryCranParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterLibraryCranParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterLibraryInitParameters) DeepCopyInto(out *JobTaskNewClusterLibraryInitParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]JobTaskNewClusterLibraryCranInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]JobTaskNewClusterLibraryMavenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]JobTaskNewClusterLibraryPypiInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterLibraryInitParameters.
func (in *JobTaskNewClusterLibraryInitParameters) DeepCopy() *JobTaskNewClusterLibraryInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterLibraryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterLibraryMavenInitParameters) DeepCopyInto(out *JobTaskNewClusterLibraryMavenInitParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterLibraryMavenInitParameters.
func (in *JobTaskNewClusterLibraryMavenInitParameters) DeepCopy() *JobTaskNewClusterLibraryMavenInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterLibraryMavenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterLibraryMavenObservation) DeepCopyInto(out *JobTaskNewClusterLibraryMavenObservation) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterLibraryMavenObservation.
func (in *JobTaskNewClusterLibraryMavenObservation) DeepCopy() *JobTaskNewClusterLibraryMavenObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterLibraryMavenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterLibraryMavenParameters) DeepCopyInto(out *JobTaskNewClusterLibraryMavenParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterLibraryMavenParameters.
func (in *JobTaskNewClusterLibraryMavenParameters) DeepCopy() *JobTaskNewClusterLibraryMavenParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterLibraryMavenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterLibraryObservation) DeepCopyInto(out *JobTaskNewClusterLibraryObservation) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]JobTaskNewClusterLibraryCranObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]JobTaskNewClusterLibraryMavenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]JobTaskNewClusterLibraryPypiObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterLibraryObservation.
func (in *JobTaskNewClusterLibraryObservation) DeepCopy() *JobTaskNewClusterLibraryObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterLibraryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterLibraryParameters) DeepCopyInto(out *JobTaskNewClusterLibraryParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]JobTaskNewClusterLibraryCranParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]JobTaskNewClusterLibraryMavenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]JobTaskNewClusterLibraryPypiParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterLibraryParameters.
func (in *JobTaskNewClusterLibraryParameters) DeepCopy() *JobTaskNewClusterLibraryParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterLibraryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterLibraryPypiInitParameters) DeepCopyInto(out *JobTaskNewClusterLibraryPypiInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterLibraryPypiInitParameters.
func (in *JobTaskNewClusterLibraryPypiInitParameters) DeepCopy() *JobTaskNewClusterLibraryPypiInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterLibraryPypiInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterLibraryPypiObservation) DeepCopyInto(out *JobTaskNewClusterLibraryPypiObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterLibraryPypiObservation.
func (in *JobTaskNewClusterLibraryPypiObservation) DeepCopy() *JobTaskNewClusterLibraryPypiObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterLibraryPypiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterLibraryPypiParameters) DeepCopyInto(out *JobTaskNewClusterLibraryPypiParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterLibraryPypiParameters.
func (in *JobTaskNewClusterLibraryPypiParameters) DeepCopy() *JobTaskNewClusterLibraryPypiParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterLibraryPypiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterObservation) DeepCopyInto(out *JobTaskNewClusterObservation) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]JobTaskNewClusterAutoscaleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]JobTaskNewClusterAwsAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]JobTaskNewClusterAzureAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]JobTaskNewClusterClusterLogConfObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]JobTaskNewClusterClusterMountInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]JobTaskNewClusterDockerImageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]JobTaskNewClusterGCPAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]JobTaskNewClusterInitScriptsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]JobTaskNewClusterLibraryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]JobTaskNewClusterWorkloadTypeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterObservation.
func (in *JobTaskNewClusterObservation) DeepCopy() *JobTaskNewClusterObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterParameters) DeepCopyInto(out *JobTaskNewClusterParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]JobTaskNewClusterAutoscaleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]JobTaskNewClusterAwsAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]JobTaskNewClusterAzureAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]JobTaskNewClusterClusterLogConfParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]JobTaskNewClusterClusterMountInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]JobTaskNewClusterDockerImageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]JobTaskNewClusterGCPAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]JobTaskNewClusterInitScriptsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]JobTaskNewClusterLibraryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]JobTaskNewClusterWorkloadTypeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterParameters.
func (in *JobTaskNewClusterParameters) DeepCopy() *JobTaskNewClusterParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterWorkloadTypeClientsInitParameters) DeepCopyInto(out *JobTaskNewClusterWorkloadTypeClientsInitParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterWorkloadTypeClientsInitParameters.
func (in *JobTaskNewClusterWorkloadTypeClientsInitParameters) DeepCopy() *JobTaskNewClusterWorkloadTypeClientsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterWorkloadTypeClientsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterWorkloadTypeClientsObservation) DeepCopyInto(out *JobTaskNewClusterWorkloadTypeClientsObservation) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterWorkloadTypeClientsObservation.
func (in *JobTaskNewClusterWorkloadTypeClientsObservation) DeepCopy() *JobTaskNewClusterWorkloadTypeClientsObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterWorkloadTypeClientsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterWorkloadTypeClientsParameters) DeepCopyInto(out *JobTaskNewClusterWorkloadTypeClientsParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterWorkloadTypeClientsParameters.
func (in *JobTaskNewClusterWorkloadTypeClientsParameters) DeepCopy() *JobTaskNewClusterWorkloadTypeClientsParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterWorkloadTypeClientsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterWorkloadTypeInitParameters) DeepCopyInto(out *JobTaskNewClusterWorkloadTypeInitParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]JobTaskNewClusterWorkloadTypeClientsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterWorkloadTypeInitParameters.
func (in *JobTaskNewClusterWorkloadTypeInitParameters) DeepCopy() *JobTaskNewClusterWorkloadTypeInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterWorkloadTypeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterWorkloadTypeObservation) DeepCopyInto(out *JobTaskNewClusterWorkloadTypeObservation) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]JobTaskNewClusterWorkloadTypeClientsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterWorkloadTypeObservation.
func (in *JobTaskNewClusterWorkloadTypeObservation) DeepCopy() *JobTaskNewClusterWorkloadTypeObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterWorkloadTypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterWorkloadTypeParameters) DeepCopyInto(out *JobTaskNewClusterWorkloadTypeParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]JobTaskNewClusterWorkloadTypeClientsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterWorkloadTypeParameters.
func (in *JobTaskNewClusterWorkloadTypeParameters) DeepCopy() *JobTaskNewClusterWorkloadTypeParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterWorkloadTypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNotebookTaskInitParameters) DeepCopyInto(out *JobTaskNotebookTaskInitParameters) {
	*out = *in
	if in.BaseParameters != nil {
		in, out := &in.BaseParameters, &out.BaseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNotebookTaskInitParameters.
func (in *JobTaskNotebookTaskInitParameters) DeepCopy() *JobTaskNotebookTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNotebookTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNotebookTaskObservation) DeepCopyInto(out *JobTaskNotebookTaskObservation) {
	*out = *in
	if in.BaseParameters != nil {
		in, out := &in.BaseParameters, &out.BaseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNotebookTaskObservation.
func (in *JobTaskNotebookTaskObservation) DeepCopy() *JobTaskNotebookTaskObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNotebookTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNotebookTaskParameters) DeepCopyInto(out *JobTaskNotebookTaskParameters) {
	*out = *in
	if in.BaseParameters != nil {
		in, out := &in.BaseParameters, &out.BaseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNotebookTaskParameters.
func (in *JobTaskNotebookTaskParameters) DeepCopy() *JobTaskNotebookTaskParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNotebookTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNotificationSettingsInitParameters) DeepCopyInto(out *JobTaskNotificationSettingsInitParameters) {
	*out = *in
	if in.AlertOnLastAttempt != nil {
		in, out := &in.AlertOnLastAttempt, &out.AlertOnLastAttempt
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForCanceledRuns != nil {
		in, out := &in.NoAlertForCanceledRuns, &out.NoAlertForCanceledRuns
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNotificationSettingsInitParameters.
func (in *JobTaskNotificationSettingsInitParameters) DeepCopy() *JobTaskNotificationSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNotificationSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNotificationSettingsObservation) DeepCopyInto(out *JobTaskNotificationSettingsObservation) {
	*out = *in
	if in.AlertOnLastAttempt != nil {
		in, out := &in.AlertOnLastAttempt, &out.AlertOnLastAttempt
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForCanceledRuns != nil {
		in, out := &in.NoAlertForCanceledRuns, &out.NoAlertForCanceledRuns
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNotificationSettingsObservation.
func (in *JobTaskNotificationSettingsObservation) DeepCopy() *JobTaskNotificationSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNotificationSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNotificationSettingsParameters) DeepCopyInto(out *JobTaskNotificationSettingsParameters) {
	*out = *in
	if in.AlertOnLastAttempt != nil {
		in, out := &in.AlertOnLastAttempt, &out.AlertOnLastAttempt
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForCanceledRuns != nil {
		in, out := &in.NoAlertForCanceledRuns, &out.NoAlertForCanceledRuns
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNotificationSettingsParameters.
func (in *JobTaskNotificationSettingsParameters) DeepCopy() *JobTaskNotificationSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNotificationSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskPipelineTaskInitParameters) DeepCopyInto(out *JobTaskPipelineTaskInitParameters) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskPipelineTaskInitParameters.
func (in *JobTaskPipelineTaskInitParameters) DeepCopy() *JobTaskPipelineTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskPipelineTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskPipelineTaskObservation) DeepCopyInto(out *JobTaskPipelineTaskObservation) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskPipelineTaskObservation.
func (in *JobTaskPipelineTaskObservation) DeepCopy() *JobTaskPipelineTaskObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskPipelineTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskPipelineTaskParameters) DeepCopyInto(out *JobTaskPipelineTaskParameters) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskPipelineTaskParameters.
func (in *JobTaskPipelineTaskParameters) DeepCopy() *JobTaskPipelineTaskParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskPipelineTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskPythonWheelTaskInitParameters) DeepCopyInto(out *JobTaskPythonWheelTaskInitParameters) {
	*out = *in
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = new(string)
		**out = **in
	}
	if in.NamedParameters != nil {
		in, out := &in.NamedParameters, &out.NamedParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PackageName != nil {
		in, out := &in.PackageName, &out.PackageName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskPythonWheelTaskInitParameters.
func (in *JobTaskPythonWheelTaskInitParameters) DeepCopy() *JobTaskPythonWheelTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskPythonWheelTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskPythonWheelTaskObservation) DeepCopyInto(out *JobTaskPythonWheelTaskObservation) {
	*out = *in
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = new(string)
		**out = **in
	}
	if in.NamedParameters != nil {
		in, out := &in.NamedParameters, &out.NamedParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PackageName != nil {
		in, out := &in.PackageName, &out.PackageName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskPythonWheelTaskObservation.
func (in *JobTaskPythonWheelTaskObservation) DeepCopy() *JobTaskPythonWheelTaskObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskPythonWheelTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskPythonWheelTaskParameters) DeepCopyInto(out *JobTaskPythonWheelTaskParameters) {
	*out = *in
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = new(string)
		**out = **in
	}
	if in.NamedParameters != nil {
		in, out := &in.NamedParameters, &out.NamedParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PackageName != nil {
		in, out := &in.PackageName, &out.PackageName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskPythonWheelTaskParameters.
func (in *JobTaskPythonWheelTaskParameters) DeepCopy() *JobTaskPythonWheelTaskParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskPythonWheelTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskRunJobTaskInitParameters) DeepCopyInto(out *JobTaskRunJobTaskInitParameters) {
	*out = *in
	if in.DbtCommands != nil {
		in, out := &in.DbtCommands, &out.DbtCommands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarParams != nil {
		in, out := &in.JarParams, &out.JarParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(float64)
		**out = **in
	}
	if in.JobParameters != nil {
		in, out := &in.JobParameters, &out.JobParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookParams != nil {
		in, out := &in.NotebookParams, &out.NotebookParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PipelineParams != nil {
		in, out := &in.PipelineParams, &out.PipelineParams
		*out = make([]RunJobTaskPipelineParamsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonNamedParams != nil {
		in, out := &in.PythonNamedParams, &out.PythonNamedParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PythonParams != nil {
		in, out := &in.PythonParams, &out.PythonParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SQLParams != nil {
		in, out := &in.SQLParams, &out.SQLParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkSubmitParams != nil {
		in, out := &in.SparkSubmitParams, &out.SparkSubmitParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskRunJobTaskInitParameters.
func (in *JobTaskRunJobTaskInitParameters) DeepCopy() *JobTaskRunJobTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskRunJobTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskRunJobTaskObservation) DeepCopyInto(out *JobTaskRunJobTaskObservation) {
	*out = *in
	if in.DbtCommands != nil {
		in, out := &in.DbtCommands, &out.DbtCommands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarParams != nil {
		in, out := &in.JarParams, &out.JarParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(float64)
		**out = **in
	}
	if in.JobParameters != nil {
		in, out := &in.JobParameters, &out.JobParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookParams != nil {
		in, out := &in.NotebookParams, &out.NotebookParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PipelineParams != nil {
		in, out := &in.PipelineParams, &out.PipelineParams
		*out = make([]RunJobTaskPipelineParamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonNamedParams != nil {
		in, out := &in.PythonNamedParams, &out.PythonNamedParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PythonParams != nil {
		in, out := &in.PythonParams, &out.PythonParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SQLParams != nil {
		in, out := &in.SQLParams, &out.SQLParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkSubmitParams != nil {
		in, out := &in.SparkSubmitParams, &out.SparkSubmitParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskRunJobTaskObservation.
func (in *JobTaskRunJobTaskObservation) DeepCopy() *JobTaskRunJobTaskObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskRunJobTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskRunJobTaskParameters) DeepCopyInto(out *JobTaskRunJobTaskParameters) {
	*out = *in
	if in.DbtCommands != nil {
		in, out := &in.DbtCommands, &out.DbtCommands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarParams != nil {
		in, out := &in.JarParams, &out.JarParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(float64)
		**out = **in
	}
	if in.JobParameters != nil {
		in, out := &in.JobParameters, &out.JobParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookParams != nil {
		in, out := &in.NotebookParams, &out.NotebookParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PipelineParams != nil {
		in, out := &in.PipelineParams, &out.PipelineParams
		*out = make([]RunJobTaskPipelineParamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonNamedParams != nil {
		in, out := &in.PythonNamedParams, &out.PythonNamedParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PythonParams != nil {
		in, out := &in.PythonParams, &out.PythonParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SQLParams != nil {
		in, out := &in.SQLParams, &out.SQLParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkSubmitParams != nil {
		in, out := &in.SparkSubmitParams, &out.SparkSubmitParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskRunJobTaskParameters.
func (in *JobTaskRunJobTaskParameters) DeepCopy() *JobTaskRunJobTaskParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskRunJobTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskSparkJarTaskInitParameters) DeepCopyInto(out *JobTaskSparkJarTaskInitParameters) {
	*out = *in
	if in.JarURI != nil {
		in, out := &in.JarURI, &out.JarURI
		*out = new(string)
		**out = **in
	}
	if in.MainClassName != nil {
		in, out := &in.MainClassName, &out.MainClassName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskSparkJarTaskInitParameters.
func (in *JobTaskSparkJarTaskInitParameters) DeepCopy() *JobTaskSparkJarTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskSparkJarTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskSparkJarTaskObservation) DeepCopyInto(out *JobTaskSparkJarTaskObservation) {
	*out = *in
	if in.JarURI != nil {
		in, out := &in.JarURI, &out.JarURI
		*out = new(string)
		**out = **in
	}
	if in.MainClassName != nil {
		in, out := &in.MainClassName, &out.MainClassName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskSparkJarTaskObservation.
func (in *JobTaskSparkJarTaskObservation) DeepCopy() *JobTaskSparkJarTaskObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskSparkJarTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskSparkJarTaskParameters) DeepCopyInto(out *JobTaskSparkJarTaskParameters) {
	*out = *in
	if in.JarURI != nil {
		in, out := &in.JarURI, &out.JarURI
		*out = new(string)
		**out = **in
	}
	if in.MainClassName != nil {
		in, out := &in.MainClassName, &out.MainClassName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskSparkJarTaskParameters.
func (in *JobTaskSparkJarTaskParameters) DeepCopy() *JobTaskSparkJarTaskParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskSparkJarTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskSparkPythonTaskInitParameters) DeepCopyInto(out *JobTaskSparkPythonTaskInitParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PythonFile != nil {
		in, out := &in.PythonFile, &out.PythonFile
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskSparkPythonTaskInitParameters.
func (in *JobTaskSparkPythonTaskInitParameters) DeepCopy() *JobTaskSparkPythonTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskSparkPythonTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskSparkPythonTaskObservation) DeepCopyInto(out *JobTaskSparkPythonTaskObservation) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PythonFile != nil {
		in, out := &in.PythonFile, &out.PythonFile
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskSparkPythonTaskObservation.
func (in *JobTaskSparkPythonTaskObservation) DeepCopy() *JobTaskSparkPythonTaskObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskSparkPythonTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskSparkPythonTaskParameters) DeepCopyInto(out *JobTaskSparkPythonTaskParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PythonFile != nil {
		in, out := &in.PythonFile, &out.PythonFile
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskSparkPythonTaskParameters.
func (in *JobTaskSparkPythonTaskParameters) DeepCopy() *JobTaskSparkPythonTaskParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskSparkPythonTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskSparkSubmitTaskInitParameters) DeepCopyInto(out *JobTaskSparkSubmitTaskInitParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskSparkSubmitTaskInitParameters.
func (in *JobTaskSparkSubmitTaskInitParameters) DeepCopy() *JobTaskSparkSubmitTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskSparkSubmitTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskSparkSubmitTaskObservation) DeepCopyInto(out *JobTaskSparkSubmitTaskObservation) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskSparkSubmitTaskObservation.
func (in *JobTaskSparkSubmitTaskObservation) DeepCopy() *JobTaskSparkSubmitTaskObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskSparkSubmitTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskSparkSubmitTaskParameters) DeepCopyInto(out *JobTaskSparkSubmitTaskParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskSparkSubmitTaskParameters.
func (in *JobTaskSparkSubmitTaskParameters) DeepCopy() *JobTaskSparkSubmitTaskParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskSparkSubmitTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsInitParameters) DeepCopyInto(out *JobWebhookNotificationsInitParameters) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]JobWebhookNotificationsOnDurationWarningThresholdExceededInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]JobWebhookNotificationsOnFailureInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]JobWebhookNotificationsOnStartInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]JobWebhookNotificationsOnStreamingBacklogExceededInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]JobWebhookNotificationsOnSuccessInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsInitParameters.
func (in *JobWebhookNotificationsInitParameters) DeepCopy() *JobWebhookNotificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsObservation) DeepCopyInto(out *JobWebhookNotificationsObservation) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]JobWebhookNotificationsOnDurationWarningThresholdExceededObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]JobWebhookNotificationsOnFailureObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]JobWebhookNotificationsOnStartObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]JobWebhookNotificationsOnStreamingBacklogExceededObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]JobWebhookNotificationsOnSuccessObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsObservation.
func (in *JobWebhookNotificationsObservation) DeepCopy() *JobWebhookNotificationsObservation {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnDurationWarningThresholdExceededInitParameters) DeepCopyInto(out *JobWebhookNotificationsOnDurationWarningThresholdExceededInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnDurationWarningThresholdExceededInitParameters.
func (in *JobWebhookNotificationsOnDurationWarningThresholdExceededInitParameters) DeepCopy() *JobWebhookNotificationsOnDurationWarningThresholdExceededInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnDurationWarningThresholdExceededInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnDurationWarningThresholdExceededObservation) DeepCopyInto(out *JobWebhookNotificationsOnDurationWarningThresholdExceededObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnDurationWarningThresholdExceededObservation.
func (in *JobWebhookNotificationsOnDurationWarningThresholdExceededObservation) DeepCopy() *JobWebhookNotificationsOnDurationWarningThresholdExceededObservation {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnDurationWarningThresholdExceededObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnDurationWarningThresholdExceededParameters) DeepCopyInto(out *JobWebhookNotificationsOnDurationWarningThresholdExceededParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnDurationWarningThresholdExceededParameters.
func (in *JobWebhookNotificationsOnDurationWarningThresholdExceededParameters) DeepCopy() *JobWebhookNotificationsOnDurationWarningThresholdExceededParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnDurationWarningThresholdExceededParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnFailureInitParameters) DeepCopyInto(out *JobWebhookNotificationsOnFailureInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnFailureInitParameters.
func (in *JobWebhookNotificationsOnFailureInitParameters) DeepCopy() *JobWebhookNotificationsOnFailureInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnFailureInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnFailureObservation) DeepCopyInto(out *JobWebhookNotificationsOnFailureObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnFailureObservation.
func (in *JobWebhookNotificationsOnFailureObservation) DeepCopy() *JobWebhookNotificationsOnFailureObservation {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnFailureObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnFailureParameters) DeepCopyInto(out *JobWebhookNotificationsOnFailureParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnFailureParameters.
func (in *JobWebhookNotificationsOnFailureParameters) DeepCopy() *JobWebhookNotificationsOnFailureParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnFailureParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnStartInitParameters) DeepCopyInto(out *JobWebhookNotificationsOnStartInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnStartInitParameters.
func (in *JobWebhookNotificationsOnStartInitParameters) DeepCopy() *JobWebhookNotificationsOnStartInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnStartInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnStartObservation) DeepCopyInto(out *JobWebhookNotificationsOnStartObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnStartObservation.
func (in *JobWebhookNotificationsOnStartObservation) DeepCopy() *JobWebhookNotificationsOnStartObservation {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnStartObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnStartParameters) DeepCopyInto(out *JobWebhookNotificationsOnStartParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnStartParameters.
func (in *JobWebhookNotificationsOnStartParameters) DeepCopy() *JobWebhookNotificationsOnStartParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnStartParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnStreamingBacklogExceededInitParameters) DeepCopyInto(out *JobWebhookNotificationsOnStreamingBacklogExceededInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnStreamingBacklogExceededInitParameters.
func (in *JobWebhookNotificationsOnStreamingBacklogExceededInitParameters) DeepCopy() *JobWebhookNotificationsOnStreamingBacklogExceededInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnStreamingBacklogExceededInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnStreamingBacklogExceededObservation) DeepCopyInto(out *JobWebhookNotificationsOnStreamingBacklogExceededObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnStreamingBacklogExceededObservation.
func (in *JobWebhookNotificationsOnStreamingBacklogExceededObservation) DeepCopy() *JobWebhookNotificationsOnStreamingBacklogExceededObservation {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnStreamingBacklogExceededObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnStreamingBacklogExceededParameters) DeepCopyInto(out *JobWebhookNotificationsOnStreamingBacklogExceededParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnStreamingBacklogExceededParameters.
func (in *JobWebhookNotificationsOnStreamingBacklogExceededParameters) DeepCopy() *JobWebhookNotificationsOnStreamingBacklogExceededParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnStreamingBacklogExceededParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnSuccessInitParameters) DeepCopyInto(out *JobWebhookNotificationsOnSuccessInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnSuccessInitParameters.
func (in *JobWebhookNotificationsOnSuccessInitParameters) DeepCopy() *JobWebhookNotificationsOnSuccessInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnSuccessInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnSuccessObservation) DeepCopyInto(out *JobWebhookNotificationsOnSuccessObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnSuccessObservation.
func (in *JobWebhookNotificationsOnSuccessObservation) DeepCopy() *JobWebhookNotificationsOnSuccessObservation {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnSuccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnSuccessParameters) DeepCopyInto(out *JobWebhookNotificationsOnSuccessParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnSuccessParameters.
func (in *JobWebhookNotificationsOnSuccessParameters) DeepCopy() *JobWebhookNotificationsOnSuccessParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnSuccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsParameters) DeepCopyInto(out *JobWebhookNotificationsParameters) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]JobWebhookNotificationsOnDurationWarningThresholdExceededParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]JobWebhookNotificationsOnFailureParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]JobWebhookNotificationsOnStartParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]JobWebhookNotificationsOnStreamingBacklogExceededParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]JobWebhookNotificationsOnSuccessParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsParameters.
func (in *JobWebhookNotificationsParameters) DeepCopy() *JobWebhookNotificationsParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyvaultMetadataInitParameters) DeepCopyInto(out *KeyvaultMetadataInitParameters) {
	*out = *in
	if in.DNSName != nil {
		in, out := &in.DNSName, &out.DNSName
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyvaultMetadataInitParameters.
func (in *KeyvaultMetadataInitParameters) DeepCopy() *KeyvaultMetadataInitParameters {
	if in == nil {
		return nil
	}
	out := new(KeyvaultMetadataInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyvaultMetadataObservation) DeepCopyInto(out *KeyvaultMetadataObservation) {
	*out = *in
	if in.DNSName != nil {
		in, out := &in.DNSName, &out.DNSName
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyvaultMetadataObservation.
func (in *KeyvaultMetadataObservation) DeepCopy() *KeyvaultMetadataObservation {
	if in == nil {
		return nil
	}
	out := new(KeyvaultMetadataObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyvaultMetadataParameters) DeepCopyInto(out *KeyvaultMetadataParameters) {
	*out = *in
	if in.DNSName != nil {
		in, out := &in.DNSName, &out.DNSName
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyvaultMetadataParameters.
func (in *KeyvaultMetadataParameters) DeepCopy() *KeyvaultMetadataParameters {
	if in == nil {
		return nil
	}
	out := new(KeyvaultMetadataParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LatestUpdatesInitParameters) DeepCopyInto(out *LatestUpdatesInitParameters) {
	*out = *in
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.UpdateID != nil {
		in, out := &in.UpdateID, &out.UpdateID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LatestUpdatesInitParameters.
func (in *LatestUpdatesInitParameters) DeepCopy() *LatestUpdatesInitParameters {
	if in == nil {
		return nil
	}
	out := new(LatestUpdatesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LatestUpdatesObservation) DeepCopyInto(out *LatestUpdatesObservation) {
	*out = *in
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.UpdateID != nil {
		in, out := &in.UpdateID, &out.UpdateID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LatestUpdatesObservation.
func (in *LatestUpdatesObservation) DeepCopy() *LatestUpdatesObservation {
	if in == nil {
		return nil
	}
	out := new(LatestUpdatesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LatestUpdatesParameters) DeepCopyInto(out *LatestUpdatesParameters) {
	*out = *in
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.UpdateID != nil {
		in, out := &in.UpdateID, &out.UpdateID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LatestUpdatesParameters.
func (in *LatestUpdatesParameters) DeepCopy() *LatestUpdatesParameters {
	if in == nil {
		return nil
	}
	out := new(LatestUpdatesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateOverrideInitParameters) DeepCopyInto(out *LaunchTemplateOverrideInitParameters) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateOverrideInitParameters.
func (in *LaunchTemplateOverrideInitParameters) DeepCopy() *LaunchTemplateOverrideInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateOverrideInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateOverrideObservation) DeepCopyInto(out *LaunchTemplateOverrideObservation) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateOverrideObservation.
func (in *LaunchTemplateOverrideObservation) DeepCopy() *LaunchTemplateOverrideObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateOverrideObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateOverrideParameters) DeepCopyInto(out *LaunchTemplateOverrideParameters) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateOverrideParameters.
func (in *LaunchTemplateOverrideParameters) DeepCopy() *LaunchTemplateOverrideParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateOverrideParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibrariesCranInitParameters) DeepCopyInto(out *LibrariesCranInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibrariesCranInitParameters.
func (in *LibrariesCranInitParameters) DeepCopy() *LibrariesCranInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibrariesCranInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibrariesCranObservation) DeepCopyInto(out *LibrariesCranObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibrariesCranObservation.
func (in *LibrariesCranObservation) DeepCopy() *LibrariesCranObservation {
	if in == nil {
		return nil
	}
	out := new(LibrariesCranObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibrariesCranParameters) DeepCopyInto(out *LibrariesCranParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibrariesCranParameters.
func (in *LibrariesCranParameters) DeepCopy() *LibrariesCranParameters {
	if in == nil {
		return nil
	}
	out := new(LibrariesCranParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibrariesInitParameters) DeepCopyInto(out *LibrariesInitParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]LibrariesCranInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]LibrariesMavenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]LibrariesPypiInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibrariesInitParameters.
func (in *LibrariesInitParameters) DeepCopy() *LibrariesInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibrariesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibrariesMavenInitParameters) DeepCopyInto(out *LibrariesMavenInitParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibrariesMavenInitParameters.
func (in *LibrariesMavenInitParameters) DeepCopy() *LibrariesMavenInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibrariesMavenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibrariesMavenObservation) DeepCopyInto(out *LibrariesMavenObservation) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibrariesMavenObservation.
func (in *LibrariesMavenObservation) DeepCopy() *LibrariesMavenObservation {
	if in == nil {
		return nil
	}
	out := new(LibrariesMavenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibrariesMavenParameters) DeepCopyInto(out *LibrariesMavenParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibrariesMavenParameters.
func (in *LibrariesMavenParameters) DeepCopy() *LibrariesMavenParameters {
	if in == nil {
		return nil
	}
	out := new(LibrariesMavenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibrariesObservation) DeepCopyInto(out *LibrariesObservation) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]LibrariesCranObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]LibrariesMavenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]LibrariesPypiObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibrariesObservation.
func (in *LibrariesObservation) DeepCopy() *LibrariesObservation {
	if in == nil {
		return nil
	}
	out := new(LibrariesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibrariesParameters) DeepCopyInto(out *LibrariesParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]LibrariesCranParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]LibrariesMavenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]LibrariesPypiParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibrariesParameters.
func (in *LibrariesParameters) DeepCopy() *LibrariesParameters {
	if in == nil {
		return nil
	}
	out := new(LibrariesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibrariesPypiInitParameters) DeepCopyInto(out *LibrariesPypiInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibrariesPypiInitParameters.
func (in *LibrariesPypiInitParameters) DeepCopy() *LibrariesPypiInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibrariesPypiInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibrariesPypiObservation) DeepCopyInto(out *LibrariesPypiObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibrariesPypiObservation.
func (in *LibrariesPypiObservation) DeepCopy() *LibrariesPypiObservation {
	if in == nil {
		return nil
	}
	out := new(LibrariesPypiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibrariesPypiParameters) DeepCopyInto(out *LibrariesPypiParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibrariesPypiParameters.
func (in *LibrariesPypiParameters) DeepCopy() *LibrariesPypiParameters {
	if in == nil {
		return nil
	}
	out := new(LibrariesPypiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryCranInitParameters) DeepCopyInto(out *LibraryCranInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryCranInitParameters.
func (in *LibraryCranInitParameters) DeepCopy() *LibraryCranInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryCranInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryCranObservation) DeepCopyInto(out *LibraryCranObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryCranObservation.
func (in *LibraryCranObservation) DeepCopy() *LibraryCranObservation {
	if in == nil {
		return nil
	}
	out := new(LibraryCranObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryCranParameters) DeepCopyInto(out *LibraryCranParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryCranParameters.
func (in *LibraryCranParameters) DeepCopy() *LibraryCranParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryCranParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryFileInitParameters) DeepCopyInto(out *LibraryFileInitParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryFileInitParameters.
func (in *LibraryFileInitParameters) DeepCopy() *LibraryFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryFileObservation) DeepCopyInto(out *LibraryFileObservation) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryFileObservation.
func (in *LibraryFileObservation) DeepCopy() *LibraryFileObservation {
	if in == nil {
		return nil
	}
	out := new(LibraryFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryFileParameters) DeepCopyInto(out *LibraryFileParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryFileParameters.
func (in *LibraryFileParameters) DeepCopy() *LibraryFileParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryInitParameters) DeepCopyInto(out *LibraryInitParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]CranInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]MavenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]PypiInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryInitParameters.
func (in *LibraryInitParameters) DeepCopy() *LibraryInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryMavenInitParameters) DeepCopyInto(out *LibraryMavenInitParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryMavenInitParameters.
func (in *LibraryMavenInitParameters) DeepCopy() *LibraryMavenInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryMavenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryMavenObservation) DeepCopyInto(out *LibraryMavenObservation) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryMavenObservation.
func (in *LibraryMavenObservation) DeepCopy() *LibraryMavenObservation {
	if in == nil {
		return nil
	}
	out := new(LibraryMavenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryMavenParameters) DeepCopyInto(out *LibraryMavenParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryMavenParameters.
func (in *LibraryMavenParameters) DeepCopy() *LibraryMavenParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryMavenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryNotebookInitParameters) DeepCopyInto(out *LibraryNotebookInitParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryNotebookInitParameters.
func (in *LibraryNotebookInitParameters) DeepCopy() *LibraryNotebookInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryNotebookInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryNotebookObservation) DeepCopyInto(out *LibraryNotebookObservation) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryNotebookObservation.
func (in *LibraryNotebookObservation) DeepCopy() *LibraryNotebookObservation {
	if in == nil {
		return nil
	}
	out := new(LibraryNotebookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryNotebookParameters) DeepCopyInto(out *LibraryNotebookParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryNotebookParameters.
func (in *LibraryNotebookParameters) DeepCopy() *LibraryNotebookParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryNotebookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryObservation) DeepCopyInto(out *LibraryObservation) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]CranObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]MavenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]PypiObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryObservation.
func (in *LibraryObservation) DeepCopy() *LibraryObservation {
	if in == nil {
		return nil
	}
	out := new(LibraryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryParameters) DeepCopyInto(out *LibraryParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]CranParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]MavenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]PypiParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryParameters.
func (in *LibraryParameters) DeepCopy() *LibraryParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryPypiInitParameters) DeepCopyInto(out *LibraryPypiInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryPypiInitParameters.
func (in *LibraryPypiInitParameters) DeepCopy() *LibraryPypiInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryPypiInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryPypiObservation) DeepCopyInto(out *LibraryPypiObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryPypiObservation.
func (in *LibraryPypiObservation) DeepCopy() *LibraryPypiObservation {
	if in == nil {
		return nil
	}
	out := new(LibraryPypiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryPypiParameters) DeepCopyInto(out *LibraryPypiParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryPypiParameters.
func (in *LibraryPypiParameters) DeepCopy() *LibraryPypiParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryPypiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogAnalyticsInfoInitParameters) DeepCopyInto(out *LogAnalyticsInfoInitParameters) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogAnalyticsInfoInitParameters.
func (in *LogAnalyticsInfoInitParameters) DeepCopy() *LogAnalyticsInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogAnalyticsInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogAnalyticsInfoObservation) DeepCopyInto(out *LogAnalyticsInfoObservation) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogAnalyticsInfoObservation.
func (in *LogAnalyticsInfoObservation) DeepCopy() *LogAnalyticsInfoObservation {
	if in == nil {
		return nil
	}
	out := new(LogAnalyticsInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogAnalyticsInfoParameters) DeepCopyInto(out *LogAnalyticsInfoParameters) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogAnalyticsInfoParameters.
func (in *LogAnalyticsInfoParameters) DeepCopy() *LogAnalyticsInfoParameters {
	if in == nil {
		return nil
	}
	out := new(LogAnalyticsInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManualInitParameters) DeepCopyInto(out *ManualInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManualInitParameters.
func (in *ManualInitParameters) DeepCopy() *ManualInitParameters {
	if in == nil {
		return nil
	}
	out := new(ManualInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManualObservation) DeepCopyInto(out *ManualObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManualObservation.
func (in *ManualObservation) DeepCopy() *ManualObservation {
	if in == nil {
		return nil
	}
	out := new(ManualObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManualParameters) DeepCopyInto(out *ManualParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManualParameters.
func (in *ManualParameters) DeepCopy() *ManualParameters {
	if in == nil {
		return nil
	}
	out := new(ManualParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MavenInitParameters) DeepCopyInto(out *MavenInitParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MavenInitParameters.
func (in *MavenInitParameters) DeepCopy() *MavenInitParameters {
	if in == nil {
		return nil
	}
	out := new(MavenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MavenObservation) DeepCopyInto(out *MavenObservation) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MavenObservation.
func (in *MavenObservation) DeepCopy() *MavenObservation {
	if in == nil {
		return nil
	}
	out := new(MavenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MavenParameters) DeepCopyInto(out *MavenParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MavenParameters.
func (in *MavenParameters) DeepCopy() *MavenParameters {
	if in == nil {
		return nil
	}
	out := new(MavenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultiValuesOptionsInitParameters) DeepCopyInto(out *MultiValuesOptionsInitParameters) {
	*out = *in
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.Suffix != nil {
		in, out := &in.Suffix, &out.Suffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultiValuesOptionsInitParameters.
func (in *MultiValuesOptionsInitParameters) DeepCopy() *MultiValuesOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MultiValuesOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultiValuesOptionsObservation) DeepCopyInto(out *MultiValuesOptionsObservation) {
	*out = *in
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.Suffix != nil {
		in, out := &in.Suffix, &out.Suffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultiValuesOptionsObservation.
func (in *MultiValuesOptionsObservation) DeepCopy() *MultiValuesOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(MultiValuesOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultiValuesOptionsParameters) DeepCopyInto(out *MultiValuesOptionsParameters) {
	*out = *in
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.Suffix != nil {
		in, out := &in.Suffix, &out.Suffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultiValuesOptionsParameters.
func (in *MultiValuesOptionsParameters) DeepCopy() *MultiValuesOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(MultiValuesOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultipleInitParameters) DeepCopyInto(out *MultipleInitParameters) {
	*out = *in
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.Suffix != nil {
		in, out := &in.Suffix, &out.Suffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultipleInitParameters.
func (in *MultipleInitParameters) DeepCopy() *MultipleInitParameters {
	if in == nil {
		return nil
	}
	out := new(MultipleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultipleObservation) DeepCopyInto(out *MultipleObservation) {
	*out = *in
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.Suffix != nil {
		in, out := &in.Suffix, &out.Suffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultipleObservation.
func (in *MultipleObservation) DeepCopy() *MultipleObservation {
	if in == nil {
		return nil
	}
	out := new(MultipleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultipleParameters) DeepCopyInto(out *MultipleParameters) {
	*out = *in
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.Suffix != nil {
		in, out := &in.Suffix, &out.Suffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultipleParameters.
func (in *MultipleParameters) DeepCopy() *MultipleParameters {
	if in == nil {
		return nil
	}
	out := new(MultipleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFilesystemInfoInitParameters) DeepCopyInto(out *NetworkFilesystemInfoInitParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFilesystemInfoInitParameters.
func (in *NetworkFilesystemInfoInitParameters) DeepCopy() *NetworkFilesystemInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkFilesystemInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFilesystemInfoObservation) DeepCopyInto(out *NetworkFilesystemInfoObservation) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFilesystemInfoObservation.
func (in *NetworkFilesystemInfoObservation) DeepCopy() *NetworkFilesystemInfoObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkFilesystemInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFilesystemInfoParameters) DeepCopyInto(out *NetworkFilesystemInfoParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFilesystemInfoParameters.
func (in *NetworkFilesystemInfoParameters) DeepCopy() *NetworkFilesystemInfoParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkFilesystemInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAutoscaleInitParameters) DeepCopyInto(out *NewClusterAutoscaleInitParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAutoscaleInitParameters.
func (in *NewClusterAutoscaleInitParameters) DeepCopy() *NewClusterAutoscaleInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterAutoscaleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAutoscaleObservation) DeepCopyInto(out *NewClusterAutoscaleObservation) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAutoscaleObservation.
func (in *NewClusterAutoscaleObservation) DeepCopy() *NewClusterAutoscaleObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterAutoscaleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAutoscaleParameters) DeepCopyInto(out *NewClusterAutoscaleParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAutoscaleParameters.
func (in *NewClusterAutoscaleParameters) DeepCopy() *NewClusterAutoscaleParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterAutoscaleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAwsAttributesInitParameters) DeepCopyInto(out *NewClusterAwsAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAwsAttributesInitParameters.
func (in *NewClusterAwsAttributesInitParameters) DeepCopy() *NewClusterAwsAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterAwsAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAwsAttributesObservation) DeepCopyInto(out *NewClusterAwsAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAwsAttributesObservation.
func (in *NewClusterAwsAttributesObservation) DeepCopy() *NewClusterAwsAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterAwsAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAwsAttributesParameters) DeepCopyInto(out *NewClusterAwsAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAwsAttributesParameters.
func (in *NewClusterAwsAttributesParameters) DeepCopy() *NewClusterAwsAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterAwsAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAzureAttributesInitParameters) DeepCopyInto(out *NewClusterAzureAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]AzureAttributesLogAnalyticsInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAzureAttributesInitParameters.
func (in *NewClusterAzureAttributesInitParameters) DeepCopy() *NewClusterAzureAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterAzureAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAzureAttributesLogAnalyticsInfoInitParameters) DeepCopyInto(out *NewClusterAzureAttributesLogAnalyticsInfoInitParameters) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAzureAttributesLogAnalyticsInfoInitParameters.
func (in *NewClusterAzureAttributesLogAnalyticsInfoInitParameters) DeepCopy() *NewClusterAzureAttributesLogAnalyticsInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterAzureAttributesLogAnalyticsInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAzureAttributesLogAnalyticsInfoObservation) DeepCopyInto(out *NewClusterAzureAttributesLogAnalyticsInfoObservation) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAzureAttributesLogAnalyticsInfoObservation.
func (in *NewClusterAzureAttributesLogAnalyticsInfoObservation) DeepCopy() *NewClusterAzureAttributesLogAnalyticsInfoObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterAzureAttributesLogAnalyticsInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAzureAttributesLogAnalyticsInfoParameters) DeepCopyInto(out *NewClusterAzureAttributesLogAnalyticsInfoParameters) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAzureAttributesLogAnalyticsInfoParameters.
func (in *NewClusterAzureAttributesLogAnalyticsInfoParameters) DeepCopy() *NewClusterAzureAttributesLogAnalyticsInfoParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterAzureAttributesLogAnalyticsInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAzureAttributesObservation) DeepCopyInto(out *NewClusterAzureAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]AzureAttributesLogAnalyticsInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAzureAttributesObservation.
func (in *NewClusterAzureAttributesObservation) DeepCopy() *NewClusterAzureAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterAzureAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAzureAttributesParameters) DeepCopyInto(out *NewClusterAzureAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]AzureAttributesLogAnalyticsInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAzureAttributesParameters.
func (in *NewClusterAzureAttributesParameters) DeepCopy() *NewClusterAzureAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterAzureAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterLogConfDbfsInitParameters) DeepCopyInto(out *NewClusterClusterLogConfDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterLogConfDbfsInitParameters.
func (in *NewClusterClusterLogConfDbfsInitParameters) DeepCopy() *NewClusterClusterLogConfDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterLogConfDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterLogConfDbfsObservation) DeepCopyInto(out *NewClusterClusterLogConfDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterLogConfDbfsObservation.
func (in *NewClusterClusterLogConfDbfsObservation) DeepCopy() *NewClusterClusterLogConfDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterLogConfDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterLogConfDbfsParameters) DeepCopyInto(out *NewClusterClusterLogConfDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterLogConfDbfsParameters.
func (in *NewClusterClusterLogConfDbfsParameters) DeepCopy() *NewClusterClusterLogConfDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterLogConfDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterLogConfInitParameters) DeepCopyInto(out *NewClusterClusterLogConfInitParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]ClusterLogConfDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]ClusterLogConfS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterLogConfInitParameters.
func (in *NewClusterClusterLogConfInitParameters) DeepCopy() *NewClusterClusterLogConfInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterLogConfInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterLogConfObservation) DeepCopyInto(out *NewClusterClusterLogConfObservation) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]ClusterLogConfDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]ClusterLogConfS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterLogConfObservation.
func (in *NewClusterClusterLogConfObservation) DeepCopy() *NewClusterClusterLogConfObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterLogConfObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterLogConfParameters) DeepCopyInto(out *NewClusterClusterLogConfParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]ClusterLogConfDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]ClusterLogConfS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterLogConfParameters.
func (in *NewClusterClusterLogConfParameters) DeepCopy() *NewClusterClusterLogConfParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterLogConfParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterLogConfS3InitParameters) DeepCopyInto(out *NewClusterClusterLogConfS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterLogConfS3InitParameters.
func (in *NewClusterClusterLogConfS3InitParameters) DeepCopy() *NewClusterClusterLogConfS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterLogConfS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterLogConfS3Observation) DeepCopyInto(out *NewClusterClusterLogConfS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterLogConfS3Observation.
func (in *NewClusterClusterLogConfS3Observation) DeepCopy() *NewClusterClusterLogConfS3Observation {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterLogConfS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterLogConfS3Parameters) DeepCopyInto(out *NewClusterClusterLogConfS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterLogConfS3Parameters.
func (in *NewClusterClusterLogConfS3Parameters) DeepCopy() *NewClusterClusterLogConfS3Parameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterLogConfS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterMountInfoInitParameters) DeepCopyInto(out *NewClusterClusterMountInfoInitParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]ClusterMountInfoNetworkFilesystemInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterMountInfoInitParameters.
func (in *NewClusterClusterMountInfoInitParameters) DeepCopy() *NewClusterClusterMountInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterMountInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterMountInfoNetworkFilesystemInfoInitParameters) DeepCopyInto(out *NewClusterClusterMountInfoNetworkFilesystemInfoInitParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterMountInfoNetworkFilesystemInfoInitParameters.
func (in *NewClusterClusterMountInfoNetworkFilesystemInfoInitParameters) DeepCopy() *NewClusterClusterMountInfoNetworkFilesystemInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterMountInfoNetworkFilesystemInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterMountInfoNetworkFilesystemInfoObservation) DeepCopyInto(out *NewClusterClusterMountInfoNetworkFilesystemInfoObservation) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterMountInfoNetworkFilesystemInfoObservation.
func (in *NewClusterClusterMountInfoNetworkFilesystemInfoObservation) DeepCopy() *NewClusterClusterMountInfoNetworkFilesystemInfoObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterMountInfoNetworkFilesystemInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterMountInfoNetworkFilesystemInfoParameters) DeepCopyInto(out *NewClusterClusterMountInfoNetworkFilesystemInfoParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterMountInfoNetworkFilesystemInfoParameters.
func (in *NewClusterClusterMountInfoNetworkFilesystemInfoParameters) DeepCopy() *NewClusterClusterMountInfoNetworkFilesystemInfoParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterMountInfoNetworkFilesystemInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterMountInfoObservation) DeepCopyInto(out *NewClusterClusterMountInfoObservation) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]ClusterMountInfoNetworkFilesystemInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterMountInfoObservation.
func (in *NewClusterClusterMountInfoObservation) DeepCopy() *NewClusterClusterMountInfoObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterMountInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterMountInfoParameters) DeepCopyInto(out *NewClusterClusterMountInfoParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]ClusterMountInfoNetworkFilesystemInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterMountInfoParameters.
func (in *NewClusterClusterMountInfoParameters) DeepCopy() *NewClusterClusterMountInfoParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterMountInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterDockerImageBasicAuthInitParameters) DeepCopyInto(out *NewClusterDockerImageBasicAuthInitParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterDockerImageBasicAuthInitParameters.
func (in *NewClusterDockerImageBasicAuthInitParameters) DeepCopy() *NewClusterDockerImageBasicAuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterDockerImageBasicAuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterDockerImageBasicAuthObservation) DeepCopyInto(out *NewClusterDockerImageBasicAuthObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterDockerImageBasicAuthObservation.
func (in *NewClusterDockerImageBasicAuthObservation) DeepCopy() *NewClusterDockerImageBasicAuthObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterDockerImageBasicAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterDockerImageBasicAuthParameters) DeepCopyInto(out *NewClusterDockerImageBasicAuthParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterDockerImageBasicAuthParameters.
func (in *NewClusterDockerImageBasicAuthParameters) DeepCopy() *NewClusterDockerImageBasicAuthParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterDockerImageBasicAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterDockerImageInitParameters) DeepCopyInto(out *NewClusterDockerImageInitParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]DockerImageBasicAuthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterDockerImageInitParameters.
func (in *NewClusterDockerImageInitParameters) DeepCopy() *NewClusterDockerImageInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterDockerImageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterDockerImageObservation) DeepCopyInto(out *NewClusterDockerImageObservation) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]DockerImageBasicAuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterDockerImageObservation.
func (in *NewClusterDockerImageObservation) DeepCopy() *NewClusterDockerImageObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterDockerImageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterDockerImageParameters) DeepCopyInto(out *NewClusterDockerImageParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]DockerImageBasicAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterDockerImageParameters.
func (in *NewClusterDockerImageParameters) DeepCopy() *NewClusterDockerImageParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterDockerImageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterGCPAttributesInitParameters) DeepCopyInto(out *NewClusterGCPAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterGCPAttributesInitParameters.
func (in *NewClusterGCPAttributesInitParameters) DeepCopy() *NewClusterGCPAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterGCPAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterGCPAttributesObservation) DeepCopyInto(out *NewClusterGCPAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterGCPAttributesObservation.
func (in *NewClusterGCPAttributesObservation) DeepCopy() *NewClusterGCPAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterGCPAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterGCPAttributesParameters) DeepCopyInto(out *NewClusterGCPAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterGCPAttributesParameters.
func (in *NewClusterGCPAttributesParameters) DeepCopy() *NewClusterGCPAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterGCPAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitParameters) DeepCopyInto(out *NewClusterInitParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]NewClusterAutoscaleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]NewClusterAwsAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]NewClusterAzureAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]NewClusterClusterLogConfInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]NewClusterClusterMountInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]NewClusterDockerImageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]NewClusterGCPAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]NewClusterInitScriptsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]NewClusterLibraryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]NewClusterWorkloadTypeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitParameters.
func (in *NewClusterInitParameters) DeepCopy() *NewClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsAbfssInitParameters) DeepCopyInto(out *NewClusterInitScriptsAbfssInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsAbfssInitParameters.
func (in *NewClusterInitScriptsAbfssInitParameters) DeepCopy() *NewClusterInitScriptsAbfssInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsAbfssInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsAbfssObservation) DeepCopyInto(out *NewClusterInitScriptsAbfssObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsAbfssObservation.
func (in *NewClusterInitScriptsAbfssObservation) DeepCopy() *NewClusterInitScriptsAbfssObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsAbfssObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsAbfssParameters) DeepCopyInto(out *NewClusterInitScriptsAbfssParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsAbfssParameters.
func (in *NewClusterInitScriptsAbfssParameters) DeepCopy() *NewClusterInitScriptsAbfssParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsAbfssParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsDbfsInitParameters) DeepCopyInto(out *NewClusterInitScriptsDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsDbfsInitParameters.
func (in *NewClusterInitScriptsDbfsInitParameters) DeepCopy() *NewClusterInitScriptsDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsDbfsObservation) DeepCopyInto(out *NewClusterInitScriptsDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsDbfsObservation.
func (in *NewClusterInitScriptsDbfsObservation) DeepCopy() *NewClusterInitScriptsDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsDbfsParameters) DeepCopyInto(out *NewClusterInitScriptsDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsDbfsParameters.
func (in *NewClusterInitScriptsDbfsParameters) DeepCopy() *NewClusterInitScriptsDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsFileInitParameters) DeepCopyInto(out *NewClusterInitScriptsFileInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsFileInitParameters.
func (in *NewClusterInitScriptsFileInitParameters) DeepCopy() *NewClusterInitScriptsFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsFileObservation) DeepCopyInto(out *NewClusterInitScriptsFileObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsFileObservation.
func (in *NewClusterInitScriptsFileObservation) DeepCopy() *NewClusterInitScriptsFileObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsFileParameters) DeepCopyInto(out *NewClusterInitScriptsFileParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsFileParameters.
func (in *NewClusterInitScriptsFileParameters) DeepCopy() *NewClusterInitScriptsFileParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsGcsInitParameters) DeepCopyInto(out *NewClusterInitScriptsGcsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsGcsInitParameters.
func (in *NewClusterInitScriptsGcsInitParameters) DeepCopy() *NewClusterInitScriptsGcsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsGcsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsGcsObservation) DeepCopyInto(out *NewClusterInitScriptsGcsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsGcsObservation.
func (in *NewClusterInitScriptsGcsObservation) DeepCopy() *NewClusterInitScriptsGcsObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsGcsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsGcsParameters) DeepCopyInto(out *NewClusterInitScriptsGcsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsGcsParameters.
func (in *NewClusterInitScriptsGcsParameters) DeepCopy() *NewClusterInitScriptsGcsParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsGcsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsInitParameters) DeepCopyInto(out *NewClusterInitScriptsInitParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]InitScriptsAbfssInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]NewClusterInitScriptsDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]InitScriptsFileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]InitScriptsGcsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]NewClusterInitScriptsS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]InitScriptsVolumesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]InitScriptsWorkspaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsInitParameters.
func (in *NewClusterInitScriptsInitParameters) DeepCopy() *NewClusterInitScriptsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsObservation) DeepCopyInto(out *NewClusterInitScriptsObservation) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]InitScriptsAbfssObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]NewClusterInitScriptsDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]InitScriptsFileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]InitScriptsGcsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]NewClusterInitScriptsS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]InitScriptsVolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]InitScriptsWorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsObservation.
func (in *NewClusterInitScriptsObservation) DeepCopy() *NewClusterInitScriptsObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsParameters) DeepCopyInto(out *NewClusterInitScriptsParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]InitScriptsAbfssParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]NewClusterInitScriptsDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]InitScriptsFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]InitScriptsGcsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]NewClusterInitScriptsS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]InitScriptsVolumesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]InitScriptsWorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsParameters.
func (in *NewClusterInitScriptsParameters) DeepCopy() *NewClusterInitScriptsParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsS3InitParameters) DeepCopyInto(out *NewClusterInitScriptsS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsS3InitParameters.
func (in *NewClusterInitScriptsS3InitParameters) DeepCopy() *NewClusterInitScriptsS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsS3Observation) DeepCopyInto(out *NewClusterInitScriptsS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsS3Observation.
func (in *NewClusterInitScriptsS3Observation) DeepCopy() *NewClusterInitScriptsS3Observation {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsS3Parameters) DeepCopyInto(out *NewClusterInitScriptsS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsS3Parameters.
func (in *NewClusterInitScriptsS3Parameters) DeepCopy() *NewClusterInitScriptsS3Parameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsVolumesInitParameters) DeepCopyInto(out *NewClusterInitScriptsVolumesInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsVolumesInitParameters.
func (in *NewClusterInitScriptsVolumesInitParameters) DeepCopy() *NewClusterInitScriptsVolumesInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsVolumesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsVolumesObservation) DeepCopyInto(out *NewClusterInitScriptsVolumesObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsVolumesObservation.
func (in *NewClusterInitScriptsVolumesObservation) DeepCopy() *NewClusterInitScriptsVolumesObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsVolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsVolumesParameters) DeepCopyInto(out *NewClusterInitScriptsVolumesParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsVolumesParameters.
func (in *NewClusterInitScriptsVolumesParameters) DeepCopy() *NewClusterInitScriptsVolumesParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsVolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsWorkspaceInitParameters) DeepCopyInto(out *NewClusterInitScriptsWorkspaceInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsWorkspaceInitParameters.
func (in *NewClusterInitScriptsWorkspaceInitParameters) DeepCopy() *NewClusterInitScriptsWorkspaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsWorkspaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsWorkspaceObservation) DeepCopyInto(out *NewClusterInitScriptsWorkspaceObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsWorkspaceObservation.
func (in *NewClusterInitScriptsWorkspaceObservation) DeepCopy() *NewClusterInitScriptsWorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsWorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsWorkspaceParameters) DeepCopyInto(out *NewClusterInitScriptsWorkspaceParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsWorkspaceParameters.
func (in *NewClusterInitScriptsWorkspaceParameters) DeepCopy() *NewClusterInitScriptsWorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsWorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterLibraryCranInitParameters) DeepCopyInto(out *NewClusterLibraryCranInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterLibraryCranInitParameters.
func (in *NewClusterLibraryCranInitParameters) DeepCopy() *NewClusterLibraryCranInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterLibraryCranInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterLibraryCranObservation) DeepCopyInto(out *NewClusterLibraryCranObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterLibraryCranObservation.
func (in *NewClusterLibraryCranObservation) DeepCopy() *NewClusterLibraryCranObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterLibraryCranObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterLibraryCranParameters) DeepCopyInto(out *NewClusterLibraryCranParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterLibraryCranParameters.
func (in *NewClusterLibraryCranParameters) DeepCopy() *NewClusterLibraryCranParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterLibraryCranParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterLibraryInitParameters) DeepCopyInto(out *NewClusterLibraryInitParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]LibraryCranInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]LibraryMavenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]LibraryPypiInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterLibraryInitParameters.
func (in *NewClusterLibraryInitParameters) DeepCopy() *NewClusterLibraryInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterLibraryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterLibraryMavenInitParameters) DeepCopyInto(out *NewClusterLibraryMavenInitParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterLibraryMavenInitParameters.
func (in *NewClusterLibraryMavenInitParameters) DeepCopy() *NewClusterLibraryMavenInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterLibraryMavenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterLibraryMavenObservation) DeepCopyInto(out *NewClusterLibraryMavenObservation) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterLibraryMavenObservation.
func (in *NewClusterLibraryMavenObservation) DeepCopy() *NewClusterLibraryMavenObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterLibraryMavenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterLibraryMavenParameters) DeepCopyInto(out *NewClusterLibraryMavenParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterLibraryMavenParameters.
func (in *NewClusterLibraryMavenParameters) DeepCopy() *NewClusterLibraryMavenParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterLibraryMavenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterLibraryObservation) DeepCopyInto(out *NewClusterLibraryObservation) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]LibraryCranObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]LibraryMavenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]LibraryPypiObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterLibraryObservation.
func (in *NewClusterLibraryObservation) DeepCopy() *NewClusterLibraryObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterLibraryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterLibraryParameters) DeepCopyInto(out *NewClusterLibraryParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]LibraryCranParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]LibraryMavenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]LibraryPypiParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterLibraryParameters.
func (in *NewClusterLibraryParameters) DeepCopy() *NewClusterLibraryParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterLibraryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterLibraryPypiInitParameters) DeepCopyInto(out *NewClusterLibraryPypiInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterLibraryPypiInitParameters.
func (in *NewClusterLibraryPypiInitParameters) DeepCopy() *NewClusterLibraryPypiInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterLibraryPypiInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterLibraryPypiObservation) DeepCopyInto(out *NewClusterLibraryPypiObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterLibraryPypiObservation.
func (in *NewClusterLibraryPypiObservation) DeepCopy() *NewClusterLibraryPypiObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterLibraryPypiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterLibraryPypiParameters) DeepCopyInto(out *NewClusterLibraryPypiParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterLibraryPypiParameters.
func (in *NewClusterLibraryPypiParameters) DeepCopy() *NewClusterLibraryPypiParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterLibraryPypiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterObservation) DeepCopyInto(out *NewClusterObservation) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]NewClusterAutoscaleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]NewClusterAwsAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]NewClusterAzureAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]NewClusterClusterLogConfObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]NewClusterClusterMountInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]NewClusterDockerImageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]NewClusterGCPAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]NewClusterInitScriptsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]NewClusterLibraryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]NewClusterWorkloadTypeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterObservation.
func (in *NewClusterObservation) DeepCopy() *NewClusterObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterParameters) DeepCopyInto(out *NewClusterParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]NewClusterAutoscaleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]NewClusterAwsAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]NewClusterAzureAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]NewClusterClusterLogConfParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]NewClusterClusterMountInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]NewClusterDockerImageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]NewClusterGCPAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]NewClusterInitScriptsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]NewClusterLibraryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]NewClusterWorkloadTypeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterParameters.
func (in *NewClusterParameters) DeepCopy() *NewClusterParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterWorkloadTypeClientsInitParameters) DeepCopyInto(out *NewClusterWorkloadTypeClientsInitParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterWorkloadTypeClientsInitParameters.
func (in *NewClusterWorkloadTypeClientsInitParameters) DeepCopy() *NewClusterWorkloadTypeClientsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterWorkloadTypeClientsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterWorkloadTypeClientsObservation) DeepCopyInto(out *NewClusterWorkloadTypeClientsObservation) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterWorkloadTypeClientsObservation.
func (in *NewClusterWorkloadTypeClientsObservation) DeepCopy() *NewClusterWorkloadTypeClientsObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterWorkloadTypeClientsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterWorkloadTypeClientsParameters) DeepCopyInto(out *NewClusterWorkloadTypeClientsParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterWorkloadTypeClientsParameters.
func (in *NewClusterWorkloadTypeClientsParameters) DeepCopy() *NewClusterWorkloadTypeClientsParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterWorkloadTypeClientsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterWorkloadTypeInitParameters) DeepCopyInto(out *NewClusterWorkloadTypeInitParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]WorkloadTypeClientsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterWorkloadTypeInitParameters.
func (in *NewClusterWorkloadTypeInitParameters) DeepCopy() *NewClusterWorkloadTypeInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterWorkloadTypeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterWorkloadTypeObservation) DeepCopyInto(out *NewClusterWorkloadTypeObservation) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]WorkloadTypeClientsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterWorkloadTypeObservation.
func (in *NewClusterWorkloadTypeObservation) DeepCopy() *NewClusterWorkloadTypeObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterWorkloadTypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterWorkloadTypeParameters) DeepCopyInto(out *NewClusterWorkloadTypeParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]WorkloadTypeClientsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterWorkloadTypeParameters.
func (in *NewClusterWorkloadTypeParameters) DeepCopy() *NewClusterWorkloadTypeParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterWorkloadTypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Notebook) DeepCopyInto(out *Notebook) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Notebook.
func (in *Notebook) DeepCopy() *Notebook {
	if in == nil {
		return nil
	}
	out := new(Notebook)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Notebook) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookInitParameters) DeepCopyInto(out *NotebookInitParameters) {
	*out = *in
	if in.ContentBase64 != nil {
		in, out := &in.ContentBase64, &out.ContentBase64
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.Language != nil {
		in, out := &in.Language, &out.Language
		*out = new(string)
		**out = **in
	}
	if in.Md5 != nil {
		in, out := &in.Md5, &out.Md5
		*out = new(string)
		**out = **in
	}
	if in.ObjectID != nil {
		in, out := &in.ObjectID, &out.ObjectID
		*out = new(float64)
		**out = **in
	}
	if in.ObjectType != nil {
		in, out := &in.ObjectType, &out.ObjectType
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookInitParameters.
func (in *NotebookInitParameters) DeepCopy() *NotebookInitParameters {
	if in == nil {
		return nil
	}
	out := new(NotebookInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookList) DeepCopyInto(out *NotebookList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Notebook, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookList.
func (in *NotebookList) DeepCopy() *NotebookList {
	if in == nil {
		return nil
	}
	out := new(NotebookList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NotebookList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookObservation) DeepCopyInto(out *NotebookObservation) {
	*out = *in
	if in.ContentBase64 != nil {
		in, out := &in.ContentBase64, &out.ContentBase64
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Language != nil {
		in, out := &in.Language, &out.Language
		*out = new(string)
		**out = **in
	}
	if in.Md5 != nil {
		in, out := &in.Md5, &out.Md5
		*out = new(string)
		**out = **in
	}
	if in.ObjectID != nil {
		in, out := &in.ObjectID, &out.ObjectID
		*out = new(float64)
		**out = **in
	}
	if in.ObjectType != nil {
		in, out := &in.ObjectType, &out.ObjectType
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WorkspacePath != nil {
		in, out := &in.WorkspacePath, &out.WorkspacePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookObservation.
func (in *NotebookObservation) DeepCopy() *NotebookObservation {
	if in == nil {
		return nil
	}
	out := new(NotebookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookParameters) DeepCopyInto(out *NotebookParameters) {
	*out = *in
	if in.ContentBase64 != nil {
		in, out := &in.ContentBase64, &out.ContentBase64
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.Language != nil {
		in, out := &in.Language, &out.Language
		*out = new(string)
		**out = **in
	}
	if in.Md5 != nil {
		in, out := &in.Md5, &out.Md5
		*out = new(string)
		**out = **in
	}
	if in.ObjectID != nil {
		in, out := &in.ObjectID, &out.ObjectID
		*out = new(float64)
		**out = **in
	}
	if in.ObjectType != nil {
		in, out := &in.ObjectType, &out.ObjectType
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookParameters.
func (in *NotebookParameters) DeepCopy() *NotebookParameters {
	if in == nil {
		return nil
	}
	out := new(NotebookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookSpec) DeepCopyInto(out *NotebookSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookSpec.
func (in *NotebookSpec) DeepCopy() *NotebookSpec {
	if in == nil {
		return nil
	}
	out := new(NotebookSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookStatus) DeepCopyInto(out *NotebookStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookStatus.
func (in *NotebookStatus) DeepCopy() *NotebookStatus {
	if in == nil {
		return nil
	}
	out := new(NotebookStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookTaskInitParameters) DeepCopyInto(out *NotebookTaskInitParameters) {
	*out = *in
	if in.BaseParameters != nil {
		in, out := &in.BaseParameters, &out.BaseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookTaskInitParameters.
func (in *NotebookTaskInitParameters) DeepCopy() *NotebookTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(NotebookTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookTaskObservation) DeepCopyInto(out *NotebookTaskObservation) {
	*out = *in
	if in.BaseParameters != nil {
		in, out := &in.BaseParameters, &out.BaseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookTaskObservation.
func (in *NotebookTaskObservation) DeepCopy() *NotebookTaskObservation {
	if in == nil {
		return nil
	}
	out := new(NotebookTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookTaskParameters) DeepCopyInto(out *NotebookTaskParameters) {
	*out = *in
	if in.BaseParameters != nil {
		in, out := &in.BaseParameters, &out.BaseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookTaskParameters.
func (in *NotebookTaskParameters) DeepCopy() *NotebookTaskParameters {
	if in == nil {
		return nil
	}
	out := new(NotebookTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationInitParameters) DeepCopyInto(out *NotificationInitParameters) {
	*out = *in
	if in.Alerts != nil {
		in, out := &in.Alerts, &out.Alerts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EmailRecipients != nil {
		in, out := &in.EmailRecipients, &out.EmailRecipients
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationInitParameters.
func (in *NotificationInitParameters) DeepCopy() *NotificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationObservation) DeepCopyInto(out *NotificationObservation) {
	*out = *in
	if in.Alerts != nil {
		in, out := &in.Alerts, &out.Alerts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EmailRecipients != nil {
		in, out := &in.EmailRecipients, &out.EmailRecipients
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationObservation.
func (in *NotificationObservation) DeepCopy() *NotificationObservation {
	if in == nil {
		return nil
	}
	out := new(NotificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationParameters) DeepCopyInto(out *NotificationParameters) {
	*out = *in
	if in.Alerts != nil {
		in, out := &in.Alerts, &out.Alerts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EmailRecipients != nil {
		in, out := &in.EmailRecipients, &out.EmailRecipients
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationParameters.
func (in *NotificationParameters) DeepCopy() *NotificationParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationSettingsInitParameters) DeepCopyInto(out *NotificationSettingsInitParameters) {
	*out = *in
	if in.NoAlertForCanceledRuns != nil {
		in, out := &in.NoAlertForCanceledRuns, &out.NoAlertForCanceledRuns
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationSettingsInitParameters.
func (in *NotificationSettingsInitParameters) DeepCopy() *NotificationSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationSettingsObservation) DeepCopyInto(out *NotificationSettingsObservation) {
	*out = *in
	if in.NoAlertForCanceledRuns != nil {
		in, out := &in.NoAlertForCanceledRuns, &out.NoAlertForCanceledRuns
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationSettingsObservation.
func (in *NotificationSettingsObservation) DeepCopy() *NotificationSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(NotificationSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationSettingsParameters) DeepCopyInto(out *NotificationSettingsParameters) {
	*out = *in
	if in.NoAlertForCanceledRuns != nil {
		in, out := &in.NoAlertForCanceledRuns, &out.NoAlertForCanceledRuns
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationSettingsParameters.
func (in *NotificationSettingsParameters) DeepCopy() *NotificationSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NumberInitParameters) DeepCopyInto(out *NumberInitParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NumberInitParameters.
func (in *NumberInitParameters) DeepCopy() *NumberInitParameters {
	if in == nil {
		return nil
	}
	out := new(NumberInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NumberObservation) DeepCopyInto(out *NumberObservation) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NumberObservation.
func (in *NumberObservation) DeepCopy() *NumberObservation {
	if in == nil {
		return nil
	}
	out := new(NumberObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NumberParameters) DeepCopyInto(out *NumberParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NumberParameters.
func (in *NumberParameters) DeepCopy() *NumberParameters {
	if in == nil {
		return nil
	}
	out := new(NumberParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NumericValueInitParameters) DeepCopyInto(out *NumericValueInitParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NumericValueInitParameters.
func (in *NumericValueInitParameters) DeepCopy() *NumericValueInitParameters {
	if in == nil {
		return nil
	}
	out := new(NumericValueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NumericValueObservation) DeepCopyInto(out *NumericValueObservation) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NumericValueObservation.
func (in *NumericValueObservation) DeepCopy() *NumericValueObservation {
	if in == nil {
		return nil
	}
	out := new(NumericValueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NumericValueParameters) DeepCopyInto(out *NumericValueParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NumericValueParameters.
func (in *NumericValueParameters) DeepCopy() *NumericValueParameters {
	if in == nil {
		return nil
	}
	out := new(NumericValueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectsInitParameters) DeepCopyInto(out *ObjectsInitParameters) {
	*out = *in
	if in.Report != nil {
		in, out := &in.Report, &out.Report
		*out = make([]ReportInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = make([]SchemaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = make([]ObjectsTableInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectsInitParameters.
func (in *ObjectsInitParameters) DeepCopy() *ObjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ObjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectsObservation) DeepCopyInto(out *ObjectsObservation) {
	*out = *in
	if in.Report != nil {
		in, out := &in.Report, &out.Report
		*out = make([]ReportObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = make([]SchemaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = make([]ObjectsTableObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectsObservation.
func (in *ObjectsObservation) DeepCopy() *ObjectsObservation {
	if in == nil {
		return nil
	}
	out := new(ObjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectsParameters) DeepCopyInto(out *ObjectsParameters) {
	*out = *in
	if in.Report != nil {
		in, out := &in.Report, &out.Report
		*out = make([]ReportParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = make([]SchemaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = make([]ObjectsTableParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectsParameters.
func (in *ObjectsParameters) DeepCopy() *ObjectsParameters {
	if in == nil {
		return nil
	}
	out := new(ObjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectsTableInitParameters) DeepCopyInto(out *ObjectsTableInitParameters) {
	*out = *in
	if in.DestinationCatalog != nil {
		in, out := &in.DestinationCatalog, &out.DestinationCatalog
		*out = new(string)
		**out = **in
	}
	if in.DestinationSchema != nil {
		in, out := &in.DestinationSchema, &out.DestinationSchema
		*out = new(string)
		**out = **in
	}
	if in.DestinationTable != nil {
		in, out := &in.DestinationTable, &out.DestinationTable
		*out = new(string)
		**out = **in
	}
	if in.SourceCatalog != nil {
		in, out := &in.SourceCatalog, &out.SourceCatalog
		*out = new(string)
		**out = **in
	}
	if in.SourceSchema != nil {
		in, out := &in.SourceSchema, &out.SourceSchema
		*out = new(string)
		**out = **in
	}
	if in.SourceTable != nil {
		in, out := &in.SourceTable, &out.SourceTable
		*out = new(string)
		**out = **in
	}
	if in.TableConfiguration != nil {
		in, out := &in.TableConfiguration, &out.TableConfiguration
		*out = make([]TableTableConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectsTableInitParameters.
func (in *ObjectsTableInitParameters) DeepCopy() *ObjectsTableInitParameters {
	if in == nil {
		return nil
	}
	out := new(ObjectsTableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectsTableObservation) DeepCopyInto(out *ObjectsTableObservation) {
	*out = *in
	if in.DestinationCatalog != nil {
		in, out := &in.DestinationCatalog, &out.DestinationCatalog
		*out = new(string)
		**out = **in
	}
	if in.DestinationSchema != nil {
		in, out := &in.DestinationSchema, &out.DestinationSchema
		*out = new(string)
		**out = **in
	}
	if in.DestinationTable != nil {
		in, out := &in.DestinationTable, &out.DestinationTable
		*out = new(string)
		**out = **in
	}
	if in.SourceCatalog != nil {
		in, out := &in.SourceCatalog, &out.SourceCatalog
		*out = new(string)
		**out = **in
	}
	if in.SourceSchema != nil {
		in, out := &in.SourceSchema, &out.SourceSchema
		*out = new(string)
		**out = **in
	}
	if in.SourceTable != nil {
		in, out := &in.SourceTable, &out.SourceTable
		*out = new(string)
		**out = **in
	}
	if in.TableConfiguration != nil {
		in, out := &in.TableConfiguration, &out.TableConfiguration
		*out = make([]TableTableConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectsTableObservation.
func (in *ObjectsTableObservation) DeepCopy() *ObjectsTableObservation {
	if in == nil {
		return nil
	}
	out := new(ObjectsTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectsTableParameters) DeepCopyInto(out *ObjectsTableParameters) {
	*out = *in
	if in.DestinationCatalog != nil {
		in, out := &in.DestinationCatalog, &out.DestinationCatalog
		*out = new(string)
		**out = **in
	}
	if in.DestinationSchema != nil {
		in, out := &in.DestinationSchema, &out.DestinationSchema
		*out = new(string)
		**out = **in
	}
	if in.DestinationTable != nil {
		in, out := &in.DestinationTable, &out.DestinationTable
		*out = new(string)
		**out = **in
	}
	if in.SourceCatalog != nil {
		in, out := &in.SourceCatalog, &out.SourceCatalog
		*out = new(string)
		**out = **in
	}
	if in.SourceSchema != nil {
		in, out := &in.SourceSchema, &out.SourceSchema
		*out = new(string)
		**out = **in
	}
	if in.SourceTable != nil {
		in, out := &in.SourceTable, &out.SourceTable
		*out = new(string)
		**out = **in
	}
	if in.TableConfiguration != nil {
		in, out := &in.TableConfiguration, &out.TableConfiguration
		*out = make([]TableTableConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectsTableParameters.
func (in *ObjectsTableParameters) DeepCopy() *ObjectsTableParameters {
	if in == nil {
		return nil
	}
	out := new(ObjectsTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OdbcParamsInitParameters) DeepCopyInto(out *OdbcParamsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OdbcParamsInitParameters.
func (in *OdbcParamsInitParameters) DeepCopy() *OdbcParamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OdbcParamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OdbcParamsObservation) DeepCopyInto(out *OdbcParamsObservation) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OdbcParamsObservation.
func (in *OdbcParamsObservation) DeepCopy() *OdbcParamsObservation {
	if in == nil {
		return nil
	}
	out := new(OdbcParamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OdbcParamsParameters) DeepCopyInto(out *OdbcParamsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OdbcParamsParameters.
func (in *OdbcParamsParameters) DeepCopy() *OdbcParamsParameters {
	if in == nil {
		return nil
	}
	out := new(OdbcParamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnDurationWarningThresholdExceededInitParameters) DeepCopyInto(out *OnDurationWarningThresholdExceededInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnDurationWarningThresholdExceededInitParameters.
func (in *OnDurationWarningThresholdExceededInitParameters) DeepCopy() *OnDurationWarningThresholdExceededInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnDurationWarningThresholdExceededInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnDurationWarningThresholdExceededObservation) DeepCopyInto(out *OnDurationWarningThresholdExceededObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnDurationWarningThresholdExceededObservation.
func (in *OnDurationWarningThresholdExceededObservation) DeepCopy() *OnDurationWarningThresholdExceededObservation {
	if in == nil {
		return nil
	}
	out := new(OnDurationWarningThresholdExceededObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnDurationWarningThresholdExceededParameters) DeepCopyInto(out *OnDurationWarningThresholdExceededParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnDurationWarningThresholdExceededParameters.
func (in *OnDurationWarningThresholdExceededParameters) DeepCopy() *OnDurationWarningThresholdExceededParameters {
	if in == nil {
		return nil
	}
	out := new(OnDurationWarningThresholdExceededParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnFailureInitParameters) DeepCopyInto(out *OnFailureInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnFailureInitParameters.
func (in *OnFailureInitParameters) DeepCopy() *OnFailureInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnFailureInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnFailureObservation) DeepCopyInto(out *OnFailureObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnFailureObservation.
func (in *OnFailureObservation) DeepCopy() *OnFailureObservation {
	if in == nil {
		return nil
	}
	out := new(OnFailureObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnFailureParameters) DeepCopyInto(out *OnFailureParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnFailureParameters.
func (in *OnFailureParameters) DeepCopy() *OnFailureParameters {
	if in == nil {
		return nil
	}
	out := new(OnFailureParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnStartInitParameters) DeepCopyInto(out *OnStartInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnStartInitParameters.
func (in *OnStartInitParameters) DeepCopy() *OnStartInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnStartInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnStartObservation) DeepCopyInto(out *OnStartObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnStartObservation.
func (in *OnStartObservation) DeepCopy() *OnStartObservation {
	if in == nil {
		return nil
	}
	out := new(OnStartObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnStartParameters) DeepCopyInto(out *OnStartParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnStartParameters.
func (in *OnStartParameters) DeepCopy() *OnStartParameters {
	if in == nil {
		return nil
	}
	out := new(OnStartParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnStreamingBacklogExceededInitParameters) DeepCopyInto(out *OnStreamingBacklogExceededInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnStreamingBacklogExceededInitParameters.
func (in *OnStreamingBacklogExceededInitParameters) DeepCopy() *OnStreamingBacklogExceededInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnStreamingBacklogExceededInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnStreamingBacklogExceededObservation) DeepCopyInto(out *OnStreamingBacklogExceededObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnStreamingBacklogExceededObservation.
func (in *OnStreamingBacklogExceededObservation) DeepCopy() *OnStreamingBacklogExceededObservation {
	if in == nil {
		return nil
	}
	out := new(OnStreamingBacklogExceededObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnStreamingBacklogExceededParameters) DeepCopyInto(out *OnStreamingBacklogExceededParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnStreamingBacklogExceededParameters.
func (in *OnStreamingBacklogExceededParameters) DeepCopy() *OnStreamingBacklogExceededParameters {
	if in == nil {
		return nil
	}
	out := new(OnStreamingBacklogExceededParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnSuccessInitParameters) DeepCopyInto(out *OnSuccessInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnSuccessInitParameters.
func (in *OnSuccessInitParameters) DeepCopy() *OnSuccessInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnSuccessInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnSuccessObservation) DeepCopyInto(out *OnSuccessObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnSuccessObservation.
func (in *OnSuccessObservation) DeepCopy() *OnSuccessObservation {
	if in == nil {
		return nil
	}
	out := new(OnSuccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnSuccessParameters) DeepCopyInto(out *OnSuccessParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnSuccessParameters.
func (in *OnSuccessParameters) DeepCopy() *OnSuccessParameters {
	if in == nil {
		return nil
	}
	out := new(OnSuccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperandInitParameters) DeepCopyInto(out *OperandInitParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = make([]ColumnInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperandInitParameters.
func (in *OperandInitParameters) DeepCopy() *OperandInitParameters {
	if in == nil {
		return nil
	}
	out := new(OperandInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperandObservation) DeepCopyInto(out *OperandObservation) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = make([]ColumnObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperandObservation.
func (in *OperandObservation) DeepCopy() *OperandObservation {
	if in == nil {
		return nil
	}
	out := new(OperandObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperandParameters) DeepCopyInto(out *OperandParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = make([]ColumnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperandParameters.
func (in *OperandParameters) DeepCopy() *OperandParameters {
	if in == nil {
		return nil
	}
	out := new(OperandParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsInitParameters) DeepCopyInto(out *OptionsInitParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.CustomBody != nil {
		in, out := &in.CustomBody, &out.CustomBody
		*out = new(string)
		**out = **in
	}
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.EmptyResultState != nil {
		in, out := &in.EmptyResultState, &out.EmptyResultState
		*out = new(string)
		**out = **in
	}
	if in.Muted != nil {
		in, out := &in.Muted, &out.Muted
		*out = new(bool)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsInitParameters.
func (in *OptionsInitParameters) DeepCopy() *OptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsObservation) DeepCopyInto(out *OptionsObservation) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.CustomBody != nil {
		in, out := &in.CustomBody, &out.CustomBody
		*out = new(string)
		**out = **in
	}
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.EmptyResultState != nil {
		in, out := &in.EmptyResultState, &out.EmptyResultState
		*out = new(string)
		**out = **in
	}
	if in.Muted != nil {
		in, out := &in.Muted, &out.Muted
		*out = new(bool)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsObservation.
func (in *OptionsObservation) DeepCopy() *OptionsObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsParameters) DeepCopyInto(out *OptionsParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.CustomBody != nil {
		in, out := &in.CustomBody, &out.CustomBody
		*out = new(string)
		**out = **in
	}
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.EmptyResultState != nil {
		in, out := &in.EmptyResultState, &out.EmptyResultState
		*out = new(string)
		**out = **in
	}
	if in.Muted != nil {
		in, out := &in.Muted, &out.Muted
		*out = new(bool)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsParameters.
func (in *OptionsParameters) DeepCopy() *OptionsParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterInitParameters) DeepCopyInto(out *ParameterInitParameters) {
	*out = *in
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterInitParameters.
func (in *ParameterInitParameters) DeepCopy() *ParameterInitParameters {
	if in == nil {
		return nil
	}
	out := new(ParameterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterObservation) DeepCopyInto(out *ParameterObservation) {
	*out = *in
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterObservation.
func (in *ParameterObservation) DeepCopy() *ParameterObservation {
	if in == nil {
		return nil
	}
	out := new(ParameterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterParameters) DeepCopyInto(out *ParameterParameters) {
	*out = *in
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterParameters.
func (in *ParameterParameters) DeepCopy() *ParameterParameters {
	if in == nil {
		return nil
	}
	out := new(ParameterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterQueryInitParameters) DeepCopyInto(out *ParameterQueryInitParameters) {
	*out = *in
	if in.Multiple != nil {
		in, out := &in.Multiple, &out.Multiple
		*out = make([]QueryMultipleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterQueryInitParameters.
func (in *ParameterQueryInitParameters) DeepCopy() *ParameterQueryInitParameters {
	if in == nil {
		return nil
	}
	out := new(ParameterQueryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterQueryObservation) DeepCopyInto(out *ParameterQueryObservation) {
	*out = *in
	if in.Multiple != nil {
		in, out := &in.Multiple, &out.Multiple
		*out = make([]QueryMultipleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterQueryObservation.
func (in *ParameterQueryObservation) DeepCopy() *ParameterQueryObservation {
	if in == nil {
		return nil
	}
	out := new(ParameterQueryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterQueryParameters) DeepCopyInto(out *ParameterQueryParameters) {
	*out = *in
	if in.Multiple != nil {
		in, out := &in.Multiple, &out.Multiple
		*out = make([]QueryMultipleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterQueryParameters.
func (in *ParameterQueryParameters) DeepCopy() *ParameterQueryParameters {
	if in == nil {
		return nil
	}
	out := new(ParameterQueryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PeriodicInitParameters) DeepCopyInto(out *PeriodicInitParameters) {
	*out = *in
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.Unit != nil {
		in, out := &in.Unit, &out.Unit
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PeriodicInitParameters.
func (in *PeriodicInitParameters) DeepCopy() *PeriodicInitParameters {
	if in == nil {
		return nil
	}
	out := new(PeriodicInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PeriodicObservation) DeepCopyInto(out *PeriodicObservation) {
	*out = *in
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.Unit != nil {
		in, out := &in.Unit, &out.Unit
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PeriodicObservation.
func (in *PeriodicObservation) DeepCopy() *PeriodicObservation {
	if in == nil {
		return nil
	}
	out := new(PeriodicObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PeriodicParameters) DeepCopyInto(out *PeriodicParameters) {
	*out = *in
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.Unit != nil {
		in, out := &in.Unit, &out.Unit
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PeriodicParameters.
func (in *PeriodicParameters) DeepCopy() *PeriodicParameters {
	if in == nil {
		return nil
	}
	out := new(PeriodicParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionAssignment) DeepCopyInto(out *PermissionAssignment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionAssignment.
func (in *PermissionAssignment) DeepCopy() *PermissionAssignment {
	if in == nil {
		return nil
	}
	out := new(PermissionAssignment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PermissionAssignment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionAssignmentInitParameters) DeepCopyInto(out *PermissionAssignmentInitParameters) {
	*out = *in
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionAssignmentInitParameters.
func (in *PermissionAssignmentInitParameters) DeepCopy() *PermissionAssignmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(PermissionAssignmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionAssignmentList) DeepCopyInto(out *PermissionAssignmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PermissionAssignment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionAssignmentList.
func (in *PermissionAssignmentList) DeepCopy() *PermissionAssignmentList {
	if in == nil {
		return nil
	}
	out := new(PermissionAssignmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PermissionAssignmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionAssignmentObservation) DeepCopyInto(out *PermissionAssignmentObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionAssignmentObservation.
func (in *PermissionAssignmentObservation) DeepCopy() *PermissionAssignmentObservation {
	if in == nil {
		return nil
	}
	out := new(PermissionAssignmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionAssignmentParameters) DeepCopyInto(out *PermissionAssignmentParameters) {
	*out = *in
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionAssignmentParameters.
func (in *PermissionAssignmentParameters) DeepCopy() *PermissionAssignmentParameters {
	if in == nil {
		return nil
	}
	out := new(PermissionAssignmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionAssignmentSpec) DeepCopyInto(out *PermissionAssignmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionAssignmentSpec.
func (in *PermissionAssignmentSpec) DeepCopy() *PermissionAssignmentSpec {
	if in == nil {
		return nil
	}
	out := new(PermissionAssignmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionAssignmentStatus) DeepCopyInto(out *PermissionAssignmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionAssignmentStatus.
func (in *PermissionAssignmentStatus) DeepCopy() *PermissionAssignmentStatus {
	if in == nil {
		return nil
	}
	out := new(PermissionAssignmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Permissions) DeepCopyInto(out *Permissions) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Permissions.
func (in *Permissions) DeepCopy() *Permissions {
	if in == nil {
		return nil
	}
	out := new(Permissions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Permissions) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionsInitParameters) DeepCopyInto(out *PermissionsInitParameters) {
	*out = *in
	if in.AccessControl != nil {
		in, out := &in.AccessControl, &out.AccessControl
		*out = make([]AccessControlInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Authorization != nil {
		in, out := &in.Authorization, &out.Authorization
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPolicyID != nil {
		in, out := &in.ClusterPolicyID, &out.ClusterPolicyID
		*out = new(string)
		**out = **in
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.DirectoryID != nil {
		in, out := &in.DirectoryID, &out.DirectoryID
		*out = new(string)
		**out = **in
	}
	if in.DirectoryPath != nil {
		in, out := &in.DirectoryPath, &out.DirectoryPath
		*out = new(string)
		**out = **in
	}
	if in.ExperimentID != nil {
		in, out := &in.ExperimentID, &out.ExperimentID
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(string)
		**out = **in
	}
	if in.NotebookID != nil {
		in, out := &in.NotebookID, &out.NotebookID
		*out = new(string)
		**out = **in
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.ObjectType != nil {
		in, out := &in.ObjectType, &out.ObjectType
		*out = new(string)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
	if in.RegisteredModelID != nil {
		in, out := &in.RegisteredModelID, &out.RegisteredModelID
		*out = new(string)
		**out = **in
	}
	if in.RepoID != nil {
		in, out := &in.RepoID, &out.RepoID
		*out = new(string)
		**out = **in
	}
	if in.RepoPath != nil {
		in, out := &in.RepoPath, &out.RepoPath
		*out = new(string)
		**out = **in
	}
	if in.SQLAlertID != nil {
		in, out := &in.SQLAlertID, &out.SQLAlertID
		*out = new(string)
		**out = **in
	}
	if in.SQLDashboardID != nil {
		in, out := &in.SQLDashboardID, &out.SQLDashboardID
		*out = new(string)
		**out = **in
	}
	if in.SQLEndpointID != nil {
		in, out := &in.SQLEndpointID, &out.SQLEndpointID
		*out = new(string)
		**out = **in
	}
	if in.SQLQueryID != nil {
		in, out := &in.SQLQueryID, &out.SQLQueryID
		*out = new(string)
		**out = **in
	}
	if in.ServingEndpointID != nil {
		in, out := &in.ServingEndpointID, &out.ServingEndpointID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceFileID != nil {
		in, out := &in.WorkspaceFileID, &out.WorkspaceFileID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceFilePath != nil {
		in, out := &in.WorkspaceFilePath, &out.WorkspaceFilePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionsInitParameters.
func (in *PermissionsInitParameters) DeepCopy() *PermissionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PermissionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionsList) DeepCopyInto(out *PermissionsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Permissions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionsList.
func (in *PermissionsList) DeepCopy() *PermissionsList {
	if in == nil {
		return nil
	}
	out := new(PermissionsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PermissionsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionsObservation) DeepCopyInto(out *PermissionsObservation) {
	*out = *in
	if in.AccessControl != nil {
		in, out := &in.AccessControl, &out.AccessControl
		*out = make([]AccessControlObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Authorization != nil {
		in, out := &in.Authorization, &out.Authorization
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPolicyID != nil {
		in, out := &in.ClusterPolicyID, &out.ClusterPolicyID
		*out = new(string)
		**out = **in
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.DirectoryID != nil {
		in, out := &in.DirectoryID, &out.DirectoryID
		*out = new(string)
		**out = **in
	}
	if in.DirectoryPath != nil {
		in, out := &in.DirectoryPath, &out.DirectoryPath
		*out = new(string)
		**out = **in
	}
	if in.ExperimentID != nil {
		in, out := &in.ExperimentID, &out.ExperimentID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(string)
		**out = **in
	}
	if in.NotebookID != nil {
		in, out := &in.NotebookID, &out.NotebookID
		*out = new(string)
		**out = **in
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.ObjectType != nil {
		in, out := &in.ObjectType, &out.ObjectType
		*out = new(string)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
	if in.RegisteredModelID != nil {
		in, out := &in.RegisteredModelID, &out.RegisteredModelID
		*out = new(string)
		**out = **in
	}
	if in.RepoID != nil {
		in, out := &in.RepoID, &out.RepoID
		*out = new(string)
		**out = **in
	}
	if in.RepoPath != nil {
		in, out := &in.RepoPath, &out.RepoPath
		*out = new(string)
		**out = **in
	}
	if in.SQLAlertID != nil {
		in, out := &in.SQLAlertID, &out.SQLAlertID
		*out = new(string)
		**out = **in
	}
	if in.SQLDashboardID != nil {
		in, out := &in.SQLDashboardID, &out.SQLDashboardID
		*out = new(string)
		**out = **in
	}
	if in.SQLEndpointID != nil {
		in, out := &in.SQLEndpointID, &out.SQLEndpointID
		*out = new(string)
		**out = **in
	}
	if in.SQLQueryID != nil {
		in, out := &in.SQLQueryID, &out.SQLQueryID
		*out = new(string)
		**out = **in
	}
	if in.ServingEndpointID != nil {
		in, out := &in.ServingEndpointID, &out.ServingEndpointID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceFileID != nil {
		in, out := &in.WorkspaceFileID, &out.WorkspaceFileID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceFilePath != nil {
		in, out := &in.WorkspaceFilePath, &out.WorkspaceFilePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionsObservation.
func (in *PermissionsObservation) DeepCopy() *PermissionsObservation {
	if in == nil {
		return nil
	}
	out := new(PermissionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionsParameters) DeepCopyInto(out *PermissionsParameters) {
	*out = *in
	if in.AccessControl != nil {
		in, out := &in.AccessControl, &out.AccessControl
		*out = make([]AccessControlParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Authorization != nil {
		in, out := &in.Authorization, &out.Authorization
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPolicyID != nil {
		in, out := &in.ClusterPolicyID, &out.ClusterPolicyID
		*out = new(string)
		**out = **in
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.DirectoryID != nil {
		in, out := &in.DirectoryID, &out.DirectoryID
		*out = new(string)
		**out = **in
	}
	if in.DirectoryPath != nil {
		in, out := &in.DirectoryPath, &out.DirectoryPath
		*out = new(string)
		**out = **in
	}
	if in.ExperimentID != nil {
		in, out := &in.ExperimentID, &out.ExperimentID
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(string)
		**out = **in
	}
	if in.NotebookID != nil {
		in, out := &in.NotebookID, &out.NotebookID
		*out = new(string)
		**out = **in
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.ObjectType != nil {
		in, out := &in.ObjectType, &out.ObjectType
		*out = new(string)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
	if in.RegisteredModelID != nil {
		in, out := &in.RegisteredModelID, &out.RegisteredModelID
		*out = new(string)
		**out = **in
	}
	if in.RepoID != nil {
		in, out := &in.RepoID, &out.RepoID
		*out = new(string)
		**out = **in
	}
	if in.RepoPath != nil {
		in, out := &in.RepoPath, &out.RepoPath
		*out = new(string)
		**out = **in
	}
	if in.SQLAlertID != nil {
		in, out := &in.SQLAlertID, &out.SQLAlertID
		*out = new(string)
		**out = **in
	}
	if in.SQLDashboardID != nil {
		in, out := &in.SQLDashboardID, &out.SQLDashboardID
		*out = new(string)
		**out = **in
	}
	if in.SQLEndpointID != nil {
		in, out := &in.SQLEndpointID, &out.SQLEndpointID
		*out = new(string)
		**out = **in
	}
	if in.SQLQueryID != nil {
		in, out := &in.SQLQueryID, &out.SQLQueryID
		*out = new(string)
		**out = **in
	}
	if in.ServingEndpointID != nil {
		in, out := &in.ServingEndpointID, &out.ServingEndpointID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceFileID != nil {
		in, out := &in.WorkspaceFileID, &out.WorkspaceFileID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceFilePath != nil {
		in, out := &in.WorkspaceFilePath, &out.WorkspaceFilePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionsParameters.
func (in *PermissionsParameters) DeepCopy() *PermissionsParameters {
	if in == nil {
		return nil
	}
	out := new(PermissionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionsSpec) DeepCopyInto(out *PermissionsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionsSpec.
func (in *PermissionsSpec) DeepCopy() *PermissionsSpec {
	if in == nil {
		return nil
	}
	out := new(PermissionsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionsStatus) DeepCopyInto(out *PermissionsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionsStatus.
func (in *PermissionsStatus) DeepCopy() *PermissionsStatus {
	if in == nil {
		return nil
	}
	out := new(PermissionsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pipeline) DeepCopyInto(out *Pipeline) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pipeline.
func (in *Pipeline) DeepCopy() *Pipeline {
	if in == nil {
		return nil
	}
	out := new(Pipeline)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Pipeline) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineClusterInitParameters) DeepCopyInto(out *PipelineClusterInitParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]ClusterAutoscaleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]ClusterAwsAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]ClusterAzureAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]ClusterClusterLogConfInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]ClusterGCPAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]ClusterInitScriptsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineClusterInitParameters.
func (in *PipelineClusterInitParameters) DeepCopy() *PipelineClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineClusterObservation) DeepCopyInto(out *PipelineClusterObservation) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]ClusterAutoscaleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]ClusterAwsAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]ClusterAzureAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]ClusterClusterLogConfObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]ClusterGCPAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]ClusterInitScriptsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineClusterObservation.
func (in *PipelineClusterObservation) DeepCopy() *PipelineClusterObservation {
	if in == nil {
		return nil
	}
	out := new(PipelineClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineClusterParameters) DeepCopyInto(out *PipelineClusterParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]ClusterAutoscaleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]ClusterAwsAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]ClusterAzureAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]ClusterClusterLogConfParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]ClusterGCPAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]ClusterInitScriptsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineClusterParameters.
func (in *PipelineClusterParameters) DeepCopy() *PipelineClusterParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineDeploymentInitParameters) DeepCopyInto(out *PipelineDeploymentInitParameters) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.MetadataFilePath != nil {
		in, out := &in.MetadataFilePath, &out.MetadataFilePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineDeploymentInitParameters.
func (in *PipelineDeploymentInitParameters) DeepCopy() *PipelineDeploymentInitParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineDeploymentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineDeploymentObservation) DeepCopyInto(out *PipelineDeploymentObservation) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.MetadataFilePath != nil {
		in, out := &in.MetadataFilePath, &out.MetadataFilePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineDeploymentObservation.
func (in *PipelineDeploymentObservation) DeepCopy() *PipelineDeploymentObservation {
	if in == nil {
		return nil
	}
	out := new(PipelineDeploymentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineDeploymentParameters) DeepCopyInto(out *PipelineDeploymentParameters) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.MetadataFilePath != nil {
		in, out := &in.MetadataFilePath, &out.MetadataFilePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineDeploymentParameters.
func (in *PipelineDeploymentParameters) DeepCopy() *PipelineDeploymentParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineDeploymentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineInitParameters) DeepCopyInto(out *PipelineInitParameters) {
	*out = *in
	if in.AllowDuplicateNames != nil {
		in, out := &in.AllowDuplicateNames, &out.AllowDuplicateNames
		*out = new(bool)
		**out = **in
	}
	if in.BudgetPolicyID != nil {
		in, out := &in.BudgetPolicyID, &out.BudgetPolicyID
		*out = new(string)
		**out = **in
	}
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Cause != nil {
		in, out := &in.Cause, &out.Cause
		*out = new(string)
		**out = **in
	}
	if in.Channel != nil {
		in, out := &in.Channel, &out.Channel
		*out = new(string)
		**out = **in
	}
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]PipelineClusterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Continuous != nil {
		in, out := &in.Continuous, &out.Continuous
		*out = new(bool)
		**out = **in
	}
	if in.CreatorUserName != nil {
		in, out := &in.CreatorUserName, &out.CreatorUserName
		*out = new(string)
		**out = **in
	}
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = make([]PipelineDeploymentInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Development != nil {
		in, out := &in.Development, &out.Development
		*out = new(bool)
		**out = **in
	}
	if in.Edition != nil {
		in, out := &in.Edition, &out.Edition
		*out = new(string)
		**out = **in
	}
	if in.ExpectedLastModified != nil {
		in, out := &in.ExpectedLastModified, &out.ExpectedLastModified
		*out = new(float64)
		**out = **in
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]FiltersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GatewayDefinition != nil {
		in, out := &in.GatewayDefinition, &out.GatewayDefinition
		*out = make([]GatewayDefinitionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = new(string)
		**out = **in
	}
	if in.IngestionDefinition != nil {
		in, out := &in.IngestionDefinition, &out.IngestionDefinition
		*out = make([]IngestionDefinitionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastModified != nil {
		in, out := &in.LastModified, &out.LastModified
		*out = new(float64)
		**out = **in
	}
	if in.LatestUpdates != nil {
		in, out := &in.LatestUpdates, &out.LatestUpdates
		*out = make([]LatestUpdatesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]PipelineLibraryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Notification != nil {
		in, out := &in.Notification, &out.Notification
		*out = make([]NotificationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Photon != nil {
		in, out := &in.Photon, &out.Photon
		*out = new(bool)
		**out = **in
	}
	if in.RunAsUserName != nil {
		in, out := &in.RunAsUserName, &out.RunAsUserName
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Serverless != nil {
		in, out := &in.Serverless, &out.Serverless
		*out = new(bool)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]PipelineTriggerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineInitParameters.
func (in *PipelineInitParameters) DeepCopy() *PipelineInitParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineLibraryInitParameters) DeepCopyInto(out *PipelineLibraryInitParameters) {
	*out = *in
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]LibraryFileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]PipelineLibraryMavenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Notebook != nil {
		in, out := &in.Notebook, &out.Notebook
		*out = make([]LibraryNotebookInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineLibraryInitParameters.
func (in *PipelineLibraryInitParameters) DeepCopy() *PipelineLibraryInitParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineLibraryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineLibraryMavenInitParameters) DeepCopyInto(out *PipelineLibraryMavenInitParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineLibraryMavenInitParameters.
func (in *PipelineLibraryMavenInitParameters) DeepCopy() *PipelineLibraryMavenInitParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineLibraryMavenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineLibraryMavenObservation) DeepCopyInto(out *PipelineLibraryMavenObservation) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineLibraryMavenObservation.
func (in *PipelineLibraryMavenObservation) DeepCopy() *PipelineLibraryMavenObservation {
	if in == nil {
		return nil
	}
	out := new(PipelineLibraryMavenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineLibraryMavenParameters) DeepCopyInto(out *PipelineLibraryMavenParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineLibraryMavenParameters.
func (in *PipelineLibraryMavenParameters) DeepCopy() *PipelineLibraryMavenParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineLibraryMavenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineLibraryObservation) DeepCopyInto(out *PipelineLibraryObservation) {
	*out = *in
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]LibraryFileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]PipelineLibraryMavenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Notebook != nil {
		in, out := &in.Notebook, &out.Notebook
		*out = make([]LibraryNotebookObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineLibraryObservation.
func (in *PipelineLibraryObservation) DeepCopy() *PipelineLibraryObservation {
	if in == nil {
		return nil
	}
	out := new(PipelineLibraryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineLibraryParameters) DeepCopyInto(out *PipelineLibraryParameters) {
	*out = *in
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]LibraryFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]PipelineLibraryMavenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Notebook != nil {
		in, out := &in.Notebook, &out.Notebook
		*out = make([]LibraryNotebookParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineLibraryParameters.
func (in *PipelineLibraryParameters) DeepCopy() *PipelineLibraryParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineLibraryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineList) DeepCopyInto(out *PipelineList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Pipeline, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineList.
func (in *PipelineList) DeepCopy() *PipelineList {
	if in == nil {
		return nil
	}
	out := new(PipelineList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PipelineList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineObservation) DeepCopyInto(out *PipelineObservation) {
	*out = *in
	if in.AllowDuplicateNames != nil {
		in, out := &in.AllowDuplicateNames, &out.AllowDuplicateNames
		*out = new(bool)
		**out = **in
	}
	if in.BudgetPolicyID != nil {
		in, out := &in.BudgetPolicyID, &out.BudgetPolicyID
		*out = new(string)
		**out = **in
	}
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Cause != nil {
		in, out := &in.Cause, &out.Cause
		*out = new(string)
		**out = **in
	}
	if in.Channel != nil {
		in, out := &in.Channel, &out.Channel
		*out = new(string)
		**out = **in
	}
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]PipelineClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Continuous != nil {
		in, out := &in.Continuous, &out.Continuous
		*out = new(bool)
		**out = **in
	}
	if in.CreatorUserName != nil {
		in, out := &in.CreatorUserName, &out.CreatorUserName
		*out = new(string)
		**out = **in
	}
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = make([]PipelineDeploymentObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Development != nil {
		in, out := &in.Development, &out.Development
		*out = new(bool)
		**out = **in
	}
	if in.Edition != nil {
		in, out := &in.Edition, &out.Edition
		*out = new(string)
		**out = **in
	}
	if in.ExpectedLastModified != nil {
		in, out := &in.ExpectedLastModified, &out.ExpectedLastModified
		*out = new(float64)
		**out = **in
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]FiltersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GatewayDefinition != nil {
		in, out := &in.GatewayDefinition, &out.GatewayDefinition
		*out = make([]GatewayDefinitionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IngestionDefinition != nil {
		in, out := &in.IngestionDefinition, &out.IngestionDefinition
		*out = make([]IngestionDefinitionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastModified != nil {
		in, out := &in.LastModified, &out.LastModified
		*out = new(float64)
		**out = **in
	}
	if in.LatestUpdates != nil {
		in, out := &in.LatestUpdates, &out.LatestUpdates
		*out = make([]LatestUpdatesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]PipelineLibraryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Notification != nil {
		in, out := &in.Notification, &out.Notification
		*out = make([]NotificationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Photon != nil {
		in, out := &in.Photon, &out.Photon
		*out = new(bool)
		**out = **in
	}
	if in.RunAsUserName != nil {
		in, out := &in.RunAsUserName, &out.RunAsUserName
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Serverless != nil {
		in, out := &in.Serverless, &out.Serverless
		*out = new(bool)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]PipelineTriggerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineObservation.
func (in *PipelineObservation) DeepCopy() *PipelineObservation {
	if in == nil {
		return nil
	}
	out := new(PipelineObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineParameters) DeepCopyInto(out *PipelineParameters) {
	*out = *in
	if in.AllowDuplicateNames != nil {
		in, out := &in.AllowDuplicateNames, &out.AllowDuplicateNames
		*out = new(bool)
		**out = **in
	}
	if in.BudgetPolicyID != nil {
		in, out := &in.BudgetPolicyID, &out.BudgetPolicyID
		*out = new(string)
		**out = **in
	}
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Cause != nil {
		in, out := &in.Cause, &out.Cause
		*out = new(string)
		**out = **in
	}
	if in.Channel != nil {
		in, out := &in.Channel, &out.Channel
		*out = new(string)
		**out = **in
	}
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]PipelineClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Continuous != nil {
		in, out := &in.Continuous, &out.Continuous
		*out = new(bool)
		**out = **in
	}
	if in.CreatorUserName != nil {
		in, out := &in.CreatorUserName, &out.CreatorUserName
		*out = new(string)
		**out = **in
	}
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = make([]PipelineDeploymentParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Development != nil {
		in, out := &in.Development, &out.Development
		*out = new(bool)
		**out = **in
	}
	if in.Edition != nil {
		in, out := &in.Edition, &out.Edition
		*out = new(string)
		**out = **in
	}
	if in.ExpectedLastModified != nil {
		in, out := &in.ExpectedLastModified, &out.ExpectedLastModified
		*out = new(float64)
		**out = **in
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]FiltersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GatewayDefinition != nil {
		in, out := &in.GatewayDefinition, &out.GatewayDefinition
		*out = make([]GatewayDefinitionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = new(string)
		**out = **in
	}
	if in.IngestionDefinition != nil {
		in, out := &in.IngestionDefinition, &out.IngestionDefinition
		*out = make([]IngestionDefinitionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastModified != nil {
		in, out := &in.LastModified, &out.LastModified
		*out = new(float64)
		**out = **in
	}
	if in.LatestUpdates != nil {
		in, out := &in.LatestUpdates, &out.LatestUpdates
		*out = make([]LatestUpdatesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]PipelineLibraryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Notification != nil {
		in, out := &in.Notification, &out.Notification
		*out = make([]NotificationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Photon != nil {
		in, out := &in.Photon, &out.Photon
		*out = new(bool)
		**out = **in
	}
	if in.RunAsUserName != nil {
		in, out := &in.RunAsUserName, &out.RunAsUserName
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Serverless != nil {
		in, out := &in.Serverless, &out.Serverless
		*out = new(bool)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]PipelineTriggerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineParameters.
func (in *PipelineParameters) DeepCopy() *PipelineParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineParamsInitParameters) DeepCopyInto(out *PipelineParamsInitParameters) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineParamsInitParameters.
func (in *PipelineParamsInitParameters) DeepCopy() *PipelineParamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineParamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineParamsObservation) DeepCopyInto(out *PipelineParamsObservation) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineParamsObservation.
func (in *PipelineParamsObservation) DeepCopy() *PipelineParamsObservation {
	if in == nil {
		return nil
	}
	out := new(PipelineParamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineParamsParameters) DeepCopyInto(out *PipelineParamsParameters) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineParamsParameters.
func (in *PipelineParamsParameters) DeepCopy() *PipelineParamsParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineParamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineSpec) DeepCopyInto(out *PipelineSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineSpec.
func (in *PipelineSpec) DeepCopy() *PipelineSpec {
	if in == nil {
		return nil
	}
	out := new(PipelineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineStatus) DeepCopyInto(out *PipelineStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineStatus.
func (in *PipelineStatus) DeepCopy() *PipelineStatus {
	if in == nil {
		return nil
	}
	out := new(PipelineStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineTaskInitParameters) DeepCopyInto(out *PipelineTaskInitParameters) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineTaskInitParameters.
func (in *PipelineTaskInitParameters) DeepCopy() *PipelineTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineTaskObservation) DeepCopyInto(out *PipelineTaskObservation) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineTaskObservation.
func (in *PipelineTaskObservation) DeepCopy() *PipelineTaskObservation {
	if in == nil {
		return nil
	}
	out := new(PipelineTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineTaskParameters) DeepCopyInto(out *PipelineTaskParameters) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineTaskParameters.
func (in *PipelineTaskParameters) DeepCopy() *PipelineTaskParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineTriggerInitParameters) DeepCopyInto(out *PipelineTriggerInitParameters) {
	*out = *in
	if in.Cron != nil {
		in, out := &in.Cron, &out.Cron
		*out = make([]CronInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Manual != nil {
		in, out := &in.Manual, &out.Manual
		*out = make([]ManualInitParameters, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineTriggerInitParameters.
func (in *PipelineTriggerInitParameters) DeepCopy() *PipelineTriggerInitParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineTriggerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineTriggerObservation) DeepCopyInto(out *PipelineTriggerObservation) {
	*out = *in
	if in.Cron != nil {
		in, out := &in.Cron, &out.Cron
		*out = make([]CronObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Manual != nil {
		in, out := &in.Manual, &out.Manual
		*out = make([]ManualParameters, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineTriggerObservation.
func (in *PipelineTriggerObservation) DeepCopy() *PipelineTriggerObservation {
	if in == nil {
		return nil
	}
	out := new(PipelineTriggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineTriggerParameters) DeepCopyInto(out *PipelineTriggerParameters) {
	*out = *in
	if in.Cron != nil {
		in, out := &in.Cron, &out.Cron
		*out = make([]CronParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Manual != nil {
		in, out := &in.Manual, &out.Manual
		*out = make([]ManualParameters, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineTriggerParameters.
func (in *PipelineTriggerParameters) DeepCopy() *PipelineTriggerParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineTriggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreloadedDockerImageBasicAuthInitParameters) DeepCopyInto(out *PreloadedDockerImageBasicAuthInitParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreloadedDockerImageBasicAuthInitParameters.
func (in *PreloadedDockerImageBasicAuthInitParameters) DeepCopy() *PreloadedDockerImageBasicAuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(PreloadedDockerImageBasicAuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreloadedDockerImageBasicAuthObservation) DeepCopyInto(out *PreloadedDockerImageBasicAuthObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreloadedDockerImageBasicAuthObservation.
func (in *PreloadedDockerImageBasicAuthObservation) DeepCopy() *PreloadedDockerImageBasicAuthObservation {
	if in == nil {
		return nil
	}
	out := new(PreloadedDockerImageBasicAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreloadedDockerImageBasicAuthParameters) DeepCopyInto(out *PreloadedDockerImageBasicAuthParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreloadedDockerImageBasicAuthParameters.
func (in *PreloadedDockerImageBasicAuthParameters) DeepCopy() *PreloadedDockerImageBasicAuthParameters {
	if in == nil {
		return nil
	}
	out := new(PreloadedDockerImageBasicAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreloadedDockerImageInitParameters) DeepCopyInto(out *PreloadedDockerImageInitParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]PreloadedDockerImageBasicAuthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreloadedDockerImageInitParameters.
func (in *PreloadedDockerImageInitParameters) DeepCopy() *PreloadedDockerImageInitParameters {
	if in == nil {
		return nil
	}
	out := new(PreloadedDockerImageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreloadedDockerImageObservation) DeepCopyInto(out *PreloadedDockerImageObservation) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]PreloadedDockerImageBasicAuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreloadedDockerImageObservation.
func (in *PreloadedDockerImageObservation) DeepCopy() *PreloadedDockerImageObservation {
	if in == nil {
		return nil
	}
	out := new(PreloadedDockerImageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreloadedDockerImageParameters) DeepCopyInto(out *PreloadedDockerImageParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]PreloadedDockerImageBasicAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreloadedDockerImageParameters.
func (in *PreloadedDockerImageParameters) DeepCopy() *PreloadedDockerImageParameters {
	if in == nil {
		return nil
	}
	out := new(PreloadedDockerImageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegeAssignmentsInitParameters) DeepCopyInto(out *PrivilegeAssignmentsInitParameters) {
	*out = *in
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegeAssignmentsInitParameters.
func (in *PrivilegeAssignmentsInitParameters) DeepCopy() *PrivilegeAssignmentsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivilegeAssignmentsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegeAssignmentsObservation) DeepCopyInto(out *PrivilegeAssignmentsObservation) {
	*out = *in
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegeAssignmentsObservation.
func (in *PrivilegeAssignmentsObservation) DeepCopy() *PrivilegeAssignmentsObservation {
	if in == nil {
		return nil
	}
	out := new(PrivilegeAssignmentsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegeAssignmentsParameters) DeepCopyInto(out *PrivilegeAssignmentsParameters) {
	*out = *in
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegeAssignmentsParameters.
func (in *PrivilegeAssignmentsParameters) DeepCopy() *PrivilegeAssignmentsParameters {
	if in == nil {
		return nil
	}
	out := new(PrivilegeAssignmentsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PypiInitParameters) DeepCopyInto(out *PypiInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PypiInitParameters.
func (in *PypiInitParameters) DeepCopy() *PypiInitParameters {
	if in == nil {
		return nil
	}
	out := new(PypiInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PypiObservation) DeepCopyInto(out *PypiObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PypiObservation.
func (in *PypiObservation) DeepCopy() *PypiObservation {
	if in == nil {
		return nil
	}
	out := new(PypiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PypiParameters) DeepCopyInto(out *PypiParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PypiParameters.
func (in *PypiParameters) DeepCopy() *PypiParameters {
	if in == nil {
		return nil
	}
	out := new(PypiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PythonWheelTaskInitParameters) DeepCopyInto(out *PythonWheelTaskInitParameters) {
	*out = *in
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = new(string)
		**out = **in
	}
	if in.NamedParameters != nil {
		in, out := &in.NamedParameters, &out.NamedParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PackageName != nil {
		in, out := &in.PackageName, &out.PackageName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PythonWheelTaskInitParameters.
func (in *PythonWheelTaskInitParameters) DeepCopy() *PythonWheelTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(PythonWheelTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PythonWheelTaskObservation) DeepCopyInto(out *PythonWheelTaskObservation) {
	*out = *in
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = new(string)
		**out = **in
	}
	if in.NamedParameters != nil {
		in, out := &in.NamedParameters, &out.NamedParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PackageName != nil {
		in, out := &in.PackageName, &out.PackageName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PythonWheelTaskObservation.
func (in *PythonWheelTaskObservation) DeepCopy() *PythonWheelTaskObservation {
	if in == nil {
		return nil
	}
	out := new(PythonWheelTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PythonWheelTaskParameters) DeepCopyInto(out *PythonWheelTaskParameters) {
	*out = *in
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = new(string)
		**out = **in
	}
	if in.NamedParameters != nil {
		in, out := &in.NamedParameters, &out.NamedParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PackageName != nil {
		in, out := &in.PackageName, &out.PackageName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PythonWheelTaskParameters.
func (in *PythonWheelTaskParameters) DeepCopy() *PythonWheelTaskParameters {
	if in == nil {
		return nil
	}
	out := new(PythonWheelTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Query) DeepCopyInto(out *Query) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Query.
func (in *Query) DeepCopy() *Query {
	if in == nil {
		return nil
	}
	out := new(Query)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Query) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryBackedValueInitParameters) DeepCopyInto(out *QueryBackedValueInitParameters) {
	*out = *in
	if in.MultiValuesOptions != nil {
		in, out := &in.MultiValuesOptions, &out.MultiValuesOptions
		*out = make([]QueryBackedValueMultiValuesOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryBackedValueInitParameters.
func (in *QueryBackedValueInitParameters) DeepCopy() *QueryBackedValueInitParameters {
	if in == nil {
		return nil
	}
	out := new(QueryBackedValueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryBackedValueMultiValuesOptionsInitParameters) DeepCopyInto(out *QueryBackedValueMultiValuesOptionsInitParameters) {
	*out = *in
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.Suffix != nil {
		in, out := &in.Suffix, &out.Suffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryBackedValueMultiValuesOptionsInitParameters.
func (in *QueryBackedValueMultiValuesOptionsInitParameters) DeepCopy() *QueryBackedValueMultiValuesOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(QueryBackedValueMultiValuesOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryBackedValueMultiValuesOptionsObservation) DeepCopyInto(out *QueryBackedValueMultiValuesOptionsObservation) {
	*out = *in
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.Suffix != nil {
		in, out := &in.Suffix, &out.Suffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryBackedValueMultiValuesOptionsObservation.
func (in *QueryBackedValueMultiValuesOptionsObservation) DeepCopy() *QueryBackedValueMultiValuesOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(QueryBackedValueMultiValuesOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryBackedValueMultiValuesOptionsParameters) DeepCopyInto(out *QueryBackedValueMultiValuesOptionsParameters) {
	*out = *in
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.Suffix != nil {
		in, out := &in.Suffix, &out.Suffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryBackedValueMultiValuesOptionsParameters.
func (in *QueryBackedValueMultiValuesOptionsParameters) DeepCopy() *QueryBackedValueMultiValuesOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(QueryBackedValueMultiValuesOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryBackedValueObservation) DeepCopyInto(out *QueryBackedValueObservation) {
	*out = *in
	if in.MultiValuesOptions != nil {
		in, out := &in.MultiValuesOptions, &out.MultiValuesOptions
		*out = make([]QueryBackedValueMultiValuesOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryBackedValueObservation.
func (in *QueryBackedValueObservation) DeepCopy() *QueryBackedValueObservation {
	if in == nil {
		return nil
	}
	out := new(QueryBackedValueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryBackedValueParameters) DeepCopyInto(out *QueryBackedValueParameters) {
	*out = *in
	if in.MultiValuesOptions != nil {
		in, out := &in.MultiValuesOptions, &out.MultiValuesOptions
		*out = make([]QueryBackedValueMultiValuesOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryBackedValueParameters.
func (in *QueryBackedValueParameters) DeepCopy() *QueryBackedValueParameters {
	if in == nil {
		return nil
	}
	out := new(QueryBackedValueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryInitParameters) DeepCopyInto(out *QueryInitParameters) {
	*out = *in
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryInitParameters.
func (in *QueryInitParameters) DeepCopy() *QueryInitParameters {
	if in == nil {
		return nil
	}
	out := new(QueryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryInitParameters_2) DeepCopyInto(out *QueryInitParameters_2) {
	*out = *in
	if in.ApplyAutoLimit != nil {
		in, out := &in.ApplyAutoLimit, &out.ApplyAutoLimit
		*out = new(bool)
		**out = **in
	}
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.OwnerUserName != nil {
		in, out := &in.OwnerUserName, &out.OwnerUserName
		*out = new(string)
		**out = **in
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]QueryParameterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ParentPath != nil {
		in, out := &in.ParentPath, &out.ParentPath
		*out = new(string)
		**out = **in
	}
	if in.QueryText != nil {
		in, out := &in.QueryText, &out.QueryText
		*out = new(string)
		**out = **in
	}
	if in.RunAsMode != nil {
		in, out := &in.RunAsMode, &out.RunAsMode
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryInitParameters_2.
func (in *QueryInitParameters_2) DeepCopy() *QueryInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(QueryInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryList) DeepCopyInto(out *QueryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Query, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryList.
func (in *QueryList) DeepCopy() *QueryList {
	if in == nil {
		return nil
	}
	out := new(QueryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *QueryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryMultipleInitParameters) DeepCopyInto(out *QueryMultipleInitParameters) {
	*out = *in
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.Suffix != nil {
		in, out := &in.Suffix, &out.Suffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryMultipleInitParameters.
func (in *QueryMultipleInitParameters) DeepCopy() *QueryMultipleInitParameters {
	if in == nil {
		return nil
	}
	out := new(QueryMultipleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryMultipleObservation) DeepCopyInto(out *QueryMultipleObservation) {
	*out = *in
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.Suffix != nil {
		in, out := &in.Suffix, &out.Suffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryMultipleObservation.
func (in *QueryMultipleObservation) DeepCopy() *QueryMultipleObservation {
	if in == nil {
		return nil
	}
	out := new(QueryMultipleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryMultipleParameters) DeepCopyInto(out *QueryMultipleParameters) {
	*out = *in
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.Suffix != nil {
		in, out := &in.Suffix, &out.Suffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryMultipleParameters.
func (in *QueryMultipleParameters) DeepCopy() *QueryMultipleParameters {
	if in == nil {
		return nil
	}
	out := new(QueryMultipleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryObservation) DeepCopyInto(out *QueryObservation) {
	*out = *in
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryObservation.
func (in *QueryObservation) DeepCopy() *QueryObservation {
	if in == nil {
		return nil
	}
	out := new(QueryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryObservation_2) DeepCopyInto(out *QueryObservation_2) {
	*out = *in
	if in.ApplyAutoLimit != nil {
		in, out := &in.ApplyAutoLimit, &out.ApplyAutoLimit
		*out = new(bool)
		**out = **in
	}
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LastModifierUserName != nil {
		in, out := &in.LastModifierUserName, &out.LastModifierUserName
		*out = new(string)
		**out = **in
	}
	if in.LifecycleState != nil {
		in, out := &in.LifecycleState, &out.LifecycleState
		*out = new(string)
		**out = **in
	}
	if in.OwnerUserName != nil {
		in, out := &in.OwnerUserName, &out.OwnerUserName
		*out = new(string)
		**out = **in
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]QueryParameterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ParentPath != nil {
		in, out := &in.ParentPath, &out.ParentPath
		*out = new(string)
		**out = **in
	}
	if in.QueryText != nil {
		in, out := &in.QueryText, &out.QueryText
		*out = new(string)
		**out = **in
	}
	if in.RunAsMode != nil {
		in, out := &in.RunAsMode, &out.RunAsMode
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryObservation_2.
func (in *QueryObservation_2) DeepCopy() *QueryObservation_2 {
	if in == nil {
		return nil
	}
	out := new(QueryObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryParameterInitParameters) DeepCopyInto(out *QueryParameterInitParameters) {
	*out = *in
	if in.DateRangeValue != nil {
		in, out := &in.DateRangeValue, &out.DateRangeValue
		*out = make([]DateRangeValueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DateValue != nil {
		in, out := &in.DateValue, &out.DateValue
		*out = make([]DateValueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnumValue != nil {
		in, out := &in.EnumValue, &out.EnumValue
		*out = make([]EnumValueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NumericValue != nil {
		in, out := &in.NumericValue, &out.NumericValue
		*out = make([]NumericValueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryBackedValue != nil {
		in, out := &in.QueryBackedValue, &out.QueryBackedValue
		*out = make([]QueryBackedValueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TextValue != nil {
		in, out := &in.TextValue, &out.TextValue
		*out = make([]TextValueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryParameterInitParameters.
func (in *QueryParameterInitParameters) DeepCopy() *QueryParameterInitParameters {
	if in == nil {
		return nil
	}
	out := new(QueryParameterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryParameterObservation) DeepCopyInto(out *QueryParameterObservation) {
	*out = *in
	if in.DateRangeValue != nil {
		in, out := &in.DateRangeValue, &out.DateRangeValue
		*out = make([]DateRangeValueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DateValue != nil {
		in, out := &in.DateValue, &out.DateValue
		*out = make([]DateValueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnumValue != nil {
		in, out := &in.EnumValue, &out.EnumValue
		*out = make([]EnumValueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NumericValue != nil {
		in, out := &in.NumericValue, &out.NumericValue
		*out = make([]NumericValueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryBackedValue != nil {
		in, out := &in.QueryBackedValue, &out.QueryBackedValue
		*out = make([]QueryBackedValueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TextValue != nil {
		in, out := &in.TextValue, &out.TextValue
		*out = make([]TextValueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryParameterObservation.
func (in *QueryParameterObservation) DeepCopy() *QueryParameterObservation {
	if in == nil {
		return nil
	}
	out := new(QueryParameterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryParameterParameters) DeepCopyInto(out *QueryParameterParameters) {
	*out = *in
	if in.DateRangeValue != nil {
		in, out := &in.DateRangeValue, &out.DateRangeValue
		*out = make([]DateRangeValueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DateValue != nil {
		in, out := &in.DateValue, &out.DateValue
		*out = make([]DateValueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnumValue != nil {
		in, out := &in.EnumValue, &out.EnumValue
		*out = make([]EnumValueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NumericValue != nil {
		in, out := &in.NumericValue, &out.NumericValue
		*out = make([]NumericValueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryBackedValue != nil {
		in, out := &in.QueryBackedValue, &out.QueryBackedValue
		*out = make([]QueryBackedValueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TextValue != nil {
		in, out := &in.TextValue, &out.TextValue
		*out = make([]TextValueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryParameterParameters.
func (in *QueryParameterParameters) DeepCopy() *QueryParameterParameters {
	if in == nil {
		return nil
	}
	out := new(QueryParameterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryParameters) DeepCopyInto(out *QueryParameters) {
	*out = *in
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryParameters.
func (in *QueryParameters) DeepCopy() *QueryParameters {
	if in == nil {
		return nil
	}
	out := new(QueryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryParameters_2) DeepCopyInto(out *QueryParameters_2) {
	*out = *in
	if in.ApplyAutoLimit != nil {
		in, out := &in.ApplyAutoLimit, &out.ApplyAutoLimit
		*out = new(bool)
		**out = **in
	}
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.OwnerUserName != nil {
		in, out := &in.OwnerUserName, &out.OwnerUserName
		*out = new(string)
		**out = **in
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]QueryParameterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ParentPath != nil {
		in, out := &in.ParentPath, &out.ParentPath
		*out = new(string)
		**out = **in
	}
	if in.QueryText != nil {
		in, out := &in.QueryText, &out.QueryText
		*out = new(string)
		**out = **in
	}
	if in.RunAsMode != nil {
		in, out := &in.RunAsMode, &out.RunAsMode
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryParameters_2.
func (in *QueryParameters_2) DeepCopy() *QueryParameters_2 {
	if in == nil {
		return nil
	}
	out := new(QueryParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QuerySpec) DeepCopyInto(out *QuerySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QuerySpec.
func (in *QuerySpec) DeepCopy() *QuerySpec {
	if in == nil {
		return nil
	}
	out := new(QuerySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryStatus) DeepCopyInto(out *QueryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryStatus.
func (in *QueryStatus) DeepCopy() *QueryStatus {
	if in == nil {
		return nil
	}
	out := new(QueryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueInitParameters) DeepCopyInto(out *QueueInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueInitParameters.
func (in *QueueInitParameters) DeepCopy() *QueueInitParameters {
	if in == nil {
		return nil
	}
	out := new(QueueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueObservation) DeepCopyInto(out *QueueObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueObservation.
func (in *QueueObservation) DeepCopy() *QueueObservation {
	if in == nil {
		return nil
	}
	out := new(QueueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueParameters) DeepCopyInto(out *QueueParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueParameters.
func (in *QueueParameters) DeepCopy() *QueueParameters {
	if in == nil {
		return nil
	}
	out := new(QueueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangeInitParameters) DeepCopyInto(out *RangeInitParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangeInitParameters.
func (in *RangeInitParameters) DeepCopy() *RangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(RangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangeObservation) DeepCopyInto(out *RangeObservation) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangeObservation.
func (in *RangeObservation) DeepCopy() *RangeObservation {
	if in == nil {
		return nil
	}
	out := new(RangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangeParameters) DeepCopyInto(out *RangeParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangeParameters.
func (in *RangeParameters) DeepCopy() *RangeParameters {
	if in == nil {
		return nil
	}
	out := new(RangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportInitParameters) DeepCopyInto(out *ReportInitParameters) {
	*out = *in
	if in.DestinationCatalog != nil {
		in, out := &in.DestinationCatalog, &out.DestinationCatalog
		*out = new(string)
		**out = **in
	}
	if in.DestinationSchema != nil {
		in, out := &in.DestinationSchema, &out.DestinationSchema
		*out = new(string)
		**out = **in
	}
	if in.DestinationTable != nil {
		in, out := &in.DestinationTable, &out.DestinationTable
		*out = new(string)
		**out = **in
	}
	if in.SourceURL != nil {
		in, out := &in.SourceURL, &out.SourceURL
		*out = new(string)
		**out = **in
	}
	if in.TableConfiguration != nil {
		in, out := &in.TableConfiguration, &out.TableConfiguration
		*out = make([]TableConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportInitParameters.
func (in *ReportInitParameters) DeepCopy() *ReportInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReportInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportObservation) DeepCopyInto(out *ReportObservation) {
	*out = *in
	if in.DestinationCatalog != nil {
		in, out := &in.DestinationCatalog, &out.DestinationCatalog
		*out = new(string)
		**out = **in
	}
	if in.DestinationSchema != nil {
		in, out := &in.DestinationSchema, &out.DestinationSchema
		*out = new(string)
		**out = **in
	}
	if in.DestinationTable != nil {
		in, out := &in.DestinationTable, &out.DestinationTable
		*out = new(string)
		**out = **in
	}
	if in.SourceURL != nil {
		in, out := &in.SourceURL, &out.SourceURL
		*out = new(string)
		**out = **in
	}
	if in.TableConfiguration != nil {
		in, out := &in.TableConfiguration, &out.TableConfiguration
		*out = make([]TableConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportObservation.
func (in *ReportObservation) DeepCopy() *ReportObservation {
	if in == nil {
		return nil
	}
	out := new(ReportObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportParameters) DeepCopyInto(out *ReportParameters) {
	*out = *in
	if in.DestinationCatalog != nil {
		in, out := &in.DestinationCatalog, &out.DestinationCatalog
		*out = new(string)
		**out = **in
	}
	if in.DestinationSchema != nil {
		in, out := &in.DestinationSchema, &out.DestinationSchema
		*out = new(string)
		**out = **in
	}
	if in.DestinationTable != nil {
		in, out := &in.DestinationTable, &out.DestinationTable
		*out = new(string)
		**out = **in
	}
	if in.SourceURL != nil {
		in, out := &in.SourceURL, &out.SourceURL
		*out = new(string)
		**out = **in
	}
	if in.TableConfiguration != nil {
		in, out := &in.TableConfiguration, &out.TableConfiguration
		*out = make([]TableConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportParameters.
func (in *ReportParameters) DeepCopy() *ReportParameters {
	if in == nil {
		return nil
	}
	out := new(ReportParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesInitParameters) DeepCopyInto(out *RulesInitParameters) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesInitParameters.
func (in *RulesInitParameters) DeepCopy() *RulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesObservation) DeepCopyInto(out *RulesObservation) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesObservation.
func (in *RulesObservation) DeepCopy() *RulesObservation {
	if in == nil {
		return nil
	}
	out := new(RulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesParameters) DeepCopyInto(out *RulesParameters) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesParameters.
func (in *RulesParameters) DeepCopy() *RulesParameters {
	if in == nil {
		return nil
	}
	out := new(RulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunAsInitParameters) DeepCopyInto(out *RunAsInitParameters) {
	*out = *in
	if in.ServicePrincipalName != nil {
		in, out := &in.ServicePrincipalName, &out.ServicePrincipalName
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunAsInitParameters.
func (in *RunAsInitParameters) DeepCopy() *RunAsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RunAsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunAsObservation) DeepCopyInto(out *RunAsObservation) {
	*out = *in
	if in.ServicePrincipalName != nil {
		in, out := &in.ServicePrincipalName, &out.ServicePrincipalName
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunAsObservation.
func (in *RunAsObservation) DeepCopy() *RunAsObservation {
	if in == nil {
		return nil
	}
	out := new(RunAsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunAsParameters) DeepCopyInto(out *RunAsParameters) {
	*out = *in
	if in.ServicePrincipalName != nil {
		in, out := &in.ServicePrincipalName, &out.ServicePrincipalName
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunAsParameters.
func (in *RunAsParameters) DeepCopy() *RunAsParameters {
	if in == nil {
		return nil
	}
	out := new(RunAsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunJobTaskInitParameters) DeepCopyInto(out *RunJobTaskInitParameters) {
	*out = *in
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(float64)
		**out = **in
	}
	if in.JobParameters != nil {
		in, out := &in.JobParameters, &out.JobParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunJobTaskInitParameters.
func (in *RunJobTaskInitParameters) DeepCopy() *RunJobTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(RunJobTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunJobTaskObservation) DeepCopyInto(out *RunJobTaskObservation) {
	*out = *in
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(float64)
		**out = **in
	}
	if in.JobParameters != nil {
		in, out := &in.JobParameters, &out.JobParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunJobTaskObservation.
func (in *RunJobTaskObservation) DeepCopy() *RunJobTaskObservation {
	if in == nil {
		return nil
	}
	out := new(RunJobTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunJobTaskParameters) DeepCopyInto(out *RunJobTaskParameters) {
	*out = *in
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(float64)
		**out = **in
	}
	if in.JobParameters != nil {
		in, out := &in.JobParameters, &out.JobParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunJobTaskParameters.
func (in *RunJobTaskParameters) DeepCopy() *RunJobTaskParameters {
	if in == nil {
		return nil
	}
	out := new(RunJobTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunJobTaskPipelineParamsInitParameters) DeepCopyInto(out *RunJobTaskPipelineParamsInitParameters) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunJobTaskPipelineParamsInitParameters.
func (in *RunJobTaskPipelineParamsInitParameters) DeepCopy() *RunJobTaskPipelineParamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RunJobTaskPipelineParamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunJobTaskPipelineParamsObservation) DeepCopyInto(out *RunJobTaskPipelineParamsObservation) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunJobTaskPipelineParamsObservation.
func (in *RunJobTaskPipelineParamsObservation) DeepCopy() *RunJobTaskPipelineParamsObservation {
	if in == nil {
		return nil
	}
	out := new(RunJobTaskPipelineParamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunJobTaskPipelineParamsParameters) DeepCopyInto(out *RunJobTaskPipelineParamsParameters) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunJobTaskPipelineParamsParameters.
func (in *RunJobTaskPipelineParamsParameters) DeepCopy() *RunJobTaskPipelineParamsParameters {
	if in == nil {
		return nil
	}
	out := new(RunJobTaskPipelineParamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3InitParameters) DeepCopyInto(out *S3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3InitParameters.
func (in *S3InitParameters) DeepCopy() *S3InitParameters {
	if in == nil {
		return nil
	}
	out := new(S3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3Observation) DeepCopyInto(out *S3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3Observation.
func (in *S3Observation) DeepCopy() *S3Observation {
	if in == nil {
		return nil
	}
	out := new(S3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3Parameters) DeepCopyInto(out *S3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3Parameters.
func (in *S3Parameters) DeepCopy() *S3Parameters {
	if in == nil {
		return nil
	}
	out := new(S3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLAlert) DeepCopyInto(out *SQLAlert) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLAlert.
func (in *SQLAlert) DeepCopy() *SQLAlert {
	if in == nil {
		return nil
	}
	out := new(SQLAlert)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLAlert) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLAlertInitParameters) DeepCopyInto(out *SQLAlertInitParameters) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]OptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(string)
		**out = **in
	}
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
	if in.Rearm != nil {
		in, out := &in.Rearm, &out.Rearm
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLAlertInitParameters.
func (in *SQLAlertInitParameters) DeepCopy() *SQLAlertInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLAlertInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLAlertList) DeepCopyInto(out *SQLAlertList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SQLAlert, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLAlertList.
func (in *SQLAlertList) DeepCopy() *SQLAlertList {
	if in == nil {
		return nil
	}
	out := new(SQLAlertList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLAlertList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLAlertObservation) DeepCopyInto(out *SQLAlertObservation) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]OptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(string)
		**out = **in
	}
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
	if in.Rearm != nil {
		in, out := &in.Rearm, &out.Rearm
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLAlertObservation.
func (in *SQLAlertObservation) DeepCopy() *SQLAlertObservation {
	if in == nil {
		return nil
	}
	out := new(SQLAlertObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLAlertParameters) DeepCopyInto(out *SQLAlertParameters) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]OptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(string)
		**out = **in
	}
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
	if in.Rearm != nil {
		in, out := &in.Rearm, &out.Rearm
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLAlertParameters.
func (in *SQLAlertParameters) DeepCopy() *SQLAlertParameters {
	if in == nil {
		return nil
	}
	out := new(SQLAlertParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLAlertSpec) DeepCopyInto(out *SQLAlertSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLAlertSpec.
func (in *SQLAlertSpec) DeepCopy() *SQLAlertSpec {
	if in == nil {
		return nil
	}
	out := new(SQLAlertSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLAlertStatus) DeepCopyInto(out *SQLAlertStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLAlertStatus.
func (in *SQLAlertStatus) DeepCopy() *SQLAlertStatus {
	if in == nil {
		return nil
	}
	out := new(SQLAlertStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDashboard) DeepCopyInto(out *SQLDashboard) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDashboard.
func (in *SQLDashboard) DeepCopy() *SQLDashboard {
	if in == nil {
		return nil
	}
	out := new(SQLDashboard)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLDashboard) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDashboardInitParameters) DeepCopyInto(out *SQLDashboardInitParameters) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.DashboardFiltersEnabled != nil {
		in, out := &in.DashboardFiltersEnabled, &out.DashboardFiltersEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(string)
		**out = **in
	}
	if in.RunAsRole != nil {
		in, out := &in.RunAsRole, &out.RunAsRole
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDashboardInitParameters.
func (in *SQLDashboardInitParameters) DeepCopy() *SQLDashboardInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLDashboardInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDashboardList) DeepCopyInto(out *SQLDashboardList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SQLDashboard, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDashboardList.
func (in *SQLDashboardList) DeepCopy() *SQLDashboardList {
	if in == nil {
		return nil
	}
	out := new(SQLDashboardList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLDashboardList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDashboardObservation) DeepCopyInto(out *SQLDashboardObservation) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.DashboardFiltersEnabled != nil {
		in, out := &in.DashboardFiltersEnabled, &out.DashboardFiltersEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(string)
		**out = **in
	}
	if in.RunAsRole != nil {
		in, out := &in.RunAsRole, &out.RunAsRole
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDashboardObservation.
func (in *SQLDashboardObservation) DeepCopy() *SQLDashboardObservation {
	if in == nil {
		return nil
	}
	out := new(SQLDashboardObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDashboardParameters) DeepCopyInto(out *SQLDashboardParameters) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.DashboardFiltersEnabled != nil {
		in, out := &in.DashboardFiltersEnabled, &out.DashboardFiltersEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(string)
		**out = **in
	}
	if in.RunAsRole != nil {
		in, out := &in.RunAsRole, &out.RunAsRole
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDashboardParameters.
func (in *SQLDashboardParameters) DeepCopy() *SQLDashboardParameters {
	if in == nil {
		return nil
	}
	out := new(SQLDashboardParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDashboardSpec) DeepCopyInto(out *SQLDashboardSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDashboardSpec.
func (in *SQLDashboardSpec) DeepCopy() *SQLDashboardSpec {
	if in == nil {
		return nil
	}
	out := new(SQLDashboardSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDashboardStatus) DeepCopyInto(out *SQLDashboardStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDashboardStatus.
func (in *SQLDashboardStatus) DeepCopy() *SQLDashboardStatus {
	if in == nil {
		return nil
	}
	out := new(SQLDashboardStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLEndpoint) DeepCopyInto(out *SQLEndpoint) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLEndpoint.
func (in *SQLEndpoint) DeepCopy() *SQLEndpoint {
	if in == nil {
		return nil
	}
	out := new(SQLEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLEndpoint) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLEndpointHealthInitParameters) DeepCopyInto(out *SQLEndpointHealthInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLEndpointHealthInitParameters.
func (in *SQLEndpointHealthInitParameters) DeepCopy() *SQLEndpointHealthInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLEndpointHealthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLEndpointHealthObservation) DeepCopyInto(out *SQLEndpointHealthObservation) {
	*out = *in
	if in.Details != nil {
		in, out := &in.Details, &out.Details
		*out = new(string)
		**out = **in
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = make([]FailureReasonObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Summary != nil {
		in, out := &in.Summary, &out.Summary
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLEndpointHealthObservation.
func (in *SQLEndpointHealthObservation) DeepCopy() *SQLEndpointHealthObservation {
	if in == nil {
		return nil
	}
	out := new(SQLEndpointHealthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLEndpointHealthParameters) DeepCopyInto(out *SQLEndpointHealthParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLEndpointHealthParameters.
func (in *SQLEndpointHealthParameters) DeepCopy() *SQLEndpointHealthParameters {
	if in == nil {
		return nil
	}
	out := new(SQLEndpointHealthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLEndpointInitParameters) DeepCopyInto(out *SQLEndpointInitParameters) {
	*out = *in
	if in.AutoStopMins != nil {
		in, out := &in.AutoStopMins, &out.AutoStopMins
		*out = new(float64)
		**out = **in
	}
	if in.Channel != nil {
		in, out := &in.Channel, &out.Channel
		*out = make([]ChannelInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterSize != nil {
		in, out := &in.ClusterSize, &out.ClusterSize
		*out = new(string)
		**out = **in
	}
	if in.DataSourceID != nil {
		in, out := &in.DataSourceID, &out.DataSourceID
		*out = new(string)
		**out = **in
	}
	if in.EnablePhoton != nil {
		in, out := &in.EnablePhoton, &out.EnablePhoton
		*out = new(bool)
		**out = **in
	}
	if in.EnableServerlessCompute != nil {
		in, out := &in.EnableServerlessCompute, &out.EnableServerlessCompute
		*out = new(bool)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.MaxNumClusters != nil {
		in, out := &in.MaxNumClusters, &out.MaxNumClusters
		*out = new(float64)
		**out = **in
	}
	if in.MinNumClusters != nil {
		in, out := &in.MinNumClusters, &out.MinNumClusters
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SpotInstancePolicy != nil {
		in, out := &in.SpotInstancePolicy, &out.SpotInstancePolicy
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]SQLEndpointTagsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseType != nil {
		in, out := &in.WarehouseType, &out.WarehouseType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLEndpointInitParameters.
func (in *SQLEndpointInitParameters) DeepCopy() *SQLEndpointInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLEndpointInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLEndpointList) DeepCopyInto(out *SQLEndpointList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SQLEndpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLEndpointList.
func (in *SQLEndpointList) DeepCopy() *SQLEndpointList {
	if in == nil {
		return nil
	}
	out := new(SQLEndpointList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLEndpointList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLEndpointObservation) DeepCopyInto(out *SQLEndpointObservation) {
	*out = *in
	if in.AutoStopMins != nil {
		in, out := &in.AutoStopMins, &out.AutoStopMins
		*out = new(float64)
		**out = **in
	}
	if in.Channel != nil {
		in, out := &in.Channel, &out.Channel
		*out = make([]ChannelObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterSize != nil {
		in, out := &in.ClusterSize, &out.ClusterSize
		*out = new(string)
		**out = **in
	}
	if in.CreatorName != nil {
		in, out := &in.CreatorName, &out.CreatorName
		*out = new(string)
		**out = **in
	}
	if in.DataSourceID != nil {
		in, out := &in.DataSourceID, &out.DataSourceID
		*out = new(string)
		**out = **in
	}
	if in.EnablePhoton != nil {
		in, out := &in.EnablePhoton, &out.EnablePhoton
		*out = new(bool)
		**out = **in
	}
	if in.EnableServerlessCompute != nil {
		in, out := &in.EnableServerlessCompute, &out.EnableServerlessCompute
		*out = new(bool)
		**out = **in
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]SQLEndpointHealthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.JdbcURL != nil {
		in, out := &in.JdbcURL, &out.JdbcURL
		*out = new(string)
		**out = **in
	}
	if in.MaxNumClusters != nil {
		in, out := &in.MaxNumClusters, &out.MaxNumClusters
		*out = new(float64)
		**out = **in
	}
	if in.MinNumClusters != nil {
		in, out := &in.MinNumClusters, &out.MinNumClusters
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NumActiveSessions != nil {
		in, out := &in.NumActiveSessions, &out.NumActiveSessions
		*out = new(float64)
		**out = **in
	}
	if in.NumClusters != nil {
		in, out := &in.NumClusters, &out.NumClusters
		*out = new(float64)
		**out = **in
	}
	if in.OdbcParams != nil {
		in, out := &in.OdbcParams, &out.OdbcParams
		*out = make([]OdbcParamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotInstancePolicy != nil {
		in, out := &in.SpotInstancePolicy, &out.SpotInstancePolicy
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]SQLEndpointTagsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseType != nil {
		in, out := &in.WarehouseType, &out.WarehouseType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLEndpointObservation.
func (in *SQLEndpointObservation) DeepCopy() *SQLEndpointObservation {
	if in == nil {
		return nil
	}
	out := new(SQLEndpointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLEndpointParameters) DeepCopyInto(out *SQLEndpointParameters) {
	*out = *in
	if in.AutoStopMins != nil {
		in, out := &in.AutoStopMins, &out.AutoStopMins
		*out = new(float64)
		**out = **in
	}
	if in.Channel != nil {
		in, out := &in.Channel, &out.Channel
		*out = make([]ChannelParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterSize != nil {
		in, out := &in.ClusterSize, &out.ClusterSize
		*out = new(string)
		**out = **in
	}
	if in.DataSourceID != nil {
		in, out := &in.DataSourceID, &out.DataSourceID
		*out = new(string)
		**out = **in
	}
	if in.EnablePhoton != nil {
		in, out := &in.EnablePhoton, &out.EnablePhoton
		*out = new(bool)
		**out = **in
	}
	if in.EnableServerlessCompute != nil {
		in, out := &in.EnableServerlessCompute, &out.EnableServerlessCompute
		*out = new(bool)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.MaxNumClusters != nil {
		in, out := &in.MaxNumClusters, &out.MaxNumClusters
		*out = new(float64)
		**out = **in
	}
	if in.MinNumClusters != nil {
		in, out := &in.MinNumClusters, &out.MinNumClusters
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SpotInstancePolicy != nil {
		in, out := &in.SpotInstancePolicy, &out.SpotInstancePolicy
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]SQLEndpointTagsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseType != nil {
		in, out := &in.WarehouseType, &out.WarehouseType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLEndpointParameters.
func (in *SQLEndpointParameters) DeepCopy() *SQLEndpointParameters {
	if in == nil {
		return nil
	}
	out := new(SQLEndpointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLEndpointSpec) DeepCopyInto(out *SQLEndpointSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLEndpointSpec.
func (in *SQLEndpointSpec) DeepCopy() *SQLEndpointSpec {
	if in == nil {
		return nil
	}
	out := new(SQLEndpointSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLEndpointStatus) DeepCopyInto(out *SQLEndpointStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLEndpointStatus.
func (in *SQLEndpointStatus) DeepCopy() *SQLEndpointStatus {
	if in == nil {
		return nil
	}
	out := new(SQLEndpointStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLEndpointTagsInitParameters) DeepCopyInto(out *SQLEndpointTagsInitParameters) {
	*out = *in
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make([]CustomTagsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLEndpointTagsInitParameters.
func (in *SQLEndpointTagsInitParameters) DeepCopy() *SQLEndpointTagsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLEndpointTagsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLEndpointTagsObservation) DeepCopyInto(out *SQLEndpointTagsObservation) {
	*out = *in
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make([]CustomTagsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLEndpointTagsObservation.
func (in *SQLEndpointTagsObservation) DeepCopy() *SQLEndpointTagsObservation {
	if in == nil {
		return nil
	}
	out := new(SQLEndpointTagsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLEndpointTagsParameters) DeepCopyInto(out *SQLEndpointTagsParameters) {
	*out = *in
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make([]CustomTagsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLEndpointTagsParameters.
func (in *SQLEndpointTagsParameters) DeepCopy() *SQLEndpointTagsParameters {
	if in == nil {
		return nil
	}
	out := new(SQLEndpointTagsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLGlobalConfig) DeepCopyInto(out *SQLGlobalConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLGlobalConfig.
func (in *SQLGlobalConfig) DeepCopy() *SQLGlobalConfig {
	if in == nil {
		return nil
	}
	out := new(SQLGlobalConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLGlobalConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLGlobalConfigInitParameters) DeepCopyInto(out *SQLGlobalConfigInitParameters) {
	*out = *in
	if in.DataAccessConfig != nil {
		in, out := &in.DataAccessConfig, &out.DataAccessConfig
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EnableServerlessCompute != nil {
		in, out := &in.EnableServerlessCompute, &out.EnableServerlessCompute
		*out = new(bool)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SQLConfigParams != nil {
		in, out := &in.SQLConfigParams, &out.SQLConfigParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SecurityPolicy != nil {
		in, out := &in.SecurityPolicy, &out.SecurityPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLGlobalConfigInitParameters.
func (in *SQLGlobalConfigInitParameters) DeepCopy() *SQLGlobalConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLGlobalConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLGlobalConfigList) DeepCopyInto(out *SQLGlobalConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SQLGlobalConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLGlobalConfigList.
func (in *SQLGlobalConfigList) DeepCopy() *SQLGlobalConfigList {
	if in == nil {
		return nil
	}
	out := new(SQLGlobalConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLGlobalConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLGlobalConfigObservation) DeepCopyInto(out *SQLGlobalConfigObservation) {
	*out = *in
	if in.DataAccessConfig != nil {
		in, out := &in.DataAccessConfig, &out.DataAccessConfig
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EnableServerlessCompute != nil {
		in, out := &in.EnableServerlessCompute, &out.EnableServerlessCompute
		*out = new(bool)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SQLConfigParams != nil {
		in, out := &in.SQLConfigParams, &out.SQLConfigParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SecurityPolicy != nil {
		in, out := &in.SecurityPolicy, &out.SecurityPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLGlobalConfigObservation.
func (in *SQLGlobalConfigObservation) DeepCopy() *SQLGlobalConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SQLGlobalConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLGlobalConfigParameters) DeepCopyInto(out *SQLGlobalConfigParameters) {
	*out = *in
	if in.DataAccessConfig != nil {
		in, out := &in.DataAccessConfig, &out.DataAccessConfig
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EnableServerlessCompute != nil {
		in, out := &in.EnableServerlessCompute, &out.EnableServerlessCompute
		*out = new(bool)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SQLConfigParams != nil {
		in, out := &in.SQLConfigParams, &out.SQLConfigParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SecurityPolicy != nil {
		in, out := &in.SecurityPolicy, &out.SecurityPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLGlobalConfigParameters.
func (in *SQLGlobalConfigParameters) DeepCopy() *SQLGlobalConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SQLGlobalConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLGlobalConfigSpec) DeepCopyInto(out *SQLGlobalConfigSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLGlobalConfigSpec.
func (in *SQLGlobalConfigSpec) DeepCopy() *SQLGlobalConfigSpec {
	if in == nil {
		return nil
	}
	out := new(SQLGlobalConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLGlobalConfigStatus) DeepCopyInto(out *SQLGlobalConfigStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLGlobalConfigStatus.
func (in *SQLGlobalConfigStatus) DeepCopy() *SQLGlobalConfigStatus {
	if in == nil {
		return nil
	}
	out := new(SQLGlobalConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLPermissions) DeepCopyInto(out *SQLPermissions) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLPermissions.
func (in *SQLPermissions) DeepCopy() *SQLPermissions {
	if in == nil {
		return nil
	}
	out := new(SQLPermissions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLPermissions) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLPermissionsInitParameters) DeepCopyInto(out *SQLPermissionsInitParameters) {
	*out = *in
	if in.AnonymousFunction != nil {
		in, out := &in.AnonymousFunction, &out.AnonymousFunction
		*out = new(bool)
		**out = **in
	}
	if in.AnyFile != nil {
		in, out := &in.AnyFile, &out.AnyFile
		*out = new(bool)
		**out = **in
	}
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(bool)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.PrivilegeAssignments != nil {
		in, out := &in.PrivilegeAssignments, &out.PrivilegeAssignments
		*out = make([]PrivilegeAssignmentsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLPermissionsInitParameters.
func (in *SQLPermissionsInitParameters) DeepCopy() *SQLPermissionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLPermissionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLPermissionsList) DeepCopyInto(out *SQLPermissionsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SQLPermissions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLPermissionsList.
func (in *SQLPermissionsList) DeepCopy() *SQLPermissionsList {
	if in == nil {
		return nil
	}
	out := new(SQLPermissionsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLPermissionsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLPermissionsObservation) DeepCopyInto(out *SQLPermissionsObservation) {
	*out = *in
	if in.AnonymousFunction != nil {
		in, out := &in.AnonymousFunction, &out.AnonymousFunction
		*out = new(bool)
		**out = **in
	}
	if in.AnyFile != nil {
		in, out := &in.AnyFile, &out.AnyFile
		*out = new(bool)
		**out = **in
	}
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(bool)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PrivilegeAssignments != nil {
		in, out := &in.PrivilegeAssignments, &out.PrivilegeAssignments
		*out = make([]PrivilegeAssignmentsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLPermissionsObservation.
func (in *SQLPermissionsObservation) DeepCopy() *SQLPermissionsObservation {
	if in == nil {
		return nil
	}
	out := new(SQLPermissionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLPermissionsParameters) DeepCopyInto(out *SQLPermissionsParameters) {
	*out = *in
	if in.AnonymousFunction != nil {
		in, out := &in.AnonymousFunction, &out.AnonymousFunction
		*out = new(bool)
		**out = **in
	}
	if in.AnyFile != nil {
		in, out := &in.AnyFile, &out.AnyFile
		*out = new(bool)
		**out = **in
	}
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(bool)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.PrivilegeAssignments != nil {
		in, out := &in.PrivilegeAssignments, &out.PrivilegeAssignments
		*out = make([]PrivilegeAssignmentsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLPermissionsParameters.
func (in *SQLPermissionsParameters) DeepCopy() *SQLPermissionsParameters {
	if in == nil {
		return nil
	}
	out := new(SQLPermissionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLPermissionsSpec) DeepCopyInto(out *SQLPermissionsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLPermissionsSpec.
func (in *SQLPermissionsSpec) DeepCopy() *SQLPermissionsSpec {
	if in == nil {
		return nil
	}
	out := new(SQLPermissionsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLPermissionsStatus) DeepCopyInto(out *SQLPermissionsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLPermissionsStatus.
func (in *SQLPermissionsStatus) DeepCopy() *SQLPermissionsStatus {
	if in == nil {
		return nil
	}
	out := new(SQLPermissionsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLQuery) DeepCopyInto(out *SQLQuery) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLQuery.
func (in *SQLQuery) DeepCopy() *SQLQuery {
	if in == nil {
		return nil
	}
	out := new(SQLQuery)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLQuery) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLQueryInitParameters) DeepCopyInto(out *SQLQueryInitParameters) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.DataSourceID != nil {
		in, out := &in.DataSourceID, &out.DataSourceID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]SQLQueryParameterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.RunAsRole != nil {
		in, out := &in.RunAsRole, &out.RunAsRole
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]SQLQueryScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLQueryInitParameters.
func (in *SQLQueryInitParameters) DeepCopy() *SQLQueryInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLQueryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLQueryList) DeepCopyInto(out *SQLQueryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SQLQuery, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLQueryList.
func (in *SQLQueryList) DeepCopy() *SQLQueryList {
	if in == nil {
		return nil
	}
	out := new(SQLQueryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLQueryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLQueryObservation) DeepCopyInto(out *SQLQueryObservation) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.DataSourceID != nil {
		in, out := &in.DataSourceID, &out.DataSourceID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]SQLQueryParameterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.RunAsRole != nil {
		in, out := &in.RunAsRole, &out.RunAsRole
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]SQLQueryScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLQueryObservation.
func (in *SQLQueryObservation) DeepCopy() *SQLQueryObservation {
	if in == nil {
		return nil
	}
	out := new(SQLQueryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLQueryParameterInitParameters) DeepCopyInto(out *SQLQueryParameterInitParameters) {
	*out = *in
	if in.Date != nil {
		in, out := &in.Date, &out.Date
		*out = make([]DateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DateRange != nil {
		in, out := &in.DateRange, &out.DateRange
		*out = make([]DateRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Datetime != nil {
		in, out := &in.Datetime, &out.Datetime
		*out = make([]DatetimeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatetimeRange != nil {
		in, out := &in.DatetimeRange, &out.DatetimeRange
		*out = make([]DatetimeRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Datetimesec != nil {
		in, out := &in.Datetimesec, &out.Datetimesec
		*out = make([]DatetimesecInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatetimesecRange != nil {
		in, out := &in.DatetimesecRange, &out.DatetimesecRange
		*out = make([]DatetimesecRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enum != nil {
		in, out := &in.Enum, &out.Enum
		*out = make([]EnumInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Number != nil {
		in, out := &in.Number, &out.Number
		*out = make([]NumberInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]ParameterQueryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Text != nil {
		in, out := &in.Text, &out.Text
		*out = make([]TextInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLQueryParameterInitParameters.
func (in *SQLQueryParameterInitParameters) DeepCopy() *SQLQueryParameterInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLQueryParameterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLQueryParameterObservation) DeepCopyInto(out *SQLQueryParameterObservation) {
	*out = *in
	if in.Date != nil {
		in, out := &in.Date, &out.Date
		*out = make([]DateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DateRange != nil {
		in, out := &in.DateRange, &out.DateRange
		*out = make([]DateRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Datetime != nil {
		in, out := &in.Datetime, &out.Datetime
		*out = make([]DatetimeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatetimeRange != nil {
		in, out := &in.DatetimeRange, &out.DatetimeRange
		*out = make([]DatetimeRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Datetimesec != nil {
		in, out := &in.Datetimesec, &out.Datetimesec
		*out = make([]DatetimesecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatetimesecRange != nil {
		in, out := &in.DatetimesecRange, &out.DatetimesecRange
		*out = make([]DatetimesecRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enum != nil {
		in, out := &in.Enum, &out.Enum
		*out = make([]EnumObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Number != nil {
		in, out := &in.Number, &out.Number
		*out = make([]NumberObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]ParameterQueryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Text != nil {
		in, out := &in.Text, &out.Text
		*out = make([]TextObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLQueryParameterObservation.
func (in *SQLQueryParameterObservation) DeepCopy() *SQLQueryParameterObservation {
	if in == nil {
		return nil
	}
	out := new(SQLQueryParameterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLQueryParameterParameters) DeepCopyInto(out *SQLQueryParameterParameters) {
	*out = *in
	if in.Date != nil {
		in, out := &in.Date, &out.Date
		*out = make([]DateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DateRange != nil {
		in, out := &in.DateRange, &out.DateRange
		*out = make([]DateRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Datetime != nil {
		in, out := &in.Datetime, &out.Datetime
		*out = make([]DatetimeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatetimeRange != nil {
		in, out := &in.DatetimeRange, &out.DatetimeRange
		*out = make([]DatetimeRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Datetimesec != nil {
		in, out := &in.Datetimesec, &out.Datetimesec
		*out = make([]DatetimesecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatetimesecRange != nil {
		in, out := &in.DatetimesecRange, &out.DatetimesecRange
		*out = make([]DatetimesecRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enum != nil {
		in, out := &in.Enum, &out.Enum
		*out = make([]EnumParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Number != nil {
		in, out := &in.Number, &out.Number
		*out = make([]NumberParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]ParameterQueryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Text != nil {
		in, out := &in.Text, &out.Text
		*out = make([]TextParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLQueryParameterParameters.
func (in *SQLQueryParameterParameters) DeepCopy() *SQLQueryParameterParameters {
	if in == nil {
		return nil
	}
	out := new(SQLQueryParameterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLQueryParameters) DeepCopyInto(out *SQLQueryParameters) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.DataSourceID != nil {
		in, out := &in.DataSourceID, &out.DataSourceID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]SQLQueryParameterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.RunAsRole != nil {
		in, out := &in.RunAsRole, &out.RunAsRole
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]SQLQueryScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLQueryParameters.
func (in *SQLQueryParameters) DeepCopy() *SQLQueryParameters {
	if in == nil {
		return nil
	}
	out := new(SQLQueryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLQueryScheduleInitParameters) DeepCopyInto(out *SQLQueryScheduleInitParameters) {
	*out = *in
	if in.Continuous != nil {
		in, out := &in.Continuous, &out.Continuous
		*out = make([]ScheduleContinuousInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Daily != nil {
		in, out := &in.Daily, &out.Daily
		*out = make([]DailyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weekly != nil {
		in, out := &in.Weekly, &out.Weekly
		*out = make([]WeeklyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLQueryScheduleInitParameters.
func (in *SQLQueryScheduleInitParameters) DeepCopy() *SQLQueryScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLQueryScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLQueryScheduleObservation) DeepCopyInto(out *SQLQueryScheduleObservation) {
	*out = *in
	if in.Continuous != nil {
		in, out := &in.Continuous, &out.Continuous
		*out = make([]ScheduleContinuousObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Daily != nil {
		in, out := &in.Daily, &out.Daily
		*out = make([]DailyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weekly != nil {
		in, out := &in.Weekly, &out.Weekly
		*out = make([]WeeklyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLQueryScheduleObservation.
func (in *SQLQueryScheduleObservation) DeepCopy() *SQLQueryScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(SQLQueryScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLQueryScheduleParameters) DeepCopyInto(out *SQLQueryScheduleParameters) {
	*out = *in
	if in.Continuous != nil {
		in, out := &in.Continuous, &out.Continuous
		*out = make([]ScheduleContinuousParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Daily != nil {
		in, out := &in.Daily, &out.Daily
		*out = make([]DailyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weekly != nil {
		in, out := &in.Weekly, &out.Weekly
		*out = make([]WeeklyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLQueryScheduleParameters.
func (in *SQLQueryScheduleParameters) DeepCopy() *SQLQueryScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(SQLQueryScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLQuerySpec) DeepCopyInto(out *SQLQuerySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLQuerySpec.
func (in *SQLQuerySpec) DeepCopy() *SQLQuerySpec {
	if in == nil {
		return nil
	}
	out := new(SQLQuerySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLQueryStatus) DeepCopyInto(out *SQLQueryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLQueryStatus.
func (in *SQLQueryStatus) DeepCopy() *SQLQueryStatus {
	if in == nil {
		return nil
	}
	out := new(SQLQueryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTable) DeepCopyInto(out *SQLTable) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTable.
func (in *SQLTable) DeepCopy() *SQLTable {
	if in == nil {
		return nil
	}
	out := new(SQLTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLTable) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTableColumnInitParameters) DeepCopyInto(out *SQLTableColumnInitParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.TypeJSON != nil {
		in, out := &in.TypeJSON, &out.TypeJSON
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTableColumnInitParameters.
func (in *SQLTableColumnInitParameters) DeepCopy() *SQLTableColumnInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTableColumnInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTableColumnObservation) DeepCopyInto(out *SQLTableColumnObservation) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.TypeJSON != nil {
		in, out := &in.TypeJSON, &out.TypeJSON
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTableColumnObservation.
func (in *SQLTableColumnObservation) DeepCopy() *SQLTableColumnObservation {
	if in == nil {
		return nil
	}
	out := new(SQLTableColumnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTableColumnParameters) DeepCopyInto(out *SQLTableColumnParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.TypeJSON != nil {
		in, out := &in.TypeJSON, &out.TypeJSON
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTableColumnParameters.
func (in *SQLTableColumnParameters) DeepCopy() *SQLTableColumnParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTableColumnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTableInitParameters) DeepCopyInto(out *SQLTableInitParameters) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterKeys != nil {
		in, out := &in.ClusterKeys, &out.ClusterKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = make([]SQLTableColumnInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DataSourceFormat != nil {
		in, out := &in.DataSourceFormat, &out.DataSourceFormat
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Partitions != nil {
		in, out := &in.Partitions, &out.Partitions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.StorageCredentialName != nil {
		in, out := &in.StorageCredentialName, &out.StorageCredentialName
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
	if in.TableType != nil {
		in, out := &in.TableType, &out.TableType
		*out = new(string)
		**out = **in
	}
	if in.ViewDefinition != nil {
		in, out := &in.ViewDefinition, &out.ViewDefinition
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTableInitParameters.
func (in *SQLTableInitParameters) DeepCopy() *SQLTableInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTableList) DeepCopyInto(out *SQLTableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SQLTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTableList.
func (in *SQLTableList) DeepCopy() *SQLTableList {
	if in == nil {
		return nil
	}
	out := new(SQLTableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLTableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTableObservation) DeepCopyInto(out *SQLTableObservation) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterKeys != nil {
		in, out := &in.ClusterKeys, &out.ClusterKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = make([]SQLTableColumnObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DataSourceFormat != nil {
		in, out := &in.DataSourceFormat, &out.DataSourceFormat
		*out = new(string)
		**out = **in
	}
	if in.EffectiveProperties != nil {
		in, out := &in.EffectiveProperties, &out.EffectiveProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Partitions != nil {
		in, out := &in.Partitions, &out.Partitions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.StorageCredentialName != nil {
		in, out := &in.StorageCredentialName, &out.StorageCredentialName
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
	if in.TableType != nil {
		in, out := &in.TableType, &out.TableType
		*out = new(string)
		**out = **in
	}
	if in.ViewDefinition != nil {
		in, out := &in.ViewDefinition, &out.ViewDefinition
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTableObservation.
func (in *SQLTableObservation) DeepCopy() *SQLTableObservation {
	if in == nil {
		return nil
	}
	out := new(SQLTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTableParameters) DeepCopyInto(out *SQLTableParameters) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterKeys != nil {
		in, out := &in.ClusterKeys, &out.ClusterKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = make([]SQLTableColumnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DataSourceFormat != nil {
		in, out := &in.DataSourceFormat, &out.DataSourceFormat
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Partitions != nil {
		in, out := &in.Partitions, &out.Partitions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.StorageCredentialName != nil {
		in, out := &in.StorageCredentialName, &out.StorageCredentialName
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
	if in.TableType != nil {
		in, out := &in.TableType, &out.TableType
		*out = new(string)
		**out = **in
	}
	if in.ViewDefinition != nil {
		in, out := &in.ViewDefinition, &out.ViewDefinition
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTableParameters.
func (in *SQLTableParameters) DeepCopy() *SQLTableParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTableSpec) DeepCopyInto(out *SQLTableSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTableSpec.
func (in *SQLTableSpec) DeepCopy() *SQLTableSpec {
	if in == nil {
		return nil
	}
	out := new(SQLTableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTableStatus) DeepCopyInto(out *SQLTableStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTableStatus.
func (in *SQLTableStatus) DeepCopy() *SQLTableStatus {
	if in == nil {
		return nil
	}
	out := new(SQLTableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskAlertInitParameters) DeepCopyInto(out *SQLTaskAlertInitParameters) {
	*out = *in
	if in.AlertID != nil {
		in, out := &in.AlertID, &out.AlertID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]SubscriptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskAlertInitParameters.
func (in *SQLTaskAlertInitParameters) DeepCopy() *SQLTaskAlertInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskAlertInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskAlertObservation) DeepCopyInto(out *SQLTaskAlertObservation) {
	*out = *in
	if in.AlertID != nil {
		in, out := &in.AlertID, &out.AlertID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]SubscriptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskAlertObservation.
func (in *SQLTaskAlertObservation) DeepCopy() *SQLTaskAlertObservation {
	if in == nil {
		return nil
	}
	out := new(SQLTaskAlertObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskAlertParameters) DeepCopyInto(out *SQLTaskAlertParameters) {
	*out = *in
	if in.AlertID != nil {
		in, out := &in.AlertID, &out.AlertID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]SubscriptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskAlertParameters.
func (in *SQLTaskAlertParameters) DeepCopy() *SQLTaskAlertParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskAlertParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskDashboardInitParameters) DeepCopyInto(out *SQLTaskDashboardInitParameters) {
	*out = *in
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]SQLTaskDashboardSubscriptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskDashboardInitParameters.
func (in *SQLTaskDashboardInitParameters) DeepCopy() *SQLTaskDashboardInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskDashboardInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskDashboardObservation) DeepCopyInto(out *SQLTaskDashboardObservation) {
	*out = *in
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]SQLTaskDashboardSubscriptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskDashboardObservation.
func (in *SQLTaskDashboardObservation) DeepCopy() *SQLTaskDashboardObservation {
	if in == nil {
		return nil
	}
	out := new(SQLTaskDashboardObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskDashboardParameters) DeepCopyInto(out *SQLTaskDashboardParameters) {
	*out = *in
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]SQLTaskDashboardSubscriptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskDashboardParameters.
func (in *SQLTaskDashboardParameters) DeepCopy() *SQLTaskDashboardParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskDashboardParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskDashboardSubscriptionsInitParameters) DeepCopyInto(out *SQLTaskDashboardSubscriptionsInitParameters) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskDashboardSubscriptionsInitParameters.
func (in *SQLTaskDashboardSubscriptionsInitParameters) DeepCopy() *SQLTaskDashboardSubscriptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskDashboardSubscriptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskDashboardSubscriptionsObservation) DeepCopyInto(out *SQLTaskDashboardSubscriptionsObservation) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskDashboardSubscriptionsObservation.
func (in *SQLTaskDashboardSubscriptionsObservation) DeepCopy() *SQLTaskDashboardSubscriptionsObservation {
	if in == nil {
		return nil
	}
	out := new(SQLTaskDashboardSubscriptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskDashboardSubscriptionsParameters) DeepCopyInto(out *SQLTaskDashboardSubscriptionsParameters) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskDashboardSubscriptionsParameters.
func (in *SQLTaskDashboardSubscriptionsParameters) DeepCopy() *SQLTaskDashboardSubscriptionsParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskDashboardSubscriptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskFileInitParameters) DeepCopyInto(out *SQLTaskFileInitParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskFileInitParameters.
func (in *SQLTaskFileInitParameters) DeepCopy() *SQLTaskFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskFileObservation) DeepCopyInto(out *SQLTaskFileObservation) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskFileObservation.
func (in *SQLTaskFileObservation) DeepCopy() *SQLTaskFileObservation {
	if in == nil {
		return nil
	}
	out := new(SQLTaskFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskFileParameters) DeepCopyInto(out *SQLTaskFileParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskFileParameters.
func (in *SQLTaskFileParameters) DeepCopy() *SQLTaskFileParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskInitParameters) DeepCopyInto(out *SQLTaskInitParameters) {
	*out = *in
	if in.Alert != nil {
		in, out := &in.Alert, &out.Alert
		*out = make([]SQLTaskAlertInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dashboard != nil {
		in, out := &in.Dashboard, &out.Dashboard
		*out = make([]DashboardInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]SQLTaskFileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]QueryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskInitParameters.
func (in *SQLTaskInitParameters) DeepCopy() *SQLTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskObservation) DeepCopyInto(out *SQLTaskObservation) {
	*out = *in
	if in.Alert != nil {
		in, out := &in.Alert, &out.Alert
		*out = make([]SQLTaskAlertObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dashboard != nil {
		in, out := &in.Dashboard, &out.Dashboard
		*out = make([]DashboardObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]SQLTaskFileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]QueryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskObservation.
func (in *SQLTaskObservation) DeepCopy() *SQLTaskObservation {
	if in == nil {
		return nil
	}
	out := new(SQLTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskParameters) DeepCopyInto(out *SQLTaskParameters) {
	*out = *in
	if in.Alert != nil {
		in, out := &in.Alert, &out.Alert
		*out = make([]SQLTaskAlertParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dashboard != nil {
		in, out := &in.Dashboard, &out.Dashboard
		*out = make([]DashboardParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]SQLTaskFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]QueryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskParameters.
func (in *SQLTaskParameters) DeepCopy() *SQLTaskParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskQueryInitParameters) DeepCopyInto(out *SQLTaskQueryInitParameters) {
	*out = *in
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskQueryInitParameters.
func (in *SQLTaskQueryInitParameters) DeepCopy() *SQLTaskQueryInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskQueryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskQueryObservation) DeepCopyInto(out *SQLTaskQueryObservation) {
	*out = *in
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskQueryObservation.
func (in *SQLTaskQueryObservation) DeepCopy() *SQLTaskQueryObservation {
	if in == nil {
		return nil
	}
	out := new(SQLTaskQueryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskQueryParameters) DeepCopyInto(out *SQLTaskQueryParameters) {
	*out = *in
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskQueryParameters.
func (in *SQLTaskQueryParameters) DeepCopy() *SQLTaskQueryParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskQueryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleContinuousInitParameters) DeepCopyInto(out *ScheduleContinuousInitParameters) {
	*out = *in
	if in.IntervalSeconds != nil {
		in, out := &in.IntervalSeconds, &out.IntervalSeconds
		*out = new(float64)
		**out = **in
	}
	if in.UntilDate != nil {
		in, out := &in.UntilDate, &out.UntilDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleContinuousInitParameters.
func (in *ScheduleContinuousInitParameters) DeepCopy() *ScheduleContinuousInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleContinuousInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleContinuousObservation) DeepCopyInto(out *ScheduleContinuousObservation) {
	*out = *in
	if in.IntervalSeconds != nil {
		in, out := &in.IntervalSeconds, &out.IntervalSeconds
		*out = new(float64)
		**out = **in
	}
	if in.UntilDate != nil {
		in, out := &in.UntilDate, &out.UntilDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleContinuousObservation.
func (in *ScheduleContinuousObservation) DeepCopy() *ScheduleContinuousObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduleContinuousObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleContinuousParameters) DeepCopyInto(out *ScheduleContinuousParameters) {
	*out = *in
	if in.IntervalSeconds != nil {
		in, out := &in.IntervalSeconds, &out.IntervalSeconds
		*out = new(float64)
		**out = **in
	}
	if in.UntilDate != nil {
		in, out := &in.UntilDate, &out.UntilDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleContinuousParameters.
func (in *ScheduleContinuousParameters) DeepCopy() *ScheduleContinuousParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleContinuousParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleInitParameters) DeepCopyInto(out *ScheduleInitParameters) {
	*out = *in
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
	if in.QuartzCronExpression != nil {
		in, out := &in.QuartzCronExpression, &out.QuartzCronExpression
		*out = new(string)
		**out = **in
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleInitParameters.
func (in *ScheduleInitParameters) DeepCopy() *ScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleObservation) DeepCopyInto(out *ScheduleObservation) {
	*out = *in
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
	if in.QuartzCronExpression != nil {
		in, out := &in.QuartzCronExpression, &out.QuartzCronExpression
		*out = new(string)
		**out = **in
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleObservation.
func (in *ScheduleObservation) DeepCopy() *ScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleParameters) DeepCopyInto(out *ScheduleParameters) {
	*out = *in
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
	if in.QuartzCronExpression != nil {
		in, out := &in.QuartzCronExpression, &out.QuartzCronExpression
		*out = new(string)
		**out = **in
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleParameters.
func (in *ScheduleParameters) DeepCopy() *ScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Schema) DeepCopyInto(out *Schema) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Schema.
func (in *Schema) DeepCopy() *Schema {
	if in == nil {
		return nil
	}
	out := new(Schema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Schema) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaInitParameters) DeepCopyInto(out *SchemaInitParameters) {
	*out = *in
	if in.DestinationCatalog != nil {
		in, out := &in.DestinationCatalog, &out.DestinationCatalog
		*out = new(string)
		**out = **in
	}
	if in.DestinationSchema != nil {
		in, out := &in.DestinationSchema, &out.DestinationSchema
		*out = new(string)
		**out = **in
	}
	if in.SourceCatalog != nil {
		in, out := &in.SourceCatalog, &out.SourceCatalog
		*out = new(string)
		**out = **in
	}
	if in.SourceSchema != nil {
		in, out := &in.SourceSchema, &out.SourceSchema
		*out = new(string)
		**out = **in
	}
	if in.TableConfiguration != nil {
		in, out := &in.TableConfiguration, &out.TableConfiguration
		*out = make([]SchemaTableConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaInitParameters.
func (in *SchemaInitParameters) DeepCopy() *SchemaInitParameters {
	if in == nil {
		return nil
	}
	out := new(SchemaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaInitParameters_2) DeepCopyInto(out *SchemaInitParameters_2) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.EnablePredictiveOptimization != nil {
		in, out := &in.EnablePredictiveOptimization, &out.EnablePredictiveOptimization
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaInitParameters_2.
func (in *SchemaInitParameters_2) DeepCopy() *SchemaInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(SchemaInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaList) DeepCopyInto(out *SchemaList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Schema, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaList.
func (in *SchemaList) DeepCopy() *SchemaList {
	if in == nil {
		return nil
	}
	out := new(SchemaList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SchemaList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaObservation) DeepCopyInto(out *SchemaObservation) {
	*out = *in
	if in.DestinationCatalog != nil {
		in, out := &in.DestinationCatalog, &out.DestinationCatalog
		*out = new(string)
		**out = **in
	}
	if in.DestinationSchema != nil {
		in, out := &in.DestinationSchema, &out.DestinationSchema
		*out = new(string)
		**out = **in
	}
	if in.SourceCatalog != nil {
		in, out := &in.SourceCatalog, &out.SourceCatalog
		*out = new(string)
		**out = **in
	}
	if in.SourceSchema != nil {
		in, out := &in.SourceSchema, &out.SourceSchema
		*out = new(string)
		**out = **in
	}
	if in.TableConfiguration != nil {
		in, out := &in.TableConfiguration, &out.TableConfiguration
		*out = make([]SchemaTableConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaObservation.
func (in *SchemaObservation) DeepCopy() *SchemaObservation {
	if in == nil {
		return nil
	}
	out := new(SchemaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaObservation_2) DeepCopyInto(out *SchemaObservation_2) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.EnablePredictiveOptimization != nil {
		in, out := &in.EnablePredictiveOptimization, &out.EnablePredictiveOptimization
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaObservation_2.
func (in *SchemaObservation_2) DeepCopy() *SchemaObservation_2 {
	if in == nil {
		return nil
	}
	out := new(SchemaObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaParameters) DeepCopyInto(out *SchemaParameters) {
	*out = *in
	if in.DestinationCatalog != nil {
		in, out := &in.DestinationCatalog, &out.DestinationCatalog
		*out = new(string)
		**out = **in
	}
	if in.DestinationSchema != nil {
		in, out := &in.DestinationSchema, &out.DestinationSchema
		*out = new(string)
		**out = **in
	}
	if in.SourceCatalog != nil {
		in, out := &in.SourceCatalog, &out.SourceCatalog
		*out = new(string)
		**out = **in
	}
	if in.SourceSchema != nil {
		in, out := &in.SourceSchema, &out.SourceSchema
		*out = new(string)
		**out = **in
	}
	if in.TableConfiguration != nil {
		in, out := &in.TableConfiguration, &out.TableConfiguration
		*out = make([]SchemaTableConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaParameters.
func (in *SchemaParameters) DeepCopy() *SchemaParameters {
	if in == nil {
		return nil
	}
	out := new(SchemaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaParameters_2) DeepCopyInto(out *SchemaParameters_2) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.EnablePredictiveOptimization != nil {
		in, out := &in.EnablePredictiveOptimization, &out.EnablePredictiveOptimization
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaParameters_2.
func (in *SchemaParameters_2) DeepCopy() *SchemaParameters_2 {
	if in == nil {
		return nil
	}
	out := new(SchemaParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaSpec) DeepCopyInto(out *SchemaSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaSpec.
func (in *SchemaSpec) DeepCopy() *SchemaSpec {
	if in == nil {
		return nil
	}
	out := new(SchemaSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaStatus) DeepCopyInto(out *SchemaStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaStatus.
func (in *SchemaStatus) DeepCopy() *SchemaStatus {
	if in == nil {
		return nil
	}
	out := new(SchemaStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaTableConfigurationInitParameters) DeepCopyInto(out *SchemaTableConfigurationInitParameters) {
	*out = *in
	if in.PrimaryKeys != nil {
		in, out := &in.PrimaryKeys, &out.PrimaryKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SalesforceIncludeFormulaFields != nil {
		in, out := &in.SalesforceIncludeFormulaFields, &out.SalesforceIncludeFormulaFields
		*out = new(bool)
		**out = **in
	}
	if in.ScdType != nil {
		in, out := &in.ScdType, &out.ScdType
		*out = new(string)
		**out = **in
	}
	if in.SequenceBy != nil {
		in, out := &in.SequenceBy, &out.SequenceBy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaTableConfigurationInitParameters.
func (in *SchemaTableConfigurationInitParameters) DeepCopy() *SchemaTableConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(SchemaTableConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaTableConfigurationObservation) DeepCopyInto(out *SchemaTableConfigurationObservation) {
	*out = *in
	if in.PrimaryKeys != nil {
		in, out := &in.PrimaryKeys, &out.PrimaryKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SalesforceIncludeFormulaFields != nil {
		in, out := &in.SalesforceIncludeFormulaFields, &out.SalesforceIncludeFormulaFields
		*out = new(bool)
		**out = **in
	}
	if in.ScdType != nil {
		in, out := &in.ScdType, &out.ScdType
		*out = new(string)
		**out = **in
	}
	if in.SequenceBy != nil {
		in, out := &in.SequenceBy, &out.SequenceBy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaTableConfigurationObservation.
func (in *SchemaTableConfigurationObservation) DeepCopy() *SchemaTableConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(SchemaTableConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaTableConfigurationParameters) DeepCopyInto(out *SchemaTableConfigurationParameters) {
	*out = *in
	if in.PrimaryKeys != nil {
		in, out := &in.PrimaryKeys, &out.PrimaryKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SalesforceIncludeFormulaFields != nil {
		in, out := &in.SalesforceIncludeFormulaFields, &out.SalesforceIncludeFormulaFields
		*out = new(bool)
		**out = **in
	}
	if in.ScdType != nil {
		in, out := &in.ScdType, &out.ScdType
		*out = new(string)
		**out = **in
	}
	if in.SequenceBy != nil {
		in, out := &in.SequenceBy, &out.SequenceBy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaTableConfigurationParameters.
func (in *SchemaTableConfigurationParameters) DeepCopy() *SchemaTableConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(SchemaTableConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Secret) DeepCopyInto(out *Secret) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Secret.
func (in *Secret) DeepCopy() *Secret {
	if in == nil {
		return nil
	}
	out := new(Secret)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Secret) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretInitParameters) DeepCopyInto(out *SecretInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	out.StringValueSecretRef = in.StringValueSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretInitParameters.
func (in *SecretInitParameters) DeepCopy() *SecretInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecretInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretList) DeepCopyInto(out *SecretList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Secret, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretList.
func (in *SecretList) DeepCopy() *SecretList {
	if in == nil {
		return nil
	}
	out := new(SecretList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecretList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretObservation) DeepCopyInto(out *SecretObservation) {
	*out = *in
	if in.ConfigReference != nil {
		in, out := &in.ConfigReference, &out.ConfigReference
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.LastUpdatedTimestamp != nil {
		in, out := &in.LastUpdatedTimestamp, &out.LastUpdatedTimestamp
		*out = new(float64)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretObservation.
func (in *SecretObservation) DeepCopy() *SecretObservation {
	if in == nil {
		return nil
	}
	out := new(SecretObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretParameters) DeepCopyInto(out *SecretParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	out.StringValueSecretRef = in.StringValueSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretParameters.
func (in *SecretParameters) DeepCopy() *SecretParameters {
	if in == nil {
		return nil
	}
	out := new(SecretParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScope) DeepCopyInto(out *SecretScope) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScope.
func (in *SecretScope) DeepCopy() *SecretScope {
	if in == nil {
		return nil
	}
	out := new(SecretScope)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecretScope) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScopeInitParameters) DeepCopyInto(out *SecretScopeInitParameters) {
	*out = *in
	if in.BackendType != nil {
		in, out := &in.BackendType, &out.BackendType
		*out = new(string)
		**out = **in
	}
	if in.InitialManagePrincipal != nil {
		in, out := &in.InitialManagePrincipal, &out.InitialManagePrincipal
		*out = new(string)
		**out = **in
	}
	if in.KeyvaultMetadata != nil {
		in, out := &in.KeyvaultMetadata, &out.KeyvaultMetadata
		*out = make([]KeyvaultMetadataInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScopeInitParameters.
func (in *SecretScopeInitParameters) DeepCopy() *SecretScopeInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecretScopeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScopeList) DeepCopyInto(out *SecretScopeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecretScope, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScopeList.
func (in *SecretScopeList) DeepCopy() *SecretScopeList {
	if in == nil {
		return nil
	}
	out := new(SecretScopeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecretScopeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScopeObservation) DeepCopyInto(out *SecretScopeObservation) {
	*out = *in
	if in.BackendType != nil {
		in, out := &in.BackendType, &out.BackendType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InitialManagePrincipal != nil {
		in, out := &in.InitialManagePrincipal, &out.InitialManagePrincipal
		*out = new(string)
		**out = **in
	}
	if in.KeyvaultMetadata != nil {
		in, out := &in.KeyvaultMetadata, &out.KeyvaultMetadata
		*out = make([]KeyvaultMetadataObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScopeObservation.
func (in *SecretScopeObservation) DeepCopy() *SecretScopeObservation {
	if in == nil {
		return nil
	}
	out := new(SecretScopeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScopeParameters) DeepCopyInto(out *SecretScopeParameters) {
	*out = *in
	if in.BackendType != nil {
		in, out := &in.BackendType, &out.BackendType
		*out = new(string)
		**out = **in
	}
	if in.InitialManagePrincipal != nil {
		in, out := &in.InitialManagePrincipal, &out.InitialManagePrincipal
		*out = new(string)
		**out = **in
	}
	if in.KeyvaultMetadata != nil {
		in, out := &in.KeyvaultMetadata, &out.KeyvaultMetadata
		*out = make([]KeyvaultMetadataParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScopeParameters.
func (in *SecretScopeParameters) DeepCopy() *SecretScopeParameters {
	if in == nil {
		return nil
	}
	out := new(SecretScopeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScopeSpec) DeepCopyInto(out *SecretScopeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScopeSpec.
func (in *SecretScopeSpec) DeepCopy() *SecretScopeSpec {
	if in == nil {
		return nil
	}
	out := new(SecretScopeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScopeStatus) DeepCopyInto(out *SecretScopeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScopeStatus.
func (in *SecretScopeStatus) DeepCopy() *SecretScopeStatus {
	if in == nil {
		return nil
	}
	out := new(SecretScopeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretSpec) DeepCopyInto(out *SecretSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretSpec.
func (in *SecretSpec) DeepCopy() *SecretSpec {
	if in == nil {
		return nil
	}
	out := new(SecretSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretStatus) DeepCopyInto(out *SecretStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretStatus.
func (in *SecretStatus) DeepCopy() *SecretStatus {
	if in == nil {
		return nil
	}
	out := new(SecretStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipal) DeepCopyInto(out *ServicePrincipal) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipal.
func (in *ServicePrincipal) DeepCopy() *ServicePrincipal {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipal)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServicePrincipal) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalInitParameters) DeepCopyInto(out *ServicePrincipalInitParameters) {
	*out = *in
	if in.ACLPrincipalID != nil {
		in, out := &in.ACLPrincipalID, &out.ACLPrincipalID
		*out = new(string)
		**out = **in
	}
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.AllowClusterCreate != nil {
		in, out := &in.AllowClusterCreate, &out.AllowClusterCreate
		*out = new(bool)
		**out = **in
	}
	if in.AllowInstancePoolCreate != nil {
		in, out := &in.AllowInstancePoolCreate, &out.AllowInstancePoolCreate
		*out = new(bool)
		**out = **in
	}
	if in.ApplicationID != nil {
		in, out := &in.ApplicationID, &out.ApplicationID
		*out = new(string)
		**out = **in
	}
	if in.DatabricksSQLAccess != nil {
		in, out := &in.DatabricksSQLAccess, &out.DatabricksSQLAccess
		*out = new(bool)
		**out = **in
	}
	if in.DisableAsUserDeletion != nil {
		in, out := &in.DisableAsUserDeletion, &out.DisableAsUserDeletion
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteHomeDir != nil {
		in, out := &in.ForceDeleteHomeDir, &out.ForceDeleteHomeDir
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteRepos != nil {
		in, out := &in.ForceDeleteRepos, &out.ForceDeleteRepos
		*out = new(bool)
		**out = **in
	}
	if in.Home != nil {
		in, out := &in.Home, &out.Home
		*out = new(string)
		**out = **in
	}
	if in.Repos != nil {
		in, out := &in.Repos, &out.Repos
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceAccess != nil {
		in, out := &in.WorkspaceAccess, &out.WorkspaceAccess
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalInitParameters.
func (in *ServicePrincipalInitParameters) DeepCopy() *ServicePrincipalInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalList) DeepCopyInto(out *ServicePrincipalList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServicePrincipal, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalList.
func (in *ServicePrincipalList) DeepCopy() *ServicePrincipalList {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServicePrincipalList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalObservation) DeepCopyInto(out *ServicePrincipalObservation) {
	*out = *in
	if in.ACLPrincipalID != nil {
		in, out := &in.ACLPrincipalID, &out.ACLPrincipalID
		*out = new(string)
		**out = **in
	}
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.AllowClusterCreate != nil {
		in, out := &in.AllowClusterCreate, &out.AllowClusterCreate
		*out = new(bool)
		**out = **in
	}
	if in.AllowInstancePoolCreate != nil {
		in, out := &in.AllowInstancePoolCreate, &out.AllowInstancePoolCreate
		*out = new(bool)
		**out = **in
	}
	if in.ApplicationID != nil {
		in, out := &in.ApplicationID, &out.ApplicationID
		*out = new(string)
		**out = **in
	}
	if in.DatabricksSQLAccess != nil {
		in, out := &in.DatabricksSQLAccess, &out.DatabricksSQLAccess
		*out = new(bool)
		**out = **in
	}
	if in.DisableAsUserDeletion != nil {
		in, out := &in.DisableAsUserDeletion, &out.DisableAsUserDeletion
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteHomeDir != nil {
		in, out := &in.ForceDeleteHomeDir, &out.ForceDeleteHomeDir
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteRepos != nil {
		in, out := &in.ForceDeleteRepos, &out.ForceDeleteRepos
		*out = new(bool)
		**out = **in
	}
	if in.Home != nil {
		in, out := &in.Home, &out.Home
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Repos != nil {
		in, out := &in.Repos, &out.Repos
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceAccess != nil {
		in, out := &in.WorkspaceAccess, &out.WorkspaceAccess
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalObservation.
func (in *ServicePrincipalObservation) DeepCopy() *ServicePrincipalObservation {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalParameters) DeepCopyInto(out *ServicePrincipalParameters) {
	*out = *in
	if in.ACLPrincipalID != nil {
		in, out := &in.ACLPrincipalID, &out.ACLPrincipalID
		*out = new(string)
		**out = **in
	}
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.AllowClusterCreate != nil {
		in, out := &in.AllowClusterCreate, &out.AllowClusterCreate
		*out = new(bool)
		**out = **in
	}
	if in.AllowInstancePoolCreate != nil {
		in, out := &in.AllowInstancePoolCreate, &out.AllowInstancePoolCreate
		*out = new(bool)
		**out = **in
	}
	if in.ApplicationID != nil {
		in, out := &in.ApplicationID, &out.ApplicationID
		*out = new(string)
		**out = **in
	}
	if in.DatabricksSQLAccess != nil {
		in, out := &in.DatabricksSQLAccess, &out.DatabricksSQLAccess
		*out = new(bool)
		**out = **in
	}
	if in.DisableAsUserDeletion != nil {
		in, out := &in.DisableAsUserDeletion, &out.DisableAsUserDeletion
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteHomeDir != nil {
		in, out := &in.ForceDeleteHomeDir, &out.ForceDeleteHomeDir
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteRepos != nil {
		in, out := &in.ForceDeleteRepos, &out.ForceDeleteRepos
		*out = new(bool)
		**out = **in
	}
	if in.Home != nil {
		in, out := &in.Home, &out.Home
		*out = new(string)
		**out = **in
	}
	if in.Repos != nil {
		in, out := &in.Repos, &out.Repos
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceAccess != nil {
		in, out := &in.WorkspaceAccess, &out.WorkspaceAccess
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalParameters.
func (in *ServicePrincipalParameters) DeepCopy() *ServicePrincipalParameters {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalRole) DeepCopyInto(out *ServicePrincipalRole) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalRole.
func (in *ServicePrincipalRole) DeepCopy() *ServicePrincipalRole {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalRole)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServicePrincipalRole) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalRoleInitParameters) DeepCopyInto(out *ServicePrincipalRoleInitParameters) {
	*out = *in
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalID != nil {
		in, out := &in.ServicePrincipalID, &out.ServicePrincipalID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalRoleInitParameters.
func (in *ServicePrincipalRoleInitParameters) DeepCopy() *ServicePrincipalRoleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalRoleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalRoleList) DeepCopyInto(out *ServicePrincipalRoleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServicePrincipalRole, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalRoleList.
func (in *ServicePrincipalRoleList) DeepCopy() *ServicePrincipalRoleList {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalRoleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServicePrincipalRoleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalRoleObservation) DeepCopyInto(out *ServicePrincipalRoleObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalID != nil {
		in, out := &in.ServicePrincipalID, &out.ServicePrincipalID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalRoleObservation.
func (in *ServicePrincipalRoleObservation) DeepCopy() *ServicePrincipalRoleObservation {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalRoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalRoleParameters) DeepCopyInto(out *ServicePrincipalRoleParameters) {
	*out = *in
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalID != nil {
		in, out := &in.ServicePrincipalID, &out.ServicePrincipalID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalRoleParameters.
func (in *ServicePrincipalRoleParameters) DeepCopy() *ServicePrincipalRoleParameters {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalRoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalRoleSpec) DeepCopyInto(out *ServicePrincipalRoleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalRoleSpec.
func (in *ServicePrincipalRoleSpec) DeepCopy() *ServicePrincipalRoleSpec {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalRoleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalRoleStatus) DeepCopyInto(out *ServicePrincipalRoleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalRoleStatus.
func (in *ServicePrincipalRoleStatus) DeepCopy() *ServicePrincipalRoleStatus {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalRoleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalSpec) DeepCopyInto(out *ServicePrincipalSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalSpec.
func (in *ServicePrincipalSpec) DeepCopy() *ServicePrincipalSpec {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalStatus) DeepCopyInto(out *ServicePrincipalStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalStatus.
func (in *ServicePrincipalStatus) DeepCopy() *ServicePrincipalStatus {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkJarTaskInitParameters) DeepCopyInto(out *SparkJarTaskInitParameters) {
	*out = *in
	if in.JarURI != nil {
		in, out := &in.JarURI, &out.JarURI
		*out = new(string)
		**out = **in
	}
	if in.MainClassName != nil {
		in, out := &in.MainClassName, &out.MainClassName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkJarTaskInitParameters.
func (in *SparkJarTaskInitParameters) DeepCopy() *SparkJarTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkJarTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkJarTaskObservation) DeepCopyInto(out *SparkJarTaskObservation) {
	*out = *in
	if in.JarURI != nil {
		in, out := &in.JarURI, &out.JarURI
		*out = new(string)
		**out = **in
	}
	if in.MainClassName != nil {
		in, out := &in.MainClassName, &out.MainClassName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkJarTaskObservation.
func (in *SparkJarTaskObservation) DeepCopy() *SparkJarTaskObservation {
	if in == nil {
		return nil
	}
	out := new(SparkJarTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkJarTaskParameters) DeepCopyInto(out *SparkJarTaskParameters) {
	*out = *in
	if in.JarURI != nil {
		in, out := &in.JarURI, &out.JarURI
		*out = new(string)
		**out = **in
	}
	if in.MainClassName != nil {
		in, out := &in.MainClassName, &out.MainClassName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkJarTaskParameters.
func (in *SparkJarTaskParameters) DeepCopy() *SparkJarTaskParameters {
	if in == nil {
		return nil
	}
	out := new(SparkJarTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkPythonTaskInitParameters) DeepCopyInto(out *SparkPythonTaskInitParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PythonFile != nil {
		in, out := &in.PythonFile, &out.PythonFile
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkPythonTaskInitParameters.
func (in *SparkPythonTaskInitParameters) DeepCopy() *SparkPythonTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkPythonTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkPythonTaskObservation) DeepCopyInto(out *SparkPythonTaskObservation) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PythonFile != nil {
		in, out := &in.PythonFile, &out.PythonFile
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkPythonTaskObservation.
func (in *SparkPythonTaskObservation) DeepCopy() *SparkPythonTaskObservation {
	if in == nil {
		return nil
	}
	out := new(SparkPythonTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkPythonTaskParameters) DeepCopyInto(out *SparkPythonTaskParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PythonFile != nil {
		in, out := &in.PythonFile, &out.PythonFile
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkPythonTaskParameters.
func (in *SparkPythonTaskParameters) DeepCopy() *SparkPythonTaskParameters {
	if in == nil {
		return nil
	}
	out := new(SparkPythonTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkSubmitTaskInitParameters) DeepCopyInto(out *SparkSubmitTaskInitParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkSubmitTaskInitParameters.
func (in *SparkSubmitTaskInitParameters) DeepCopy() *SparkSubmitTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkSubmitTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkSubmitTaskObservation) DeepCopyInto(out *SparkSubmitTaskObservation) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkSubmitTaskObservation.
func (in *SparkSubmitTaskObservation) DeepCopy() *SparkSubmitTaskObservation {
	if in == nil {
		return nil
	}
	out := new(SparkSubmitTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkSubmitTaskParameters) DeepCopyInto(out *SparkSubmitTaskParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkSubmitTaskParameters.
func (in *SparkSubmitTaskParameters) DeepCopy() *SparkSubmitTaskParameters {
	if in == nil {
		return nil
	}
	out := new(SparkSubmitTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecInitParameters) DeepCopyInto(out *SpecInitParameters) {
	*out = *in
	if in.Client != nil {
		in, out := &in.Client, &out.Client
		*out = new(string)
		**out = **in
	}
	if in.Dependencies != nil {
		in, out := &in.Dependencies, &out.Dependencies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecInitParameters.
func (in *SpecInitParameters) DeepCopy() *SpecInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpecInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecObservation) DeepCopyInto(out *SpecObservation) {
	*out = *in
	if in.Client != nil {
		in, out := &in.Client, &out.Client
		*out = new(string)
		**out = **in
	}
	if in.Dependencies != nil {
		in, out := &in.Dependencies, &out.Dependencies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecObservation.
func (in *SpecObservation) DeepCopy() *SpecObservation {
	if in == nil {
		return nil
	}
	out := new(SpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecParameters) DeepCopyInto(out *SpecParameters) {
	*out = *in
	if in.Client != nil {
		in, out := &in.Client, &out.Client
		*out = new(string)
		**out = **in
	}
	if in.Dependencies != nil {
		in, out := &in.Dependencies, &out.Dependencies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecParameters.
func (in *SpecParameters) DeepCopy() *SpecParameters {
	if in == nil {
		return nil
	}
	out := new(SpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SseEncryptionDetailsInitParameters) DeepCopyInto(out *SseEncryptionDetailsInitParameters) {
	*out = *in
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(string)
		**out = **in
	}
	if in.AwsKMSKeyArn != nil {
		in, out := &in.AwsKMSKeyArn, &out.AwsKMSKeyArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SseEncryptionDetailsInitParameters.
func (in *SseEncryptionDetailsInitParameters) DeepCopy() *SseEncryptionDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SseEncryptionDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SseEncryptionDetailsObservation) DeepCopyInto(out *SseEncryptionDetailsObservation) {
	*out = *in
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(string)
		**out = **in
	}
	if in.AwsKMSKeyArn != nil {
		in, out := &in.AwsKMSKeyArn, &out.AwsKMSKeyArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SseEncryptionDetailsObservation.
func (in *SseEncryptionDetailsObservation) DeepCopy() *SseEncryptionDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(SseEncryptionDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SseEncryptionDetailsParameters) DeepCopyInto(out *SseEncryptionDetailsParameters) {
	*out = *in
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(string)
		**out = **in
	}
	if in.AwsKMSKeyArn != nil {
		in, out := &in.AwsKMSKeyArn, &out.AwsKMSKeyArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SseEncryptionDetailsParameters.
func (in *SseEncryptionDetailsParameters) DeepCopy() *SseEncryptionDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(SseEncryptionDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionsInitParameters) DeepCopyInto(out *SubscriptionsInitParameters) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionsInitParameters.
func (in *SubscriptionsInitParameters) DeepCopy() *SubscriptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubscriptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionsObservation) DeepCopyInto(out *SubscriptionsObservation) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionsObservation.
func (in *SubscriptionsObservation) DeepCopy() *SubscriptionsObservation {
	if in == nil {
		return nil
	}
	out := new(SubscriptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionsParameters) DeepCopyInto(out *SubscriptionsParameters) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionsParameters.
func (in *SubscriptionsParameters) DeepCopy() *SubscriptionsParameters {
	if in == nil {
		return nil
	}
	out := new(SubscriptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableConfigurationInitParameters) DeepCopyInto(out *TableConfigurationInitParameters) {
	*out = *in
	if in.PrimaryKeys != nil {
		in, out := &in.PrimaryKeys, &out.PrimaryKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SalesforceIncludeFormulaFields != nil {
		in, out := &in.SalesforceIncludeFormulaFields, &out.SalesforceIncludeFormulaFields
		*out = new(bool)
		**out = **in
	}
	if in.ScdType != nil {
		in, out := &in.ScdType, &out.ScdType
		*out = new(string)
		**out = **in
	}
	if in.SequenceBy != nil {
		in, out := &in.SequenceBy, &out.SequenceBy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableConfigurationInitParameters.
func (in *TableConfigurationInitParameters) DeepCopy() *TableConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(TableConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableConfigurationObservation) DeepCopyInto(out *TableConfigurationObservation) {
	*out = *in
	if in.PrimaryKeys != nil {
		in, out := &in.PrimaryKeys, &out.PrimaryKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SalesforceIncludeFormulaFields != nil {
		in, out := &in.SalesforceIncludeFormulaFields, &out.SalesforceIncludeFormulaFields
		*out = new(bool)
		**out = **in
	}
	if in.ScdType != nil {
		in, out := &in.ScdType, &out.ScdType
		*out = new(string)
		**out = **in
	}
	if in.SequenceBy != nil {
		in, out := &in.SequenceBy, &out.SequenceBy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableConfigurationObservation.
func (in *TableConfigurationObservation) DeepCopy() *TableConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(TableConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableConfigurationParameters) DeepCopyInto(out *TableConfigurationParameters) {
	*out = *in
	if in.PrimaryKeys != nil {
		in, out := &in.PrimaryKeys, &out.PrimaryKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SalesforceIncludeFormulaFields != nil {
		in, out := &in.SalesforceIncludeFormulaFields, &out.SalesforceIncludeFormulaFields
		*out = new(bool)
		**out = **in
	}
	if in.ScdType != nil {
		in, out := &in.ScdType, &out.ScdType
		*out = new(string)
		**out = **in
	}
	if in.SequenceBy != nil {
		in, out := &in.SequenceBy, &out.SequenceBy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableConfigurationParameters.
func (in *TableConfigurationParameters) DeepCopy() *TableConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(TableConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableInitParameters) DeepCopyInto(out *TableInitParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.MinTimeBetweenTriggersSeconds != nil {
		in, out := &in.MinTimeBetweenTriggersSeconds, &out.MinTimeBetweenTriggersSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TableNames != nil {
		in, out := &in.TableNames, &out.TableNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WaitAfterLastChangeSeconds != nil {
		in, out := &in.WaitAfterLastChangeSeconds, &out.WaitAfterLastChangeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableInitParameters.
func (in *TableInitParameters) DeepCopy() *TableInitParameters {
	if in == nil {
		return nil
	}
	out := new(TableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableObservation) DeepCopyInto(out *TableObservation) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.MinTimeBetweenTriggersSeconds != nil {
		in, out := &in.MinTimeBetweenTriggersSeconds, &out.MinTimeBetweenTriggersSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TableNames != nil {
		in, out := &in.TableNames, &out.TableNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WaitAfterLastChangeSeconds != nil {
		in, out := &in.WaitAfterLastChangeSeconds, &out.WaitAfterLastChangeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableObservation.
func (in *TableObservation) DeepCopy() *TableObservation {
	if in == nil {
		return nil
	}
	out := new(TableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableParameters) DeepCopyInto(out *TableParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.MinTimeBetweenTriggersSeconds != nil {
		in, out := &in.MinTimeBetweenTriggersSeconds, &out.MinTimeBetweenTriggersSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TableNames != nil {
		in, out := &in.TableNames, &out.TableNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WaitAfterLastChangeSeconds != nil {
		in, out := &in.WaitAfterLastChangeSeconds, &out.WaitAfterLastChangeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableParameters.
func (in *TableParameters) DeepCopy() *TableParameters {
	if in == nil {
		return nil
	}
	out := new(TableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableTableConfigurationInitParameters) DeepCopyInto(out *TableTableConfigurationInitParameters) {
	*out = *in
	if in.PrimaryKeys != nil {
		in, out := &in.PrimaryKeys, &out.PrimaryKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SalesforceIncludeFormulaFields != nil {
		in, out := &in.SalesforceIncludeFormulaFields, &out.SalesforceIncludeFormulaFields
		*out = new(bool)
		**out = **in
	}
	if in.ScdType != nil {
		in, out := &in.ScdType, &out.ScdType
		*out = new(string)
		**out = **in
	}
	if in.SequenceBy != nil {
		in, out := &in.SequenceBy, &out.SequenceBy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableTableConfigurationInitParameters.
func (in *TableTableConfigurationInitParameters) DeepCopy() *TableTableConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(TableTableConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableTableConfigurationObservation) DeepCopyInto(out *TableTableConfigurationObservation) {
	*out = *in
	if in.PrimaryKeys != nil {
		in, out := &in.PrimaryKeys, &out.PrimaryKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SalesforceIncludeFormulaFields != nil {
		in, out := &in.SalesforceIncludeFormulaFields, &out.SalesforceIncludeFormulaFields
		*out = new(bool)
		**out = **in
	}
	if in.ScdType != nil {
		in, out := &in.ScdType, &out.ScdType
		*out = new(string)
		**out = **in
	}
	if in.SequenceBy != nil {
		in, out := &in.SequenceBy, &out.SequenceBy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableTableConfigurationObservation.
func (in *TableTableConfigurationObservation) DeepCopy() *TableTableConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(TableTableConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableTableConfigurationParameters) DeepCopyInto(out *TableTableConfigurationParameters) {
	*out = *in
	if in.PrimaryKeys != nil {
		in, out := &in.PrimaryKeys, &out.PrimaryKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SalesforceIncludeFormulaFields != nil {
		in, out := &in.SalesforceIncludeFormulaFields, &out.SalesforceIncludeFormulaFields
		*out = new(bool)
		**out = **in
	}
	if in.ScdType != nil {
		in, out := &in.ScdType, &out.ScdType
		*out = new(string)
		**out = **in
	}
	if in.SequenceBy != nil {
		in, out := &in.SequenceBy, &out.SequenceBy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableTableConfigurationParameters.
func (in *TableTableConfigurationParameters) DeepCopy() *TableTableConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(TableTableConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableUpdateInitParameters) DeepCopyInto(out *TableUpdateInitParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.MinTimeBetweenTriggersSeconds != nil {
		in, out := &in.MinTimeBetweenTriggersSeconds, &out.MinTimeBetweenTriggersSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TableNames != nil {
		in, out := &in.TableNames, &out.TableNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WaitAfterLastChangeSeconds != nil {
		in, out := &in.WaitAfterLastChangeSeconds, &out.WaitAfterLastChangeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableUpdateInitParameters.
func (in *TableUpdateInitParameters) DeepCopy() *TableUpdateInitParameters {
	if in == nil {
		return nil
	}
	out := new(TableUpdateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableUpdateObservation) DeepCopyInto(out *TableUpdateObservation) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.MinTimeBetweenTriggersSeconds != nil {
		in, out := &in.MinTimeBetweenTriggersSeconds, &out.MinTimeBetweenTriggersSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TableNames != nil {
		in, out := &in.TableNames, &out.TableNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WaitAfterLastChangeSeconds != nil {
		in, out := &in.WaitAfterLastChangeSeconds, &out.WaitAfterLastChangeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableUpdateObservation.
func (in *TableUpdateObservation) DeepCopy() *TableUpdateObservation {
	if in == nil {
		return nil
	}
	out := new(TableUpdateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableUpdateParameters) DeepCopyInto(out *TableUpdateParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.MinTimeBetweenTriggersSeconds != nil {
		in, out := &in.MinTimeBetweenTriggersSeconds, &out.MinTimeBetweenTriggersSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TableNames != nil {
		in, out := &in.TableNames, &out.TableNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WaitAfterLastChangeSeconds != nil {
		in, out := &in.WaitAfterLastChangeSeconds, &out.WaitAfterLastChangeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableUpdateParameters.
func (in *TableUpdateParameters) DeepCopy() *TableUpdateParameters {
	if in == nil {
		return nil
	}
	out := new(TableUpdateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagsInitParameters) DeepCopyInto(out *TagsInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]TagsValueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagsInitParameters.
func (in *TagsInitParameters) DeepCopy() *TagsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TagsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagsObservation) DeepCopyInto(out *TagsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]TagsValueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagsObservation.
func (in *TagsObservation) DeepCopy() *TagsObservation {
	if in == nil {
		return nil
	}
	out := new(TagsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagsParameters) DeepCopyInto(out *TagsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]TagsValueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagsParameters.
func (in *TagsParameters) DeepCopy() *TagsParameters {
	if in == nil {
		return nil
	}
	out := new(TagsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagsValueInitParameters) DeepCopyInto(out *TagsValueInitParameters) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagsValueInitParameters.
func (in *TagsValueInitParameters) DeepCopy() *TagsValueInitParameters {
	if in == nil {
		return nil
	}
	out := new(TagsValueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagsValueObservation) DeepCopyInto(out *TagsValueObservation) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagsValueObservation.
func (in *TagsValueObservation) DeepCopy() *TagsValueObservation {
	if in == nil {
		return nil
	}
	out := new(TagsValueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagsValueParameters) DeepCopyInto(out *TagsValueParameters) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagsValueParameters.
func (in *TagsValueParameters) DeepCopy() *TagsValueParameters {
	if in == nil {
		return nil
	}
	out := new(TagsValueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskConditionTaskInitParameters) DeepCopyInto(out *TaskConditionTaskInitParameters) {
	*out = *in
	if in.Left != nil {
		in, out := &in.Left, &out.Left
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Right != nil {
		in, out := &in.Right, &out.Right
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskConditionTaskInitParameters.
func (in *TaskConditionTaskInitParameters) DeepCopy() *TaskConditionTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskConditionTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskConditionTaskObservation) DeepCopyInto(out *TaskConditionTaskObservation) {
	*out = *in
	if in.Left != nil {
		in, out := &in.Left, &out.Left
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Right != nil {
		in, out := &in.Right, &out.Right
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskConditionTaskObservation.
func (in *TaskConditionTaskObservation) DeepCopy() *TaskConditionTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskConditionTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskConditionTaskParameters) DeepCopyInto(out *TaskConditionTaskParameters) {
	*out = *in
	if in.Left != nil {
		in, out := &in.Left, &out.Left
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Right != nil {
		in, out := &in.Right, &out.Right
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskConditionTaskParameters.
func (in *TaskConditionTaskParameters) DeepCopy() *TaskConditionTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskConditionTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDbtTaskInitParameters) DeepCopyInto(out *TaskDbtTaskInitParameters) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProfilesDirectory != nil {
		in, out := &in.ProfilesDirectory, &out.ProfilesDirectory
		*out = new(string)
		**out = **in
	}
	if in.ProjectDirectory != nil {
		in, out := &in.ProjectDirectory, &out.ProjectDirectory
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDbtTaskInitParameters.
func (in *TaskDbtTaskInitParameters) DeepCopy() *TaskDbtTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskDbtTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDbtTaskObservation) DeepCopyInto(out *TaskDbtTaskObservation) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProfilesDirectory != nil {
		in, out := &in.ProfilesDirectory, &out.ProfilesDirectory
		*out = new(string)
		**out = **in
	}
	if in.ProjectDirectory != nil {
		in, out := &in.ProjectDirectory, &out.ProjectDirectory
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDbtTaskObservation.
func (in *TaskDbtTaskObservation) DeepCopy() *TaskDbtTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskDbtTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDbtTaskParameters) DeepCopyInto(out *TaskDbtTaskParameters) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProfilesDirectory != nil {
		in, out := &in.ProfilesDirectory, &out.ProfilesDirectory
		*out = new(string)
		**out = **in
	}
	if in.ProjectDirectory != nil {
		in, out := &in.ProjectDirectory, &out.ProjectDirectory
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDbtTaskParameters.
func (in *TaskDbtTaskParameters) DeepCopy() *TaskDbtTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskDbtTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDependsOnInitParameters) DeepCopyInto(out *TaskDependsOnInitParameters) {
	*out = *in
	if in.Outcome != nil {
		in, out := &in.Outcome, &out.Outcome
		*out = new(string)
		**out = **in
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDependsOnInitParameters.
func (in *TaskDependsOnInitParameters) DeepCopy() *TaskDependsOnInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskDependsOnInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDependsOnObservation) DeepCopyInto(out *TaskDependsOnObservation) {
	*out = *in
	if in.Outcome != nil {
		in, out := &in.Outcome, &out.Outcome
		*out = new(string)
		**out = **in
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDependsOnObservation.
func (in *TaskDependsOnObservation) DeepCopy() *TaskDependsOnObservation {
	if in == nil {
		return nil
	}
	out := new(TaskDependsOnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDependsOnParameters) DeepCopyInto(out *TaskDependsOnParameters) {
	*out = *in
	if in.Outcome != nil {
		in, out := &in.Outcome, &out.Outcome
		*out = new(string)
		**out = **in
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDependsOnParameters.
func (in *TaskDependsOnParameters) DeepCopy() *TaskDependsOnParameters {
	if in == nil {
		return nil
	}
	out := new(TaskDependsOnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskEmailNotificationsInitParameters) DeepCopyInto(out *TaskEmailNotificationsInitParameters) {
	*out = *in
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskEmailNotificationsInitParameters.
func (in *TaskEmailNotificationsInitParameters) DeepCopy() *TaskEmailNotificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskEmailNotificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskEmailNotificationsObservation) DeepCopyInto(out *TaskEmailNotificationsObservation) {
	*out = *in
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskEmailNotificationsObservation.
func (in *TaskEmailNotificationsObservation) DeepCopy() *TaskEmailNotificationsObservation {
	if in == nil {
		return nil
	}
	out := new(TaskEmailNotificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskEmailNotificationsParameters) DeepCopyInto(out *TaskEmailNotificationsParameters) {
	*out = *in
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskEmailNotificationsParameters.
func (in *TaskEmailNotificationsParameters) DeepCopy() *TaskEmailNotificationsParameters {
	if in == nil {
		return nil
	}
	out := new(TaskEmailNotificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskHealthInitParameters) DeepCopyInto(out *TaskHealthInitParameters) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]HealthRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskHealthInitParameters.
func (in *TaskHealthInitParameters) DeepCopy() *TaskHealthInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskHealthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskHealthObservation) DeepCopyInto(out *TaskHealthObservation) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]HealthRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskHealthObservation.
func (in *TaskHealthObservation) DeepCopy() *TaskHealthObservation {
	if in == nil {
		return nil
	}
	out := new(TaskHealthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskHealthParameters) DeepCopyInto(out *TaskHealthParameters) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]HealthRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskHealthParameters.
func (in *TaskHealthParameters) DeepCopy() *TaskHealthParameters {
	if in == nil {
		return nil
	}
	out := new(TaskHealthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskHealthRulesInitParameters) DeepCopyInto(out *TaskHealthRulesInitParameters) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskHealthRulesInitParameters.
func (in *TaskHealthRulesInitParameters) DeepCopy() *TaskHealthRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskHealthRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskHealthRulesObservation) DeepCopyInto(out *TaskHealthRulesObservation) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskHealthRulesObservation.
func (in *TaskHealthRulesObservation) DeepCopy() *TaskHealthRulesObservation {
	if in == nil {
		return nil
	}
	out := new(TaskHealthRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskHealthRulesParameters) DeepCopyInto(out *TaskHealthRulesParameters) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskHealthRulesParameters.
func (in *TaskHealthRulesParameters) DeepCopy() *TaskHealthRulesParameters {
	if in == nil {
		return nil
	}
	out := new(TaskHealthRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskInitParameters) DeepCopyInto(out *TaskInitParameters) {
	*out = *in
	if in.ConditionTask != nil {
		in, out := &in.ConditionTask, &out.ConditionTask
		*out = make([]ConditionTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DbtTask != nil {
		in, out := &in.DbtTask, &out.DbtTask
		*out = make([]TaskDbtTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DependsOn != nil {
		in, out := &in.DependsOn, &out.DependsOn
		*out = make([]DependsOnInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableAutoOptimization != nil {
		in, out := &in.DisableAutoOptimization, &out.DisableAutoOptimization
		*out = new(bool)
		**out = **in
	}
	if in.EmailNotifications != nil {
		in, out := &in.EmailNotifications, &out.EmailNotifications
		*out = make([]TaskEmailNotificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvironmentKey != nil {
		in, out := &in.EnvironmentKey, &out.EnvironmentKey
		*out = new(string)
		**out = **in
	}
	if in.ExistingClusterID != nil {
		in, out := &in.ExistingClusterID, &out.ExistingClusterID
		*out = new(string)
		**out = **in
	}
	if in.ForEachTask != nil {
		in, out := &in.ForEachTask, &out.ForEachTask
		*out = make([]ForEachTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]JobTaskHealthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobClusterKey != nil {
		in, out := &in.JobClusterKey, &out.JobClusterKey
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]JobTaskLibraryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MinRetryIntervalMillis != nil {
		in, out := &in.MinRetryIntervalMillis, &out.MinRetryIntervalMillis
		*out = new(float64)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]JobTaskNewClusterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotebookTask != nil {
		in, out := &in.NotebookTask, &out.NotebookTask
		*out = make([]JobTaskNotebookTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]JobTaskNotificationSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PipelineTask != nil {
		in, out := &in.PipelineTask, &out.PipelineTask
		*out = make([]JobTaskPipelineTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonWheelTask != nil {
		in, out := &in.PythonWheelTask, &out.PythonWheelTask
		*out = make([]JobTaskPythonWheelTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryOnTimeout != nil {
		in, out := &in.RetryOnTimeout, &out.RetryOnTimeout
		*out = new(bool)
		**out = **in
	}
	if in.RunIf != nil {
		in, out := &in.RunIf, &out.RunIf
		*out = new(string)
		**out = **in
	}
	if in.RunJobTask != nil {
		in, out := &in.RunJobTask, &out.RunJobTask
		*out = make([]JobTaskRunJobTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SQLTask != nil {
		in, out := &in.SQLTask, &out.SQLTask
		*out = make([]TaskSQLTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJarTask != nil {
		in, out := &in.SparkJarTask, &out.SparkJarTask
		*out = make([]JobTaskSparkJarTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkPythonTask != nil {
		in, out := &in.SparkPythonTask, &out.SparkPythonTask
		*out = make([]JobTaskSparkPythonTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSubmitTask != nil {
		in, out := &in.SparkSubmitTask, &out.SparkSubmitTask
		*out = make([]JobTaskSparkSubmitTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.WebhookNotifications != nil {
		in, out := &in.WebhookNotifications, &out.WebhookNotifications
		*out = make([]TaskWebhookNotificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskInitParameters.
func (in *TaskInitParameters) DeepCopy() *TaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryCranInitParameters) DeepCopyInto(out *TaskLibraryCranInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryCranInitParameters.
func (in *TaskLibraryCranInitParameters) DeepCopy() *TaskLibraryCranInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryCranInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryCranObservation) DeepCopyInto(out *TaskLibraryCranObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryCranObservation.
func (in *TaskLibraryCranObservation) DeepCopy() *TaskLibraryCranObservation {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryCranObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryCranParameters) DeepCopyInto(out *TaskLibraryCranParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryCranParameters.
func (in *TaskLibraryCranParameters) DeepCopy() *TaskLibraryCranParameters {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryCranParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryInitParameters) DeepCopyInto(out *TaskLibraryInitParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]TaskLibraryCranInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]TaskLibraryMavenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]TaskLibraryPypiInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryInitParameters.
func (in *TaskLibraryInitParameters) DeepCopy() *TaskLibraryInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryMavenInitParameters) DeepCopyInto(out *TaskLibraryMavenInitParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryMavenInitParameters.
func (in *TaskLibraryMavenInitParameters) DeepCopy() *TaskLibraryMavenInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryMavenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryMavenObservation) DeepCopyInto(out *TaskLibraryMavenObservation) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryMavenObservation.
func (in *TaskLibraryMavenObservation) DeepCopy() *TaskLibraryMavenObservation {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryMavenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryMavenParameters) DeepCopyInto(out *TaskLibraryMavenParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryMavenParameters.
func (in *TaskLibraryMavenParameters) DeepCopy() *TaskLibraryMavenParameters {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryMavenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryObservation) DeepCopyInto(out *TaskLibraryObservation) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]TaskLibraryCranObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]TaskLibraryMavenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]TaskLibraryPypiObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryObservation.
func (in *TaskLibraryObservation) DeepCopy() *TaskLibraryObservation {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryParameters) DeepCopyInto(out *TaskLibraryParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]TaskLibraryCranParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]TaskLibraryMavenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]TaskLibraryPypiParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryParameters.
func (in *TaskLibraryParameters) DeepCopy() *TaskLibraryParameters {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryPypiInitParameters) DeepCopyInto(out *TaskLibraryPypiInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryPypiInitParameters.
func (in *TaskLibraryPypiInitParameters) DeepCopy() *TaskLibraryPypiInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryPypiInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryPypiObservation) DeepCopyInto(out *TaskLibraryPypiObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryPypiObservation.
func (in *TaskLibraryPypiObservation) DeepCopy() *TaskLibraryPypiObservation {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryPypiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryPypiParameters) DeepCopyInto(out *TaskLibraryPypiParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryPypiParameters.
func (in *TaskLibraryPypiParameters) DeepCopy() *TaskLibraryPypiParameters {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryPypiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAutoscaleInitParameters) DeepCopyInto(out *TaskNewClusterAutoscaleInitParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAutoscaleInitParameters.
func (in *TaskNewClusterAutoscaleInitParameters) DeepCopy() *TaskNewClusterAutoscaleInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAutoscaleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAutoscaleObservation) DeepCopyInto(out *TaskNewClusterAutoscaleObservation) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAutoscaleObservation.
func (in *TaskNewClusterAutoscaleObservation) DeepCopy() *TaskNewClusterAutoscaleObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAutoscaleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAutoscaleParameters) DeepCopyInto(out *TaskNewClusterAutoscaleParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAutoscaleParameters.
func (in *TaskNewClusterAutoscaleParameters) DeepCopy() *TaskNewClusterAutoscaleParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAutoscaleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAwsAttributesInitParameters) DeepCopyInto(out *TaskNewClusterAwsAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAwsAttributesInitParameters.
func (in *TaskNewClusterAwsAttributesInitParameters) DeepCopy() *TaskNewClusterAwsAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAwsAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAwsAttributesObservation) DeepCopyInto(out *TaskNewClusterAwsAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAwsAttributesObservation.
func (in *TaskNewClusterAwsAttributesObservation) DeepCopy() *TaskNewClusterAwsAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAwsAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAwsAttributesParameters) DeepCopyInto(out *TaskNewClusterAwsAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAwsAttributesParameters.
func (in *TaskNewClusterAwsAttributesParameters) DeepCopy() *TaskNewClusterAwsAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAwsAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAzureAttributesInitParameters) DeepCopyInto(out *TaskNewClusterAzureAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]TaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAzureAttributesInitParameters.
func (in *TaskNewClusterAzureAttributesInitParameters) DeepCopy() *TaskNewClusterAzureAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAzureAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters) DeepCopyInto(out *TaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters.
func (in *TaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters) DeepCopy() *TaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAzureAttributesLogAnalyticsInfoObservation) DeepCopyInto(out *TaskNewClusterAzureAttributesLogAnalyticsInfoObservation) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAzureAttributesLogAnalyticsInfoObservation.
func (in *TaskNewClusterAzureAttributesLogAnalyticsInfoObservation) DeepCopy() *TaskNewClusterAzureAttributesLogAnalyticsInfoObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAzureAttributesLogAnalyticsInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAzureAttributesLogAnalyticsInfoParameters) DeepCopyInto(out *TaskNewClusterAzureAttributesLogAnalyticsInfoParameters) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAzureAttributesLogAnalyticsInfoParameters.
func (in *TaskNewClusterAzureAttributesLogAnalyticsInfoParameters) DeepCopy() *TaskNewClusterAzureAttributesLogAnalyticsInfoParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAzureAttributesLogAnalyticsInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAzureAttributesObservation) DeepCopyInto(out *TaskNewClusterAzureAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]TaskNewClusterAzureAttributesLogAnalyticsInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAzureAttributesObservation.
func (in *TaskNewClusterAzureAttributesObservation) DeepCopy() *TaskNewClusterAzureAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAzureAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAzureAttributesParameters) DeepCopyInto(out *TaskNewClusterAzureAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]TaskNewClusterAzureAttributesLogAnalyticsInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAzureAttributesParameters.
func (in *TaskNewClusterAzureAttributesParameters) DeepCopy() *TaskNewClusterAzureAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAzureAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterLogConfDbfsInitParameters) DeepCopyInto(out *TaskNewClusterClusterLogConfDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterLogConfDbfsInitParameters.
func (in *TaskNewClusterClusterLogConfDbfsInitParameters) DeepCopy() *TaskNewClusterClusterLogConfDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterLogConfDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterLogConfDbfsObservation) DeepCopyInto(out *TaskNewClusterClusterLogConfDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterLogConfDbfsObservation.
func (in *TaskNewClusterClusterLogConfDbfsObservation) DeepCopy() *TaskNewClusterClusterLogConfDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterLogConfDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterLogConfDbfsParameters) DeepCopyInto(out *TaskNewClusterClusterLogConfDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterLogConfDbfsParameters.
func (in *TaskNewClusterClusterLogConfDbfsParameters) DeepCopy() *TaskNewClusterClusterLogConfDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterLogConfDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterLogConfInitParameters) DeepCopyInto(out *TaskNewClusterClusterLogConfInitParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]TaskNewClusterClusterLogConfDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]TaskNewClusterClusterLogConfS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterLogConfInitParameters.
func (in *TaskNewClusterClusterLogConfInitParameters) DeepCopy() *TaskNewClusterClusterLogConfInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterLogConfInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterLogConfObservation) DeepCopyInto(out *TaskNewClusterClusterLogConfObservation) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]TaskNewClusterClusterLogConfDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]TaskNewClusterClusterLogConfS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterLogConfObservation.
func (in *TaskNewClusterClusterLogConfObservation) DeepCopy() *TaskNewClusterClusterLogConfObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterLogConfObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterLogConfParameters) DeepCopyInto(out *TaskNewClusterClusterLogConfParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]TaskNewClusterClusterLogConfDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]TaskNewClusterClusterLogConfS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterLogConfParameters.
func (in *TaskNewClusterClusterLogConfParameters) DeepCopy() *TaskNewClusterClusterLogConfParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterLogConfParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterLogConfS3InitParameters) DeepCopyInto(out *TaskNewClusterClusterLogConfS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterLogConfS3InitParameters.
func (in *TaskNewClusterClusterLogConfS3InitParameters) DeepCopy() *TaskNewClusterClusterLogConfS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterLogConfS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterLogConfS3Observation) DeepCopyInto(out *TaskNewClusterClusterLogConfS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterLogConfS3Observation.
func (in *TaskNewClusterClusterLogConfS3Observation) DeepCopy() *TaskNewClusterClusterLogConfS3Observation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterLogConfS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterLogConfS3Parameters) DeepCopyInto(out *TaskNewClusterClusterLogConfS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterLogConfS3Parameters.
func (in *TaskNewClusterClusterLogConfS3Parameters) DeepCopy() *TaskNewClusterClusterLogConfS3Parameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterLogConfS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterMountInfoInitParameters) DeepCopyInto(out *TaskNewClusterClusterMountInfoInitParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]TaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterMountInfoInitParameters.
func (in *TaskNewClusterClusterMountInfoInitParameters) DeepCopy() *TaskNewClusterClusterMountInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterMountInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters) DeepCopyInto(out *TaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters.
func (in *TaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters) DeepCopy() *TaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation) DeepCopyInto(out *TaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation.
func (in *TaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation) DeepCopy() *TaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters) DeepCopyInto(out *TaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters.
func (in *TaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters) DeepCopy() *TaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterMountInfoObservation) DeepCopyInto(out *TaskNewClusterClusterMountInfoObservation) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]TaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterMountInfoObservation.
func (in *TaskNewClusterClusterMountInfoObservation) DeepCopy() *TaskNewClusterClusterMountInfoObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterMountInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterMountInfoParameters) DeepCopyInto(out *TaskNewClusterClusterMountInfoParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]TaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterMountInfoParameters.
func (in *TaskNewClusterClusterMountInfoParameters) DeepCopy() *TaskNewClusterClusterMountInfoParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterMountInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterDockerImageBasicAuthInitParameters) DeepCopyInto(out *TaskNewClusterDockerImageBasicAuthInitParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterDockerImageBasicAuthInitParameters.
func (in *TaskNewClusterDockerImageBasicAuthInitParameters) DeepCopy() *TaskNewClusterDockerImageBasicAuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterDockerImageBasicAuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterDockerImageBasicAuthObservation) DeepCopyInto(out *TaskNewClusterDockerImageBasicAuthObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterDockerImageBasicAuthObservation.
func (in *TaskNewClusterDockerImageBasicAuthObservation) DeepCopy() *TaskNewClusterDockerImageBasicAuthObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterDockerImageBasicAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterDockerImageBasicAuthParameters) DeepCopyInto(out *TaskNewClusterDockerImageBasicAuthParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterDockerImageBasicAuthParameters.
func (in *TaskNewClusterDockerImageBasicAuthParameters) DeepCopy() *TaskNewClusterDockerImageBasicAuthParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterDockerImageBasicAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterDockerImageInitParameters) DeepCopyInto(out *TaskNewClusterDockerImageInitParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]TaskNewClusterDockerImageBasicAuthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterDockerImageInitParameters.
func (in *TaskNewClusterDockerImageInitParameters) DeepCopy() *TaskNewClusterDockerImageInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterDockerImageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterDockerImageObservation) DeepCopyInto(out *TaskNewClusterDockerImageObservation) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]TaskNewClusterDockerImageBasicAuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterDockerImageObservation.
func (in *TaskNewClusterDockerImageObservation) DeepCopy() *TaskNewClusterDockerImageObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterDockerImageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterDockerImageParameters) DeepCopyInto(out *TaskNewClusterDockerImageParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]TaskNewClusterDockerImageBasicAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterDockerImageParameters.
func (in *TaskNewClusterDockerImageParameters) DeepCopy() *TaskNewClusterDockerImageParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterDockerImageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterGCPAttributesInitParameters) DeepCopyInto(out *TaskNewClusterGCPAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterGCPAttributesInitParameters.
func (in *TaskNewClusterGCPAttributesInitParameters) DeepCopy() *TaskNewClusterGCPAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterGCPAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterGCPAttributesObservation) DeepCopyInto(out *TaskNewClusterGCPAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterGCPAttributesObservation.
func (in *TaskNewClusterGCPAttributesObservation) DeepCopy() *TaskNewClusterGCPAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterGCPAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterGCPAttributesParameters) DeepCopyInto(out *TaskNewClusterGCPAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterGCPAttributesParameters.
func (in *TaskNewClusterGCPAttributesParameters) DeepCopy() *TaskNewClusterGCPAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterGCPAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitParameters) DeepCopyInto(out *TaskNewClusterInitParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]TaskNewClusterAutoscaleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]TaskNewClusterAwsAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]TaskNewClusterAzureAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]TaskNewClusterClusterLogConfInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]TaskNewClusterClusterMountInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]TaskNewClusterDockerImageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]TaskNewClusterGCPAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]TaskNewClusterInitScriptsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]TaskNewClusterLibraryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]TaskNewClusterWorkloadTypeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitParameters.
func (in *TaskNewClusterInitParameters) DeepCopy() *TaskNewClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsAbfssInitParameters) DeepCopyInto(out *TaskNewClusterInitScriptsAbfssInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsAbfssInitParameters.
func (in *TaskNewClusterInitScriptsAbfssInitParameters) DeepCopy() *TaskNewClusterInitScriptsAbfssInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsAbfssInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsAbfssObservation) DeepCopyInto(out *TaskNewClusterInitScriptsAbfssObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsAbfssObservation.
func (in *TaskNewClusterInitScriptsAbfssObservation) DeepCopy() *TaskNewClusterInitScriptsAbfssObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsAbfssObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsAbfssParameters) DeepCopyInto(out *TaskNewClusterInitScriptsAbfssParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsAbfssParameters.
func (in *TaskNewClusterInitScriptsAbfssParameters) DeepCopy() *TaskNewClusterInitScriptsAbfssParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsAbfssParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsDbfsInitParameters) DeepCopyInto(out *TaskNewClusterInitScriptsDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsDbfsInitParameters.
func (in *TaskNewClusterInitScriptsDbfsInitParameters) DeepCopy() *TaskNewClusterInitScriptsDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsDbfsObservation) DeepCopyInto(out *TaskNewClusterInitScriptsDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsDbfsObservation.
func (in *TaskNewClusterInitScriptsDbfsObservation) DeepCopy() *TaskNewClusterInitScriptsDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsDbfsParameters) DeepCopyInto(out *TaskNewClusterInitScriptsDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsDbfsParameters.
func (in *TaskNewClusterInitScriptsDbfsParameters) DeepCopy() *TaskNewClusterInitScriptsDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsFileInitParameters) DeepCopyInto(out *TaskNewClusterInitScriptsFileInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsFileInitParameters.
func (in *TaskNewClusterInitScriptsFileInitParameters) DeepCopy() *TaskNewClusterInitScriptsFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsFileObservation) DeepCopyInto(out *TaskNewClusterInitScriptsFileObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsFileObservation.
func (in *TaskNewClusterInitScriptsFileObservation) DeepCopy() *TaskNewClusterInitScriptsFileObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsFileParameters) DeepCopyInto(out *TaskNewClusterInitScriptsFileParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsFileParameters.
func (in *TaskNewClusterInitScriptsFileParameters) DeepCopy() *TaskNewClusterInitScriptsFileParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsGcsInitParameters) DeepCopyInto(out *TaskNewClusterInitScriptsGcsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsGcsInitParameters.
func (in *TaskNewClusterInitScriptsGcsInitParameters) DeepCopy() *TaskNewClusterInitScriptsGcsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsGcsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsGcsObservation) DeepCopyInto(out *TaskNewClusterInitScriptsGcsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsGcsObservation.
func (in *TaskNewClusterInitScriptsGcsObservation) DeepCopy() *TaskNewClusterInitScriptsGcsObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsGcsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsGcsParameters) DeepCopyInto(out *TaskNewClusterInitScriptsGcsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsGcsParameters.
func (in *TaskNewClusterInitScriptsGcsParameters) DeepCopy() *TaskNewClusterInitScriptsGcsParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsGcsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsInitParameters) DeepCopyInto(out *TaskNewClusterInitScriptsInitParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]TaskNewClusterInitScriptsAbfssInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]TaskNewClusterInitScriptsDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]TaskNewClusterInitScriptsFileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]TaskNewClusterInitScriptsGcsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]TaskNewClusterInitScriptsS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]TaskNewClusterInitScriptsVolumesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]TaskNewClusterInitScriptsWorkspaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsInitParameters.
func (in *TaskNewClusterInitScriptsInitParameters) DeepCopy() *TaskNewClusterInitScriptsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsObservation) DeepCopyInto(out *TaskNewClusterInitScriptsObservation) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]TaskNewClusterInitScriptsAbfssObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]TaskNewClusterInitScriptsDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]TaskNewClusterInitScriptsFileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]TaskNewClusterInitScriptsGcsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]TaskNewClusterInitScriptsS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]TaskNewClusterInitScriptsVolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]TaskNewClusterInitScriptsWorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsObservation.
func (in *TaskNewClusterInitScriptsObservation) DeepCopy() *TaskNewClusterInitScriptsObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsParameters) DeepCopyInto(out *TaskNewClusterInitScriptsParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]TaskNewClusterInitScriptsAbfssParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]TaskNewClusterInitScriptsDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]TaskNewClusterInitScriptsFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]TaskNewClusterInitScriptsGcsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]TaskNewClusterInitScriptsS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]TaskNewClusterInitScriptsVolumesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]TaskNewClusterInitScriptsWorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsParameters.
func (in *TaskNewClusterInitScriptsParameters) DeepCopy() *TaskNewClusterInitScriptsParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsS3InitParameters) DeepCopyInto(out *TaskNewClusterInitScriptsS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsS3InitParameters.
func (in *TaskNewClusterInitScriptsS3InitParameters) DeepCopy() *TaskNewClusterInitScriptsS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsS3Observation) DeepCopyInto(out *TaskNewClusterInitScriptsS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsS3Observation.
func (in *TaskNewClusterInitScriptsS3Observation) DeepCopy() *TaskNewClusterInitScriptsS3Observation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsS3Parameters) DeepCopyInto(out *TaskNewClusterInitScriptsS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsS3Parameters.
func (in *TaskNewClusterInitScriptsS3Parameters) DeepCopy() *TaskNewClusterInitScriptsS3Parameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsVolumesInitParameters) DeepCopyInto(out *TaskNewClusterInitScriptsVolumesInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsVolumesInitParameters.
func (in *TaskNewClusterInitScriptsVolumesInitParameters) DeepCopy() *TaskNewClusterInitScriptsVolumesInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsVolumesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsVolumesObservation) DeepCopyInto(out *TaskNewClusterInitScriptsVolumesObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsVolumesObservation.
func (in *TaskNewClusterInitScriptsVolumesObservation) DeepCopy() *TaskNewClusterInitScriptsVolumesObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsVolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsVolumesParameters) DeepCopyInto(out *TaskNewClusterInitScriptsVolumesParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsVolumesParameters.
func (in *TaskNewClusterInitScriptsVolumesParameters) DeepCopy() *TaskNewClusterInitScriptsVolumesParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsVolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsWorkspaceInitParameters) DeepCopyInto(out *TaskNewClusterInitScriptsWorkspaceInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsWorkspaceInitParameters.
func (in *TaskNewClusterInitScriptsWorkspaceInitParameters) DeepCopy() *TaskNewClusterInitScriptsWorkspaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsWorkspaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsWorkspaceObservation) DeepCopyInto(out *TaskNewClusterInitScriptsWorkspaceObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsWorkspaceObservation.
func (in *TaskNewClusterInitScriptsWorkspaceObservation) DeepCopy() *TaskNewClusterInitScriptsWorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsWorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsWorkspaceParameters) DeepCopyInto(out *TaskNewClusterInitScriptsWorkspaceParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsWorkspaceParameters.
func (in *TaskNewClusterInitScriptsWorkspaceParameters) DeepCopy() *TaskNewClusterInitScriptsWorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsWorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterLibraryCranInitParameters) DeepCopyInto(out *TaskNewClusterLibraryCranInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterLibraryCranInitParameters.
func (in *TaskNewClusterLibraryCranInitParameters) DeepCopy() *TaskNewClusterLibraryCranInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterLibraryCranInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterLibraryCranObservation) DeepCopyInto(out *TaskNewClusterLibraryCranObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterLibraryCranObservation.
func (in *TaskNewClusterLibraryCranObservation) DeepCopy() *TaskNewClusterLibraryCranObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterLibraryCranObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterLibraryCranParameters) DeepCopyInto(out *TaskNewClusterLibraryCranParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterLibraryCranParameters.
func (in *TaskNewClusterLibraryCranParameters) DeepCopy() *TaskNewClusterLibraryCranParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterLibraryCranParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterLibraryInitParameters) DeepCopyInto(out *TaskNewClusterLibraryInitParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]TaskNewClusterLibraryCranInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]TaskNewClusterLibraryMavenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]TaskNewClusterLibraryPypiInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterLibraryInitParameters.
func (in *TaskNewClusterLibraryInitParameters) DeepCopy() *TaskNewClusterLibraryInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterLibraryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterLibraryMavenInitParameters) DeepCopyInto(out *TaskNewClusterLibraryMavenInitParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterLibraryMavenInitParameters.
func (in *TaskNewClusterLibraryMavenInitParameters) DeepCopy() *TaskNewClusterLibraryMavenInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterLibraryMavenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterLibraryMavenObservation) DeepCopyInto(out *TaskNewClusterLibraryMavenObservation) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterLibraryMavenObservation.
func (in *TaskNewClusterLibraryMavenObservation) DeepCopy() *TaskNewClusterLibraryMavenObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterLibraryMavenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterLibraryMavenParameters) DeepCopyInto(out *TaskNewClusterLibraryMavenParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterLibraryMavenParameters.
func (in *TaskNewClusterLibraryMavenParameters) DeepCopy() *TaskNewClusterLibraryMavenParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterLibraryMavenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterLibraryObservation) DeepCopyInto(out *TaskNewClusterLibraryObservation) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]TaskNewClusterLibraryCranObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]TaskNewClusterLibraryMavenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]TaskNewClusterLibraryPypiObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterLibraryObservation.
func (in *TaskNewClusterLibraryObservation) DeepCopy() *TaskNewClusterLibraryObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterLibraryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterLibraryParameters) DeepCopyInto(out *TaskNewClusterLibraryParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]TaskNewClusterLibraryCranParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]TaskNewClusterLibraryMavenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]TaskNewClusterLibraryPypiParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterLibraryParameters.
func (in *TaskNewClusterLibraryParameters) DeepCopy() *TaskNewClusterLibraryParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterLibraryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterLibraryPypiInitParameters) DeepCopyInto(out *TaskNewClusterLibraryPypiInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterLibraryPypiInitParameters.
func (in *TaskNewClusterLibraryPypiInitParameters) DeepCopy() *TaskNewClusterLibraryPypiInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterLibraryPypiInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterLibraryPypiObservation) DeepCopyInto(out *TaskNewClusterLibraryPypiObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterLibraryPypiObservation.
func (in *TaskNewClusterLibraryPypiObservation) DeepCopy() *TaskNewClusterLibraryPypiObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterLibraryPypiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterLibraryPypiParameters) DeepCopyInto(out *TaskNewClusterLibraryPypiParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterLibraryPypiParameters.
func (in *TaskNewClusterLibraryPypiParameters) DeepCopy() *TaskNewClusterLibraryPypiParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterLibraryPypiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterObservation) DeepCopyInto(out *TaskNewClusterObservation) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]TaskNewClusterAutoscaleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]TaskNewClusterAwsAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]TaskNewClusterAzureAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]TaskNewClusterClusterLogConfObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]TaskNewClusterClusterMountInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]TaskNewClusterDockerImageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]TaskNewClusterGCPAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]TaskNewClusterInitScriptsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]TaskNewClusterLibraryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]TaskNewClusterWorkloadTypeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterObservation.
func (in *TaskNewClusterObservation) DeepCopy() *TaskNewClusterObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterParameters) DeepCopyInto(out *TaskNewClusterParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]TaskNewClusterAutoscaleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]TaskNewClusterAwsAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]TaskNewClusterAzureAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]TaskNewClusterClusterLogConfParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]TaskNewClusterClusterMountInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]TaskNewClusterDockerImageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]TaskNewClusterGCPAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]TaskNewClusterInitScriptsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]TaskNewClusterLibraryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]TaskNewClusterWorkloadTypeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterParameters.
func (in *TaskNewClusterParameters) DeepCopy() *TaskNewClusterParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterWorkloadTypeClientsInitParameters) DeepCopyInto(out *TaskNewClusterWorkloadTypeClientsInitParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterWorkloadTypeClientsInitParameters.
func (in *TaskNewClusterWorkloadTypeClientsInitParameters) DeepCopy() *TaskNewClusterWorkloadTypeClientsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterWorkloadTypeClientsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterWorkloadTypeClientsObservation) DeepCopyInto(out *TaskNewClusterWorkloadTypeClientsObservation) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterWorkloadTypeClientsObservation.
func (in *TaskNewClusterWorkloadTypeClientsObservation) DeepCopy() *TaskNewClusterWorkloadTypeClientsObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterWorkloadTypeClientsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterWorkloadTypeClientsParameters) DeepCopyInto(out *TaskNewClusterWorkloadTypeClientsParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterWorkloadTypeClientsParameters.
func (in *TaskNewClusterWorkloadTypeClientsParameters) DeepCopy() *TaskNewClusterWorkloadTypeClientsParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterWorkloadTypeClientsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterWorkloadTypeInitParameters) DeepCopyInto(out *TaskNewClusterWorkloadTypeInitParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]TaskNewClusterWorkloadTypeClientsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterWorkloadTypeInitParameters.
func (in *TaskNewClusterWorkloadTypeInitParameters) DeepCopy() *TaskNewClusterWorkloadTypeInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterWorkloadTypeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterWorkloadTypeObservation) DeepCopyInto(out *TaskNewClusterWorkloadTypeObservation) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]TaskNewClusterWorkloadTypeClientsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterWorkloadTypeObservation.
func (in *TaskNewClusterWorkloadTypeObservation) DeepCopy() *TaskNewClusterWorkloadTypeObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterWorkloadTypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterWorkloadTypeParameters) DeepCopyInto(out *TaskNewClusterWorkloadTypeParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]TaskNewClusterWorkloadTypeClientsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterWorkloadTypeParameters.
func (in *TaskNewClusterWorkloadTypeParameters) DeepCopy() *TaskNewClusterWorkloadTypeParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterWorkloadTypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNotebookTaskInitParameters) DeepCopyInto(out *TaskNotebookTaskInitParameters) {
	*out = *in
	if in.BaseParameters != nil {
		in, out := &in.BaseParameters, &out.BaseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNotebookTaskInitParameters.
func (in *TaskNotebookTaskInitParameters) DeepCopy() *TaskNotebookTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNotebookTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNotebookTaskObservation) DeepCopyInto(out *TaskNotebookTaskObservation) {
	*out = *in
	if in.BaseParameters != nil {
		in, out := &in.BaseParameters, &out.BaseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNotebookTaskObservation.
func (in *TaskNotebookTaskObservation) DeepCopy() *TaskNotebookTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNotebookTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNotebookTaskParameters) DeepCopyInto(out *TaskNotebookTaskParameters) {
	*out = *in
	if in.BaseParameters != nil {
		in, out := &in.BaseParameters, &out.BaseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNotebookTaskParameters.
func (in *TaskNotebookTaskParameters) DeepCopy() *TaskNotebookTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNotebookTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNotificationSettingsInitParameters) DeepCopyInto(out *TaskNotificationSettingsInitParameters) {
	*out = *in
	if in.AlertOnLastAttempt != nil {
		in, out := &in.AlertOnLastAttempt, &out.AlertOnLastAttempt
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForCanceledRuns != nil {
		in, out := &in.NoAlertForCanceledRuns, &out.NoAlertForCanceledRuns
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNotificationSettingsInitParameters.
func (in *TaskNotificationSettingsInitParameters) DeepCopy() *TaskNotificationSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNotificationSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNotificationSettingsObservation) DeepCopyInto(out *TaskNotificationSettingsObservation) {
	*out = *in
	if in.AlertOnLastAttempt != nil {
		in, out := &in.AlertOnLastAttempt, &out.AlertOnLastAttempt
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForCanceledRuns != nil {
		in, out := &in.NoAlertForCanceledRuns, &out.NoAlertForCanceledRuns
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNotificationSettingsObservation.
func (in *TaskNotificationSettingsObservation) DeepCopy() *TaskNotificationSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNotificationSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNotificationSettingsParameters) DeepCopyInto(out *TaskNotificationSettingsParameters) {
	*out = *in
	if in.AlertOnLastAttempt != nil {
		in, out := &in.AlertOnLastAttempt, &out.AlertOnLastAttempt
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForCanceledRuns != nil {
		in, out := &in.NoAlertForCanceledRuns, &out.NoAlertForCanceledRuns
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNotificationSettingsParameters.
func (in *TaskNotificationSettingsParameters) DeepCopy() *TaskNotificationSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNotificationSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskObservation) DeepCopyInto(out *TaskObservation) {
	*out = *in
	if in.ConditionTask != nil {
		in, out := &in.ConditionTask, &out.ConditionTask
		*out = make([]ConditionTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DbtTask != nil {
		in, out := &in.DbtTask, &out.DbtTask
		*out = make([]TaskDbtTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DependsOn != nil {
		in, out := &in.DependsOn, &out.DependsOn
		*out = make([]DependsOnObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableAutoOptimization != nil {
		in, out := &in.DisableAutoOptimization, &out.DisableAutoOptimization
		*out = new(bool)
		**out = **in
	}
	if in.EmailNotifications != nil {
		in, out := &in.EmailNotifications, &out.EmailNotifications
		*out = make([]TaskEmailNotificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvironmentKey != nil {
		in, out := &in.EnvironmentKey, &out.EnvironmentKey
		*out = new(string)
		**out = **in
	}
	if in.ExistingClusterID != nil {
		in, out := &in.ExistingClusterID, &out.ExistingClusterID
		*out = new(string)
		**out = **in
	}
	if in.ForEachTask != nil {
		in, out := &in.ForEachTask, &out.ForEachTask
		*out = make([]ForEachTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]JobTaskHealthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobClusterKey != nil {
		in, out := &in.JobClusterKey, &out.JobClusterKey
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]JobTaskLibraryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MinRetryIntervalMillis != nil {
		in, out := &in.MinRetryIntervalMillis, &out.MinRetryIntervalMillis
		*out = new(float64)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]JobTaskNewClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotebookTask != nil {
		in, out := &in.NotebookTask, &out.NotebookTask
		*out = make([]JobTaskNotebookTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]JobTaskNotificationSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PipelineTask != nil {
		in, out := &in.PipelineTask, &out.PipelineTask
		*out = make([]JobTaskPipelineTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonWheelTask != nil {
		in, out := &in.PythonWheelTask, &out.PythonWheelTask
		*out = make([]JobTaskPythonWheelTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryOnTimeout != nil {
		in, out := &in.RetryOnTimeout, &out.RetryOnTimeout
		*out = new(bool)
		**out = **in
	}
	if in.RunIf != nil {
		in, out := &in.RunIf, &out.RunIf
		*out = new(string)
		**out = **in
	}
	if in.RunJobTask != nil {
		in, out := &in.RunJobTask, &out.RunJobTask
		*out = make([]JobTaskRunJobTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SQLTask != nil {
		in, out := &in.SQLTask, &out.SQLTask
		*out = make([]TaskSQLTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJarTask != nil {
		in, out := &in.SparkJarTask, &out.SparkJarTask
		*out = make([]JobTaskSparkJarTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkPythonTask != nil {
		in, out := &in.SparkPythonTask, &out.SparkPythonTask
		*out = make([]JobTaskSparkPythonTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSubmitTask != nil {
		in, out := &in.SparkSubmitTask, &out.SparkSubmitTask
		*out = make([]JobTaskSparkSubmitTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.WebhookNotifications != nil {
		in, out := &in.WebhookNotifications, &out.WebhookNotifications
		*out = make([]TaskWebhookNotificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskObservation.
func (in *TaskObservation) DeepCopy() *TaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskParameters) DeepCopyInto(out *TaskParameters) {
	*out = *in
	if in.ConditionTask != nil {
		in, out := &in.ConditionTask, &out.ConditionTask
		*out = make([]ConditionTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DbtTask != nil {
		in, out := &in.DbtTask, &out.DbtTask
		*out = make([]TaskDbtTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DependsOn != nil {
		in, out := &in.DependsOn, &out.DependsOn
		*out = make([]DependsOnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableAutoOptimization != nil {
		in, out := &in.DisableAutoOptimization, &out.DisableAutoOptimization
		*out = new(bool)
		**out = **in
	}
	if in.EmailNotifications != nil {
		in, out := &in.EmailNotifications, &out.EmailNotifications
		*out = make([]TaskEmailNotificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvironmentKey != nil {
		in, out := &in.EnvironmentKey, &out.EnvironmentKey
		*out = new(string)
		**out = **in
	}
	if in.ExistingClusterID != nil {
		in, out := &in.ExistingClusterID, &out.ExistingClusterID
		*out = new(string)
		**out = **in
	}
	if in.ForEachTask != nil {
		in, out := &in.ForEachTask, &out.ForEachTask
		*out = make([]ForEachTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]JobTaskHealthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobClusterKey != nil {
		in, out := &in.JobClusterKey, &out.JobClusterKey
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]JobTaskLibraryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MinRetryIntervalMillis != nil {
		in, out := &in.MinRetryIntervalMillis, &out.MinRetryIntervalMillis
		*out = new(float64)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]JobTaskNewClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotebookTask != nil {
		in, out := &in.NotebookTask, &out.NotebookTask
		*out = make([]JobTaskNotebookTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]JobTaskNotificationSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PipelineTask != nil {
		in, out := &in.PipelineTask, &out.PipelineTask
		*out = make([]JobTaskPipelineTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonWheelTask != nil {
		in, out := &in.PythonWheelTask, &out.PythonWheelTask
		*out = make([]JobTaskPythonWheelTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryOnTimeout != nil {
		in, out := &in.RetryOnTimeout, &out.RetryOnTimeout
		*out = new(bool)
		**out = **in
	}
	if in.RunIf != nil {
		in, out := &in.RunIf, &out.RunIf
		*out = new(string)
		**out = **in
	}
	if in.RunJobTask != nil {
		in, out := &in.RunJobTask, &out.RunJobTask
		*out = make([]JobTaskRunJobTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SQLTask != nil {
		in, out := &in.SQLTask, &out.SQLTask
		*out = make([]TaskSQLTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJarTask != nil {
		in, out := &in.SparkJarTask, &out.SparkJarTask
		*out = make([]JobTaskSparkJarTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkPythonTask != nil {
		in, out := &in.SparkPythonTask, &out.SparkPythonTask
		*out = make([]JobTaskSparkPythonTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSubmitTask != nil {
		in, out := &in.SparkSubmitTask, &out.SparkSubmitTask
		*out = make([]JobTaskSparkSubmitTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.WebhookNotifications != nil {
		in, out := &in.WebhookNotifications, &out.WebhookNotifications
		*out = make([]TaskWebhookNotificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskParameters.
func (in *TaskParameters) DeepCopy() *TaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskPipelineTaskInitParameters) DeepCopyInto(out *TaskPipelineTaskInitParameters) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskPipelineTaskInitParameters.
func (in *TaskPipelineTaskInitParameters) DeepCopy() *TaskPipelineTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskPipelineTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskPipelineTaskObservation) DeepCopyInto(out *TaskPipelineTaskObservation) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskPipelineTaskObservation.
func (in *TaskPipelineTaskObservation) DeepCopy() *TaskPipelineTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskPipelineTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskPipelineTaskParameters) DeepCopyInto(out *TaskPipelineTaskParameters) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskPipelineTaskParameters.
func (in *TaskPipelineTaskParameters) DeepCopy() *TaskPipelineTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskPipelineTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskPythonWheelTaskInitParameters) DeepCopyInto(out *TaskPythonWheelTaskInitParameters) {
	*out = *in
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = new(string)
		**out = **in
	}
	if in.NamedParameters != nil {
		in, out := &in.NamedParameters, &out.NamedParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PackageName != nil {
		in, out := &in.PackageName, &out.PackageName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskPythonWheelTaskInitParameters.
func (in *TaskPythonWheelTaskInitParameters) DeepCopy() *TaskPythonWheelTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskPythonWheelTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskPythonWheelTaskObservation) DeepCopyInto(out *TaskPythonWheelTaskObservation) {
	*out = *in
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = new(string)
		**out = **in
	}
	if in.NamedParameters != nil {
		in, out := &in.NamedParameters, &out.NamedParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PackageName != nil {
		in, out := &in.PackageName, &out.PackageName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskPythonWheelTaskObservation.
func (in *TaskPythonWheelTaskObservation) DeepCopy() *TaskPythonWheelTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskPythonWheelTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskPythonWheelTaskParameters) DeepCopyInto(out *TaskPythonWheelTaskParameters) {
	*out = *in
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = new(string)
		**out = **in
	}
	if in.NamedParameters != nil {
		in, out := &in.NamedParameters, &out.NamedParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PackageName != nil {
		in, out := &in.PackageName, &out.PackageName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskPythonWheelTaskParameters.
func (in *TaskPythonWheelTaskParameters) DeepCopy() *TaskPythonWheelTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskPythonWheelTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskRunJobTaskInitParameters) DeepCopyInto(out *TaskRunJobTaskInitParameters) {
	*out = *in
	if in.DbtCommands != nil {
		in, out := &in.DbtCommands, &out.DbtCommands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarParams != nil {
		in, out := &in.JarParams, &out.JarParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(float64)
		**out = **in
	}
	if in.JobParameters != nil {
		in, out := &in.JobParameters, &out.JobParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookParams != nil {
		in, out := &in.NotebookParams, &out.NotebookParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PipelineParams != nil {
		in, out := &in.PipelineParams, &out.PipelineParams
		*out = make([]PipelineParamsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonNamedParams != nil {
		in, out := &in.PythonNamedParams, &out.PythonNamedParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PythonParams != nil {
		in, out := &in.PythonParams, &out.PythonParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SQLParams != nil {
		in, out := &in.SQLParams, &out.SQLParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkSubmitParams != nil {
		in, out := &in.SparkSubmitParams, &out.SparkSubmitParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskRunJobTaskInitParameters.
func (in *TaskRunJobTaskInitParameters) DeepCopy() *TaskRunJobTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskRunJobTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskRunJobTaskObservation) DeepCopyInto(out *TaskRunJobTaskObservation) {
	*out = *in
	if in.DbtCommands != nil {
		in, out := &in.DbtCommands, &out.DbtCommands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarParams != nil {
		in, out := &in.JarParams, &out.JarParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(float64)
		**out = **in
	}
	if in.JobParameters != nil {
		in, out := &in.JobParameters, &out.JobParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookParams != nil {
		in, out := &in.NotebookParams, &out.NotebookParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PipelineParams != nil {
		in, out := &in.PipelineParams, &out.PipelineParams
		*out = make([]PipelineParamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonNamedParams != nil {
		in, out := &in.PythonNamedParams, &out.PythonNamedParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PythonParams != nil {
		in, out := &in.PythonParams, &out.PythonParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SQLParams != nil {
		in, out := &in.SQLParams, &out.SQLParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkSubmitParams != nil {
		in, out := &in.SparkSubmitParams, &out.SparkSubmitParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskRunJobTaskObservation.
func (in *TaskRunJobTaskObservation) DeepCopy() *TaskRunJobTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskRunJobTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskRunJobTaskParameters) DeepCopyInto(out *TaskRunJobTaskParameters) {
	*out = *in
	if in.DbtCommands != nil {
		in, out := &in.DbtCommands, &out.DbtCommands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarParams != nil {
		in, out := &in.JarParams, &out.JarParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(float64)
		**out = **in
	}
	if in.JobParameters != nil {
		in, out := &in.JobParameters, &out.JobParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookParams != nil {
		in, out := &in.NotebookParams, &out.NotebookParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PipelineParams != nil {
		in, out := &in.PipelineParams, &out.PipelineParams
		*out = make([]PipelineParamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonNamedParams != nil {
		in, out := &in.PythonNamedParams, &out.PythonNamedParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PythonParams != nil {
		in, out := &in.PythonParams, &out.PythonParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SQLParams != nil {
		in, out := &in.SQLParams, &out.SQLParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkSubmitParams != nil {
		in, out := &in.SparkSubmitParams, &out.SparkSubmitParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskRunJobTaskParameters.
func (in *TaskRunJobTaskParameters) DeepCopy() *TaskRunJobTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskRunJobTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSQLTaskAlertInitParameters) DeepCopyInto(out *TaskSQLTaskAlertInitParameters) {
	*out = *in
	if in.AlertID != nil {
		in, out := &in.AlertID, &out.AlertID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]AlertSubscriptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSQLTaskAlertInitParameters.
func (in *TaskSQLTaskAlertInitParameters) DeepCopy() *TaskSQLTaskAlertInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSQLTaskAlertInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSQLTaskAlertObservation) DeepCopyInto(out *TaskSQLTaskAlertObservation) {
	*out = *in
	if in.AlertID != nil {
		in, out := &in.AlertID, &out.AlertID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]AlertSubscriptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSQLTaskAlertObservation.
func (in *TaskSQLTaskAlertObservation) DeepCopy() *TaskSQLTaskAlertObservation {
	if in == nil {
		return nil
	}
	out := new(TaskSQLTaskAlertObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSQLTaskAlertParameters) DeepCopyInto(out *TaskSQLTaskAlertParameters) {
	*out = *in
	if in.AlertID != nil {
		in, out := &in.AlertID, &out.AlertID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]AlertSubscriptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSQLTaskAlertParameters.
func (in *TaskSQLTaskAlertParameters) DeepCopy() *TaskSQLTaskAlertParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSQLTaskAlertParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSQLTaskFileInitParameters) DeepCopyInto(out *TaskSQLTaskFileInitParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSQLTaskFileInitParameters.
func (in *TaskSQLTaskFileInitParameters) DeepCopy() *TaskSQLTaskFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSQLTaskFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSQLTaskFileObservation) DeepCopyInto(out *TaskSQLTaskFileObservation) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSQLTaskFileObservation.
func (in *TaskSQLTaskFileObservation) DeepCopy() *TaskSQLTaskFileObservation {
	if in == nil {
		return nil
	}
	out := new(TaskSQLTaskFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSQLTaskFileParameters) DeepCopyInto(out *TaskSQLTaskFileParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSQLTaskFileParameters.
func (in *TaskSQLTaskFileParameters) DeepCopy() *TaskSQLTaskFileParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSQLTaskFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSQLTaskInitParameters) DeepCopyInto(out *TaskSQLTaskInitParameters) {
	*out = *in
	if in.Alert != nil {
		in, out := &in.Alert, &out.Alert
		*out = make([]TaskSQLTaskAlertInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dashboard != nil {
		in, out := &in.Dashboard, &out.Dashboard
		*out = make([]SQLTaskDashboardInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]TaskSQLTaskFileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]SQLTaskQueryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSQLTaskInitParameters.
func (in *TaskSQLTaskInitParameters) DeepCopy() *TaskSQLTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSQLTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSQLTaskObservation) DeepCopyInto(out *TaskSQLTaskObservation) {
	*out = *in
	if in.Alert != nil {
		in, out := &in.Alert, &out.Alert
		*out = make([]TaskSQLTaskAlertObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dashboard != nil {
		in, out := &in.Dashboard, &out.Dashboard
		*out = make([]SQLTaskDashboardObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]TaskSQLTaskFileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]SQLTaskQueryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSQLTaskObservation.
func (in *TaskSQLTaskObservation) DeepCopy() *TaskSQLTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskSQLTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSQLTaskParameters) DeepCopyInto(out *TaskSQLTaskParameters) {
	*out = *in
	if in.Alert != nil {
		in, out := &in.Alert, &out.Alert
		*out = make([]TaskSQLTaskAlertParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dashboard != nil {
		in, out := &in.Dashboard, &out.Dashboard
		*out = make([]SQLTaskDashboardParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]TaskSQLTaskFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]SQLTaskQueryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSQLTaskParameters.
func (in *TaskSQLTaskParameters) DeepCopy() *TaskSQLTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSQLTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSparkJarTaskInitParameters) DeepCopyInto(out *TaskSparkJarTaskInitParameters) {
	*out = *in
	if in.JarURI != nil {
		in, out := &in.JarURI, &out.JarURI
		*out = new(string)
		**out = **in
	}
	if in.MainClassName != nil {
		in, out := &in.MainClassName, &out.MainClassName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSparkJarTaskInitParameters.
func (in *TaskSparkJarTaskInitParameters) DeepCopy() *TaskSparkJarTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSparkJarTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSparkJarTaskObservation) DeepCopyInto(out *TaskSparkJarTaskObservation) {
	*out = *in
	if in.JarURI != nil {
		in, out := &in.JarURI, &out.JarURI
		*out = new(string)
		**out = **in
	}
	if in.MainClassName != nil {
		in, out := &in.MainClassName, &out.MainClassName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSparkJarTaskObservation.
func (in *TaskSparkJarTaskObservation) DeepCopy() *TaskSparkJarTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskSparkJarTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSparkJarTaskParameters) DeepCopyInto(out *TaskSparkJarTaskParameters) {
	*out = *in
	if in.JarURI != nil {
		in, out := &in.JarURI, &out.JarURI
		*out = new(string)
		**out = **in
	}
	if in.MainClassName != nil {
		in, out := &in.MainClassName, &out.MainClassName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSparkJarTaskParameters.
func (in *TaskSparkJarTaskParameters) DeepCopy() *TaskSparkJarTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSparkJarTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSparkPythonTaskInitParameters) DeepCopyInto(out *TaskSparkPythonTaskInitParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PythonFile != nil {
		in, out := &in.PythonFile, &out.PythonFile
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSparkPythonTaskInitParameters.
func (in *TaskSparkPythonTaskInitParameters) DeepCopy() *TaskSparkPythonTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSparkPythonTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSparkPythonTaskObservation) DeepCopyInto(out *TaskSparkPythonTaskObservation) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PythonFile != nil {
		in, out := &in.PythonFile, &out.PythonFile
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSparkPythonTaskObservation.
func (in *TaskSparkPythonTaskObservation) DeepCopy() *TaskSparkPythonTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskSparkPythonTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSparkPythonTaskParameters) DeepCopyInto(out *TaskSparkPythonTaskParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PythonFile != nil {
		in, out := &in.PythonFile, &out.PythonFile
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSparkPythonTaskParameters.
func (in *TaskSparkPythonTaskParameters) DeepCopy() *TaskSparkPythonTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSparkPythonTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSparkSubmitTaskInitParameters) DeepCopyInto(out *TaskSparkSubmitTaskInitParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSparkSubmitTaskInitParameters.
func (in *TaskSparkSubmitTaskInitParameters) DeepCopy() *TaskSparkSubmitTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSparkSubmitTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSparkSubmitTaskObservation) DeepCopyInto(out *TaskSparkSubmitTaskObservation) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSparkSubmitTaskObservation.
func (in *TaskSparkSubmitTaskObservation) DeepCopy() *TaskSparkSubmitTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskSparkSubmitTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSparkSubmitTaskParameters) DeepCopyInto(out *TaskSparkSubmitTaskParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSparkSubmitTaskParameters.
func (in *TaskSparkSubmitTaskParameters) DeepCopy() *TaskSparkSubmitTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSparkSubmitTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskWebhookNotificationsInitParameters) DeepCopyInto(out *TaskWebhookNotificationsInitParameters) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]WebhookNotificationsOnDurationWarningThresholdExceededInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]WebhookNotificationsOnFailureInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]WebhookNotificationsOnStartInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]WebhookNotificationsOnStreamingBacklogExceededInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]WebhookNotificationsOnSuccessInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskWebhookNotificationsInitParameters.
func (in *TaskWebhookNotificationsInitParameters) DeepCopy() *TaskWebhookNotificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskWebhookNotificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskWebhookNotificationsObservation) DeepCopyInto(out *TaskWebhookNotificationsObservation) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]WebhookNotificationsOnDurationWarningThresholdExceededObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]WebhookNotificationsOnFailureObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]WebhookNotificationsOnStartObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]WebhookNotificationsOnStreamingBacklogExceededObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]WebhookNotificationsOnSuccessObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskWebhookNotificationsObservation.
func (in *TaskWebhookNotificationsObservation) DeepCopy() *TaskWebhookNotificationsObservation {
	if in == nil {
		return nil
	}
	out := new(TaskWebhookNotificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskWebhookNotificationsParameters) DeepCopyInto(out *TaskWebhookNotificationsParameters) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]WebhookNotificationsOnDurationWarningThresholdExceededParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]WebhookNotificationsOnFailureParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]WebhookNotificationsOnStartParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]WebhookNotificationsOnStreamingBacklogExceededParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]WebhookNotificationsOnSuccessParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskWebhookNotificationsParameters.
func (in *TaskWebhookNotificationsParameters) DeepCopy() *TaskWebhookNotificationsParameters {
	if in == nil {
		return nil
	}
	out := new(TaskWebhookNotificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TextInitParameters) DeepCopyInto(out *TextInitParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TextInitParameters.
func (in *TextInitParameters) DeepCopy() *TextInitParameters {
	if in == nil {
		return nil
	}
	out := new(TextInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TextObservation) DeepCopyInto(out *TextObservation) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TextObservation.
func (in *TextObservation) DeepCopy() *TextObservation {
	if in == nil {
		return nil
	}
	out := new(TextObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TextParameters) DeepCopyInto(out *TextParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TextParameters.
func (in *TextParameters) DeepCopy() *TextParameters {
	if in == nil {
		return nil
	}
	out := new(TextParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TextValueInitParameters) DeepCopyInto(out *TextValueInitParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TextValueInitParameters.
func (in *TextValueInitParameters) DeepCopy() *TextValueInitParameters {
	if in == nil {
		return nil
	}
	out := new(TextValueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TextValueObservation) DeepCopyInto(out *TextValueObservation) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TextValueObservation.
func (in *TextValueObservation) DeepCopy() *TextValueObservation {
	if in == nil {
		return nil
	}
	out := new(TextValueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TextValueParameters) DeepCopyInto(out *TextValueParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TextValueParameters.
func (in *TextValueParameters) DeepCopy() *TextValueParameters {
	if in == nil {
		return nil
	}
	out := new(TextValueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThresholdInitParameters) DeepCopyInto(out *ThresholdInitParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]ValueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThresholdInitParameters.
func (in *ThresholdInitParameters) DeepCopy() *ThresholdInitParameters {
	if in == nil {
		return nil
	}
	out := new(ThresholdInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThresholdObservation) DeepCopyInto(out *ThresholdObservation) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]ValueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThresholdObservation.
func (in *ThresholdObservation) DeepCopy() *ThresholdObservation {
	if in == nil {
		return nil
	}
	out := new(ThresholdObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThresholdParameters) DeepCopyInto(out *ThresholdParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]ValueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThresholdParameters.
func (in *ThresholdParameters) DeepCopy() *ThresholdParameters {
	if in == nil {
		return nil
	}
	out := new(ThresholdParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Token) DeepCopyInto(out *Token) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Token.
func (in *Token) DeepCopy() *Token {
	if in == nil {
		return nil
	}
	out := new(Token)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Token) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenInitParameters) DeepCopyInto(out *TokenInitParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.ExpiryTime != nil {
		in, out := &in.ExpiryTime, &out.ExpiryTime
		*out = new(float64)
		**out = **in
	}
	if in.LifetimeSeconds != nil {
		in, out := &in.LifetimeSeconds, &out.LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TokenID != nil {
		in, out := &in.TokenID, &out.TokenID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenInitParameters.
func (in *TokenInitParameters) DeepCopy() *TokenInitParameters {
	if in == nil {
		return nil
	}
	out := new(TokenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenList) DeepCopyInto(out *TokenList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Token, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenList.
func (in *TokenList) DeepCopy() *TokenList {
	if in == nil {
		return nil
	}
	out := new(TokenList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TokenList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenObservation) DeepCopyInto(out *TokenObservation) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.ExpiryTime != nil {
		in, out := &in.ExpiryTime, &out.ExpiryTime
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LifetimeSeconds != nil {
		in, out := &in.LifetimeSeconds, &out.LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TokenID != nil {
		in, out := &in.TokenID, &out.TokenID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenObservation.
func (in *TokenObservation) DeepCopy() *TokenObservation {
	if in == nil {
		return nil
	}
	out := new(TokenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenParameters) DeepCopyInto(out *TokenParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.ExpiryTime != nil {
		in, out := &in.ExpiryTime, &out.ExpiryTime
		*out = new(float64)
		**out = **in
	}
	if in.LifetimeSeconds != nil {
		in, out := &in.LifetimeSeconds, &out.LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TokenID != nil {
		in, out := &in.TokenID, &out.TokenID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenParameters.
func (in *TokenParameters) DeepCopy() *TokenParameters {
	if in == nil {
		return nil
	}
	out := new(TokenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenSpec) DeepCopyInto(out *TokenSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenSpec.
func (in *TokenSpec) DeepCopy() *TokenSpec {
	if in == nil {
		return nil
	}
	out := new(TokenSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenStatus) DeepCopyInto(out *TokenStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenStatus.
func (in *TokenStatus) DeepCopy() *TokenStatus {
	if in == nil {
		return nil
	}
	out := new(TokenStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerInitParameters) DeepCopyInto(out *TriggerInitParameters) {
	*out = *in
	if in.FileArrival != nil {
		in, out := &in.FileArrival, &out.FileArrival
		*out = make([]FileArrivalInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
	if in.Periodic != nil {
		in, out := &in.Periodic, &out.Periodic
		*out = make([]PeriodicInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = make([]TableInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableUpdate != nil {
		in, out := &in.TableUpdate, &out.TableUpdate
		*out = make([]TableUpdateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerInitParameters.
func (in *TriggerInitParameters) DeepCopy() *TriggerInitParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerObservation) DeepCopyInto(out *TriggerObservation) {
	*out = *in
	if in.FileArrival != nil {
		in, out := &in.FileArrival, &out.FileArrival
		*out = make([]FileArrivalObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
	if in.Periodic != nil {
		in, out := &in.Periodic, &out.Periodic
		*out = make([]PeriodicObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = make([]TableObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableUpdate != nil {
		in, out := &in.TableUpdate, &out.TableUpdate
		*out = make([]TableUpdateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerObservation.
func (in *TriggerObservation) DeepCopy() *TriggerObservation {
	if in == nil {
		return nil
	}
	out := new(TriggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerParameters) DeepCopyInto(out *TriggerParameters) {
	*out = *in
	if in.FileArrival != nil {
		in, out := &in.FileArrival, &out.FileArrival
		*out = make([]FileArrivalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
	if in.Periodic != nil {
		in, out := &in.Periodic, &out.Periodic
		*out = make([]PeriodicParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = make([]TableParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableUpdate != nil {
		in, out := &in.TableUpdate, &out.TableUpdate
		*out = make([]TableUpdateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerParameters.
func (in *TriggerParameters) DeepCopy() *TriggerParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValueInitParameters) DeepCopyInto(out *ValueInitParameters) {
	*out = *in
	if in.BoolValue != nil {
		in, out := &in.BoolValue, &out.BoolValue
		*out = new(bool)
		**out = **in
	}
	if in.DoubleValue != nil {
		in, out := &in.DoubleValue, &out.DoubleValue
		*out = new(float64)
		**out = **in
	}
	if in.StringValue != nil {
		in, out := &in.StringValue, &out.StringValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValueInitParameters.
func (in *ValueInitParameters) DeepCopy() *ValueInitParameters {
	if in == nil {
		return nil
	}
	out := new(ValueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValueObservation) DeepCopyInto(out *ValueObservation) {
	*out = *in
	if in.BoolValue != nil {
		in, out := &in.BoolValue, &out.BoolValue
		*out = new(bool)
		**out = **in
	}
	if in.DoubleValue != nil {
		in, out := &in.DoubleValue, &out.DoubleValue
		*out = new(float64)
		**out = **in
	}
	if in.StringValue != nil {
		in, out := &in.StringValue, &out.StringValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValueObservation.
func (in *ValueObservation) DeepCopy() *ValueObservation {
	if in == nil {
		return nil
	}
	out := new(ValueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValueParameters) DeepCopyInto(out *ValueParameters) {
	*out = *in
	if in.BoolValue != nil {
		in, out := &in.BoolValue, &out.BoolValue
		*out = new(bool)
		**out = **in
	}
	if in.DoubleValue != nil {
		in, out := &in.DoubleValue, &out.DoubleValue
		*out = new(float64)
		**out = **in
	}
	if in.StringValue != nil {
		in, out := &in.StringValue, &out.StringValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValueParameters.
func (in *ValueParameters) DeepCopy() *ValueParameters {
	if in == nil {
		return nil
	}
	out := new(ValueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumesInitParameters) DeepCopyInto(out *VolumesInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumesInitParameters.
func (in *VolumesInitParameters) DeepCopy() *VolumesInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumesObservation) DeepCopyInto(out *VolumesObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumesObservation.
func (in *VolumesObservation) DeepCopy() *VolumesObservation {
	if in == nil {
		return nil
	}
	out := new(VolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumesParameters) DeepCopyInto(out *VolumesParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumesParameters.
func (in *VolumesParameters) DeepCopy() *VolumesParameters {
	if in == nil {
		return nil
	}
	out := new(VolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsInitParameters) DeepCopyInto(out *WebhookNotificationsInitParameters) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]OnDurationWarningThresholdExceededInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]OnFailureInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]OnStartInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]OnStreamingBacklogExceededInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]OnSuccessInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsInitParameters.
func (in *WebhookNotificationsInitParameters) DeepCopy() *WebhookNotificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsObservation) DeepCopyInto(out *WebhookNotificationsObservation) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]OnDurationWarningThresholdExceededObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]OnFailureObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]OnStartObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]OnStreamingBacklogExceededObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]OnSuccessObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsObservation.
func (in *WebhookNotificationsObservation) DeepCopy() *WebhookNotificationsObservation {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnDurationWarningThresholdExceededInitParameters) DeepCopyInto(out *WebhookNotificationsOnDurationWarningThresholdExceededInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnDurationWarningThresholdExceededInitParameters.
func (in *WebhookNotificationsOnDurationWarningThresholdExceededInitParameters) DeepCopy() *WebhookNotificationsOnDurationWarningThresholdExceededInitParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnDurationWarningThresholdExceededInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnDurationWarningThresholdExceededObservation) DeepCopyInto(out *WebhookNotificationsOnDurationWarningThresholdExceededObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnDurationWarningThresholdExceededObservation.
func (in *WebhookNotificationsOnDurationWarningThresholdExceededObservation) DeepCopy() *WebhookNotificationsOnDurationWarningThresholdExceededObservation {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnDurationWarningThresholdExceededObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnDurationWarningThresholdExceededParameters) DeepCopyInto(out *WebhookNotificationsOnDurationWarningThresholdExceededParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnDurationWarningThresholdExceededParameters.
func (in *WebhookNotificationsOnDurationWarningThresholdExceededParameters) DeepCopy() *WebhookNotificationsOnDurationWarningThresholdExceededParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnDurationWarningThresholdExceededParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnFailureInitParameters) DeepCopyInto(out *WebhookNotificationsOnFailureInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnFailureInitParameters.
func (in *WebhookNotificationsOnFailureInitParameters) DeepCopy() *WebhookNotificationsOnFailureInitParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnFailureInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnFailureObservation) DeepCopyInto(out *WebhookNotificationsOnFailureObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnFailureObservation.
func (in *WebhookNotificationsOnFailureObservation) DeepCopy() *WebhookNotificationsOnFailureObservation {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnFailureObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnFailureParameters) DeepCopyInto(out *WebhookNotificationsOnFailureParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnFailureParameters.
func (in *WebhookNotificationsOnFailureParameters) DeepCopy() *WebhookNotificationsOnFailureParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnFailureParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnStartInitParameters) DeepCopyInto(out *WebhookNotificationsOnStartInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnStartInitParameters.
func (in *WebhookNotificationsOnStartInitParameters) DeepCopy() *WebhookNotificationsOnStartInitParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnStartInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnStartObservation) DeepCopyInto(out *WebhookNotificationsOnStartObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnStartObservation.
func (in *WebhookNotificationsOnStartObservation) DeepCopy() *WebhookNotificationsOnStartObservation {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnStartObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnStartParameters) DeepCopyInto(out *WebhookNotificationsOnStartParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnStartParameters.
func (in *WebhookNotificationsOnStartParameters) DeepCopy() *WebhookNotificationsOnStartParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnStartParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnStreamingBacklogExceededInitParameters) DeepCopyInto(out *WebhookNotificationsOnStreamingBacklogExceededInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnStreamingBacklogExceededInitParameters.
func (in *WebhookNotificationsOnStreamingBacklogExceededInitParameters) DeepCopy() *WebhookNotificationsOnStreamingBacklogExceededInitParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnStreamingBacklogExceededInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnStreamingBacklogExceededObservation) DeepCopyInto(out *WebhookNotificationsOnStreamingBacklogExceededObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnStreamingBacklogExceededObservation.
func (in *WebhookNotificationsOnStreamingBacklogExceededObservation) DeepCopy() *WebhookNotificationsOnStreamingBacklogExceededObservation {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnStreamingBacklogExceededObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnStreamingBacklogExceededParameters) DeepCopyInto(out *WebhookNotificationsOnStreamingBacklogExceededParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnStreamingBacklogExceededParameters.
func (in *WebhookNotificationsOnStreamingBacklogExceededParameters) DeepCopy() *WebhookNotificationsOnStreamingBacklogExceededParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnStreamingBacklogExceededParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnSuccessInitParameters) DeepCopyInto(out *WebhookNotificationsOnSuccessInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnSuccessInitParameters.
func (in *WebhookNotificationsOnSuccessInitParameters) DeepCopy() *WebhookNotificationsOnSuccessInitParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnSuccessInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnSuccessObservation) DeepCopyInto(out *WebhookNotificationsOnSuccessObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnSuccessObservation.
func (in *WebhookNotificationsOnSuccessObservation) DeepCopy() *WebhookNotificationsOnSuccessObservation {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnSuccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnSuccessParameters) DeepCopyInto(out *WebhookNotificationsOnSuccessParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnSuccessParameters.
func (in *WebhookNotificationsOnSuccessParameters) DeepCopy() *WebhookNotificationsOnSuccessParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnSuccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsParameters) DeepCopyInto(out *WebhookNotificationsParameters) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]OnDurationWarningThresholdExceededParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]OnFailureParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]OnStartParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]OnStreamingBacklogExceededParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]OnSuccessParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsParameters.
func (in *WebhookNotificationsParameters) DeepCopy() *WebhookNotificationsParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeeklyInitParameters) DeepCopyInto(out *WeeklyInitParameters) {
	*out = *in
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
	if in.IntervalWeeks != nil {
		in, out := &in.IntervalWeeks, &out.IntervalWeeks
		*out = new(float64)
		**out = **in
	}
	if in.TimeOfDay != nil {
		in, out := &in.TimeOfDay, &out.TimeOfDay
		*out = new(string)
		**out = **in
	}
	if in.UntilDate != nil {
		in, out := &in.UntilDate, &out.UntilDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeeklyInitParameters.
func (in *WeeklyInitParameters) DeepCopy() *WeeklyInitParameters {
	if in == nil {
		return nil
	}
	out := new(WeeklyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeeklyObservation) DeepCopyInto(out *WeeklyObservation) {
	*out = *in
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
	if in.IntervalWeeks != nil {
		in, out := &in.IntervalWeeks, &out.IntervalWeeks
		*out = new(float64)
		**out = **in
	}
	if in.TimeOfDay != nil {
		in, out := &in.TimeOfDay, &out.TimeOfDay
		*out = new(string)
		**out = **in
	}
	if in.UntilDate != nil {
		in, out := &in.UntilDate, &out.UntilDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeeklyObservation.
func (in *WeeklyObservation) DeepCopy() *WeeklyObservation {
	if in == nil {
		return nil
	}
	out := new(WeeklyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeeklyParameters) DeepCopyInto(out *WeeklyParameters) {
	*out = *in
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
	if in.IntervalWeeks != nil {
		in, out := &in.IntervalWeeks, &out.IntervalWeeks
		*out = new(float64)
		**out = **in
	}
	if in.TimeOfDay != nil {
		in, out := &in.TimeOfDay, &out.TimeOfDay
		*out = new(string)
		**out = **in
	}
	if in.UntilDate != nil {
		in, out := &in.UntilDate, &out.UntilDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeeklyParameters.
func (in *WeeklyParameters) DeepCopy() *WeeklyParameters {
	if in == nil {
		return nil
	}
	out := new(WeeklyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadTypeClientsInitParameters) DeepCopyInto(out *WorkloadTypeClientsInitParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadTypeClientsInitParameters.
func (in *WorkloadTypeClientsInitParameters) DeepCopy() *WorkloadTypeClientsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkloadTypeClientsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadTypeClientsObservation) DeepCopyInto(out *WorkloadTypeClientsObservation) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadTypeClientsObservation.
func (in *WorkloadTypeClientsObservation) DeepCopy() *WorkloadTypeClientsObservation {
	if in == nil {
		return nil
	}
	out := new(WorkloadTypeClientsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadTypeClientsParameters) DeepCopyInto(out *WorkloadTypeClientsParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadTypeClientsParameters.
func (in *WorkloadTypeClientsParameters) DeepCopy() *WorkloadTypeClientsParameters {
	if in == nil {
		return nil
	}
	out := new(WorkloadTypeClientsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadTypeInitParameters) DeepCopyInto(out *WorkloadTypeInitParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]ClientsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadTypeInitParameters.
func (in *WorkloadTypeInitParameters) DeepCopy() *WorkloadTypeInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkloadTypeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadTypeObservation) DeepCopyInto(out *WorkloadTypeObservation) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]ClientsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadTypeObservation.
func (in *WorkloadTypeObservation) DeepCopy() *WorkloadTypeObservation {
	if in == nil {
		return nil
	}
	out := new(WorkloadTypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadTypeParameters) DeepCopyInto(out *WorkloadTypeParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]ClientsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadTypeParameters.
func (in *WorkloadTypeParameters) DeepCopy() *WorkloadTypeParameters {
	if in == nil {
		return nil
	}
	out := new(WorkloadTypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceIDInitParameters) DeepCopyInto(out *WorkspaceIDInitParameters) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceIDInitParameters.
func (in *WorkspaceIDInitParameters) DeepCopy() *WorkspaceIDInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceIDInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceIDObservation) DeepCopyInto(out *WorkspaceIDObservation) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceIDObservation.
func (in *WorkspaceIDObservation) DeepCopy() *WorkspaceIDObservation {
	if in == nil {
		return nil
	}
	out := new(WorkspaceIDObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceIDParameters) DeepCopyInto(out *WorkspaceIDParameters) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceIDParameters.
func (in *WorkspaceIDParameters) DeepCopy() *WorkspaceIDParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceIDParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceInitParameters) DeepCopyInto(out *WorkspaceInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceInitParameters.
func (in *WorkspaceInitParameters) DeepCopy() *WorkspaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceObservation) DeepCopyInto(out *WorkspaceObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceObservation.
func (in *WorkspaceObservation) DeepCopy() *WorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(WorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceParameters) DeepCopyInto(out *WorkspaceParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceParameters.
func (in *WorkspaceParameters) DeepCopy() *WorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}
