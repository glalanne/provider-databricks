//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AIGatewayInitParameters) DeepCopyInto(out *AIGatewayInitParameters) {
	*out = *in
	if in.Guardrails != nil {
		in, out := &in.Guardrails, &out.Guardrails
		*out = make([]GuardrailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InferenceTableConfig != nil {
		in, out := &in.InferenceTableConfig, &out.InferenceTableConfig
		*out = make([]InferenceTableConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RateLimits != nil {
		in, out := &in.RateLimits, &out.RateLimits
		*out = make([]RateLimitsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UsageTrackingConfig != nil {
		in, out := &in.UsageTrackingConfig, &out.UsageTrackingConfig
		*out = make([]UsageTrackingConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AIGatewayInitParameters.
func (in *AIGatewayInitParameters) DeepCopy() *AIGatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(AIGatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AIGatewayObservation) DeepCopyInto(out *AIGatewayObservation) {
	*out = *in
	if in.Guardrails != nil {
		in, out := &in.Guardrails, &out.Guardrails
		*out = make([]GuardrailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InferenceTableConfig != nil {
		in, out := &in.InferenceTableConfig, &out.InferenceTableConfig
		*out = make([]InferenceTableConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RateLimits != nil {
		in, out := &in.RateLimits, &out.RateLimits
		*out = make([]RateLimitsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UsageTrackingConfig != nil {
		in, out := &in.UsageTrackingConfig, &out.UsageTrackingConfig
		*out = make([]UsageTrackingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AIGatewayObservation.
func (in *AIGatewayObservation) DeepCopy() *AIGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(AIGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AIGatewayParameters) DeepCopyInto(out *AIGatewayParameters) {
	*out = *in
	if in.Guardrails != nil {
		in, out := &in.Guardrails, &out.Guardrails
		*out = make([]GuardrailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InferenceTableConfig != nil {
		in, out := &in.InferenceTableConfig, &out.InferenceTableConfig
		*out = make([]InferenceTableConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RateLimits != nil {
		in, out := &in.RateLimits, &out.RateLimits
		*out = make([]RateLimitsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UsageTrackingConfig != nil {
		in, out := &in.UsageTrackingConfig, &out.UsageTrackingConfig
		*out = make([]UsageTrackingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AIGatewayParameters.
func (in *AIGatewayParameters) DeepCopy() *AIGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(AIGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AbfsInitParameters) DeepCopyInto(out *AbfsInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretKey != nil {
		in, out := &in.ClientSecretKey, &out.ClientSecretKey
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretScope != nil {
		in, out := &in.ClientSecretScope, &out.ClientSecretScope
		*out = new(string)
		**out = **in
	}
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.Directory != nil {
		in, out := &in.Directory, &out.Directory
		*out = new(string)
		**out = **in
	}
	if in.InitializeFileSystem != nil {
		in, out := &in.InitializeFileSystem, &out.InitializeFileSystem
		*out = new(bool)
		**out = **in
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AbfsInitParameters.
func (in *AbfsInitParameters) DeepCopy() *AbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AbfsObservation) DeepCopyInto(out *AbfsObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretKey != nil {
		in, out := &in.ClientSecretKey, &out.ClientSecretKey
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretScope != nil {
		in, out := &in.ClientSecretScope, &out.ClientSecretScope
		*out = new(string)
		**out = **in
	}
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.Directory != nil {
		in, out := &in.Directory, &out.Directory
		*out = new(string)
		**out = **in
	}
	if in.InitializeFileSystem != nil {
		in, out := &in.InitializeFileSystem, &out.InitializeFileSystem
		*out = new(bool)
		**out = **in
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AbfsObservation.
func (in *AbfsObservation) DeepCopy() *AbfsObservation {
	if in == nil {
		return nil
	}
	out := new(AbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AbfsParameters) DeepCopyInto(out *AbfsParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretKey != nil {
		in, out := &in.ClientSecretKey, &out.ClientSecretKey
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretScope != nil {
		in, out := &in.ClientSecretScope, &out.ClientSecretScope
		*out = new(string)
		**out = **in
	}
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.Directory != nil {
		in, out := &in.Directory, &out.Directory
		*out = new(string)
		**out = **in
	}
	if in.InitializeFileSystem != nil {
		in, out := &in.InitializeFileSystem, &out.InitializeFileSystem
		*out = new(bool)
		**out = **in
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AbfsParameters.
func (in *AbfsParameters) DeepCopy() *AbfsParameters {
	if in == nil {
		return nil
	}
	out := new(AbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AbfssInitParameters) DeepCopyInto(out *AbfssInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AbfssInitParameters.
func (in *AbfssInitParameters) DeepCopy() *AbfssInitParameters {
	if in == nil {
		return nil
	}
	out := new(AbfssInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AbfssObservation) DeepCopyInto(out *AbfssObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AbfssObservation.
func (in *AbfssObservation) DeepCopy() *AbfssObservation {
	if in == nil {
		return nil
	}
	out := new(AbfssObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AbfssParameters) DeepCopyInto(out *AbfssParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AbfssParameters.
func (in *AbfssParameters) DeepCopy() *AbfssParameters {
	if in == nil {
		return nil
	}
	out := new(AbfssParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessControlInitParameters) DeepCopyInto(out *AccessControlInitParameters) {
	*out = *in
	if in.GroupName != nil {
		in, out := &in.GroupName, &out.GroupName
		*out = new(string)
		**out = **in
	}
	if in.PermissionLevel != nil {
		in, out := &in.PermissionLevel, &out.PermissionLevel
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalName != nil {
		in, out := &in.ServicePrincipalName, &out.ServicePrincipalName
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalNameRef != nil {
		in, out := &in.ServicePrincipalNameRef, &out.ServicePrincipalNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServicePrincipalNameSelector != nil {
		in, out := &in.ServicePrincipalNameSelector, &out.ServicePrincipalNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessControlInitParameters.
func (in *AccessControlInitParameters) DeepCopy() *AccessControlInitParameters {
	if in == nil {
		return nil
	}
	out := new(AccessControlInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessControlObservation) DeepCopyInto(out *AccessControlObservation) {
	*out = *in
	if in.GroupName != nil {
		in, out := &in.GroupName, &out.GroupName
		*out = new(string)
		**out = **in
	}
	if in.PermissionLevel != nil {
		in, out := &in.PermissionLevel, &out.PermissionLevel
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalName != nil {
		in, out := &in.ServicePrincipalName, &out.ServicePrincipalName
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessControlObservation.
func (in *AccessControlObservation) DeepCopy() *AccessControlObservation {
	if in == nil {
		return nil
	}
	out := new(AccessControlObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessControlParameters) DeepCopyInto(out *AccessControlParameters) {
	*out = *in
	if in.GroupName != nil {
		in, out := &in.GroupName, &out.GroupName
		*out = new(string)
		**out = **in
	}
	if in.PermissionLevel != nil {
		in, out := &in.PermissionLevel, &out.PermissionLevel
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalName != nil {
		in, out := &in.ServicePrincipalName, &out.ServicePrincipalName
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalNameRef != nil {
		in, out := &in.ServicePrincipalNameRef, &out.ServicePrincipalNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServicePrincipalNameSelector != nil {
		in, out := &in.ServicePrincipalNameSelector, &out.ServicePrincipalNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessControlParameters.
func (in *AccessControlParameters) DeepCopy() *AccessControlParameters {
	if in == nil {
		return nil
	}
	out := new(AccessControlParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessControlRuleSet) DeepCopyInto(out *AccessControlRuleSet) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessControlRuleSet.
func (in *AccessControlRuleSet) DeepCopy() *AccessControlRuleSet {
	if in == nil {
		return nil
	}
	out := new(AccessControlRuleSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccessControlRuleSet) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessControlRuleSetInitParameters) DeepCopyInto(out *AccessControlRuleSetInitParameters) {
	*out = *in
	if in.GrantRules != nil {
		in, out := &in.GrantRules, &out.GrantRules
		*out = make([]GrantRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessControlRuleSetInitParameters.
func (in *AccessControlRuleSetInitParameters) DeepCopy() *AccessControlRuleSetInitParameters {
	if in == nil {
		return nil
	}
	out := new(AccessControlRuleSetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessControlRuleSetList) DeepCopyInto(out *AccessControlRuleSetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AccessControlRuleSet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessControlRuleSetList.
func (in *AccessControlRuleSetList) DeepCopy() *AccessControlRuleSetList {
	if in == nil {
		return nil
	}
	out := new(AccessControlRuleSetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccessControlRuleSetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessControlRuleSetObservation) DeepCopyInto(out *AccessControlRuleSetObservation) {
	*out = *in
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.GrantRules != nil {
		in, out := &in.GrantRules, &out.GrantRules
		*out = make([]GrantRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessControlRuleSetObservation.
func (in *AccessControlRuleSetObservation) DeepCopy() *AccessControlRuleSetObservation {
	if in == nil {
		return nil
	}
	out := new(AccessControlRuleSetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessControlRuleSetParameters) DeepCopyInto(out *AccessControlRuleSetParameters) {
	*out = *in
	if in.GrantRules != nil {
		in, out := &in.GrantRules, &out.GrantRules
		*out = make([]GrantRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessControlRuleSetParameters.
func (in *AccessControlRuleSetParameters) DeepCopy() *AccessControlRuleSetParameters {
	if in == nil {
		return nil
	}
	out := new(AccessControlRuleSetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessControlRuleSetSpec) DeepCopyInto(out *AccessControlRuleSetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessControlRuleSetSpec.
func (in *AccessControlRuleSetSpec) DeepCopy() *AccessControlRuleSetSpec {
	if in == nil {
		return nil
	}
	out := new(AccessControlRuleSetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessControlRuleSetStatus) DeepCopyInto(out *AccessControlRuleSetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessControlRuleSetStatus.
func (in *AccessControlRuleSetStatus) DeepCopy() *AccessControlRuleSetStatus {
	if in == nil {
		return nil
	}
	out := new(AccessControlRuleSetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionConfigurationsInitParameters) DeepCopyInto(out *ActionConfigurationsInitParameters) {
	*out = *in
	if in.ActionConfigurationID != nil {
		in, out := &in.ActionConfigurationID, &out.ActionConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.ActionType != nil {
		in, out := &in.ActionType, &out.ActionType
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionConfigurationsInitParameters.
func (in *ActionConfigurationsInitParameters) DeepCopy() *ActionConfigurationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActionConfigurationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionConfigurationsObservation) DeepCopyInto(out *ActionConfigurationsObservation) {
	*out = *in
	if in.ActionConfigurationID != nil {
		in, out := &in.ActionConfigurationID, &out.ActionConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.ActionType != nil {
		in, out := &in.ActionType, &out.ActionType
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionConfigurationsObservation.
func (in *ActionConfigurationsObservation) DeepCopy() *ActionConfigurationsObservation {
	if in == nil {
		return nil
	}
	out := new(ActionConfigurationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionConfigurationsParameters) DeepCopyInto(out *ActionConfigurationsParameters) {
	*out = *in
	if in.ActionConfigurationID != nil {
		in, out := &in.ActionConfigurationID, &out.ActionConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.ActionType != nil {
		in, out := &in.ActionType, &out.ActionType
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionConfigurationsParameters.
func (in *ActionConfigurationsParameters) DeepCopy() *ActionConfigurationsParameters {
	if in == nil {
		return nil
	}
	out := new(ActionConfigurationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdlInitParameters) DeepCopyInto(out *AdlInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretKey != nil {
		in, out := &in.ClientSecretKey, &out.ClientSecretKey
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretScope != nil {
		in, out := &in.ClientSecretScope, &out.ClientSecretScope
		*out = new(string)
		**out = **in
	}
	if in.Directory != nil {
		in, out := &in.Directory, &out.Directory
		*out = new(string)
		**out = **in
	}
	if in.SparkConfPrefix != nil {
		in, out := &in.SparkConfPrefix, &out.SparkConfPrefix
		*out = new(string)
		**out = **in
	}
	if in.StorageResourceName != nil {
		in, out := &in.StorageResourceName, &out.StorageResourceName
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdlInitParameters.
func (in *AdlInitParameters) DeepCopy() *AdlInitParameters {
	if in == nil {
		return nil
	}
	out := new(AdlInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdlObservation) DeepCopyInto(out *AdlObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretKey != nil {
		in, out := &in.ClientSecretKey, &out.ClientSecretKey
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretScope != nil {
		in, out := &in.ClientSecretScope, &out.ClientSecretScope
		*out = new(string)
		**out = **in
	}
	if in.Directory != nil {
		in, out := &in.Directory, &out.Directory
		*out = new(string)
		**out = **in
	}
	if in.SparkConfPrefix != nil {
		in, out := &in.SparkConfPrefix, &out.SparkConfPrefix
		*out = new(string)
		**out = **in
	}
	if in.StorageResourceName != nil {
		in, out := &in.StorageResourceName, &out.StorageResourceName
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdlObservation.
func (in *AdlObservation) DeepCopy() *AdlObservation {
	if in == nil {
		return nil
	}
	out := new(AdlObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdlParameters) DeepCopyInto(out *AdlParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretKey != nil {
		in, out := &in.ClientSecretKey, &out.ClientSecretKey
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretScope != nil {
		in, out := &in.ClientSecretScope, &out.ClientSecretScope
		*out = new(string)
		**out = **in
	}
	if in.Directory != nil {
		in, out := &in.Directory, &out.Directory
		*out = new(string)
		**out = **in
	}
	if in.SparkConfPrefix != nil {
		in, out := &in.SparkConfPrefix, &out.SparkConfPrefix
		*out = new(string)
		**out = **in
	}
	if in.StorageResourceName != nil {
		in, out := &in.StorageResourceName, &out.StorageResourceName
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdlParameters.
func (in *AdlParameters) DeepCopy() *AdlParameters {
	if in == nil {
		return nil
	}
	out := new(AdlParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ai21LabsConfigInitParameters) DeepCopyInto(out *Ai21LabsConfigInitParameters) {
	*out = *in
	if in.Ai21LabsAPIKey != nil {
		in, out := &in.Ai21LabsAPIKey, &out.Ai21LabsAPIKey
		*out = new(string)
		**out = **in
	}
	if in.Ai21LabsAPIKeyPlaintext != nil {
		in, out := &in.Ai21LabsAPIKeyPlaintext, &out.Ai21LabsAPIKeyPlaintext
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ai21LabsConfigInitParameters.
func (in *Ai21LabsConfigInitParameters) DeepCopy() *Ai21LabsConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(Ai21LabsConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ai21LabsConfigObservation) DeepCopyInto(out *Ai21LabsConfigObservation) {
	*out = *in
	if in.Ai21LabsAPIKey != nil {
		in, out := &in.Ai21LabsAPIKey, &out.Ai21LabsAPIKey
		*out = new(string)
		**out = **in
	}
	if in.Ai21LabsAPIKeyPlaintext != nil {
		in, out := &in.Ai21LabsAPIKeyPlaintext, &out.Ai21LabsAPIKeyPlaintext
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ai21LabsConfigObservation.
func (in *Ai21LabsConfigObservation) DeepCopy() *Ai21LabsConfigObservation {
	if in == nil {
		return nil
	}
	out := new(Ai21LabsConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ai21LabsConfigParameters) DeepCopyInto(out *Ai21LabsConfigParameters) {
	*out = *in
	if in.Ai21LabsAPIKey != nil {
		in, out := &in.Ai21LabsAPIKey, &out.Ai21LabsAPIKey
		*out = new(string)
		**out = **in
	}
	if in.Ai21LabsAPIKeyPlaintext != nil {
		in, out := &in.Ai21LabsAPIKeyPlaintext, &out.Ai21LabsAPIKeyPlaintext
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ai21LabsConfigParameters.
func (in *Ai21LabsConfigParameters) DeepCopy() *Ai21LabsConfigParameters {
	if in == nil {
		return nil
	}
	out := new(Ai21LabsConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Alert) DeepCopyInto(out *Alert) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Alert.
func (in *Alert) DeepCopy() *Alert {
	if in == nil {
		return nil
	}
	out := new(Alert)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Alert) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertConfigurationsInitParameters) DeepCopyInto(out *AlertConfigurationsInitParameters) {
	*out = *in
	if in.ActionConfigurations != nil {
		in, out := &in.ActionConfigurations, &out.ActionConfigurations
		*out = make([]ActionConfigurationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AlertConfigurationID != nil {
		in, out := &in.AlertConfigurationID, &out.AlertConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.QuantityThreshold != nil {
		in, out := &in.QuantityThreshold, &out.QuantityThreshold
		*out = new(string)
		**out = **in
	}
	if in.QuantityType != nil {
		in, out := &in.QuantityType, &out.QuantityType
		*out = new(string)
		**out = **in
	}
	if in.TimePeriod != nil {
		in, out := &in.TimePeriod, &out.TimePeriod
		*out = new(string)
		**out = **in
	}
	if in.TriggerType != nil {
		in, out := &in.TriggerType, &out.TriggerType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertConfigurationsInitParameters.
func (in *AlertConfigurationsInitParameters) DeepCopy() *AlertConfigurationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AlertConfigurationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertConfigurationsObservation) DeepCopyInto(out *AlertConfigurationsObservation) {
	*out = *in
	if in.ActionConfigurations != nil {
		in, out := &in.ActionConfigurations, &out.ActionConfigurations
		*out = make([]ActionConfigurationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AlertConfigurationID != nil {
		in, out := &in.AlertConfigurationID, &out.AlertConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.QuantityThreshold != nil {
		in, out := &in.QuantityThreshold, &out.QuantityThreshold
		*out = new(string)
		**out = **in
	}
	if in.QuantityType != nil {
		in, out := &in.QuantityType, &out.QuantityType
		*out = new(string)
		**out = **in
	}
	if in.TimePeriod != nil {
		in, out := &in.TimePeriod, &out.TimePeriod
		*out = new(string)
		**out = **in
	}
	if in.TriggerType != nil {
		in, out := &in.TriggerType, &out.TriggerType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertConfigurationsObservation.
func (in *AlertConfigurationsObservation) DeepCopy() *AlertConfigurationsObservation {
	if in == nil {
		return nil
	}
	out := new(AlertConfigurationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertConfigurationsParameters) DeepCopyInto(out *AlertConfigurationsParameters) {
	*out = *in
	if in.ActionConfigurations != nil {
		in, out := &in.ActionConfigurations, &out.ActionConfigurations
		*out = make([]ActionConfigurationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AlertConfigurationID != nil {
		in, out := &in.AlertConfigurationID, &out.AlertConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.QuantityThreshold != nil {
		in, out := &in.QuantityThreshold, &out.QuantityThreshold
		*out = new(string)
		**out = **in
	}
	if in.QuantityType != nil {
		in, out := &in.QuantityType, &out.QuantityType
		*out = new(string)
		**out = **in
	}
	if in.TimePeriod != nil {
		in, out := &in.TimePeriod, &out.TimePeriod
		*out = new(string)
		**out = **in
	}
	if in.TriggerType != nil {
		in, out := &in.TriggerType, &out.TriggerType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertConfigurationsParameters.
func (in *AlertConfigurationsParameters) DeepCopy() *AlertConfigurationsParameters {
	if in == nil {
		return nil
	}
	out := new(AlertConfigurationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertInitParameters) DeepCopyInto(out *AlertInitParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomBody != nil {
		in, out := &in.CustomBody, &out.CustomBody
		*out = new(string)
		**out = **in
	}
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.NotifyOnOk != nil {
		in, out := &in.NotifyOnOk, &out.NotifyOnOk
		*out = new(bool)
		**out = **in
	}
	if in.OwnerUserName != nil {
		in, out := &in.OwnerUserName, &out.OwnerUserName
		*out = new(string)
		**out = **in
	}
	if in.ParentPath != nil {
		in, out := &in.ParentPath, &out.ParentPath
		*out = new(string)
		**out = **in
	}
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
	if in.SecondsToRetrigger != nil {
		in, out := &in.SecondsToRetrigger, &out.SecondsToRetrigger
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertInitParameters.
func (in *AlertInitParameters) DeepCopy() *AlertInitParameters {
	if in == nil {
		return nil
	}
	out := new(AlertInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertList) DeepCopyInto(out *AlertList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Alert, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertList.
func (in *AlertList) DeepCopy() *AlertList {
	if in == nil {
		return nil
	}
	out := new(AlertList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlertList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertObservation) DeepCopyInto(out *AlertObservation) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.CustomBody != nil {
		in, out := &in.CustomBody, &out.CustomBody
		*out = new(string)
		**out = **in
	}
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LifecycleState != nil {
		in, out := &in.LifecycleState, &out.LifecycleState
		*out = new(string)
		**out = **in
	}
	if in.NotifyOnOk != nil {
		in, out := &in.NotifyOnOk, &out.NotifyOnOk
		*out = new(bool)
		**out = **in
	}
	if in.OwnerUserName != nil {
		in, out := &in.OwnerUserName, &out.OwnerUserName
		*out = new(string)
		**out = **in
	}
	if in.ParentPath != nil {
		in, out := &in.ParentPath, &out.ParentPath
		*out = new(string)
		**out = **in
	}
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
	if in.SecondsToRetrigger != nil {
		in, out := &in.SecondsToRetrigger, &out.SecondsToRetrigger
		*out = new(float64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TriggerTime != nil {
		in, out := &in.TriggerTime, &out.TriggerTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertObservation.
func (in *AlertObservation) DeepCopy() *AlertObservation {
	if in == nil {
		return nil
	}
	out := new(AlertObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertParameters) DeepCopyInto(out *AlertParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomBody != nil {
		in, out := &in.CustomBody, &out.CustomBody
		*out = new(string)
		**out = **in
	}
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.NotifyOnOk != nil {
		in, out := &in.NotifyOnOk, &out.NotifyOnOk
		*out = new(bool)
		**out = **in
	}
	if in.OwnerUserName != nil {
		in, out := &in.OwnerUserName, &out.OwnerUserName
		*out = new(string)
		**out = **in
	}
	if in.ParentPath != nil {
		in, out := &in.ParentPath, &out.ParentPath
		*out = new(string)
		**out = **in
	}
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
	if in.SecondsToRetrigger != nil {
		in, out := &in.SecondsToRetrigger, &out.SecondsToRetrigger
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertParameters.
func (in *AlertParameters) DeepCopy() *AlertParameters {
	if in == nil {
		return nil
	}
	out := new(AlertParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertSpec) DeepCopyInto(out *AlertSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertSpec.
func (in *AlertSpec) DeepCopy() *AlertSpec {
	if in == nil {
		return nil
	}
	out := new(AlertSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertStatus) DeepCopyInto(out *AlertStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertStatus.
func (in *AlertStatus) DeepCopy() *AlertStatus {
	if in == nil {
		return nil
	}
	out := new(AlertStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertSubscriptionsInitParameters) DeepCopyInto(out *AlertSubscriptionsInitParameters) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertSubscriptionsInitParameters.
func (in *AlertSubscriptionsInitParameters) DeepCopy() *AlertSubscriptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AlertSubscriptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertSubscriptionsObservation) DeepCopyInto(out *AlertSubscriptionsObservation) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertSubscriptionsObservation.
func (in *AlertSubscriptionsObservation) DeepCopy() *AlertSubscriptionsObservation {
	if in == nil {
		return nil
	}
	out := new(AlertSubscriptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertSubscriptionsParameters) DeepCopyInto(out *AlertSubscriptionsParameters) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertSubscriptionsParameters.
func (in *AlertSubscriptionsParameters) DeepCopy() *AlertSubscriptionsParameters {
	if in == nil {
		return nil
	}
	out := new(AlertSubscriptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmazonBedrockConfigInitParameters) DeepCopyInto(out *AmazonBedrockConfigInitParameters) {
	*out = *in
	if in.AwsAccessKeyID != nil {
		in, out := &in.AwsAccessKeyID, &out.AwsAccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.AwsAccessKeyIDPlaintext != nil {
		in, out := &in.AwsAccessKeyIDPlaintext, &out.AwsAccessKeyIDPlaintext
		*out = new(string)
		**out = **in
	}
	if in.AwsRegion != nil {
		in, out := &in.AwsRegion, &out.AwsRegion
		*out = new(string)
		**out = **in
	}
	if in.AwsSecretAccessKey != nil {
		in, out := &in.AwsSecretAccessKey, &out.AwsSecretAccessKey
		*out = new(string)
		**out = **in
	}
	if in.AwsSecretAccessKeyPlaintext != nil {
		in, out := &in.AwsSecretAccessKeyPlaintext, &out.AwsSecretAccessKeyPlaintext
		*out = new(string)
		**out = **in
	}
	if in.BedrockProvider != nil {
		in, out := &in.BedrockProvider, &out.BedrockProvider
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmazonBedrockConfigInitParameters.
func (in *AmazonBedrockConfigInitParameters) DeepCopy() *AmazonBedrockConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AmazonBedrockConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmazonBedrockConfigObservation) DeepCopyInto(out *AmazonBedrockConfigObservation) {
	*out = *in
	if in.AwsAccessKeyID != nil {
		in, out := &in.AwsAccessKeyID, &out.AwsAccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.AwsAccessKeyIDPlaintext != nil {
		in, out := &in.AwsAccessKeyIDPlaintext, &out.AwsAccessKeyIDPlaintext
		*out = new(string)
		**out = **in
	}
	if in.AwsRegion != nil {
		in, out := &in.AwsRegion, &out.AwsRegion
		*out = new(string)
		**out = **in
	}
	if in.AwsSecretAccessKey != nil {
		in, out := &in.AwsSecretAccessKey, &out.AwsSecretAccessKey
		*out = new(string)
		**out = **in
	}
	if in.AwsSecretAccessKeyPlaintext != nil {
		in, out := &in.AwsSecretAccessKeyPlaintext, &out.AwsSecretAccessKeyPlaintext
		*out = new(string)
		**out = **in
	}
	if in.BedrockProvider != nil {
		in, out := &in.BedrockProvider, &out.BedrockProvider
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmazonBedrockConfigObservation.
func (in *AmazonBedrockConfigObservation) DeepCopy() *AmazonBedrockConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AmazonBedrockConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmazonBedrockConfigParameters) DeepCopyInto(out *AmazonBedrockConfigParameters) {
	*out = *in
	if in.AwsAccessKeyID != nil {
		in, out := &in.AwsAccessKeyID, &out.AwsAccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.AwsAccessKeyIDPlaintext != nil {
		in, out := &in.AwsAccessKeyIDPlaintext, &out.AwsAccessKeyIDPlaintext
		*out = new(string)
		**out = **in
	}
	if in.AwsRegion != nil {
		in, out := &in.AwsRegion, &out.AwsRegion
		*out = new(string)
		**out = **in
	}
	if in.AwsSecretAccessKey != nil {
		in, out := &in.AwsSecretAccessKey, &out.AwsSecretAccessKey
		*out = new(string)
		**out = **in
	}
	if in.AwsSecretAccessKeyPlaintext != nil {
		in, out := &in.AwsSecretAccessKeyPlaintext, &out.AwsSecretAccessKeyPlaintext
		*out = new(string)
		**out = **in
	}
	if in.BedrockProvider != nil {
		in, out := &in.BedrockProvider, &out.BedrockProvider
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmazonBedrockConfigParameters.
func (in *AmazonBedrockConfigParameters) DeepCopy() *AmazonBedrockConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AmazonBedrockConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnthropicConfigInitParameters) DeepCopyInto(out *AnthropicConfigInitParameters) {
	*out = *in
	if in.AnthropicAPIKey != nil {
		in, out := &in.AnthropicAPIKey, &out.AnthropicAPIKey
		*out = new(string)
		**out = **in
	}
	if in.AnthropicAPIKeyPlaintext != nil {
		in, out := &in.AnthropicAPIKeyPlaintext, &out.AnthropicAPIKeyPlaintext
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnthropicConfigInitParameters.
func (in *AnthropicConfigInitParameters) DeepCopy() *AnthropicConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AnthropicConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnthropicConfigObservation) DeepCopyInto(out *AnthropicConfigObservation) {
	*out = *in
	if in.AnthropicAPIKey != nil {
		in, out := &in.AnthropicAPIKey, &out.AnthropicAPIKey
		*out = new(string)
		**out = **in
	}
	if in.AnthropicAPIKeyPlaintext != nil {
		in, out := &in.AnthropicAPIKeyPlaintext, &out.AnthropicAPIKeyPlaintext
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnthropicConfigObservation.
func (in *AnthropicConfigObservation) DeepCopy() *AnthropicConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AnthropicConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnthropicConfigParameters) DeepCopyInto(out *AnthropicConfigParameters) {
	*out = *in
	if in.AnthropicAPIKey != nil {
		in, out := &in.AnthropicAPIKey, &out.AnthropicAPIKey
		*out = new(string)
		**out = **in
	}
	if in.AnthropicAPIKeyPlaintext != nil {
		in, out := &in.AnthropicAPIKeyPlaintext, &out.AnthropicAPIKeyPlaintext
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnthropicConfigParameters.
func (in *AnthropicConfigParameters) DeepCopy() *AnthropicConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AnthropicConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactAllowlist) DeepCopyInto(out *ArtifactAllowlist) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactAllowlist.
func (in *ArtifactAllowlist) DeepCopy() *ArtifactAllowlist {
	if in == nil {
		return nil
	}
	out := new(ArtifactAllowlist)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ArtifactAllowlist) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactAllowlistInitParameters) DeepCopyInto(out *ArtifactAllowlistInitParameters) {
	*out = *in
	if in.ArtifactMatcher != nil {
		in, out := &in.ArtifactMatcher, &out.ArtifactMatcher
		*out = make([]ArtifactMatcherInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ArtifactType != nil {
		in, out := &in.ArtifactType, &out.ArtifactType
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactAllowlistInitParameters.
func (in *ArtifactAllowlistInitParameters) DeepCopy() *ArtifactAllowlistInitParameters {
	if in == nil {
		return nil
	}
	out := new(ArtifactAllowlistInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactAllowlistList) DeepCopyInto(out *ArtifactAllowlistList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ArtifactAllowlist, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactAllowlistList.
func (in *ArtifactAllowlistList) DeepCopy() *ArtifactAllowlistList {
	if in == nil {
		return nil
	}
	out := new(ArtifactAllowlistList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ArtifactAllowlistList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactAllowlistObservation) DeepCopyInto(out *ArtifactAllowlistObservation) {
	*out = *in
	if in.ArtifactMatcher != nil {
		in, out := &in.ArtifactMatcher, &out.ArtifactMatcher
		*out = make([]ArtifactMatcherObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ArtifactType != nil {
		in, out := &in.ArtifactType, &out.ArtifactType
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactAllowlistObservation.
func (in *ArtifactAllowlistObservation) DeepCopy() *ArtifactAllowlistObservation {
	if in == nil {
		return nil
	}
	out := new(ArtifactAllowlistObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactAllowlistParameters) DeepCopyInto(out *ArtifactAllowlistParameters) {
	*out = *in
	if in.ArtifactMatcher != nil {
		in, out := &in.ArtifactMatcher, &out.ArtifactMatcher
		*out = make([]ArtifactMatcherParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ArtifactType != nil {
		in, out := &in.ArtifactType, &out.ArtifactType
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactAllowlistParameters.
func (in *ArtifactAllowlistParameters) DeepCopy() *ArtifactAllowlistParameters {
	if in == nil {
		return nil
	}
	out := new(ArtifactAllowlistParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactAllowlistSpec) DeepCopyInto(out *ArtifactAllowlistSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactAllowlistSpec.
func (in *ArtifactAllowlistSpec) DeepCopy() *ArtifactAllowlistSpec {
	if in == nil {
		return nil
	}
	out := new(ArtifactAllowlistSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactAllowlistStatus) DeepCopyInto(out *ArtifactAllowlistStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactAllowlistStatus.
func (in *ArtifactAllowlistStatus) DeepCopy() *ArtifactAllowlistStatus {
	if in == nil {
		return nil
	}
	out := new(ArtifactAllowlistStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactMatcherInitParameters) DeepCopyInto(out *ArtifactMatcherInitParameters) {
	*out = *in
	if in.Artifact != nil {
		in, out := &in.Artifact, &out.Artifact
		*out = new(string)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactMatcherInitParameters.
func (in *ArtifactMatcherInitParameters) DeepCopy() *ArtifactMatcherInitParameters {
	if in == nil {
		return nil
	}
	out := new(ArtifactMatcherInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactMatcherObservation) DeepCopyInto(out *ArtifactMatcherObservation) {
	*out = *in
	if in.Artifact != nil {
		in, out := &in.Artifact, &out.Artifact
		*out = new(string)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactMatcherObservation.
func (in *ArtifactMatcherObservation) DeepCopy() *ArtifactMatcherObservation {
	if in == nil {
		return nil
	}
	out := new(ArtifactMatcherObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactMatcherParameters) DeepCopyInto(out *ArtifactMatcherParameters) {
	*out = *in
	if in.Artifact != nil {
		in, out := &in.Artifact, &out.Artifact
		*out = new(string)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactMatcherParameters.
func (in *ArtifactMatcherParameters) DeepCopy() *ArtifactMatcherParameters {
	if in == nil {
		return nil
	}
	out := new(ArtifactMatcherParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoCaptureConfigInitParameters) DeepCopyInto(out *AutoCaptureConfigInitParameters) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.TableNamePrefix != nil {
		in, out := &in.TableNamePrefix, &out.TableNamePrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoCaptureConfigInitParameters.
func (in *AutoCaptureConfigInitParameters) DeepCopy() *AutoCaptureConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoCaptureConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoCaptureConfigObservation) DeepCopyInto(out *AutoCaptureConfigObservation) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.TableNamePrefix != nil {
		in, out := &in.TableNamePrefix, &out.TableNamePrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoCaptureConfigObservation.
func (in *AutoCaptureConfigObservation) DeepCopy() *AutoCaptureConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AutoCaptureConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoCaptureConfigParameters) DeepCopyInto(out *AutoCaptureConfigParameters) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.TableNamePrefix != nil {
		in, out := &in.TableNamePrefix, &out.TableNamePrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoCaptureConfigParameters.
func (in *AutoCaptureConfigParameters) DeepCopy() *AutoCaptureConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AutoCaptureConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomaticClusterUpdateWorkspaceInitParameters) DeepCopyInto(out *AutomaticClusterUpdateWorkspaceInitParameters) {
	*out = *in
	if in.CanToggle != nil {
		in, out := &in.CanToggle, &out.CanToggle
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MaintenanceWindow != nil {
		in, out := &in.MaintenanceWindow, &out.MaintenanceWindow
		*out = make([]MaintenanceWindowInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RestartEvenIfNoUpdatesAvailable != nil {
		in, out := &in.RestartEvenIfNoUpdatesAvailable, &out.RestartEvenIfNoUpdatesAvailable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomaticClusterUpdateWorkspaceInitParameters.
func (in *AutomaticClusterUpdateWorkspaceInitParameters) DeepCopy() *AutomaticClusterUpdateWorkspaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutomaticClusterUpdateWorkspaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomaticClusterUpdateWorkspaceObservation) DeepCopyInto(out *AutomaticClusterUpdateWorkspaceObservation) {
	*out = *in
	if in.CanToggle != nil {
		in, out := &in.CanToggle, &out.CanToggle
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.EnablementDetails != nil {
		in, out := &in.EnablementDetails, &out.EnablementDetails
		*out = make([]EnablementDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaintenanceWindow != nil {
		in, out := &in.MaintenanceWindow, &out.MaintenanceWindow
		*out = make([]MaintenanceWindowObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RestartEvenIfNoUpdatesAvailable != nil {
		in, out := &in.RestartEvenIfNoUpdatesAvailable, &out.RestartEvenIfNoUpdatesAvailable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomaticClusterUpdateWorkspaceObservation.
func (in *AutomaticClusterUpdateWorkspaceObservation) DeepCopy() *AutomaticClusterUpdateWorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(AutomaticClusterUpdateWorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomaticClusterUpdateWorkspaceParameters) DeepCopyInto(out *AutomaticClusterUpdateWorkspaceParameters) {
	*out = *in
	if in.CanToggle != nil {
		in, out := &in.CanToggle, &out.CanToggle
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MaintenanceWindow != nil {
		in, out := &in.MaintenanceWindow, &out.MaintenanceWindow
		*out = make([]MaintenanceWindowParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RestartEvenIfNoUpdatesAvailable != nil {
		in, out := &in.RestartEvenIfNoUpdatesAvailable, &out.RestartEvenIfNoUpdatesAvailable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomaticClusterUpdateWorkspaceParameters.
func (in *AutomaticClusterUpdateWorkspaceParameters) DeepCopy() *AutomaticClusterUpdateWorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(AutomaticClusterUpdateWorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomaticClusterUpdateWorkspaceSetting) DeepCopyInto(out *AutomaticClusterUpdateWorkspaceSetting) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomaticClusterUpdateWorkspaceSetting.
func (in *AutomaticClusterUpdateWorkspaceSetting) DeepCopy() *AutomaticClusterUpdateWorkspaceSetting {
	if in == nil {
		return nil
	}
	out := new(AutomaticClusterUpdateWorkspaceSetting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutomaticClusterUpdateWorkspaceSetting) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomaticClusterUpdateWorkspaceSettingInitParameters) DeepCopyInto(out *AutomaticClusterUpdateWorkspaceSettingInitParameters) {
	*out = *in
	if in.AutomaticClusterUpdateWorkspace != nil {
		in, out := &in.AutomaticClusterUpdateWorkspace, &out.AutomaticClusterUpdateWorkspace
		*out = make([]AutomaticClusterUpdateWorkspaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.SettingName != nil {
		in, out := &in.SettingName, &out.SettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomaticClusterUpdateWorkspaceSettingInitParameters.
func (in *AutomaticClusterUpdateWorkspaceSettingInitParameters) DeepCopy() *AutomaticClusterUpdateWorkspaceSettingInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutomaticClusterUpdateWorkspaceSettingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomaticClusterUpdateWorkspaceSettingList) DeepCopyInto(out *AutomaticClusterUpdateWorkspaceSettingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutomaticClusterUpdateWorkspaceSetting, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomaticClusterUpdateWorkspaceSettingList.
func (in *AutomaticClusterUpdateWorkspaceSettingList) DeepCopy() *AutomaticClusterUpdateWorkspaceSettingList {
	if in == nil {
		return nil
	}
	out := new(AutomaticClusterUpdateWorkspaceSettingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutomaticClusterUpdateWorkspaceSettingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomaticClusterUpdateWorkspaceSettingObservation) DeepCopyInto(out *AutomaticClusterUpdateWorkspaceSettingObservation) {
	*out = *in
	if in.AutomaticClusterUpdateWorkspace != nil {
		in, out := &in.AutomaticClusterUpdateWorkspace, &out.AutomaticClusterUpdateWorkspace
		*out = make([]AutomaticClusterUpdateWorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SettingName != nil {
		in, out := &in.SettingName, &out.SettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomaticClusterUpdateWorkspaceSettingObservation.
func (in *AutomaticClusterUpdateWorkspaceSettingObservation) DeepCopy() *AutomaticClusterUpdateWorkspaceSettingObservation {
	if in == nil {
		return nil
	}
	out := new(AutomaticClusterUpdateWorkspaceSettingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomaticClusterUpdateWorkspaceSettingParameters) DeepCopyInto(out *AutomaticClusterUpdateWorkspaceSettingParameters) {
	*out = *in
	if in.AutomaticClusterUpdateWorkspace != nil {
		in, out := &in.AutomaticClusterUpdateWorkspace, &out.AutomaticClusterUpdateWorkspace
		*out = make([]AutomaticClusterUpdateWorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.SettingName != nil {
		in, out := &in.SettingName, &out.SettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomaticClusterUpdateWorkspaceSettingParameters.
func (in *AutomaticClusterUpdateWorkspaceSettingParameters) DeepCopy() *AutomaticClusterUpdateWorkspaceSettingParameters {
	if in == nil {
		return nil
	}
	out := new(AutomaticClusterUpdateWorkspaceSettingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomaticClusterUpdateWorkspaceSettingSpec) DeepCopyInto(out *AutomaticClusterUpdateWorkspaceSettingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomaticClusterUpdateWorkspaceSettingSpec.
func (in *AutomaticClusterUpdateWorkspaceSettingSpec) DeepCopy() *AutomaticClusterUpdateWorkspaceSettingSpec {
	if in == nil {
		return nil
	}
	out := new(AutomaticClusterUpdateWorkspaceSettingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomaticClusterUpdateWorkspaceSettingStatus) DeepCopyInto(out *AutomaticClusterUpdateWorkspaceSettingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomaticClusterUpdateWorkspaceSettingStatus.
func (in *AutomaticClusterUpdateWorkspaceSettingStatus) DeepCopy() *AutomaticClusterUpdateWorkspaceSettingStatus {
	if in == nil {
		return nil
	}
	out := new(AutomaticClusterUpdateWorkspaceSettingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleInitParameters) DeepCopyInto(out *AutoscaleInitParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleInitParameters.
func (in *AutoscaleInitParameters) DeepCopy() *AutoscaleInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscaleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleObservation) DeepCopyInto(out *AutoscaleObservation) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleObservation.
func (in *AutoscaleObservation) DeepCopy() *AutoscaleObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscaleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleParameters) DeepCopyInto(out *AutoscaleParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleParameters.
func (in *AutoscaleParameters) DeepCopy() *AutoscaleParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscaleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsAttributesInitParameters) DeepCopyInto(out *AwsAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsAttributesInitParameters.
func (in *AwsAttributesInitParameters) DeepCopy() *AwsAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AwsAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsAttributesObservation) DeepCopyInto(out *AwsAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsAttributesObservation.
func (in *AwsAttributesObservation) DeepCopy() *AwsAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(AwsAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsAttributesParameters) DeepCopyInto(out *AwsAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsAttributesParameters.
func (in *AwsAttributesParameters) DeepCopy() *AwsAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(AwsAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsIAMRoleInitParameters) DeepCopyInto(out *AwsIAMRoleInitParameters) {
	*out = *in
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.UnityCatalogIAMArn != nil {
		in, out := &in.UnityCatalogIAMArn, &out.UnityCatalogIAMArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsIAMRoleInitParameters.
func (in *AwsIAMRoleInitParameters) DeepCopy() *AwsIAMRoleInitParameters {
	if in == nil {
		return nil
	}
	out := new(AwsIAMRoleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsIAMRoleObservation) DeepCopyInto(out *AwsIAMRoleObservation) {
	*out = *in
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.UnityCatalogIAMArn != nil {
		in, out := &in.UnityCatalogIAMArn, &out.UnityCatalogIAMArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsIAMRoleObservation.
func (in *AwsIAMRoleObservation) DeepCopy() *AwsIAMRoleObservation {
	if in == nil {
		return nil
	}
	out := new(AwsIAMRoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsIAMRoleParameters) DeepCopyInto(out *AwsIAMRoleParameters) {
	*out = *in
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.UnityCatalogIAMArn != nil {
		in, out := &in.UnityCatalogIAMArn, &out.UnityCatalogIAMArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsIAMRoleParameters.
func (in *AwsIAMRoleParameters) DeepCopy() *AwsIAMRoleParameters {
	if in == nil {
		return nil
	}
	out := new(AwsIAMRoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsKeyInfoInitParameters) DeepCopyInto(out *AwsKeyInfoInitParameters) {
	*out = *in
	if in.KeyAlias != nil {
		in, out := &in.KeyAlias, &out.KeyAlias
		*out = new(string)
		**out = **in
	}
	if in.KeyArn != nil {
		in, out := &in.KeyArn, &out.KeyArn
		*out = new(string)
		**out = **in
	}
	if in.KeyRegion != nil {
		in, out := &in.KeyRegion, &out.KeyRegion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsKeyInfoInitParameters.
func (in *AwsKeyInfoInitParameters) DeepCopy() *AwsKeyInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(AwsKeyInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsKeyInfoObservation) DeepCopyInto(out *AwsKeyInfoObservation) {
	*out = *in
	if in.KeyAlias != nil {
		in, out := &in.KeyAlias, &out.KeyAlias
		*out = new(string)
		**out = **in
	}
	if in.KeyArn != nil {
		in, out := &in.KeyArn, &out.KeyArn
		*out = new(string)
		**out = **in
	}
	if in.KeyRegion != nil {
		in, out := &in.KeyRegion, &out.KeyRegion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsKeyInfoObservation.
func (in *AwsKeyInfoObservation) DeepCopy() *AwsKeyInfoObservation {
	if in == nil {
		return nil
	}
	out := new(AwsKeyInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsKeyInfoParameters) DeepCopyInto(out *AwsKeyInfoParameters) {
	*out = *in
	if in.KeyAlias != nil {
		in, out := &in.KeyAlias, &out.KeyAlias
		*out = new(string)
		**out = **in
	}
	if in.KeyArn != nil {
		in, out := &in.KeyArn, &out.KeyArn
		*out = new(string)
		**out = **in
	}
	if in.KeyRegion != nil {
		in, out := &in.KeyRegion, &out.KeyRegion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsKeyInfoParameters.
func (in *AwsKeyInfoParameters) DeepCopy() *AwsKeyInfoParameters {
	if in == nil {
		return nil
	}
	out := new(AwsKeyInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsS3Mount) DeepCopyInto(out *AwsS3Mount) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsS3Mount.
func (in *AwsS3Mount) DeepCopy() *AwsS3Mount {
	if in == nil {
		return nil
	}
	out := new(AwsS3Mount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AwsS3Mount) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsS3MountInitParameters) DeepCopyInto(out *AwsS3MountInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.InstanceProfile != nil {
		in, out := &in.InstanceProfile, &out.InstanceProfile
		*out = new(string)
		**out = **in
	}
	if in.MountName != nil {
		in, out := &in.MountName, &out.MountName
		*out = new(string)
		**out = **in
	}
	if in.S3BucketName != nil {
		in, out := &in.S3BucketName, &out.S3BucketName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsS3MountInitParameters.
func (in *AwsS3MountInitParameters) DeepCopy() *AwsS3MountInitParameters {
	if in == nil {
		return nil
	}
	out := new(AwsS3MountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsS3MountList) DeepCopyInto(out *AwsS3MountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AwsS3Mount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsS3MountList.
func (in *AwsS3MountList) DeepCopy() *AwsS3MountList {
	if in == nil {
		return nil
	}
	out := new(AwsS3MountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AwsS3MountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsS3MountObservation) DeepCopyInto(out *AwsS3MountObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceProfile != nil {
		in, out := &in.InstanceProfile, &out.InstanceProfile
		*out = new(string)
		**out = **in
	}
	if in.MountName != nil {
		in, out := &in.MountName, &out.MountName
		*out = new(string)
		**out = **in
	}
	if in.S3BucketName != nil {
		in, out := &in.S3BucketName, &out.S3BucketName
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsS3MountObservation.
func (in *AwsS3MountObservation) DeepCopy() *AwsS3MountObservation {
	if in == nil {
		return nil
	}
	out := new(AwsS3MountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsS3MountParameters) DeepCopyInto(out *AwsS3MountParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.InstanceProfile != nil {
		in, out := &in.InstanceProfile, &out.InstanceProfile
		*out = new(string)
		**out = **in
	}
	if in.MountName != nil {
		in, out := &in.MountName, &out.MountName
		*out = new(string)
		**out = **in
	}
	if in.S3BucketName != nil {
		in, out := &in.S3BucketName, &out.S3BucketName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsS3MountParameters.
func (in *AwsS3MountParameters) DeepCopy() *AwsS3MountParameters {
	if in == nil {
		return nil
	}
	out := new(AwsS3MountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsS3MountSpec) DeepCopyInto(out *AwsS3MountSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsS3MountSpec.
func (in *AwsS3MountSpec) DeepCopy() *AwsS3MountSpec {
	if in == nil {
		return nil
	}
	out := new(AwsS3MountSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsS3MountStatus) DeepCopyInto(out *AwsS3MountStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsS3MountStatus.
func (in *AwsS3MountStatus) DeepCopy() *AwsS3MountStatus {
	if in == nil {
		return nil
	}
	out := new(AwsS3MountStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsStableIPRuleInitParameters) DeepCopyInto(out *AwsStableIPRuleInitParameters) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsStableIPRuleInitParameters.
func (in *AwsStableIPRuleInitParameters) DeepCopy() *AwsStableIPRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(AwsStableIPRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsStableIPRuleObservation) DeepCopyInto(out *AwsStableIPRuleObservation) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsStableIPRuleObservation.
func (in *AwsStableIPRuleObservation) DeepCopy() *AwsStableIPRuleObservation {
	if in == nil {
		return nil
	}
	out := new(AwsStableIPRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsStableIPRuleParameters) DeepCopyInto(out *AwsStableIPRuleParameters) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsStableIPRuleParameters.
func (in *AwsStableIPRuleParameters) DeepCopy() *AwsStableIPRuleParameters {
	if in == nil {
		return nil
	}
	out := new(AwsStableIPRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAdlsGen1Mount) DeepCopyInto(out *AzureAdlsGen1Mount) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAdlsGen1Mount.
func (in *AzureAdlsGen1Mount) DeepCopy() *AzureAdlsGen1Mount {
	if in == nil {
		return nil
	}
	out := new(AzureAdlsGen1Mount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AzureAdlsGen1Mount) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAdlsGen1MountInitParameters) DeepCopyInto(out *AzureAdlsGen1MountInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretKey != nil {
		in, out := &in.ClientSecretKey, &out.ClientSecretKey
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretScope != nil {
		in, out := &in.ClientSecretScope, &out.ClientSecretScope
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Directory != nil {
		in, out := &in.Directory, &out.Directory
		*out = new(string)
		**out = **in
	}
	if in.MountName != nil {
		in, out := &in.MountName, &out.MountName
		*out = new(string)
		**out = **in
	}
	if in.SparkConfPrefix != nil {
		in, out := &in.SparkConfPrefix, &out.SparkConfPrefix
		*out = new(string)
		**out = **in
	}
	if in.StorageResourceName != nil {
		in, out := &in.StorageResourceName, &out.StorageResourceName
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAdlsGen1MountInitParameters.
func (in *AzureAdlsGen1MountInitParameters) DeepCopy() *AzureAdlsGen1MountInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureAdlsGen1MountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAdlsGen1MountList) DeepCopyInto(out *AzureAdlsGen1MountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AzureAdlsGen1Mount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAdlsGen1MountList.
func (in *AzureAdlsGen1MountList) DeepCopy() *AzureAdlsGen1MountList {
	if in == nil {
		return nil
	}
	out := new(AzureAdlsGen1MountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AzureAdlsGen1MountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAdlsGen1MountObservation) DeepCopyInto(out *AzureAdlsGen1MountObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretKey != nil {
		in, out := &in.ClientSecretKey, &out.ClientSecretKey
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretScope != nil {
		in, out := &in.ClientSecretScope, &out.ClientSecretScope
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Directory != nil {
		in, out := &in.Directory, &out.Directory
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MountName != nil {
		in, out := &in.MountName, &out.MountName
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.SparkConfPrefix != nil {
		in, out := &in.SparkConfPrefix, &out.SparkConfPrefix
		*out = new(string)
		**out = **in
	}
	if in.StorageResourceName != nil {
		in, out := &in.StorageResourceName, &out.StorageResourceName
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAdlsGen1MountObservation.
func (in *AzureAdlsGen1MountObservation) DeepCopy() *AzureAdlsGen1MountObservation {
	if in == nil {
		return nil
	}
	out := new(AzureAdlsGen1MountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAdlsGen1MountParameters) DeepCopyInto(out *AzureAdlsGen1MountParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretKey != nil {
		in, out := &in.ClientSecretKey, &out.ClientSecretKey
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretScope != nil {
		in, out := &in.ClientSecretScope, &out.ClientSecretScope
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Directory != nil {
		in, out := &in.Directory, &out.Directory
		*out = new(string)
		**out = **in
	}
	if in.MountName != nil {
		in, out := &in.MountName, &out.MountName
		*out = new(string)
		**out = **in
	}
	if in.SparkConfPrefix != nil {
		in, out := &in.SparkConfPrefix, &out.SparkConfPrefix
		*out = new(string)
		**out = **in
	}
	if in.StorageResourceName != nil {
		in, out := &in.StorageResourceName, &out.StorageResourceName
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAdlsGen1MountParameters.
func (in *AzureAdlsGen1MountParameters) DeepCopy() *AzureAdlsGen1MountParameters {
	if in == nil {
		return nil
	}
	out := new(AzureAdlsGen1MountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAdlsGen1MountSpec) DeepCopyInto(out *AzureAdlsGen1MountSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAdlsGen1MountSpec.
func (in *AzureAdlsGen1MountSpec) DeepCopy() *AzureAdlsGen1MountSpec {
	if in == nil {
		return nil
	}
	out := new(AzureAdlsGen1MountSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAdlsGen1MountStatus) DeepCopyInto(out *AzureAdlsGen1MountStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAdlsGen1MountStatus.
func (in *AzureAdlsGen1MountStatus) DeepCopy() *AzureAdlsGen1MountStatus {
	if in == nil {
		return nil
	}
	out := new(AzureAdlsGen1MountStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAdlsGen2Mount) DeepCopyInto(out *AzureAdlsGen2Mount) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAdlsGen2Mount.
func (in *AzureAdlsGen2Mount) DeepCopy() *AzureAdlsGen2Mount {
	if in == nil {
		return nil
	}
	out := new(AzureAdlsGen2Mount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AzureAdlsGen2Mount) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAdlsGen2MountInitParameters) DeepCopyInto(out *AzureAdlsGen2MountInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretKey != nil {
		in, out := &in.ClientSecretKey, &out.ClientSecretKey
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretScope != nil {
		in, out := &in.ClientSecretScope, &out.ClientSecretScope
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.Directory != nil {
		in, out := &in.Directory, &out.Directory
		*out = new(string)
		**out = **in
	}
	if in.InitializeFileSystem != nil {
		in, out := &in.InitializeFileSystem, &out.InitializeFileSystem
		*out = new(bool)
		**out = **in
	}
	if in.MountName != nil {
		in, out := &in.MountName, &out.MountName
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAdlsGen2MountInitParameters.
func (in *AzureAdlsGen2MountInitParameters) DeepCopy() *AzureAdlsGen2MountInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureAdlsGen2MountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAdlsGen2MountList) DeepCopyInto(out *AzureAdlsGen2MountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AzureAdlsGen2Mount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAdlsGen2MountList.
func (in *AzureAdlsGen2MountList) DeepCopy() *AzureAdlsGen2MountList {
	if in == nil {
		return nil
	}
	out := new(AzureAdlsGen2MountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AzureAdlsGen2MountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAdlsGen2MountObservation) DeepCopyInto(out *AzureAdlsGen2MountObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretKey != nil {
		in, out := &in.ClientSecretKey, &out.ClientSecretKey
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretScope != nil {
		in, out := &in.ClientSecretScope, &out.ClientSecretScope
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.Directory != nil {
		in, out := &in.Directory, &out.Directory
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InitializeFileSystem != nil {
		in, out := &in.InitializeFileSystem, &out.InitializeFileSystem
		*out = new(bool)
		**out = **in
	}
	if in.MountName != nil {
		in, out := &in.MountName, &out.MountName
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAdlsGen2MountObservation.
func (in *AzureAdlsGen2MountObservation) DeepCopy() *AzureAdlsGen2MountObservation {
	if in == nil {
		return nil
	}
	out := new(AzureAdlsGen2MountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAdlsGen2MountParameters) DeepCopyInto(out *AzureAdlsGen2MountParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretKey != nil {
		in, out := &in.ClientSecretKey, &out.ClientSecretKey
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretScope != nil {
		in, out := &in.ClientSecretScope, &out.ClientSecretScope
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.Directory != nil {
		in, out := &in.Directory, &out.Directory
		*out = new(string)
		**out = **in
	}
	if in.InitializeFileSystem != nil {
		in, out := &in.InitializeFileSystem, &out.InitializeFileSystem
		*out = new(bool)
		**out = **in
	}
	if in.MountName != nil {
		in, out := &in.MountName, &out.MountName
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAdlsGen2MountParameters.
func (in *AzureAdlsGen2MountParameters) DeepCopy() *AzureAdlsGen2MountParameters {
	if in == nil {
		return nil
	}
	out := new(AzureAdlsGen2MountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAdlsGen2MountSpec) DeepCopyInto(out *AzureAdlsGen2MountSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAdlsGen2MountSpec.
func (in *AzureAdlsGen2MountSpec) DeepCopy() *AzureAdlsGen2MountSpec {
	if in == nil {
		return nil
	}
	out := new(AzureAdlsGen2MountSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAdlsGen2MountStatus) DeepCopyInto(out *AzureAdlsGen2MountStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAdlsGen2MountStatus.
func (in *AzureAdlsGen2MountStatus) DeepCopy() *AzureAdlsGen2MountStatus {
	if in == nil {
		return nil
	}
	out := new(AzureAdlsGen2MountStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAttributesInitParameters) DeepCopyInto(out *AzureAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]LogAnalyticsInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAttributesInitParameters.
func (in *AzureAttributesInitParameters) DeepCopy() *AzureAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAttributesLogAnalyticsInfoInitParameters) DeepCopyInto(out *AzureAttributesLogAnalyticsInfoInitParameters) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAttributesLogAnalyticsInfoInitParameters.
func (in *AzureAttributesLogAnalyticsInfoInitParameters) DeepCopy() *AzureAttributesLogAnalyticsInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureAttributesLogAnalyticsInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAttributesLogAnalyticsInfoObservation) DeepCopyInto(out *AzureAttributesLogAnalyticsInfoObservation) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAttributesLogAnalyticsInfoObservation.
func (in *AzureAttributesLogAnalyticsInfoObservation) DeepCopy() *AzureAttributesLogAnalyticsInfoObservation {
	if in == nil {
		return nil
	}
	out := new(AzureAttributesLogAnalyticsInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAttributesLogAnalyticsInfoParameters) DeepCopyInto(out *AzureAttributesLogAnalyticsInfoParameters) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAttributesLogAnalyticsInfoParameters.
func (in *AzureAttributesLogAnalyticsInfoParameters) DeepCopy() *AzureAttributesLogAnalyticsInfoParameters {
	if in == nil {
		return nil
	}
	out := new(AzureAttributesLogAnalyticsInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAttributesObservation) DeepCopyInto(out *AzureAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]LogAnalyticsInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAttributesObservation.
func (in *AzureAttributesObservation) DeepCopy() *AzureAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(AzureAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAttributesParameters) DeepCopyInto(out *AzureAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]LogAnalyticsInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAttributesParameters.
func (in *AzureAttributesParameters) DeepCopy() *AzureAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(AzureAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureBlobMount) DeepCopyInto(out *AzureBlobMount) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureBlobMount.
func (in *AzureBlobMount) DeepCopy() *AzureBlobMount {
	if in == nil {
		return nil
	}
	out := new(AzureBlobMount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AzureBlobMount) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureBlobMountInitParameters) DeepCopyInto(out *AzureBlobMountInitParameters) {
	*out = *in
	if in.AuthType != nil {
		in, out := &in.AuthType, &out.AuthType
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.Directory != nil {
		in, out := &in.Directory, &out.Directory
		*out = new(string)
		**out = **in
	}
	if in.MountName != nil {
		in, out := &in.MountName, &out.MountName
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	out.TokenSecretKeySecretRef = in.TokenSecretKeySecretRef
	if in.TokenSecretScope != nil {
		in, out := &in.TokenSecretScope, &out.TokenSecretScope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureBlobMountInitParameters.
func (in *AzureBlobMountInitParameters) DeepCopy() *AzureBlobMountInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureBlobMountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureBlobMountList) DeepCopyInto(out *AzureBlobMountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AzureBlobMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureBlobMountList.
func (in *AzureBlobMountList) DeepCopy() *AzureBlobMountList {
	if in == nil {
		return nil
	}
	out := new(AzureBlobMountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AzureBlobMountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureBlobMountObservation) DeepCopyInto(out *AzureBlobMountObservation) {
	*out = *in
	if in.AuthType != nil {
		in, out := &in.AuthType, &out.AuthType
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.Directory != nil {
		in, out := &in.Directory, &out.Directory
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MountName != nil {
		in, out := &in.MountName, &out.MountName
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.TokenSecretScope != nil {
		in, out := &in.TokenSecretScope, &out.TokenSecretScope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureBlobMountObservation.
func (in *AzureBlobMountObservation) DeepCopy() *AzureBlobMountObservation {
	if in == nil {
		return nil
	}
	out := new(AzureBlobMountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureBlobMountParameters) DeepCopyInto(out *AzureBlobMountParameters) {
	*out = *in
	if in.AuthType != nil {
		in, out := &in.AuthType, &out.AuthType
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.Directory != nil {
		in, out := &in.Directory, &out.Directory
		*out = new(string)
		**out = **in
	}
	if in.MountName != nil {
		in, out := &in.MountName, &out.MountName
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	out.TokenSecretKeySecretRef = in.TokenSecretKeySecretRef
	if in.TokenSecretScope != nil {
		in, out := &in.TokenSecretScope, &out.TokenSecretScope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureBlobMountParameters.
func (in *AzureBlobMountParameters) DeepCopy() *AzureBlobMountParameters {
	if in == nil {
		return nil
	}
	out := new(AzureBlobMountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureBlobMountSpec) DeepCopyInto(out *AzureBlobMountSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureBlobMountSpec.
func (in *AzureBlobMountSpec) DeepCopy() *AzureBlobMountSpec {
	if in == nil {
		return nil
	}
	out := new(AzureBlobMountSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureBlobMountStatus) DeepCopyInto(out *AzureBlobMountStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureBlobMountStatus.
func (in *AzureBlobMountStatus) DeepCopy() *AzureBlobMountStatus {
	if in == nil {
		return nil
	}
	out := new(AzureBlobMountStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureManagedIdentityInitParameters) DeepCopyInto(out *AzureManagedIdentityInitParameters) {
	*out = *in
	if in.AccessConnectorID != nil {
		in, out := &in.AccessConnectorID, &out.AccessConnectorID
		*out = new(string)
		**out = **in
	}
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.ManagedIdentityID != nil {
		in, out := &in.ManagedIdentityID, &out.ManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureManagedIdentityInitParameters.
func (in *AzureManagedIdentityInitParameters) DeepCopy() *AzureManagedIdentityInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureManagedIdentityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureManagedIdentityObservation) DeepCopyInto(out *AzureManagedIdentityObservation) {
	*out = *in
	if in.AccessConnectorID != nil {
		in, out := &in.AccessConnectorID, &out.AccessConnectorID
		*out = new(string)
		**out = **in
	}
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.ManagedIdentityID != nil {
		in, out := &in.ManagedIdentityID, &out.ManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureManagedIdentityObservation.
func (in *AzureManagedIdentityObservation) DeepCopy() *AzureManagedIdentityObservation {
	if in == nil {
		return nil
	}
	out := new(AzureManagedIdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureManagedIdentityParameters) DeepCopyInto(out *AzureManagedIdentityParameters) {
	*out = *in
	if in.AccessConnectorID != nil {
		in, out := &in.AccessConnectorID, &out.AccessConnectorID
		*out = new(string)
		**out = **in
	}
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.ManagedIdentityID != nil {
		in, out := &in.ManagedIdentityID, &out.ManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureManagedIdentityParameters.
func (in *AzureManagedIdentityParameters) DeepCopy() *AzureManagedIdentityParameters {
	if in == nil {
		return nil
	}
	out := new(AzureManagedIdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzurePrivateEndpointRulesInitParameters) DeepCopyInto(out *AzurePrivateEndpointRulesInitParameters) {
	*out = *in
	if in.ConnectionState != nil {
		in, out := &in.ConnectionState, &out.ConnectionState
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.Deactivated != nil {
		in, out := &in.Deactivated, &out.Deactivated
		*out = new(bool)
		**out = **in
	}
	if in.DeactivatedAt != nil {
		in, out := &in.DeactivatedAt, &out.DeactivatedAt
		*out = new(float64)
		**out = **in
	}
	if in.EndpointName != nil {
		in, out := &in.EndpointName, &out.EndpointName
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.NetworkConnectivityConfigID != nil {
		in, out := &in.NetworkConnectivityConfigID, &out.NetworkConnectivityConfigID
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.RuleID != nil {
		in, out := &in.RuleID, &out.RuleID
		*out = new(string)
		**out = **in
	}
	if in.UpdatedTime != nil {
		in, out := &in.UpdatedTime, &out.UpdatedTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzurePrivateEndpointRulesInitParameters.
func (in *AzurePrivateEndpointRulesInitParameters) DeepCopy() *AzurePrivateEndpointRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzurePrivateEndpointRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzurePrivateEndpointRulesObservation) DeepCopyInto(out *AzurePrivateEndpointRulesObservation) {
	*out = *in
	if in.ConnectionState != nil {
		in, out := &in.ConnectionState, &out.ConnectionState
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.Deactivated != nil {
		in, out := &in.Deactivated, &out.Deactivated
		*out = new(bool)
		**out = **in
	}
	if in.DeactivatedAt != nil {
		in, out := &in.DeactivatedAt, &out.DeactivatedAt
		*out = new(float64)
		**out = **in
	}
	if in.EndpointName != nil {
		in, out := &in.EndpointName, &out.EndpointName
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.NetworkConnectivityConfigID != nil {
		in, out := &in.NetworkConnectivityConfigID, &out.NetworkConnectivityConfigID
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.RuleID != nil {
		in, out := &in.RuleID, &out.RuleID
		*out = new(string)
		**out = **in
	}
	if in.UpdatedTime != nil {
		in, out := &in.UpdatedTime, &out.UpdatedTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzurePrivateEndpointRulesObservation.
func (in *AzurePrivateEndpointRulesObservation) DeepCopy() *AzurePrivateEndpointRulesObservation {
	if in == nil {
		return nil
	}
	out := new(AzurePrivateEndpointRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzurePrivateEndpointRulesParameters) DeepCopyInto(out *AzurePrivateEndpointRulesParameters) {
	*out = *in
	if in.ConnectionState != nil {
		in, out := &in.ConnectionState, &out.ConnectionState
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.Deactivated != nil {
		in, out := &in.Deactivated, &out.Deactivated
		*out = new(bool)
		**out = **in
	}
	if in.DeactivatedAt != nil {
		in, out := &in.DeactivatedAt, &out.DeactivatedAt
		*out = new(float64)
		**out = **in
	}
	if in.EndpointName != nil {
		in, out := &in.EndpointName, &out.EndpointName
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.NetworkConnectivityConfigID != nil {
		in, out := &in.NetworkConnectivityConfigID, &out.NetworkConnectivityConfigID
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.RuleID != nil {
		in, out := &in.RuleID, &out.RuleID
		*out = new(string)
		**out = **in
	}
	if in.UpdatedTime != nil {
		in, out := &in.UpdatedTime, &out.UpdatedTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzurePrivateEndpointRulesParameters.
func (in *AzurePrivateEndpointRulesParameters) DeepCopy() *AzurePrivateEndpointRulesParameters {
	if in == nil {
		return nil
	}
	out := new(AzurePrivateEndpointRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureServiceEndpointRuleInitParameters) DeepCopyInto(out *AzureServiceEndpointRuleInitParameters) {
	*out = *in
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetRegion != nil {
		in, out := &in.TargetRegion, &out.TargetRegion
		*out = new(string)
		**out = **in
	}
	if in.TargetServices != nil {
		in, out := &in.TargetServices, &out.TargetServices
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureServiceEndpointRuleInitParameters.
func (in *AzureServiceEndpointRuleInitParameters) DeepCopy() *AzureServiceEndpointRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureServiceEndpointRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureServiceEndpointRuleObservation) DeepCopyInto(out *AzureServiceEndpointRuleObservation) {
	*out = *in
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetRegion != nil {
		in, out := &in.TargetRegion, &out.TargetRegion
		*out = new(string)
		**out = **in
	}
	if in.TargetServices != nil {
		in, out := &in.TargetServices, &out.TargetServices
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureServiceEndpointRuleObservation.
func (in *AzureServiceEndpointRuleObservation) DeepCopy() *AzureServiceEndpointRuleObservation {
	if in == nil {
		return nil
	}
	out := new(AzureServiceEndpointRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureServiceEndpointRuleParameters) DeepCopyInto(out *AzureServiceEndpointRuleParameters) {
	*out = *in
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetRegion != nil {
		in, out := &in.TargetRegion, &out.TargetRegion
		*out = new(string)
		**out = **in
	}
	if in.TargetServices != nil {
		in, out := &in.TargetServices, &out.TargetServices
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureServiceEndpointRuleParameters.
func (in *AzureServiceEndpointRuleParameters) DeepCopy() *AzureServiceEndpointRuleParameters {
	if in == nil {
		return nil
	}
	out := new(AzureServiceEndpointRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureServicePrincipalInitParameters) DeepCopyInto(out *AzureServicePrincipalInitParameters) {
	*out = *in
	if in.ApplicationID != nil {
		in, out := &in.ApplicationID, &out.ApplicationID
		*out = new(string)
		**out = **in
	}
	out.ClientSecretSecretRef = in.ClientSecretSecretRef
	if in.DirectoryID != nil {
		in, out := &in.DirectoryID, &out.DirectoryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureServicePrincipalInitParameters.
func (in *AzureServicePrincipalInitParameters) DeepCopy() *AzureServicePrincipalInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureServicePrincipalInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureServicePrincipalObservation) DeepCopyInto(out *AzureServicePrincipalObservation) {
	*out = *in
	if in.ApplicationID != nil {
		in, out := &in.ApplicationID, &out.ApplicationID
		*out = new(string)
		**out = **in
	}
	if in.DirectoryID != nil {
		in, out := &in.DirectoryID, &out.DirectoryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureServicePrincipalObservation.
func (in *AzureServicePrincipalObservation) DeepCopy() *AzureServicePrincipalObservation {
	if in == nil {
		return nil
	}
	out := new(AzureServicePrincipalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureServicePrincipalParameters) DeepCopyInto(out *AzureServicePrincipalParameters) {
	*out = *in
	if in.ApplicationID != nil {
		in, out := &in.ApplicationID, &out.ApplicationID
		*out = new(string)
		**out = **in
	}
	out.ClientSecretSecretRef = in.ClientSecretSecretRef
	if in.DirectoryID != nil {
		in, out := &in.DirectoryID, &out.DirectoryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureServicePrincipalParameters.
func (in *AzureServicePrincipalParameters) DeepCopy() *AzureServicePrincipalParameters {
	if in == nil {
		return nil
	}
	out := new(AzureServicePrincipalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuthInitParameters) DeepCopyInto(out *BasicAuthInitParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuthInitParameters.
func (in *BasicAuthInitParameters) DeepCopy() *BasicAuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(BasicAuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuthObservation) DeepCopyInto(out *BasicAuthObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuthObservation.
func (in *BasicAuthObservation) DeepCopy() *BasicAuthObservation {
	if in == nil {
		return nil
	}
	out := new(BasicAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuthParameters) DeepCopyInto(out *BasicAuthParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuthParameters.
func (in *BasicAuthParameters) DeepCopy() *BasicAuthParameters {
	if in == nil {
		return nil
	}
	out := new(BasicAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Budget) DeepCopyInto(out *Budget) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Budget.
func (in *Budget) DeepCopy() *Budget {
	if in == nil {
		return nil
	}
	out := new(Budget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Budget) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BudgetInitParameters) DeepCopyInto(out *BudgetInitParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.AlertConfigurations != nil {
		in, out := &in.AlertConfigurations, &out.AlertConfigurations
		*out = make([]AlertConfigurationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BudgetConfigurationID != nil {
		in, out := &in.BudgetConfigurationID, &out.BudgetConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(float64)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BudgetInitParameters.
func (in *BudgetInitParameters) DeepCopy() *BudgetInitParameters {
	if in == nil {
		return nil
	}
	out := new(BudgetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BudgetList) DeepCopyInto(out *BudgetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Budget, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BudgetList.
func (in *BudgetList) DeepCopy() *BudgetList {
	if in == nil {
		return nil
	}
	out := new(BudgetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BudgetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BudgetObservation) DeepCopyInto(out *BudgetObservation) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.AlertConfigurations != nil {
		in, out := &in.AlertConfigurations, &out.AlertConfigurations
		*out = make([]AlertConfigurationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BudgetConfigurationID != nil {
		in, out := &in.BudgetConfigurationID, &out.BudgetConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(float64)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BudgetObservation.
func (in *BudgetObservation) DeepCopy() *BudgetObservation {
	if in == nil {
		return nil
	}
	out := new(BudgetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BudgetParameters) DeepCopyInto(out *BudgetParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.AlertConfigurations != nil {
		in, out := &in.AlertConfigurations, &out.AlertConfigurations
		*out = make([]AlertConfigurationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BudgetConfigurationID != nil {
		in, out := &in.BudgetConfigurationID, &out.BudgetConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(float64)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BudgetParameters.
func (in *BudgetParameters) DeepCopy() *BudgetParameters {
	if in == nil {
		return nil
	}
	out := new(BudgetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BudgetSpec) DeepCopyInto(out *BudgetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BudgetSpec.
func (in *BudgetSpec) DeepCopy() *BudgetSpec {
	if in == nil {
		return nil
	}
	out := new(BudgetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BudgetStatus) DeepCopyInto(out *BudgetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BudgetStatus.
func (in *BudgetStatus) DeepCopy() *BudgetStatus {
	if in == nil {
		return nil
	}
	out := new(BudgetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Catalog) DeepCopyInto(out *Catalog) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Catalog.
func (in *Catalog) DeepCopy() *Catalog {
	if in == nil {
		return nil
	}
	out := new(Catalog)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Catalog) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogInitParameters) DeepCopyInto(out *CatalogInitParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.EnablePredictiveOptimization != nil {
		in, out := &in.EnablePredictiveOptimization, &out.EnablePredictiveOptimization
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogInitParameters.
func (in *CatalogInitParameters) DeepCopy() *CatalogInitParameters {
	if in == nil {
		return nil
	}
	out := new(CatalogInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogList) DeepCopyInto(out *CatalogList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Catalog, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogList.
func (in *CatalogList) DeepCopy() *CatalogList {
	if in == nil {
		return nil
	}
	out := new(CatalogList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CatalogList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogObservation) DeepCopyInto(out *CatalogObservation) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.EnablePredictiveOptimization != nil {
		in, out := &in.EnablePredictiveOptimization, &out.EnablePredictiveOptimization
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogObservation.
func (in *CatalogObservation) DeepCopy() *CatalogObservation {
	if in == nil {
		return nil
	}
	out := new(CatalogObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogParameters) DeepCopyInto(out *CatalogParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.EnablePredictiveOptimization != nil {
		in, out := &in.EnablePredictiveOptimization, &out.EnablePredictiveOptimization
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogParameters.
func (in *CatalogParameters) DeepCopy() *CatalogParameters {
	if in == nil {
		return nil
	}
	out := new(CatalogParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogSpec) DeepCopyInto(out *CatalogSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogSpec.
func (in *CatalogSpec) DeepCopy() *CatalogSpec {
	if in == nil {
		return nil
	}
	out := new(CatalogSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogStatus) DeepCopyInto(out *CatalogStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogStatus.
func (in *CatalogStatus) DeepCopy() *CatalogStatus {
	if in == nil {
		return nil
	}
	out := new(CatalogStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogWorkspaceBinding) DeepCopyInto(out *CatalogWorkspaceBinding) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogWorkspaceBinding.
func (in *CatalogWorkspaceBinding) DeepCopy() *CatalogWorkspaceBinding {
	if in == nil {
		return nil
	}
	out := new(CatalogWorkspaceBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CatalogWorkspaceBinding) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogWorkspaceBindingInitParameters) DeepCopyInto(out *CatalogWorkspaceBindingInitParameters) {
	*out = *in
	if in.BindingType != nil {
		in, out := &in.BindingType, &out.BindingType
		*out = new(string)
		**out = **in
	}
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.SecurableName != nil {
		in, out := &in.SecurableName, &out.SecurableName
		*out = new(string)
		**out = **in
	}
	if in.SecurableType != nil {
		in, out := &in.SecurableType, &out.SecurableType
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogWorkspaceBindingInitParameters.
func (in *CatalogWorkspaceBindingInitParameters) DeepCopy() *CatalogWorkspaceBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(CatalogWorkspaceBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogWorkspaceBindingList) DeepCopyInto(out *CatalogWorkspaceBindingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CatalogWorkspaceBinding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogWorkspaceBindingList.
func (in *CatalogWorkspaceBindingList) DeepCopy() *CatalogWorkspaceBindingList {
	if in == nil {
		return nil
	}
	out := new(CatalogWorkspaceBindingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CatalogWorkspaceBindingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogWorkspaceBindingObservation) DeepCopyInto(out *CatalogWorkspaceBindingObservation) {
	*out = *in
	if in.BindingType != nil {
		in, out := &in.BindingType, &out.BindingType
		*out = new(string)
		**out = **in
	}
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SecurableName != nil {
		in, out := &in.SecurableName, &out.SecurableName
		*out = new(string)
		**out = **in
	}
	if in.SecurableType != nil {
		in, out := &in.SecurableType, &out.SecurableType
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogWorkspaceBindingObservation.
func (in *CatalogWorkspaceBindingObservation) DeepCopy() *CatalogWorkspaceBindingObservation {
	if in == nil {
		return nil
	}
	out := new(CatalogWorkspaceBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogWorkspaceBindingParameters) DeepCopyInto(out *CatalogWorkspaceBindingParameters) {
	*out = *in
	if in.BindingType != nil {
		in, out := &in.BindingType, &out.BindingType
		*out = new(string)
		**out = **in
	}
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.SecurableName != nil {
		in, out := &in.SecurableName, &out.SecurableName
		*out = new(string)
		**out = **in
	}
	if in.SecurableType != nil {
		in, out := &in.SecurableType, &out.SecurableType
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogWorkspaceBindingParameters.
func (in *CatalogWorkspaceBindingParameters) DeepCopy() *CatalogWorkspaceBindingParameters {
	if in == nil {
		return nil
	}
	out := new(CatalogWorkspaceBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogWorkspaceBindingSpec) DeepCopyInto(out *CatalogWorkspaceBindingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogWorkspaceBindingSpec.
func (in *CatalogWorkspaceBindingSpec) DeepCopy() *CatalogWorkspaceBindingSpec {
	if in == nil {
		return nil
	}
	out := new(CatalogWorkspaceBindingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogWorkspaceBindingStatus) DeepCopyInto(out *CatalogWorkspaceBindingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogWorkspaceBindingStatus.
func (in *CatalogWorkspaceBindingStatus) DeepCopy() *CatalogWorkspaceBindingStatus {
	if in == nil {
		return nil
	}
	out := new(CatalogWorkspaceBindingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChannelInitParameters) DeepCopyInto(out *ChannelInitParameters) {
	*out = *in
	if in.DbsqlVersion != nil {
		in, out := &in.DbsqlVersion, &out.DbsqlVersion
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChannelInitParameters.
func (in *ChannelInitParameters) DeepCopy() *ChannelInitParameters {
	if in == nil {
		return nil
	}
	out := new(ChannelInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChannelObservation) DeepCopyInto(out *ChannelObservation) {
	*out = *in
	if in.DbsqlVersion != nil {
		in, out := &in.DbsqlVersion, &out.DbsqlVersion
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChannelObservation.
func (in *ChannelObservation) DeepCopy() *ChannelObservation {
	if in == nil {
		return nil
	}
	out := new(ChannelObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChannelParameters) DeepCopyInto(out *ChannelParameters) {
	*out = *in
	if in.DbsqlVersion != nil {
		in, out := &in.DbsqlVersion, &out.DbsqlVersion
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChannelParameters.
func (in *ChannelParameters) DeepCopy() *ChannelParameters {
	if in == nil {
		return nil
	}
	out := new(ChannelParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientsInitParameters) DeepCopyInto(out *ClientsInitParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientsInitParameters.
func (in *ClientsInitParameters) DeepCopy() *ClientsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientsObservation) DeepCopyInto(out *ClientsObservation) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientsObservation.
func (in *ClientsObservation) DeepCopy() *ClientsObservation {
	if in == nil {
		return nil
	}
	out := new(ClientsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientsParameters) DeepCopyInto(out *ClientsParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientsParameters.
func (in *ClientsParameters) DeepCopy() *ClientsParameters {
	if in == nil {
		return nil
	}
	out := new(ClientsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudResourceContainerInitParameters) DeepCopyInto(out *CloudResourceContainerInitParameters) {
	*out = *in
	if in.GCP != nil {
		in, out := &in.GCP, &out.GCP
		*out = make([]GCPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudResourceContainerInitParameters.
func (in *CloudResourceContainerInitParameters) DeepCopy() *CloudResourceContainerInitParameters {
	if in == nil {
		return nil
	}
	out := new(CloudResourceContainerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudResourceContainerObservation) DeepCopyInto(out *CloudResourceContainerObservation) {
	*out = *in
	if in.GCP != nil {
		in, out := &in.GCP, &out.GCP
		*out = make([]GCPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudResourceContainerObservation.
func (in *CloudResourceContainerObservation) DeepCopy() *CloudResourceContainerObservation {
	if in == nil {
		return nil
	}
	out := new(CloudResourceContainerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudResourceContainerParameters) DeepCopyInto(out *CloudResourceContainerParameters) {
	*out = *in
	if in.GCP != nil {
		in, out := &in.GCP, &out.GCP
		*out = make([]GCPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudResourceContainerParameters.
func (in *CloudResourceContainerParameters) DeepCopy() *CloudResourceContainerParameters {
	if in == nil {
		return nil
	}
	out := new(CloudResourceContainerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudflareAPITokenInitParameters) DeepCopyInto(out *CloudflareAPITokenInitParameters) {
	*out = *in
	if in.AccessKeyID != nil {
		in, out := &in.AccessKeyID, &out.AccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	out.SecretAccessKeySecretRef = in.SecretAccessKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudflareAPITokenInitParameters.
func (in *CloudflareAPITokenInitParameters) DeepCopy() *CloudflareAPITokenInitParameters {
	if in == nil {
		return nil
	}
	out := new(CloudflareAPITokenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudflareAPITokenObservation) DeepCopyInto(out *CloudflareAPITokenObservation) {
	*out = *in
	if in.AccessKeyID != nil {
		in, out := &in.AccessKeyID, &out.AccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudflareAPITokenObservation.
func (in *CloudflareAPITokenObservation) DeepCopy() *CloudflareAPITokenObservation {
	if in == nil {
		return nil
	}
	out := new(CloudflareAPITokenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudflareAPITokenParameters) DeepCopyInto(out *CloudflareAPITokenParameters) {
	*out = *in
	if in.AccessKeyID != nil {
		in, out := &in.AccessKeyID, &out.AccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	out.SecretAccessKeySecretRef = in.SecretAccessKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudflareAPITokenParameters.
func (in *CloudflareAPITokenParameters) DeepCopy() *CloudflareAPITokenParameters {
	if in == nil {
		return nil
	}
	out := new(CloudflareAPITokenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster) DeepCopyInto(out *Cluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster.
func (in *Cluster) DeepCopy() *Cluster {
	if in == nil {
		return nil
	}
	out := new(Cluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAutoscaleInitParameters) DeepCopyInto(out *ClusterAutoscaleInitParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAutoscaleInitParameters.
func (in *ClusterAutoscaleInitParameters) DeepCopy() *ClusterAutoscaleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterAutoscaleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAutoscaleObservation) DeepCopyInto(out *ClusterAutoscaleObservation) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAutoscaleObservation.
func (in *ClusterAutoscaleObservation) DeepCopy() *ClusterAutoscaleObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterAutoscaleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAutoscaleParameters) DeepCopyInto(out *ClusterAutoscaleParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAutoscaleParameters.
func (in *ClusterAutoscaleParameters) DeepCopy() *ClusterAutoscaleParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterAutoscaleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAwsAttributesInitParameters) DeepCopyInto(out *ClusterAwsAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAwsAttributesInitParameters.
func (in *ClusterAwsAttributesInitParameters) DeepCopy() *ClusterAwsAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterAwsAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAwsAttributesObservation) DeepCopyInto(out *ClusterAwsAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAwsAttributesObservation.
func (in *ClusterAwsAttributesObservation) DeepCopy() *ClusterAwsAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterAwsAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAwsAttributesParameters) DeepCopyInto(out *ClusterAwsAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAwsAttributesParameters.
func (in *ClusterAwsAttributesParameters) DeepCopy() *ClusterAwsAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterAwsAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAzureAttributesInitParameters) DeepCopyInto(out *ClusterAzureAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]ClusterAzureAttributesLogAnalyticsInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAzureAttributesInitParameters.
func (in *ClusterAzureAttributesInitParameters) DeepCopy() *ClusterAzureAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterAzureAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAzureAttributesLogAnalyticsInfoInitParameters) DeepCopyInto(out *ClusterAzureAttributesLogAnalyticsInfoInitParameters) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAzureAttributesLogAnalyticsInfoInitParameters.
func (in *ClusterAzureAttributesLogAnalyticsInfoInitParameters) DeepCopy() *ClusterAzureAttributesLogAnalyticsInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterAzureAttributesLogAnalyticsInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAzureAttributesLogAnalyticsInfoObservation) DeepCopyInto(out *ClusterAzureAttributesLogAnalyticsInfoObservation) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAzureAttributesLogAnalyticsInfoObservation.
func (in *ClusterAzureAttributesLogAnalyticsInfoObservation) DeepCopy() *ClusterAzureAttributesLogAnalyticsInfoObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterAzureAttributesLogAnalyticsInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAzureAttributesLogAnalyticsInfoParameters) DeepCopyInto(out *ClusterAzureAttributesLogAnalyticsInfoParameters) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAzureAttributesLogAnalyticsInfoParameters.
func (in *ClusterAzureAttributesLogAnalyticsInfoParameters) DeepCopy() *ClusterAzureAttributesLogAnalyticsInfoParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterAzureAttributesLogAnalyticsInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAzureAttributesObservation) DeepCopyInto(out *ClusterAzureAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]ClusterAzureAttributesLogAnalyticsInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAzureAttributesObservation.
func (in *ClusterAzureAttributesObservation) DeepCopy() *ClusterAzureAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterAzureAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAzureAttributesParameters) DeepCopyInto(out *ClusterAzureAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]ClusterAzureAttributesLogAnalyticsInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAzureAttributesParameters.
func (in *ClusterAzureAttributesParameters) DeepCopy() *ClusterAzureAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterAzureAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterClusterLogConfDbfsInitParameters) DeepCopyInto(out *ClusterClusterLogConfDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterClusterLogConfDbfsInitParameters.
func (in *ClusterClusterLogConfDbfsInitParameters) DeepCopy() *ClusterClusterLogConfDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterClusterLogConfDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterClusterLogConfDbfsObservation) DeepCopyInto(out *ClusterClusterLogConfDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterClusterLogConfDbfsObservation.
func (in *ClusterClusterLogConfDbfsObservation) DeepCopy() *ClusterClusterLogConfDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterClusterLogConfDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterClusterLogConfDbfsParameters) DeepCopyInto(out *ClusterClusterLogConfDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterClusterLogConfDbfsParameters.
func (in *ClusterClusterLogConfDbfsParameters) DeepCopy() *ClusterClusterLogConfDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterClusterLogConfDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterClusterLogConfInitParameters) DeepCopyInto(out *ClusterClusterLogConfInitParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]ClusterClusterLogConfDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]ClusterClusterLogConfS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterClusterLogConfInitParameters.
func (in *ClusterClusterLogConfInitParameters) DeepCopy() *ClusterClusterLogConfInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterClusterLogConfInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterClusterLogConfObservation) DeepCopyInto(out *ClusterClusterLogConfObservation) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]ClusterClusterLogConfDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]ClusterClusterLogConfS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterClusterLogConfObservation.
func (in *ClusterClusterLogConfObservation) DeepCopy() *ClusterClusterLogConfObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterClusterLogConfObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterClusterLogConfParameters) DeepCopyInto(out *ClusterClusterLogConfParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]ClusterClusterLogConfDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]ClusterClusterLogConfS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterClusterLogConfParameters.
func (in *ClusterClusterLogConfParameters) DeepCopy() *ClusterClusterLogConfParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterClusterLogConfParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterClusterLogConfS3InitParameters) DeepCopyInto(out *ClusterClusterLogConfS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterClusterLogConfS3InitParameters.
func (in *ClusterClusterLogConfS3InitParameters) DeepCopy() *ClusterClusterLogConfS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterClusterLogConfS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterClusterLogConfS3Observation) DeepCopyInto(out *ClusterClusterLogConfS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterClusterLogConfS3Observation.
func (in *ClusterClusterLogConfS3Observation) DeepCopy() *ClusterClusterLogConfS3Observation {
	if in == nil {
		return nil
	}
	out := new(ClusterClusterLogConfS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterClusterLogConfS3Parameters) DeepCopyInto(out *ClusterClusterLogConfS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterClusterLogConfS3Parameters.
func (in *ClusterClusterLogConfS3Parameters) DeepCopy() *ClusterClusterLogConfS3Parameters {
	if in == nil {
		return nil
	}
	out := new(ClusterClusterLogConfS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGCPAttributesInitParameters) DeepCopyInto(out *ClusterGCPAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGCPAttributesInitParameters.
func (in *ClusterGCPAttributesInitParameters) DeepCopy() *ClusterGCPAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterGCPAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGCPAttributesObservation) DeepCopyInto(out *ClusterGCPAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGCPAttributesObservation.
func (in *ClusterGCPAttributesObservation) DeepCopy() *ClusterGCPAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterGCPAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGCPAttributesParameters) DeepCopyInto(out *ClusterGCPAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGCPAttributesParameters.
func (in *ClusterGCPAttributesParameters) DeepCopy() *ClusterGCPAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterGCPAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitParameters) DeepCopyInto(out *ClusterInitParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]AutoscaleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoterminationMinutes != nil {
		in, out := &in.AutoterminationMinutes, &out.AutoterminationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]AwsAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]AzureAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]ClusterLogConfInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]ClusterMountInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]DockerImageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]GCPAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]InitScriptsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.IsPinned != nil {
		in, out := &in.IsPinned, &out.IsPinned
		*out = new(bool)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]LibraryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NoWait != nil {
		in, out := &in.NoWait, &out.NoWait
		*out = new(bool)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]WorkloadTypeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitParameters.
func (in *ClusterInitParameters) DeepCopy() *ClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsAbfssInitParameters) DeepCopyInto(out *ClusterInitScriptsAbfssInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsAbfssInitParameters.
func (in *ClusterInitScriptsAbfssInitParameters) DeepCopy() *ClusterInitScriptsAbfssInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsAbfssInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsAbfssObservation) DeepCopyInto(out *ClusterInitScriptsAbfssObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsAbfssObservation.
func (in *ClusterInitScriptsAbfssObservation) DeepCopy() *ClusterInitScriptsAbfssObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsAbfssObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsAbfssParameters) DeepCopyInto(out *ClusterInitScriptsAbfssParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsAbfssParameters.
func (in *ClusterInitScriptsAbfssParameters) DeepCopy() *ClusterInitScriptsAbfssParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsAbfssParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsDbfsInitParameters) DeepCopyInto(out *ClusterInitScriptsDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsDbfsInitParameters.
func (in *ClusterInitScriptsDbfsInitParameters) DeepCopy() *ClusterInitScriptsDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsDbfsObservation) DeepCopyInto(out *ClusterInitScriptsDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsDbfsObservation.
func (in *ClusterInitScriptsDbfsObservation) DeepCopy() *ClusterInitScriptsDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsDbfsParameters) DeepCopyInto(out *ClusterInitScriptsDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsDbfsParameters.
func (in *ClusterInitScriptsDbfsParameters) DeepCopy() *ClusterInitScriptsDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsFileInitParameters) DeepCopyInto(out *ClusterInitScriptsFileInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsFileInitParameters.
func (in *ClusterInitScriptsFileInitParameters) DeepCopy() *ClusterInitScriptsFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsFileObservation) DeepCopyInto(out *ClusterInitScriptsFileObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsFileObservation.
func (in *ClusterInitScriptsFileObservation) DeepCopy() *ClusterInitScriptsFileObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsFileParameters) DeepCopyInto(out *ClusterInitScriptsFileParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsFileParameters.
func (in *ClusterInitScriptsFileParameters) DeepCopy() *ClusterInitScriptsFileParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsGcsInitParameters) DeepCopyInto(out *ClusterInitScriptsGcsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsGcsInitParameters.
func (in *ClusterInitScriptsGcsInitParameters) DeepCopy() *ClusterInitScriptsGcsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsGcsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsGcsObservation) DeepCopyInto(out *ClusterInitScriptsGcsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsGcsObservation.
func (in *ClusterInitScriptsGcsObservation) DeepCopy() *ClusterInitScriptsGcsObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsGcsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsGcsParameters) DeepCopyInto(out *ClusterInitScriptsGcsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsGcsParameters.
func (in *ClusterInitScriptsGcsParameters) DeepCopy() *ClusterInitScriptsGcsParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsGcsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsInitParameters) DeepCopyInto(out *ClusterInitScriptsInitParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]ClusterInitScriptsAbfssInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]ClusterInitScriptsDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]ClusterInitScriptsFileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]ClusterInitScriptsGcsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]ClusterInitScriptsS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]ClusterInitScriptsVolumesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]ClusterInitScriptsWorkspaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsInitParameters.
func (in *ClusterInitScriptsInitParameters) DeepCopy() *ClusterInitScriptsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsObservation) DeepCopyInto(out *ClusterInitScriptsObservation) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]ClusterInitScriptsAbfssObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]ClusterInitScriptsDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]ClusterInitScriptsFileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]ClusterInitScriptsGcsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]ClusterInitScriptsS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]ClusterInitScriptsVolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]ClusterInitScriptsWorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsObservation.
func (in *ClusterInitScriptsObservation) DeepCopy() *ClusterInitScriptsObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsParameters) DeepCopyInto(out *ClusterInitScriptsParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]ClusterInitScriptsAbfssParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]ClusterInitScriptsDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]ClusterInitScriptsFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]ClusterInitScriptsGcsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]ClusterInitScriptsS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]ClusterInitScriptsVolumesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]ClusterInitScriptsWorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsParameters.
func (in *ClusterInitScriptsParameters) DeepCopy() *ClusterInitScriptsParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsS3InitParameters) DeepCopyInto(out *ClusterInitScriptsS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsS3InitParameters.
func (in *ClusterInitScriptsS3InitParameters) DeepCopy() *ClusterInitScriptsS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsS3Observation) DeepCopyInto(out *ClusterInitScriptsS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsS3Observation.
func (in *ClusterInitScriptsS3Observation) DeepCopy() *ClusterInitScriptsS3Observation {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsS3Parameters) DeepCopyInto(out *ClusterInitScriptsS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsS3Parameters.
func (in *ClusterInitScriptsS3Parameters) DeepCopy() *ClusterInitScriptsS3Parameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsVolumesInitParameters) DeepCopyInto(out *ClusterInitScriptsVolumesInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsVolumesInitParameters.
func (in *ClusterInitScriptsVolumesInitParameters) DeepCopy() *ClusterInitScriptsVolumesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsVolumesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsVolumesObservation) DeepCopyInto(out *ClusterInitScriptsVolumesObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsVolumesObservation.
func (in *ClusterInitScriptsVolumesObservation) DeepCopy() *ClusterInitScriptsVolumesObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsVolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsVolumesParameters) DeepCopyInto(out *ClusterInitScriptsVolumesParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsVolumesParameters.
func (in *ClusterInitScriptsVolumesParameters) DeepCopy() *ClusterInitScriptsVolumesParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsVolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsWorkspaceInitParameters) DeepCopyInto(out *ClusterInitScriptsWorkspaceInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsWorkspaceInitParameters.
func (in *ClusterInitScriptsWorkspaceInitParameters) DeepCopy() *ClusterInitScriptsWorkspaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsWorkspaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsWorkspaceObservation) DeepCopyInto(out *ClusterInitScriptsWorkspaceObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsWorkspaceObservation.
func (in *ClusterInitScriptsWorkspaceObservation) DeepCopy() *ClusterInitScriptsWorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsWorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitScriptsWorkspaceParameters) DeepCopyInto(out *ClusterInitScriptsWorkspaceParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitScriptsWorkspaceParameters.
func (in *ClusterInitScriptsWorkspaceParameters) DeepCopy() *ClusterInitScriptsWorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitScriptsWorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterList) DeepCopyInto(out *ClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterList.
func (in *ClusterList) DeepCopy() *ClusterList {
	if in == nil {
		return nil
	}
	out := new(ClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfDbfsInitParameters) DeepCopyInto(out *ClusterLogConfDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfDbfsInitParameters.
func (in *ClusterLogConfDbfsInitParameters) DeepCopy() *ClusterLogConfDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfDbfsObservation) DeepCopyInto(out *ClusterLogConfDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfDbfsObservation.
func (in *ClusterLogConfDbfsObservation) DeepCopy() *ClusterLogConfDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfDbfsParameters) DeepCopyInto(out *ClusterLogConfDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfDbfsParameters.
func (in *ClusterLogConfDbfsParameters) DeepCopy() *ClusterLogConfDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfInitParameters) DeepCopyInto(out *ClusterLogConfInitParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]DbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfInitParameters.
func (in *ClusterLogConfInitParameters) DeepCopy() *ClusterLogConfInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfObservation) DeepCopyInto(out *ClusterLogConfObservation) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]DbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfObservation.
func (in *ClusterLogConfObservation) DeepCopy() *ClusterLogConfObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfParameters) DeepCopyInto(out *ClusterLogConfParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]DbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfParameters.
func (in *ClusterLogConfParameters) DeepCopy() *ClusterLogConfParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfS3InitParameters) DeepCopyInto(out *ClusterLogConfS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfS3InitParameters.
func (in *ClusterLogConfS3InitParameters) DeepCopy() *ClusterLogConfS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfS3Observation) DeepCopyInto(out *ClusterLogConfS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfS3Observation.
func (in *ClusterLogConfS3Observation) DeepCopy() *ClusterLogConfS3Observation {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLogConfS3Parameters) DeepCopyInto(out *ClusterLogConfS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLogConfS3Parameters.
func (in *ClusterLogConfS3Parameters) DeepCopy() *ClusterLogConfS3Parameters {
	if in == nil {
		return nil
	}
	out := new(ClusterLogConfS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterMountInfoInitParameters) DeepCopyInto(out *ClusterMountInfoInitParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]NetworkFilesystemInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterMountInfoInitParameters.
func (in *ClusterMountInfoInitParameters) DeepCopy() *ClusterMountInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterMountInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterMountInfoNetworkFilesystemInfoInitParameters) DeepCopyInto(out *ClusterMountInfoNetworkFilesystemInfoInitParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterMountInfoNetworkFilesystemInfoInitParameters.
func (in *ClusterMountInfoNetworkFilesystemInfoInitParameters) DeepCopy() *ClusterMountInfoNetworkFilesystemInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterMountInfoNetworkFilesystemInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterMountInfoNetworkFilesystemInfoObservation) DeepCopyInto(out *ClusterMountInfoNetworkFilesystemInfoObservation) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterMountInfoNetworkFilesystemInfoObservation.
func (in *ClusterMountInfoNetworkFilesystemInfoObservation) DeepCopy() *ClusterMountInfoNetworkFilesystemInfoObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterMountInfoNetworkFilesystemInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterMountInfoNetworkFilesystemInfoParameters) DeepCopyInto(out *ClusterMountInfoNetworkFilesystemInfoParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterMountInfoNetworkFilesystemInfoParameters.
func (in *ClusterMountInfoNetworkFilesystemInfoParameters) DeepCopy() *ClusterMountInfoNetworkFilesystemInfoParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterMountInfoNetworkFilesystemInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterMountInfoObservation) DeepCopyInto(out *ClusterMountInfoObservation) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]NetworkFilesystemInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterMountInfoObservation.
func (in *ClusterMountInfoObservation) DeepCopy() *ClusterMountInfoObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterMountInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterMountInfoParameters) DeepCopyInto(out *ClusterMountInfoParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]NetworkFilesystemInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterMountInfoParameters.
func (in *ClusterMountInfoParameters) DeepCopy() *ClusterMountInfoParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterMountInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterObservation) DeepCopyInto(out *ClusterObservation) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]AutoscaleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoterminationMinutes != nil {
		in, out := &in.AutoterminationMinutes, &out.AutoterminationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]AwsAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]AzureAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]ClusterLogConfObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]ClusterMountInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DefaultTags != nil {
		in, out := &in.DefaultTags, &out.DefaultTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]DockerImageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]GCPAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]InitScriptsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.IsPinned != nil {
		in, out := &in.IsPinned, &out.IsPinned
		*out = new(bool)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]LibraryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NoWait != nil {
		in, out := &in.NoWait, &out.NoWait
		*out = new(bool)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]WorkloadTypeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterObservation.
func (in *ClusterObservation) DeepCopy() *ClusterObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterParameters) DeepCopyInto(out *ClusterParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]AutoscaleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoterminationMinutes != nil {
		in, out := &in.AutoterminationMinutes, &out.AutoterminationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]AwsAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]AzureAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]ClusterLogConfParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]ClusterMountInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]DockerImageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]GCPAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]InitScriptsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.IsPinned != nil {
		in, out := &in.IsPinned, &out.IsPinned
		*out = new(bool)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]LibraryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NoWait != nil {
		in, out := &in.NoWait, &out.NoWait
		*out = new(bool)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]WorkloadTypeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterParameters.
func (in *ClusterParameters) DeepCopy() *ClusterParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterPolicy) DeepCopyInto(out *ClusterPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterPolicy.
func (in *ClusterPolicy) DeepCopy() *ClusterPolicy {
	if in == nil {
		return nil
	}
	out := new(ClusterPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterPolicyInitParameters) DeepCopyInto(out *ClusterPolicyInitParameters) {
	*out = *in
	if in.Definition != nil {
		in, out := &in.Definition, &out.Definition
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Libraries != nil {
		in, out := &in.Libraries, &out.Libraries
		*out = make([]LibrariesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxClustersPerUser != nil {
		in, out := &in.MaxClustersPerUser, &out.MaxClustersPerUser
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PolicyFamilyDefinitionOverrides != nil {
		in, out := &in.PolicyFamilyDefinitionOverrides, &out.PolicyFamilyDefinitionOverrides
		*out = new(string)
		**out = **in
	}
	if in.PolicyFamilyID != nil {
		in, out := &in.PolicyFamilyID, &out.PolicyFamilyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterPolicyInitParameters.
func (in *ClusterPolicyInitParameters) DeepCopy() *ClusterPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterPolicyList) DeepCopyInto(out *ClusterPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterPolicyList.
func (in *ClusterPolicyList) DeepCopy() *ClusterPolicyList {
	if in == nil {
		return nil
	}
	out := new(ClusterPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterPolicyObservation) DeepCopyInto(out *ClusterPolicyObservation) {
	*out = *in
	if in.Definition != nil {
		in, out := &in.Definition, &out.Definition
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Libraries != nil {
		in, out := &in.Libraries, &out.Libraries
		*out = make([]LibrariesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxClustersPerUser != nil {
		in, out := &in.MaxClustersPerUser, &out.MaxClustersPerUser
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PolicyFamilyDefinitionOverrides != nil {
		in, out := &in.PolicyFamilyDefinitionOverrides, &out.PolicyFamilyDefinitionOverrides
		*out = new(string)
		**out = **in
	}
	if in.PolicyFamilyID != nil {
		in, out := &in.PolicyFamilyID, &out.PolicyFamilyID
		*out = new(string)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterPolicyObservation.
func (in *ClusterPolicyObservation) DeepCopy() *ClusterPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterPolicyParameters) DeepCopyInto(out *ClusterPolicyParameters) {
	*out = *in
	if in.Definition != nil {
		in, out := &in.Definition, &out.Definition
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Libraries != nil {
		in, out := &in.Libraries, &out.Libraries
		*out = make([]LibrariesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxClustersPerUser != nil {
		in, out := &in.MaxClustersPerUser, &out.MaxClustersPerUser
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PolicyFamilyDefinitionOverrides != nil {
		in, out := &in.PolicyFamilyDefinitionOverrides, &out.PolicyFamilyDefinitionOverrides
		*out = new(string)
		**out = **in
	}
	if in.PolicyFamilyID != nil {
		in, out := &in.PolicyFamilyID, &out.PolicyFamilyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterPolicyParameters.
func (in *ClusterPolicyParameters) DeepCopy() *ClusterPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterPolicySpec) DeepCopyInto(out *ClusterPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterPolicySpec.
func (in *ClusterPolicySpec) DeepCopy() *ClusterPolicySpec {
	if in == nil {
		return nil
	}
	out := new(ClusterPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterPolicyStatus) DeepCopyInto(out *ClusterPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterPolicyStatus.
func (in *ClusterPolicyStatus) DeepCopy() *ClusterPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpec) DeepCopyInto(out *ClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpec.
func (in *ClusterSpec) DeepCopy() *ClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterStatus) DeepCopyInto(out *ClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterStatus.
func (in *ClusterStatus) DeepCopy() *ClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CohereConfigInitParameters) DeepCopyInto(out *CohereConfigInitParameters) {
	*out = *in
	if in.CohereAPIBase != nil {
		in, out := &in.CohereAPIBase, &out.CohereAPIBase
		*out = new(string)
		**out = **in
	}
	if in.CohereAPIKey != nil {
		in, out := &in.CohereAPIKey, &out.CohereAPIKey
		*out = new(string)
		**out = **in
	}
	if in.CohereAPIKeyPlaintext != nil {
		in, out := &in.CohereAPIKeyPlaintext, &out.CohereAPIKeyPlaintext
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CohereConfigInitParameters.
func (in *CohereConfigInitParameters) DeepCopy() *CohereConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(CohereConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CohereConfigObservation) DeepCopyInto(out *CohereConfigObservation) {
	*out = *in
	if in.CohereAPIBase != nil {
		in, out := &in.CohereAPIBase, &out.CohereAPIBase
		*out = new(string)
		**out = **in
	}
	if in.CohereAPIKey != nil {
		in, out := &in.CohereAPIKey, &out.CohereAPIKey
		*out = new(string)
		**out = **in
	}
	if in.CohereAPIKeyPlaintext != nil {
		in, out := &in.CohereAPIKeyPlaintext, &out.CohereAPIKeyPlaintext
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CohereConfigObservation.
func (in *CohereConfigObservation) DeepCopy() *CohereConfigObservation {
	if in == nil {
		return nil
	}
	out := new(CohereConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CohereConfigParameters) DeepCopyInto(out *CohereConfigParameters) {
	*out = *in
	if in.CohereAPIBase != nil {
		in, out := &in.CohereAPIBase, &out.CohereAPIBase
		*out = new(string)
		**out = **in
	}
	if in.CohereAPIKey != nil {
		in, out := &in.CohereAPIKey, &out.CohereAPIKey
		*out = new(string)
		**out = **in
	}
	if in.CohereAPIKeyPlaintext != nil {
		in, out := &in.CohereAPIKeyPlaintext, &out.CohereAPIKeyPlaintext
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CohereConfigParameters.
func (in *CohereConfigParameters) DeepCopy() *CohereConfigParameters {
	if in == nil {
		return nil
	}
	out := new(CohereConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnInitParameters) DeepCopyInto(out *ColumnInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnInitParameters.
func (in *ColumnInitParameters) DeepCopy() *ColumnInitParameters {
	if in == nil {
		return nil
	}
	out := new(ColumnInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnObservation) DeepCopyInto(out *ColumnObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnObservation.
func (in *ColumnObservation) DeepCopy() *ColumnObservation {
	if in == nil {
		return nil
	}
	out := new(ColumnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnParameters) DeepCopyInto(out *ColumnParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnParameters.
func (in *ColumnParameters) DeepCopy() *ColumnParameters {
	if in == nil {
		return nil
	}
	out := new(ColumnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComplianceSecurityProfileWorkspaceInitParameters) DeepCopyInto(out *ComplianceSecurityProfileWorkspaceInitParameters) {
	*out = *in
	if in.ComplianceStandards != nil {
		in, out := &in.ComplianceStandards, &out.ComplianceStandards
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComplianceSecurityProfileWorkspaceInitParameters.
func (in *ComplianceSecurityProfileWorkspaceInitParameters) DeepCopy() *ComplianceSecurityProfileWorkspaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(ComplianceSecurityProfileWorkspaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComplianceSecurityProfileWorkspaceObservation) DeepCopyInto(out *ComplianceSecurityProfileWorkspaceObservation) {
	*out = *in
	if in.ComplianceStandards != nil {
		in, out := &in.ComplianceStandards, &out.ComplianceStandards
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComplianceSecurityProfileWorkspaceObservation.
func (in *ComplianceSecurityProfileWorkspaceObservation) DeepCopy() *ComplianceSecurityProfileWorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(ComplianceSecurityProfileWorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComplianceSecurityProfileWorkspaceParameters) DeepCopyInto(out *ComplianceSecurityProfileWorkspaceParameters) {
	*out = *in
	if in.ComplianceStandards != nil {
		in, out := &in.ComplianceStandards, &out.ComplianceStandards
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComplianceSecurityProfileWorkspaceParameters.
func (in *ComplianceSecurityProfileWorkspaceParameters) DeepCopy() *ComplianceSecurityProfileWorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(ComplianceSecurityProfileWorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComplianceSecurityProfileWorkspaceSetting) DeepCopyInto(out *ComplianceSecurityProfileWorkspaceSetting) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComplianceSecurityProfileWorkspaceSetting.
func (in *ComplianceSecurityProfileWorkspaceSetting) DeepCopy() *ComplianceSecurityProfileWorkspaceSetting {
	if in == nil {
		return nil
	}
	out := new(ComplianceSecurityProfileWorkspaceSetting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ComplianceSecurityProfileWorkspaceSetting) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComplianceSecurityProfileWorkspaceSettingInitParameters) DeepCopyInto(out *ComplianceSecurityProfileWorkspaceSettingInitParameters) {
	*out = *in
	if in.ComplianceSecurityProfileWorkspace != nil {
		in, out := &in.ComplianceSecurityProfileWorkspace, &out.ComplianceSecurityProfileWorkspace
		*out = make([]ComplianceSecurityProfileWorkspaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.SettingName != nil {
		in, out := &in.SettingName, &out.SettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComplianceSecurityProfileWorkspaceSettingInitParameters.
func (in *ComplianceSecurityProfileWorkspaceSettingInitParameters) DeepCopy() *ComplianceSecurityProfileWorkspaceSettingInitParameters {
	if in == nil {
		return nil
	}
	out := new(ComplianceSecurityProfileWorkspaceSettingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComplianceSecurityProfileWorkspaceSettingList) DeepCopyInto(out *ComplianceSecurityProfileWorkspaceSettingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ComplianceSecurityProfileWorkspaceSetting, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComplianceSecurityProfileWorkspaceSettingList.
func (in *ComplianceSecurityProfileWorkspaceSettingList) DeepCopy() *ComplianceSecurityProfileWorkspaceSettingList {
	if in == nil {
		return nil
	}
	out := new(ComplianceSecurityProfileWorkspaceSettingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ComplianceSecurityProfileWorkspaceSettingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComplianceSecurityProfileWorkspaceSettingObservation) DeepCopyInto(out *ComplianceSecurityProfileWorkspaceSettingObservation) {
	*out = *in
	if in.ComplianceSecurityProfileWorkspace != nil {
		in, out := &in.ComplianceSecurityProfileWorkspace, &out.ComplianceSecurityProfileWorkspace
		*out = make([]ComplianceSecurityProfileWorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SettingName != nil {
		in, out := &in.SettingName, &out.SettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComplianceSecurityProfileWorkspaceSettingObservation.
func (in *ComplianceSecurityProfileWorkspaceSettingObservation) DeepCopy() *ComplianceSecurityProfileWorkspaceSettingObservation {
	if in == nil {
		return nil
	}
	out := new(ComplianceSecurityProfileWorkspaceSettingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComplianceSecurityProfileWorkspaceSettingParameters) DeepCopyInto(out *ComplianceSecurityProfileWorkspaceSettingParameters) {
	*out = *in
	if in.ComplianceSecurityProfileWorkspace != nil {
		in, out := &in.ComplianceSecurityProfileWorkspace, &out.ComplianceSecurityProfileWorkspace
		*out = make([]ComplianceSecurityProfileWorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.SettingName != nil {
		in, out := &in.SettingName, &out.SettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComplianceSecurityProfileWorkspaceSettingParameters.
func (in *ComplianceSecurityProfileWorkspaceSettingParameters) DeepCopy() *ComplianceSecurityProfileWorkspaceSettingParameters {
	if in == nil {
		return nil
	}
	out := new(ComplianceSecurityProfileWorkspaceSettingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComplianceSecurityProfileWorkspaceSettingSpec) DeepCopyInto(out *ComplianceSecurityProfileWorkspaceSettingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComplianceSecurityProfileWorkspaceSettingSpec.
func (in *ComplianceSecurityProfileWorkspaceSettingSpec) DeepCopy() *ComplianceSecurityProfileWorkspaceSettingSpec {
	if in == nil {
		return nil
	}
	out := new(ComplianceSecurityProfileWorkspaceSettingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComplianceSecurityProfileWorkspaceSettingStatus) DeepCopyInto(out *ComplianceSecurityProfileWorkspaceSettingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComplianceSecurityProfileWorkspaceSettingStatus.
func (in *ComplianceSecurityProfileWorkspaceSettingStatus) DeepCopy() *ComplianceSecurityProfileWorkspaceSettingStatus {
	if in == nil {
		return nil
	}
	out := new(ComplianceSecurityProfileWorkspaceSettingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionInitParameters) DeepCopyInto(out *ConditionInitParameters) {
	*out = *in
	if in.EmptyResultState != nil {
		in, out := &in.EmptyResultState, &out.EmptyResultState
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Operand != nil {
		in, out := &in.Operand, &out.Operand
		*out = make([]OperandInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = make([]ThresholdInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionInitParameters.
func (in *ConditionInitParameters) DeepCopy() *ConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionObservation) DeepCopyInto(out *ConditionObservation) {
	*out = *in
	if in.EmptyResultState != nil {
		in, out := &in.EmptyResultState, &out.EmptyResultState
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Operand != nil {
		in, out := &in.Operand, &out.Operand
		*out = make([]OperandObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = make([]ThresholdObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionObservation.
func (in *ConditionObservation) DeepCopy() *ConditionObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionParameters) DeepCopyInto(out *ConditionParameters) {
	*out = *in
	if in.EmptyResultState != nil {
		in, out := &in.EmptyResultState, &out.EmptyResultState
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Operand != nil {
		in, out := &in.Operand, &out.Operand
		*out = make([]OperandParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = make([]ThresholdParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionParameters.
func (in *ConditionParameters) DeepCopy() *ConditionParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionTaskInitParameters) DeepCopyInto(out *ConditionTaskInitParameters) {
	*out = *in
	if in.Left != nil {
		in, out := &in.Left, &out.Left
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Right != nil {
		in, out := &in.Right, &out.Right
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionTaskInitParameters.
func (in *ConditionTaskInitParameters) DeepCopy() *ConditionTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionTaskObservation) DeepCopyInto(out *ConditionTaskObservation) {
	*out = *in
	if in.Left != nil {
		in, out := &in.Left, &out.Left
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Right != nil {
		in, out := &in.Right, &out.Right
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionTaskObservation.
func (in *ConditionTaskObservation) DeepCopy() *ConditionTaskObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionTaskParameters) DeepCopyInto(out *ConditionTaskParameters) {
	*out = *in
	if in.Left != nil {
		in, out := &in.Left, &out.Left
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Right != nil {
		in, out := &in.Right, &out.Right
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionTaskParameters.
func (in *ConditionTaskParameters) DeepCopy() *ConditionTaskParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigInitParameters) DeepCopyInto(out *ConfigInitParameters) {
	*out = *in
	if in.AutoCaptureConfig != nil {
		in, out := &in.AutoCaptureConfig, &out.AutoCaptureConfig
		*out = make([]AutoCaptureConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServedEntities != nil {
		in, out := &in.ServedEntities, &out.ServedEntities
		*out = make([]ServedEntitiesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServedModels != nil {
		in, out := &in.ServedModels, &out.ServedModels
		*out = make([]ServedModelsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TrafficConfig != nil {
		in, out := &in.TrafficConfig, &out.TrafficConfig
		*out = make([]TrafficConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigInitParameters.
func (in *ConfigInitParameters) DeepCopy() *ConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigObservation) DeepCopyInto(out *ConfigObservation) {
	*out = *in
	if in.AutoCaptureConfig != nil {
		in, out := &in.AutoCaptureConfig, &out.AutoCaptureConfig
		*out = make([]AutoCaptureConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServedEntities != nil {
		in, out := &in.ServedEntities, &out.ServedEntities
		*out = make([]ServedEntitiesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServedModels != nil {
		in, out := &in.ServedModels, &out.ServedModels
		*out = make([]ServedModelsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TrafficConfig != nil {
		in, out := &in.TrafficConfig, &out.TrafficConfig
		*out = make([]TrafficConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigObservation.
func (in *ConfigObservation) DeepCopy() *ConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigParameters) DeepCopyInto(out *ConfigParameters) {
	*out = *in
	if in.AutoCaptureConfig != nil {
		in, out := &in.AutoCaptureConfig, &out.AutoCaptureConfig
		*out = make([]AutoCaptureConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServedEntities != nil {
		in, out := &in.ServedEntities, &out.ServedEntities
		*out = make([]ServedEntitiesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServedModels != nil {
		in, out := &in.ServedModels, &out.ServedModels
		*out = make([]ServedModelsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TrafficConfig != nil {
		in, out := &in.TrafficConfig, &out.TrafficConfig
		*out = make([]TrafficConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigParameters.
func (in *ConfigParameters) DeepCopy() *ConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Connection) DeepCopyInto(out *Connection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Connection.
func (in *Connection) DeepCopy() *Connection {
	if in == nil {
		return nil
	}
	out := new(Connection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Connection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionInitParameters) DeepCopyInto(out *ConnectionInitParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.ConnectionType != nil {
		in, out := &in.ConnectionType, &out.ConnectionType
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionInitParameters.
func (in *ConnectionInitParameters) DeepCopy() *ConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionList) DeepCopyInto(out *ConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Connection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionList.
func (in *ConnectionList) DeepCopy() *ConnectionList {
	if in == nil {
		return nil
	}
	out := new(ConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionObservation) DeepCopyInto(out *ConnectionObservation) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.ConnectionType != nil {
		in, out := &in.ConnectionType, &out.ConnectionType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionObservation.
func (in *ConnectionObservation) DeepCopy() *ConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionParameters) DeepCopyInto(out *ConnectionParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.ConnectionType != nil {
		in, out := &in.ConnectionType, &out.ConnectionType
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	out.OptionsSecretRef = in.OptionsSecretRef
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionParameters.
func (in *ConnectionParameters) DeepCopy() *ConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionSpec) DeepCopyInto(out *ConnectionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionSpec.
func (in *ConnectionSpec) DeepCopy() *ConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(ConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionStatus) DeepCopyInto(out *ConnectionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionStatus.
func (in *ConnectionStatus) DeepCopy() *ConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(ConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContinuousInitParameters) DeepCopyInto(out *ContinuousInitParameters) {
	*out = *in
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContinuousInitParameters.
func (in *ContinuousInitParameters) DeepCopy() *ContinuousInitParameters {
	if in == nil {
		return nil
	}
	out := new(ContinuousInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContinuousObservation) DeepCopyInto(out *ContinuousObservation) {
	*out = *in
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContinuousObservation.
func (in *ContinuousObservation) DeepCopy() *ContinuousObservation {
	if in == nil {
		return nil
	}
	out := new(ContinuousObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContinuousParameters) DeepCopyInto(out *ContinuousParameters) {
	*out = *in
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContinuousParameters.
func (in *ContinuousParameters) DeepCopy() *ContinuousParameters {
	if in == nil {
		return nil
	}
	out := new(ContinuousParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContinuousUpdateStatusInitParameters) DeepCopyInto(out *ContinuousUpdateStatusInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContinuousUpdateStatusInitParameters.
func (in *ContinuousUpdateStatusInitParameters) DeepCopy() *ContinuousUpdateStatusInitParameters {
	if in == nil {
		return nil
	}
	out := new(ContinuousUpdateStatusInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContinuousUpdateStatusObservation) DeepCopyInto(out *ContinuousUpdateStatusObservation) {
	*out = *in
	if in.InitialPipelineSyncProgress != nil {
		in, out := &in.InitialPipelineSyncProgress, &out.InitialPipelineSyncProgress
		*out = make([]InitialPipelineSyncProgressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastProcessedCommitVersion != nil {
		in, out := &in.LastProcessedCommitVersion, &out.LastProcessedCommitVersion
		*out = new(float64)
		**out = **in
	}
	if in.Timestamp != nil {
		in, out := &in.Timestamp, &out.Timestamp
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContinuousUpdateStatusObservation.
func (in *ContinuousUpdateStatusObservation) DeepCopy() *ContinuousUpdateStatusObservation {
	if in == nil {
		return nil
	}
	out := new(ContinuousUpdateStatusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContinuousUpdateStatusParameters) DeepCopyInto(out *ContinuousUpdateStatusParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContinuousUpdateStatusParameters.
func (in *ContinuousUpdateStatusParameters) DeepCopy() *ContinuousUpdateStatusParameters {
	if in == nil {
		return nil
	}
	out := new(ContinuousUpdateStatusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CranInitParameters) DeepCopyInto(out *CranInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CranInitParameters.
func (in *CranInitParameters) DeepCopy() *CranInitParameters {
	if in == nil {
		return nil
	}
	out := new(CranInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CranObservation) DeepCopyInto(out *CranObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CranObservation.
func (in *CranObservation) DeepCopy() *CranObservation {
	if in == nil {
		return nil
	}
	out := new(CranObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CranParameters) DeepCopyInto(out *CranParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CranParameters.
func (in *CranParameters) DeepCopy() *CranParameters {
	if in == nil {
		return nil
	}
	out := new(CranParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CronInitParameters) DeepCopyInto(out *CronInitParameters) {
	*out = *in
	if in.QuartzCronSchedule != nil {
		in, out := &in.QuartzCronSchedule, &out.QuartzCronSchedule
		*out = new(string)
		**out = **in
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CronInitParameters.
func (in *CronInitParameters) DeepCopy() *CronInitParameters {
	if in == nil {
		return nil
	}
	out := new(CronInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CronObservation) DeepCopyInto(out *CronObservation) {
	*out = *in
	if in.QuartzCronSchedule != nil {
		in, out := &in.QuartzCronSchedule, &out.QuartzCronSchedule
		*out = new(string)
		**out = **in
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CronObservation.
func (in *CronObservation) DeepCopy() *CronObservation {
	if in == nil {
		return nil
	}
	out := new(CronObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CronParameters) DeepCopyInto(out *CronParameters) {
	*out = *in
	if in.QuartzCronSchedule != nil {
		in, out := &in.QuartzCronSchedule, &out.QuartzCronSchedule
		*out = new(string)
		**out = **in
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CronParameters.
func (in *CronParameters) DeepCopy() *CronParameters {
	if in == nil {
		return nil
	}
	out := new(CronParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomAppIntegration) DeepCopyInto(out *CustomAppIntegration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomAppIntegration.
func (in *CustomAppIntegration) DeepCopy() *CustomAppIntegration {
	if in == nil {
		return nil
	}
	out := new(CustomAppIntegration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CustomAppIntegration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomAppIntegrationInitParameters) DeepCopyInto(out *CustomAppIntegrationInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Confidential != nil {
		in, out := &in.Confidential, &out.Confidential
		*out = new(bool)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(float64)
		**out = **in
	}
	if in.CreatorUsername != nil {
		in, out := &in.CreatorUsername, &out.CreatorUsername
		*out = new(string)
		**out = **in
	}
	if in.IntegrationID != nil {
		in, out := &in.IntegrationID, &out.IntegrationID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RedirectUrls != nil {
		in, out := &in.RedirectUrls, &out.RedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TokenAccessPolicy != nil {
		in, out := &in.TokenAccessPolicy, &out.TokenAccessPolicy
		*out = make([]TokenAccessPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomAppIntegrationInitParameters.
func (in *CustomAppIntegrationInitParameters) DeepCopy() *CustomAppIntegrationInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomAppIntegrationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomAppIntegrationList) DeepCopyInto(out *CustomAppIntegrationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CustomAppIntegration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomAppIntegrationList.
func (in *CustomAppIntegrationList) DeepCopy() *CustomAppIntegrationList {
	if in == nil {
		return nil
	}
	out := new(CustomAppIntegrationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CustomAppIntegrationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomAppIntegrationObservation) DeepCopyInto(out *CustomAppIntegrationObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Confidential != nil {
		in, out := &in.Confidential, &out.Confidential
		*out = new(bool)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(float64)
		**out = **in
	}
	if in.CreatorUsername != nil {
		in, out := &in.CreatorUsername, &out.CreatorUsername
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IntegrationID != nil {
		in, out := &in.IntegrationID, &out.IntegrationID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RedirectUrls != nil {
		in, out := &in.RedirectUrls, &out.RedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TokenAccessPolicy != nil {
		in, out := &in.TokenAccessPolicy, &out.TokenAccessPolicy
		*out = make([]TokenAccessPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomAppIntegrationObservation.
func (in *CustomAppIntegrationObservation) DeepCopy() *CustomAppIntegrationObservation {
	if in == nil {
		return nil
	}
	out := new(CustomAppIntegrationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomAppIntegrationParameters) DeepCopyInto(out *CustomAppIntegrationParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Confidential != nil {
		in, out := &in.Confidential, &out.Confidential
		*out = new(bool)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(float64)
		**out = **in
	}
	if in.CreatorUsername != nil {
		in, out := &in.CreatorUsername, &out.CreatorUsername
		*out = new(string)
		**out = **in
	}
	if in.IntegrationID != nil {
		in, out := &in.IntegrationID, &out.IntegrationID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RedirectUrls != nil {
		in, out := &in.RedirectUrls, &out.RedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TokenAccessPolicy != nil {
		in, out := &in.TokenAccessPolicy, &out.TokenAccessPolicy
		*out = make([]TokenAccessPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomAppIntegrationParameters.
func (in *CustomAppIntegrationParameters) DeepCopy() *CustomAppIntegrationParameters {
	if in == nil {
		return nil
	}
	out := new(CustomAppIntegrationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomAppIntegrationSpec) DeepCopyInto(out *CustomAppIntegrationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomAppIntegrationSpec.
func (in *CustomAppIntegrationSpec) DeepCopy() *CustomAppIntegrationSpec {
	if in == nil {
		return nil
	}
	out := new(CustomAppIntegrationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomAppIntegrationStatus) DeepCopyInto(out *CustomAppIntegrationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomAppIntegrationStatus.
func (in *CustomAppIntegrationStatus) DeepCopy() *CustomAppIntegrationStatus {
	if in == nil {
		return nil
	}
	out := new(CustomAppIntegrationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomMetricsInitParameters) DeepCopyInto(out *CustomMetricsInitParameters) {
	*out = *in
	if in.Definition != nil {
		in, out := &in.Definition, &out.Definition
		*out = new(string)
		**out = **in
	}
	if in.InputColumns != nil {
		in, out := &in.InputColumns, &out.InputColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OutputDataType != nil {
		in, out := &in.OutputDataType, &out.OutputDataType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomMetricsInitParameters.
func (in *CustomMetricsInitParameters) DeepCopy() *CustomMetricsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomMetricsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomMetricsObservation) DeepCopyInto(out *CustomMetricsObservation) {
	*out = *in
	if in.Definition != nil {
		in, out := &in.Definition, &out.Definition
		*out = new(string)
		**out = **in
	}
	if in.InputColumns != nil {
		in, out := &in.InputColumns, &out.InputColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OutputDataType != nil {
		in, out := &in.OutputDataType, &out.OutputDataType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomMetricsObservation.
func (in *CustomMetricsObservation) DeepCopy() *CustomMetricsObservation {
	if in == nil {
		return nil
	}
	out := new(CustomMetricsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomMetricsParameters) DeepCopyInto(out *CustomMetricsParameters) {
	*out = *in
	if in.Definition != nil {
		in, out := &in.Definition, &out.Definition
		*out = new(string)
		**out = **in
	}
	if in.InputColumns != nil {
		in, out := &in.InputColumns, &out.InputColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OutputDataType != nil {
		in, out := &in.OutputDataType, &out.OutputDataType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomMetricsParameters.
func (in *CustomMetricsParameters) DeepCopy() *CustomMetricsParameters {
	if in == nil {
		return nil
	}
	out := new(CustomMetricsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomTagsInitParameters) DeepCopyInto(out *CustomTagsInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomTagsInitParameters.
func (in *CustomTagsInitParameters) DeepCopy() *CustomTagsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomTagsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomTagsObservation) DeepCopyInto(out *CustomTagsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomTagsObservation.
func (in *CustomTagsObservation) DeepCopy() *CustomTagsObservation {
	if in == nil {
		return nil
	}
	out := new(CustomTagsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomTagsParameters) DeepCopyInto(out *CustomTagsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomTagsParameters.
func (in *CustomTagsParameters) DeepCopy() *CustomTagsParameters {
	if in == nil {
		return nil
	}
	out := new(CustomTagsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DailyInitParameters) DeepCopyInto(out *DailyInitParameters) {
	*out = *in
	if in.IntervalDays != nil {
		in, out := &in.IntervalDays, &out.IntervalDays
		*out = new(float64)
		**out = **in
	}
	if in.TimeOfDay != nil {
		in, out := &in.TimeOfDay, &out.TimeOfDay
		*out = new(string)
		**out = **in
	}
	if in.UntilDate != nil {
		in, out := &in.UntilDate, &out.UntilDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DailyInitParameters.
func (in *DailyInitParameters) DeepCopy() *DailyInitParameters {
	if in == nil {
		return nil
	}
	out := new(DailyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DailyObservation) DeepCopyInto(out *DailyObservation) {
	*out = *in
	if in.IntervalDays != nil {
		in, out := &in.IntervalDays, &out.IntervalDays
		*out = new(float64)
		**out = **in
	}
	if in.TimeOfDay != nil {
		in, out := &in.TimeOfDay, &out.TimeOfDay
		*out = new(string)
		**out = **in
	}
	if in.UntilDate != nil {
		in, out := &in.UntilDate, &out.UntilDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DailyObservation.
func (in *DailyObservation) DeepCopy() *DailyObservation {
	if in == nil {
		return nil
	}
	out := new(DailyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DailyParameters) DeepCopyInto(out *DailyParameters) {
	*out = *in
	if in.IntervalDays != nil {
		in, out := &in.IntervalDays, &out.IntervalDays
		*out = new(float64)
		**out = **in
	}
	if in.TimeOfDay != nil {
		in, out := &in.TimeOfDay, &out.TimeOfDay
		*out = new(string)
		**out = **in
	}
	if in.UntilDate != nil {
		in, out := &in.UntilDate, &out.UntilDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DailyParameters.
func (in *DailyParameters) DeepCopy() *DailyParameters {
	if in == nil {
		return nil
	}
	out := new(DailyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Dashboard) DeepCopyInto(out *Dashboard) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Dashboard.
func (in *Dashboard) DeepCopy() *Dashboard {
	if in == nil {
		return nil
	}
	out := new(Dashboard)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Dashboard) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardInitParameters) DeepCopyInto(out *DashboardInitParameters) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.DashboardChangeDetected != nil {
		in, out := &in.DashboardChangeDetected, &out.DashboardChangeDetected
		*out = new(bool)
		**out = **in
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EmbedCredentials != nil {
		in, out := &in.EmbedCredentials, &out.EmbedCredentials
		*out = new(bool)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.FilePath != nil {
		in, out := &in.FilePath, &out.FilePath
		*out = new(string)
		**out = **in
	}
	if in.LifecycleState != nil {
		in, out := &in.LifecycleState, &out.LifecycleState
		*out = new(string)
		**out = **in
	}
	if in.Md5 != nil {
		in, out := &in.Md5, &out.Md5
		*out = new(string)
		**out = **in
	}
	if in.ParentPath != nil {
		in, out := &in.ParentPath, &out.ParentPath
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.SerializedDashboard != nil {
		in, out := &in.SerializedDashboard, &out.SerializedDashboard
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardInitParameters.
func (in *DashboardInitParameters) DeepCopy() *DashboardInitParameters {
	if in == nil {
		return nil
	}
	out := new(DashboardInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardList) DeepCopyInto(out *DashboardList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Dashboard, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardList.
func (in *DashboardList) DeepCopy() *DashboardList {
	if in == nil {
		return nil
	}
	out := new(DashboardList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DashboardList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardObservation) DeepCopyInto(out *DashboardObservation) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.DashboardChangeDetected != nil {
		in, out := &in.DashboardChangeDetected, &out.DashboardChangeDetected
		*out = new(bool)
		**out = **in
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EmbedCredentials != nil {
		in, out := &in.EmbedCredentials, &out.EmbedCredentials
		*out = new(bool)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.FilePath != nil {
		in, out := &in.FilePath, &out.FilePath
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LifecycleState != nil {
		in, out := &in.LifecycleState, &out.LifecycleState
		*out = new(string)
		**out = **in
	}
	if in.Md5 != nil {
		in, out := &in.Md5, &out.Md5
		*out = new(string)
		**out = **in
	}
	if in.ParentPath != nil {
		in, out := &in.ParentPath, &out.ParentPath
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.SerializedDashboard != nil {
		in, out := &in.SerializedDashboard, &out.SerializedDashboard
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardObservation.
func (in *DashboardObservation) DeepCopy() *DashboardObservation {
	if in == nil {
		return nil
	}
	out := new(DashboardObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardParameters) DeepCopyInto(out *DashboardParameters) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.DashboardChangeDetected != nil {
		in, out := &in.DashboardChangeDetected, &out.DashboardChangeDetected
		*out = new(bool)
		**out = **in
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EmbedCredentials != nil {
		in, out := &in.EmbedCredentials, &out.EmbedCredentials
		*out = new(bool)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.FilePath != nil {
		in, out := &in.FilePath, &out.FilePath
		*out = new(string)
		**out = **in
	}
	if in.LifecycleState != nil {
		in, out := &in.LifecycleState, &out.LifecycleState
		*out = new(string)
		**out = **in
	}
	if in.Md5 != nil {
		in, out := &in.Md5, &out.Md5
		*out = new(string)
		**out = **in
	}
	if in.ParentPath != nil {
		in, out := &in.ParentPath, &out.ParentPath
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.SerializedDashboard != nil {
		in, out := &in.SerializedDashboard, &out.SerializedDashboard
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardParameters.
func (in *DashboardParameters) DeepCopy() *DashboardParameters {
	if in == nil {
		return nil
	}
	out := new(DashboardParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardSpec) DeepCopyInto(out *DashboardSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardSpec.
func (in *DashboardSpec) DeepCopy() *DashboardSpec {
	if in == nil {
		return nil
	}
	out := new(DashboardSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardStatus) DeepCopyInto(out *DashboardStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardStatus.
func (in *DashboardStatus) DeepCopy() *DashboardStatus {
	if in == nil {
		return nil
	}
	out := new(DashboardStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardSubscriptionsInitParameters) DeepCopyInto(out *DashboardSubscriptionsInitParameters) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardSubscriptionsInitParameters.
func (in *DashboardSubscriptionsInitParameters) DeepCopy() *DashboardSubscriptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DashboardSubscriptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardSubscriptionsObservation) DeepCopyInto(out *DashboardSubscriptionsObservation) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardSubscriptionsObservation.
func (in *DashboardSubscriptionsObservation) DeepCopy() *DashboardSubscriptionsObservation {
	if in == nil {
		return nil
	}
	out := new(DashboardSubscriptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardSubscriptionsParameters) DeepCopyInto(out *DashboardSubscriptionsParameters) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardSubscriptionsParameters.
func (in *DashboardSubscriptionsParameters) DeepCopy() *DashboardSubscriptionsParameters {
	if in == nil {
		return nil
	}
	out := new(DashboardSubscriptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataClassificationConfigInitParameters) DeepCopyInto(out *DataClassificationConfigInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataClassificationConfigInitParameters.
func (in *DataClassificationConfigInitParameters) DeepCopy() *DataClassificationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(DataClassificationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataClassificationConfigObservation) DeepCopyInto(out *DataClassificationConfigObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataClassificationConfigObservation.
func (in *DataClassificationConfigObservation) DeepCopy() *DataClassificationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(DataClassificationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataClassificationConfigParameters) DeepCopyInto(out *DataClassificationConfigParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataClassificationConfigParameters.
func (in *DataClassificationConfigParameters) DeepCopy() *DataClassificationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(DataClassificationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabricksGCPServiceAccountInitParameters) DeepCopyInto(out *DatabricksGCPServiceAccountInitParameters) {
	*out = *in
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabricksGCPServiceAccountInitParameters.
func (in *DatabricksGCPServiceAccountInitParameters) DeepCopy() *DatabricksGCPServiceAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatabricksGCPServiceAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabricksGCPServiceAccountObservation) DeepCopyInto(out *DatabricksGCPServiceAccountObservation) {
	*out = *in
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabricksGCPServiceAccountObservation.
func (in *DatabricksGCPServiceAccountObservation) DeepCopy() *DatabricksGCPServiceAccountObservation {
	if in == nil {
		return nil
	}
	out := new(DatabricksGCPServiceAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabricksGCPServiceAccountParameters) DeepCopyInto(out *DatabricksGCPServiceAccountParameters) {
	*out = *in
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabricksGCPServiceAccountParameters.
func (in *DatabricksGCPServiceAccountParameters) DeepCopy() *DatabricksGCPServiceAccountParameters {
	if in == nil {
		return nil
	}
	out := new(DatabricksGCPServiceAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabricksModelServingConfigInitParameters) DeepCopyInto(out *DatabricksModelServingConfigInitParameters) {
	*out = *in
	if in.DatabricksAPIToken != nil {
		in, out := &in.DatabricksAPIToken, &out.DatabricksAPIToken
		*out = new(string)
		**out = **in
	}
	if in.DatabricksAPITokenPlaintext != nil {
		in, out := &in.DatabricksAPITokenPlaintext, &out.DatabricksAPITokenPlaintext
		*out = new(string)
		**out = **in
	}
	if in.DatabricksWorkspaceURL != nil {
		in, out := &in.DatabricksWorkspaceURL, &out.DatabricksWorkspaceURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabricksModelServingConfigInitParameters.
func (in *DatabricksModelServingConfigInitParameters) DeepCopy() *DatabricksModelServingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatabricksModelServingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabricksModelServingConfigObservation) DeepCopyInto(out *DatabricksModelServingConfigObservation) {
	*out = *in
	if in.DatabricksAPIToken != nil {
		in, out := &in.DatabricksAPIToken, &out.DatabricksAPIToken
		*out = new(string)
		**out = **in
	}
	if in.DatabricksAPITokenPlaintext != nil {
		in, out := &in.DatabricksAPITokenPlaintext, &out.DatabricksAPITokenPlaintext
		*out = new(string)
		**out = **in
	}
	if in.DatabricksWorkspaceURL != nil {
		in, out := &in.DatabricksWorkspaceURL, &out.DatabricksWorkspaceURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabricksModelServingConfigObservation.
func (in *DatabricksModelServingConfigObservation) DeepCopy() *DatabricksModelServingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(DatabricksModelServingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabricksModelServingConfigParameters) DeepCopyInto(out *DatabricksModelServingConfigParameters) {
	*out = *in
	if in.DatabricksAPIToken != nil {
		in, out := &in.DatabricksAPIToken, &out.DatabricksAPIToken
		*out = new(string)
		**out = **in
	}
	if in.DatabricksAPITokenPlaintext != nil {
		in, out := &in.DatabricksAPITokenPlaintext, &out.DatabricksAPITokenPlaintext
		*out = new(string)
		**out = **in
	}
	if in.DatabricksWorkspaceURL != nil {
		in, out := &in.DatabricksWorkspaceURL, &out.DatabricksWorkspaceURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabricksModelServingConfigParameters.
func (in *DatabricksModelServingConfigParameters) DeepCopy() *DatabricksModelServingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(DatabricksModelServingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateInitParameters) DeepCopyInto(out *DateInitParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateInitParameters.
func (in *DateInitParameters) DeepCopy() *DateInitParameters {
	if in == nil {
		return nil
	}
	out := new(DateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateObservation) DeepCopyInto(out *DateObservation) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateObservation.
func (in *DateObservation) DeepCopy() *DateObservation {
	if in == nil {
		return nil
	}
	out := new(DateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateParameters) DeepCopyInto(out *DateParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateParameters.
func (in *DateParameters) DeepCopy() *DateParameters {
	if in == nil {
		return nil
	}
	out := new(DateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateRangeInitParameters) DeepCopyInto(out *DateRangeInitParameters) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]RangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateRangeInitParameters.
func (in *DateRangeInitParameters) DeepCopy() *DateRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(DateRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateRangeObservation) DeepCopyInto(out *DateRangeObservation) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]RangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateRangeObservation.
func (in *DateRangeObservation) DeepCopy() *DateRangeObservation {
	if in == nil {
		return nil
	}
	out := new(DateRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateRangeParameters) DeepCopyInto(out *DateRangeParameters) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]RangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateRangeParameters.
func (in *DateRangeParameters) DeepCopy() *DateRangeParameters {
	if in == nil {
		return nil
	}
	out := new(DateRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateRangeValueDateRangeValueInitParameters) DeepCopyInto(out *DateRangeValueDateRangeValueInitParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateRangeValueDateRangeValueInitParameters.
func (in *DateRangeValueDateRangeValueInitParameters) DeepCopy() *DateRangeValueDateRangeValueInitParameters {
	if in == nil {
		return nil
	}
	out := new(DateRangeValueDateRangeValueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateRangeValueDateRangeValueObservation) DeepCopyInto(out *DateRangeValueDateRangeValueObservation) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateRangeValueDateRangeValueObservation.
func (in *DateRangeValueDateRangeValueObservation) DeepCopy() *DateRangeValueDateRangeValueObservation {
	if in == nil {
		return nil
	}
	out := new(DateRangeValueDateRangeValueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateRangeValueDateRangeValueParameters) DeepCopyInto(out *DateRangeValueDateRangeValueParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateRangeValueDateRangeValueParameters.
func (in *DateRangeValueDateRangeValueParameters) DeepCopy() *DateRangeValueDateRangeValueParameters {
	if in == nil {
		return nil
	}
	out := new(DateRangeValueDateRangeValueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateRangeValueInitParameters) DeepCopyInto(out *DateRangeValueInitParameters) {
	*out = *in
	if in.DateRangeValue != nil {
		in, out := &in.DateRangeValue, &out.DateRangeValue
		*out = make([]DateRangeValueDateRangeValueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DynamicDateRangeValue != nil {
		in, out := &in.DynamicDateRangeValue, &out.DynamicDateRangeValue
		*out = new(string)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(string)
		**out = **in
	}
	if in.StartDayOfWeek != nil {
		in, out := &in.StartDayOfWeek, &out.StartDayOfWeek
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateRangeValueInitParameters.
func (in *DateRangeValueInitParameters) DeepCopy() *DateRangeValueInitParameters {
	if in == nil {
		return nil
	}
	out := new(DateRangeValueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateRangeValueObservation) DeepCopyInto(out *DateRangeValueObservation) {
	*out = *in
	if in.DateRangeValue != nil {
		in, out := &in.DateRangeValue, &out.DateRangeValue
		*out = make([]DateRangeValueDateRangeValueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DynamicDateRangeValue != nil {
		in, out := &in.DynamicDateRangeValue, &out.DynamicDateRangeValue
		*out = new(string)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(string)
		**out = **in
	}
	if in.StartDayOfWeek != nil {
		in, out := &in.StartDayOfWeek, &out.StartDayOfWeek
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateRangeValueObservation.
func (in *DateRangeValueObservation) DeepCopy() *DateRangeValueObservation {
	if in == nil {
		return nil
	}
	out := new(DateRangeValueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateRangeValueParameters) DeepCopyInto(out *DateRangeValueParameters) {
	*out = *in
	if in.DateRangeValue != nil {
		in, out := &in.DateRangeValue, &out.DateRangeValue
		*out = make([]DateRangeValueDateRangeValueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DynamicDateRangeValue != nil {
		in, out := &in.DynamicDateRangeValue, &out.DynamicDateRangeValue
		*out = new(string)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(string)
		**out = **in
	}
	if in.StartDayOfWeek != nil {
		in, out := &in.StartDayOfWeek, &out.StartDayOfWeek
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateRangeValueParameters.
func (in *DateRangeValueParameters) DeepCopy() *DateRangeValueParameters {
	if in == nil {
		return nil
	}
	out := new(DateRangeValueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateValueInitParameters) DeepCopyInto(out *DateValueInitParameters) {
	*out = *in
	if in.DateValue != nil {
		in, out := &in.DateValue, &out.DateValue
		*out = new(string)
		**out = **in
	}
	if in.DynamicDateValue != nil {
		in, out := &in.DynamicDateValue, &out.DynamicDateValue
		*out = new(string)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateValueInitParameters.
func (in *DateValueInitParameters) DeepCopy() *DateValueInitParameters {
	if in == nil {
		return nil
	}
	out := new(DateValueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateValueObservation) DeepCopyInto(out *DateValueObservation) {
	*out = *in
	if in.DateValue != nil {
		in, out := &in.DateValue, &out.DateValue
		*out = new(string)
		**out = **in
	}
	if in.DynamicDateValue != nil {
		in, out := &in.DynamicDateValue, &out.DynamicDateValue
		*out = new(string)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateValueObservation.
func (in *DateValueObservation) DeepCopy() *DateValueObservation {
	if in == nil {
		return nil
	}
	out := new(DateValueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateValueParameters) DeepCopyInto(out *DateValueParameters) {
	*out = *in
	if in.DateValue != nil {
		in, out := &in.DateValue, &out.DateValue
		*out = new(string)
		**out = **in
	}
	if in.DynamicDateValue != nil {
		in, out := &in.DynamicDateValue, &out.DynamicDateValue
		*out = new(string)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateValueParameters.
func (in *DateValueParameters) DeepCopy() *DateValueParameters {
	if in == nil {
		return nil
	}
	out := new(DateValueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimeInitParameters) DeepCopyInto(out *DatetimeInitParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimeInitParameters.
func (in *DatetimeInitParameters) DeepCopy() *DatetimeInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatetimeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimeObservation) DeepCopyInto(out *DatetimeObservation) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimeObservation.
func (in *DatetimeObservation) DeepCopy() *DatetimeObservation {
	if in == nil {
		return nil
	}
	out := new(DatetimeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimeParameters) DeepCopyInto(out *DatetimeParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimeParameters.
func (in *DatetimeParameters) DeepCopy() *DatetimeParameters {
	if in == nil {
		return nil
	}
	out := new(DatetimeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimeRangeInitParameters) DeepCopyInto(out *DatetimeRangeInitParameters) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]DatetimeRangeRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimeRangeInitParameters.
func (in *DatetimeRangeInitParameters) DeepCopy() *DatetimeRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatetimeRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimeRangeObservation) DeepCopyInto(out *DatetimeRangeObservation) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]DatetimeRangeRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimeRangeObservation.
func (in *DatetimeRangeObservation) DeepCopy() *DatetimeRangeObservation {
	if in == nil {
		return nil
	}
	out := new(DatetimeRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimeRangeParameters) DeepCopyInto(out *DatetimeRangeParameters) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]DatetimeRangeRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimeRangeParameters.
func (in *DatetimeRangeParameters) DeepCopy() *DatetimeRangeParameters {
	if in == nil {
		return nil
	}
	out := new(DatetimeRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimeRangeRangeInitParameters) DeepCopyInto(out *DatetimeRangeRangeInitParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimeRangeRangeInitParameters.
func (in *DatetimeRangeRangeInitParameters) DeepCopy() *DatetimeRangeRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatetimeRangeRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimeRangeRangeObservation) DeepCopyInto(out *DatetimeRangeRangeObservation) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimeRangeRangeObservation.
func (in *DatetimeRangeRangeObservation) DeepCopy() *DatetimeRangeRangeObservation {
	if in == nil {
		return nil
	}
	out := new(DatetimeRangeRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimeRangeRangeParameters) DeepCopyInto(out *DatetimeRangeRangeParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimeRangeRangeParameters.
func (in *DatetimeRangeRangeParameters) DeepCopy() *DatetimeRangeRangeParameters {
	if in == nil {
		return nil
	}
	out := new(DatetimeRangeRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimesecInitParameters) DeepCopyInto(out *DatetimesecInitParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimesecInitParameters.
func (in *DatetimesecInitParameters) DeepCopy() *DatetimesecInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatetimesecInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimesecObservation) DeepCopyInto(out *DatetimesecObservation) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimesecObservation.
func (in *DatetimesecObservation) DeepCopy() *DatetimesecObservation {
	if in == nil {
		return nil
	}
	out := new(DatetimesecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimesecParameters) DeepCopyInto(out *DatetimesecParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimesecParameters.
func (in *DatetimesecParameters) DeepCopy() *DatetimesecParameters {
	if in == nil {
		return nil
	}
	out := new(DatetimesecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimesecRangeInitParameters) DeepCopyInto(out *DatetimesecRangeInitParameters) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]DatetimesecRangeRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimesecRangeInitParameters.
func (in *DatetimesecRangeInitParameters) DeepCopy() *DatetimesecRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatetimesecRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimesecRangeObservation) DeepCopyInto(out *DatetimesecRangeObservation) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]DatetimesecRangeRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimesecRangeObservation.
func (in *DatetimesecRangeObservation) DeepCopy() *DatetimesecRangeObservation {
	if in == nil {
		return nil
	}
	out := new(DatetimesecRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimesecRangeParameters) DeepCopyInto(out *DatetimesecRangeParameters) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]DatetimesecRangeRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimesecRangeParameters.
func (in *DatetimesecRangeParameters) DeepCopy() *DatetimesecRangeParameters {
	if in == nil {
		return nil
	}
	out := new(DatetimesecRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimesecRangeRangeInitParameters) DeepCopyInto(out *DatetimesecRangeRangeInitParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimesecRangeRangeInitParameters.
func (in *DatetimesecRangeRangeInitParameters) DeepCopy() *DatetimesecRangeRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatetimesecRangeRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimesecRangeRangeObservation) DeepCopyInto(out *DatetimesecRangeRangeObservation) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimesecRangeRangeObservation.
func (in *DatetimesecRangeRangeObservation) DeepCopy() *DatetimesecRangeRangeObservation {
	if in == nil {
		return nil
	}
	out := new(DatetimesecRangeRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatetimesecRangeRangeParameters) DeepCopyInto(out *DatetimesecRangeRangeParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatetimesecRangeRangeParameters.
func (in *DatetimesecRangeRangeParameters) DeepCopy() *DatetimesecRangeRangeParameters {
	if in == nil {
		return nil
	}
	out := new(DatetimesecRangeRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbfsFile) DeepCopyInto(out *DbfsFile) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbfsFile.
func (in *DbfsFile) DeepCopy() *DbfsFile {
	if in == nil {
		return nil
	}
	out := new(DbfsFile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DbfsFile) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbfsFileInitParameters) DeepCopyInto(out *DbfsFileInitParameters) {
	*out = *in
	if in.ContentBase64 != nil {
		in, out := &in.ContentBase64, &out.ContentBase64
		*out = new(string)
		**out = **in
	}
	if in.Md5 != nil {
		in, out := &in.Md5, &out.Md5
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbfsFileInitParameters.
func (in *DbfsFileInitParameters) DeepCopy() *DbfsFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(DbfsFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbfsFileList) DeepCopyInto(out *DbfsFileList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DbfsFile, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbfsFileList.
func (in *DbfsFileList) DeepCopy() *DbfsFileList {
	if in == nil {
		return nil
	}
	out := new(DbfsFileList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DbfsFileList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbfsFileObservation) DeepCopyInto(out *DbfsFileObservation) {
	*out = *in
	if in.ContentBase64 != nil {
		in, out := &in.ContentBase64, &out.ContentBase64
		*out = new(string)
		**out = **in
	}
	if in.DbfsPath != nil {
		in, out := &in.DbfsPath, &out.DbfsPath
		*out = new(string)
		**out = **in
	}
	if in.FileSize != nil {
		in, out := &in.FileSize, &out.FileSize
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Md5 != nil {
		in, out := &in.Md5, &out.Md5
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbfsFileObservation.
func (in *DbfsFileObservation) DeepCopy() *DbfsFileObservation {
	if in == nil {
		return nil
	}
	out := new(DbfsFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbfsFileParameters) DeepCopyInto(out *DbfsFileParameters) {
	*out = *in
	if in.ContentBase64 != nil {
		in, out := &in.ContentBase64, &out.ContentBase64
		*out = new(string)
		**out = **in
	}
	if in.Md5 != nil {
		in, out := &in.Md5, &out.Md5
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbfsFileParameters.
func (in *DbfsFileParameters) DeepCopy() *DbfsFileParameters {
	if in == nil {
		return nil
	}
	out := new(DbfsFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbfsFileSpec) DeepCopyInto(out *DbfsFileSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbfsFileSpec.
func (in *DbfsFileSpec) DeepCopy() *DbfsFileSpec {
	if in == nil {
		return nil
	}
	out := new(DbfsFileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbfsFileStatus) DeepCopyInto(out *DbfsFileStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbfsFileStatus.
func (in *DbfsFileStatus) DeepCopy() *DbfsFileStatus {
	if in == nil {
		return nil
	}
	out := new(DbfsFileStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbfsInitParameters) DeepCopyInto(out *DbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbfsInitParameters.
func (in *DbfsInitParameters) DeepCopy() *DbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbfsObservation) DeepCopyInto(out *DbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbfsObservation.
func (in *DbfsObservation) DeepCopy() *DbfsObservation {
	if in == nil {
		return nil
	}
	out := new(DbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbfsParameters) DeepCopyInto(out *DbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbfsParameters.
func (in *DbfsParameters) DeepCopy() *DbfsParameters {
	if in == nil {
		return nil
	}
	out := new(DbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbtTaskInitParameters) DeepCopyInto(out *DbtTaskInitParameters) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProfilesDirectory != nil {
		in, out := &in.ProfilesDirectory, &out.ProfilesDirectory
		*out = new(string)
		**out = **in
	}
	if in.ProjectDirectory != nil {
		in, out := &in.ProjectDirectory, &out.ProjectDirectory
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbtTaskInitParameters.
func (in *DbtTaskInitParameters) DeepCopy() *DbtTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(DbtTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbtTaskObservation) DeepCopyInto(out *DbtTaskObservation) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProfilesDirectory != nil {
		in, out := &in.ProfilesDirectory, &out.ProfilesDirectory
		*out = new(string)
		**out = **in
	}
	if in.ProjectDirectory != nil {
		in, out := &in.ProjectDirectory, &out.ProjectDirectory
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbtTaskObservation.
func (in *DbtTaskObservation) DeepCopy() *DbtTaskObservation {
	if in == nil {
		return nil
	}
	out := new(DbtTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbtTaskParameters) DeepCopyInto(out *DbtTaskParameters) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProfilesDirectory != nil {
		in, out := &in.ProfilesDirectory, &out.ProfilesDirectory
		*out = new(string)
		**out = **in
	}
	if in.ProjectDirectory != nil {
		in, out := &in.ProjectDirectory, &out.ProjectDirectory
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbtTaskParameters.
func (in *DbtTaskParameters) DeepCopy() *DbtTaskParameters {
	if in == nil {
		return nil
	}
	out := new(DbtTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultNamespaceSetting) DeepCopyInto(out *DefaultNamespaceSetting) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultNamespaceSetting.
func (in *DefaultNamespaceSetting) DeepCopy() *DefaultNamespaceSetting {
	if in == nil {
		return nil
	}
	out := new(DefaultNamespaceSetting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DefaultNamespaceSetting) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultNamespaceSettingInitParameters) DeepCopyInto(out *DefaultNamespaceSettingInitParameters) {
	*out = *in
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = make([]NamespaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SettingName != nil {
		in, out := &in.SettingName, &out.SettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultNamespaceSettingInitParameters.
func (in *DefaultNamespaceSettingInitParameters) DeepCopy() *DefaultNamespaceSettingInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultNamespaceSettingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultNamespaceSettingList) DeepCopyInto(out *DefaultNamespaceSettingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DefaultNamespaceSetting, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultNamespaceSettingList.
func (in *DefaultNamespaceSettingList) DeepCopy() *DefaultNamespaceSettingList {
	if in == nil {
		return nil
	}
	out := new(DefaultNamespaceSettingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DefaultNamespaceSettingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultNamespaceSettingObservation) DeepCopyInto(out *DefaultNamespaceSettingObservation) {
	*out = *in
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = make([]NamespaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SettingName != nil {
		in, out := &in.SettingName, &out.SettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultNamespaceSettingObservation.
func (in *DefaultNamespaceSettingObservation) DeepCopy() *DefaultNamespaceSettingObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultNamespaceSettingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultNamespaceSettingParameters) DeepCopyInto(out *DefaultNamespaceSettingParameters) {
	*out = *in
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = make([]NamespaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SettingName != nil {
		in, out := &in.SettingName, &out.SettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultNamespaceSettingParameters.
func (in *DefaultNamespaceSettingParameters) DeepCopy() *DefaultNamespaceSettingParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultNamespaceSettingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultNamespaceSettingSpec) DeepCopyInto(out *DefaultNamespaceSettingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultNamespaceSettingSpec.
func (in *DefaultNamespaceSettingSpec) DeepCopy() *DefaultNamespaceSettingSpec {
	if in == nil {
		return nil
	}
	out := new(DefaultNamespaceSettingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultNamespaceSettingStatus) DeepCopyInto(out *DefaultNamespaceSettingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultNamespaceSettingStatus.
func (in *DefaultNamespaceSettingStatus) DeepCopy() *DefaultNamespaceSettingStatus {
	if in == nil {
		return nil
	}
	out := new(DefaultNamespaceSettingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRulesInitParameters) DeepCopyInto(out *DefaultRulesInitParameters) {
	*out = *in
	if in.AwsStableIPRule != nil {
		in, out := &in.AwsStableIPRule, &out.AwsStableIPRule
		*out = make([]AwsStableIPRuleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureServiceEndpointRule != nil {
		in, out := &in.AzureServiceEndpointRule, &out.AzureServiceEndpointRule
		*out = make([]AzureServiceEndpointRuleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRulesInitParameters.
func (in *DefaultRulesInitParameters) DeepCopy() *DefaultRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRulesObservation) DeepCopyInto(out *DefaultRulesObservation) {
	*out = *in
	if in.AwsStableIPRule != nil {
		in, out := &in.AwsStableIPRule, &out.AwsStableIPRule
		*out = make([]AwsStableIPRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureServiceEndpointRule != nil {
		in, out := &in.AzureServiceEndpointRule, &out.AzureServiceEndpointRule
		*out = make([]AzureServiceEndpointRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRulesObservation.
func (in *DefaultRulesObservation) DeepCopy() *DefaultRulesObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRulesParameters) DeepCopyInto(out *DefaultRulesParameters) {
	*out = *in
	if in.AwsStableIPRule != nil {
		in, out := &in.AwsStableIPRule, &out.AwsStableIPRule
		*out = make([]AwsStableIPRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureServiceEndpointRule != nil {
		in, out := &in.AzureServiceEndpointRule, &out.AzureServiceEndpointRule
		*out = make([]AzureServiceEndpointRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRulesParameters.
func (in *DefaultRulesParameters) DeepCopy() *DefaultRulesParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeltaSyncIndexSpecInitParameters) DeepCopyInto(out *DeltaSyncIndexSpecInitParameters) {
	*out = *in
	if in.EmbeddingSourceColumns != nil {
		in, out := &in.EmbeddingSourceColumns, &out.EmbeddingSourceColumns
		*out = make([]EmbeddingSourceColumnsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EmbeddingVectorColumns != nil {
		in, out := &in.EmbeddingVectorColumns, &out.EmbeddingVectorColumns
		*out = make([]EmbeddingVectorColumnsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EmbeddingWritebackTable != nil {
		in, out := &in.EmbeddingWritebackTable, &out.EmbeddingWritebackTable
		*out = new(string)
		**out = **in
	}
	if in.PipelineType != nil {
		in, out := &in.PipelineType, &out.PipelineType
		*out = new(string)
		**out = **in
	}
	if in.SourceTable != nil {
		in, out := &in.SourceTable, &out.SourceTable
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeltaSyncIndexSpecInitParameters.
func (in *DeltaSyncIndexSpecInitParameters) DeepCopy() *DeltaSyncIndexSpecInitParameters {
	if in == nil {
		return nil
	}
	out := new(DeltaSyncIndexSpecInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeltaSyncIndexSpecObservation) DeepCopyInto(out *DeltaSyncIndexSpecObservation) {
	*out = *in
	if in.EmbeddingSourceColumns != nil {
		in, out := &in.EmbeddingSourceColumns, &out.EmbeddingSourceColumns
		*out = make([]EmbeddingSourceColumnsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EmbeddingVectorColumns != nil {
		in, out := &in.EmbeddingVectorColumns, &out.EmbeddingVectorColumns
		*out = make([]EmbeddingVectorColumnsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EmbeddingWritebackTable != nil {
		in, out := &in.EmbeddingWritebackTable, &out.EmbeddingWritebackTable
		*out = new(string)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
	if in.PipelineType != nil {
		in, out := &in.PipelineType, &out.PipelineType
		*out = new(string)
		**out = **in
	}
	if in.SourceTable != nil {
		in, out := &in.SourceTable, &out.SourceTable
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeltaSyncIndexSpecObservation.
func (in *DeltaSyncIndexSpecObservation) DeepCopy() *DeltaSyncIndexSpecObservation {
	if in == nil {
		return nil
	}
	out := new(DeltaSyncIndexSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeltaSyncIndexSpecParameters) DeepCopyInto(out *DeltaSyncIndexSpecParameters) {
	*out = *in
	if in.EmbeddingSourceColumns != nil {
		in, out := &in.EmbeddingSourceColumns, &out.EmbeddingSourceColumns
		*out = make([]EmbeddingSourceColumnsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EmbeddingVectorColumns != nil {
		in, out := &in.EmbeddingVectorColumns, &out.EmbeddingVectorColumns
		*out = make([]EmbeddingVectorColumnsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EmbeddingWritebackTable != nil {
		in, out := &in.EmbeddingWritebackTable, &out.EmbeddingWritebackTable
		*out = new(string)
		**out = **in
	}
	if in.PipelineType != nil {
		in, out := &in.PipelineType, &out.PipelineType
		*out = new(string)
		**out = **in
	}
	if in.SourceTable != nil {
		in, out := &in.SourceTable, &out.SourceTable
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeltaSyncIndexSpecParameters.
func (in *DeltaSyncIndexSpecParameters) DeepCopy() *DeltaSyncIndexSpecParameters {
	if in == nil {
		return nil
	}
	out := new(DeltaSyncIndexSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DependsOnInitParameters) DeepCopyInto(out *DependsOnInitParameters) {
	*out = *in
	if in.Outcome != nil {
		in, out := &in.Outcome, &out.Outcome
		*out = new(string)
		**out = **in
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DependsOnInitParameters.
func (in *DependsOnInitParameters) DeepCopy() *DependsOnInitParameters {
	if in == nil {
		return nil
	}
	out := new(DependsOnInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DependsOnObservation) DeepCopyInto(out *DependsOnObservation) {
	*out = *in
	if in.Outcome != nil {
		in, out := &in.Outcome, &out.Outcome
		*out = new(string)
		**out = **in
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DependsOnObservation.
func (in *DependsOnObservation) DeepCopy() *DependsOnObservation {
	if in == nil {
		return nil
	}
	out := new(DependsOnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DependsOnParameters) DeepCopyInto(out *DependsOnParameters) {
	*out = *in
	if in.Outcome != nil {
		in, out := &in.Outcome, &out.Outcome
		*out = new(string)
		**out = **in
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DependsOnParameters.
func (in *DependsOnParameters) DeepCopy() *DependsOnParameters {
	if in == nil {
		return nil
	}
	out := new(DependsOnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentInitParameters) DeepCopyInto(out *DeploymentInitParameters) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.MetadataFilePath != nil {
		in, out := &in.MetadataFilePath, &out.MetadataFilePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentInitParameters.
func (in *DeploymentInitParameters) DeepCopy() *DeploymentInitParameters {
	if in == nil {
		return nil
	}
	out := new(DeploymentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentObservation) DeepCopyInto(out *DeploymentObservation) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.MetadataFilePath != nil {
		in, out := &in.MetadataFilePath, &out.MetadataFilePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentObservation.
func (in *DeploymentObservation) DeepCopy() *DeploymentObservation {
	if in == nil {
		return nil
	}
	out := new(DeploymentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentParameters) DeepCopyInto(out *DeploymentParameters) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.MetadataFilePath != nil {
		in, out := &in.MetadataFilePath, &out.MetadataFilePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentParameters.
func (in *DeploymentParameters) DeepCopy() *DeploymentParameters {
	if in == nil {
		return nil
	}
	out := new(DeploymentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectAccessIndexSpecEmbeddingSourceColumnsInitParameters) DeepCopyInto(out *DirectAccessIndexSpecEmbeddingSourceColumnsInitParameters) {
	*out = *in
	if in.EmbeddingModelEndpointName != nil {
		in, out := &in.EmbeddingModelEndpointName, &out.EmbeddingModelEndpointName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectAccessIndexSpecEmbeddingSourceColumnsInitParameters.
func (in *DirectAccessIndexSpecEmbeddingSourceColumnsInitParameters) DeepCopy() *DirectAccessIndexSpecEmbeddingSourceColumnsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DirectAccessIndexSpecEmbeddingSourceColumnsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectAccessIndexSpecEmbeddingSourceColumnsObservation) DeepCopyInto(out *DirectAccessIndexSpecEmbeddingSourceColumnsObservation) {
	*out = *in
	if in.EmbeddingModelEndpointName != nil {
		in, out := &in.EmbeddingModelEndpointName, &out.EmbeddingModelEndpointName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectAccessIndexSpecEmbeddingSourceColumnsObservation.
func (in *DirectAccessIndexSpecEmbeddingSourceColumnsObservation) DeepCopy() *DirectAccessIndexSpecEmbeddingSourceColumnsObservation {
	if in == nil {
		return nil
	}
	out := new(DirectAccessIndexSpecEmbeddingSourceColumnsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectAccessIndexSpecEmbeddingSourceColumnsParameters) DeepCopyInto(out *DirectAccessIndexSpecEmbeddingSourceColumnsParameters) {
	*out = *in
	if in.EmbeddingModelEndpointName != nil {
		in, out := &in.EmbeddingModelEndpointName, &out.EmbeddingModelEndpointName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectAccessIndexSpecEmbeddingSourceColumnsParameters.
func (in *DirectAccessIndexSpecEmbeddingSourceColumnsParameters) DeepCopy() *DirectAccessIndexSpecEmbeddingSourceColumnsParameters {
	if in == nil {
		return nil
	}
	out := new(DirectAccessIndexSpecEmbeddingSourceColumnsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectAccessIndexSpecEmbeddingVectorColumnsInitParameters) DeepCopyInto(out *DirectAccessIndexSpecEmbeddingVectorColumnsInitParameters) {
	*out = *in
	if in.EmbeddingDimension != nil {
		in, out := &in.EmbeddingDimension, &out.EmbeddingDimension
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectAccessIndexSpecEmbeddingVectorColumnsInitParameters.
func (in *DirectAccessIndexSpecEmbeddingVectorColumnsInitParameters) DeepCopy() *DirectAccessIndexSpecEmbeddingVectorColumnsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DirectAccessIndexSpecEmbeddingVectorColumnsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectAccessIndexSpecEmbeddingVectorColumnsObservation) DeepCopyInto(out *DirectAccessIndexSpecEmbeddingVectorColumnsObservation) {
	*out = *in
	if in.EmbeddingDimension != nil {
		in, out := &in.EmbeddingDimension, &out.EmbeddingDimension
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectAccessIndexSpecEmbeddingVectorColumnsObservation.
func (in *DirectAccessIndexSpecEmbeddingVectorColumnsObservation) DeepCopy() *DirectAccessIndexSpecEmbeddingVectorColumnsObservation {
	if in == nil {
		return nil
	}
	out := new(DirectAccessIndexSpecEmbeddingVectorColumnsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectAccessIndexSpecEmbeddingVectorColumnsParameters) DeepCopyInto(out *DirectAccessIndexSpecEmbeddingVectorColumnsParameters) {
	*out = *in
	if in.EmbeddingDimension != nil {
		in, out := &in.EmbeddingDimension, &out.EmbeddingDimension
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectAccessIndexSpecEmbeddingVectorColumnsParameters.
func (in *DirectAccessIndexSpecEmbeddingVectorColumnsParameters) DeepCopy() *DirectAccessIndexSpecEmbeddingVectorColumnsParameters {
	if in == nil {
		return nil
	}
	out := new(DirectAccessIndexSpecEmbeddingVectorColumnsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectAccessIndexSpecInitParameters) DeepCopyInto(out *DirectAccessIndexSpecInitParameters) {
	*out = *in
	if in.EmbeddingSourceColumns != nil {
		in, out := &in.EmbeddingSourceColumns, &out.EmbeddingSourceColumns
		*out = make([]DirectAccessIndexSpecEmbeddingSourceColumnsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EmbeddingVectorColumns != nil {
		in, out := &in.EmbeddingVectorColumns, &out.EmbeddingVectorColumns
		*out = make([]DirectAccessIndexSpecEmbeddingVectorColumnsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SchemaJSON != nil {
		in, out := &in.SchemaJSON, &out.SchemaJSON
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectAccessIndexSpecInitParameters.
func (in *DirectAccessIndexSpecInitParameters) DeepCopy() *DirectAccessIndexSpecInitParameters {
	if in == nil {
		return nil
	}
	out := new(DirectAccessIndexSpecInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectAccessIndexSpecObservation) DeepCopyInto(out *DirectAccessIndexSpecObservation) {
	*out = *in
	if in.EmbeddingSourceColumns != nil {
		in, out := &in.EmbeddingSourceColumns, &out.EmbeddingSourceColumns
		*out = make([]DirectAccessIndexSpecEmbeddingSourceColumnsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EmbeddingVectorColumns != nil {
		in, out := &in.EmbeddingVectorColumns, &out.EmbeddingVectorColumns
		*out = make([]DirectAccessIndexSpecEmbeddingVectorColumnsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SchemaJSON != nil {
		in, out := &in.SchemaJSON, &out.SchemaJSON
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectAccessIndexSpecObservation.
func (in *DirectAccessIndexSpecObservation) DeepCopy() *DirectAccessIndexSpecObservation {
	if in == nil {
		return nil
	}
	out := new(DirectAccessIndexSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectAccessIndexSpecParameters) DeepCopyInto(out *DirectAccessIndexSpecParameters) {
	*out = *in
	if in.EmbeddingSourceColumns != nil {
		in, out := &in.EmbeddingSourceColumns, &out.EmbeddingSourceColumns
		*out = make([]DirectAccessIndexSpecEmbeddingSourceColumnsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EmbeddingVectorColumns != nil {
		in, out := &in.EmbeddingVectorColumns, &out.EmbeddingVectorColumns
		*out = make([]DirectAccessIndexSpecEmbeddingVectorColumnsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SchemaJSON != nil {
		in, out := &in.SchemaJSON, &out.SchemaJSON
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectAccessIndexSpecParameters.
func (in *DirectAccessIndexSpecParameters) DeepCopy() *DirectAccessIndexSpecParameters {
	if in == nil {
		return nil
	}
	out := new(DirectAccessIndexSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Directory) DeepCopyInto(out *Directory) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Directory.
func (in *Directory) DeepCopy() *Directory {
	if in == nil {
		return nil
	}
	out := new(Directory)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Directory) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryInitParameters) DeepCopyInto(out *DirectoryInitParameters) {
	*out = *in
	if in.DeleteRecursive != nil {
		in, out := &in.DeleteRecursive, &out.DeleteRecursive
		*out = new(bool)
		**out = **in
	}
	if in.ObjectID != nil {
		in, out := &in.ObjectID, &out.ObjectID
		*out = new(float64)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryInitParameters.
func (in *DirectoryInitParameters) DeepCopy() *DirectoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(DirectoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryList) DeepCopyInto(out *DirectoryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Directory, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryList.
func (in *DirectoryList) DeepCopy() *DirectoryList {
	if in == nil {
		return nil
	}
	out := new(DirectoryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DirectoryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryObservation) DeepCopyInto(out *DirectoryObservation) {
	*out = *in
	if in.DeleteRecursive != nil {
		in, out := &in.DeleteRecursive, &out.DeleteRecursive
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ObjectID != nil {
		in, out := &in.ObjectID, &out.ObjectID
		*out = new(float64)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.WorkspacePath != nil {
		in, out := &in.WorkspacePath, &out.WorkspacePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryObservation.
func (in *DirectoryObservation) DeepCopy() *DirectoryObservation {
	if in == nil {
		return nil
	}
	out := new(DirectoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryParameters) DeepCopyInto(out *DirectoryParameters) {
	*out = *in
	if in.DeleteRecursive != nil {
		in, out := &in.DeleteRecursive, &out.DeleteRecursive
		*out = new(bool)
		**out = **in
	}
	if in.ObjectID != nil {
		in, out := &in.ObjectID, &out.ObjectID
		*out = new(float64)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryParameters.
func (in *DirectoryParameters) DeepCopy() *DirectoryParameters {
	if in == nil {
		return nil
	}
	out := new(DirectoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectorySpec) DeepCopyInto(out *DirectorySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectorySpec.
func (in *DirectorySpec) DeepCopy() *DirectorySpec {
	if in == nil {
		return nil
	}
	out := new(DirectorySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryStatus) DeepCopyInto(out *DirectoryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryStatus.
func (in *DirectoryStatus) DeepCopy() *DirectoryStatus {
	if in == nil {
		return nil
	}
	out := new(DirectoryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskSpecInitParameters) DeepCopyInto(out *DiskSpecInitParameters) {
	*out = *in
	if in.DiskCount != nil {
		in, out := &in.DiskCount, &out.DiskCount
		*out = new(float64)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = make([]DiskTypeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskSpecInitParameters.
func (in *DiskSpecInitParameters) DeepCopy() *DiskSpecInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiskSpecInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskSpecObservation) DeepCopyInto(out *DiskSpecObservation) {
	*out = *in
	if in.DiskCount != nil {
		in, out := &in.DiskCount, &out.DiskCount
		*out = new(float64)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = make([]DiskTypeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskSpecObservation.
func (in *DiskSpecObservation) DeepCopy() *DiskSpecObservation {
	if in == nil {
		return nil
	}
	out := new(DiskSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskSpecParameters) DeepCopyInto(out *DiskSpecParameters) {
	*out = *in
	if in.DiskCount != nil {
		in, out := &in.DiskCount, &out.DiskCount
		*out = new(float64)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = make([]DiskTypeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskSpecParameters.
func (in *DiskSpecParameters) DeepCopy() *DiskSpecParameters {
	if in == nil {
		return nil
	}
	out := new(DiskSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskTypeInitParameters) DeepCopyInto(out *DiskTypeInitParameters) {
	*out = *in
	if in.AzureDiskVolumeType != nil {
		in, out := &in.AzureDiskVolumeType, &out.AzureDiskVolumeType
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskTypeInitParameters.
func (in *DiskTypeInitParameters) DeepCopy() *DiskTypeInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiskTypeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskTypeObservation) DeepCopyInto(out *DiskTypeObservation) {
	*out = *in
	if in.AzureDiskVolumeType != nil {
		in, out := &in.AzureDiskVolumeType, &out.AzureDiskVolumeType
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskTypeObservation.
func (in *DiskTypeObservation) DeepCopy() *DiskTypeObservation {
	if in == nil {
		return nil
	}
	out := new(DiskTypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskTypeParameters) DeepCopyInto(out *DiskTypeParameters) {
	*out = *in
	if in.AzureDiskVolumeType != nil {
		in, out := &in.AzureDiskVolumeType, &out.AzureDiskVolumeType
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskTypeParameters.
func (in *DiskTypeParameters) DeepCopy() *DiskTypeParameters {
	if in == nil {
		return nil
	}
	out := new(DiskTypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerImageBasicAuthInitParameters) DeepCopyInto(out *DockerImageBasicAuthInitParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerImageBasicAuthInitParameters.
func (in *DockerImageBasicAuthInitParameters) DeepCopy() *DockerImageBasicAuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(DockerImageBasicAuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerImageBasicAuthObservation) DeepCopyInto(out *DockerImageBasicAuthObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerImageBasicAuthObservation.
func (in *DockerImageBasicAuthObservation) DeepCopy() *DockerImageBasicAuthObservation {
	if in == nil {
		return nil
	}
	out := new(DockerImageBasicAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerImageBasicAuthParameters) DeepCopyInto(out *DockerImageBasicAuthParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerImageBasicAuthParameters.
func (in *DockerImageBasicAuthParameters) DeepCopy() *DockerImageBasicAuthParameters {
	if in == nil {
		return nil
	}
	out := new(DockerImageBasicAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerImageInitParameters) DeepCopyInto(out *DockerImageInitParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]BasicAuthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerImageInitParameters.
func (in *DockerImageInitParameters) DeepCopy() *DockerImageInitParameters {
	if in == nil {
		return nil
	}
	out := new(DockerImageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerImageObservation) DeepCopyInto(out *DockerImageObservation) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]BasicAuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerImageObservation.
func (in *DockerImageObservation) DeepCopy() *DockerImageObservation {
	if in == nil {
		return nil
	}
	out := new(DockerImageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerImageParameters) DeepCopyInto(out *DockerImageParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]BasicAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerImageParameters.
func (in *DockerImageParameters) DeepCopy() *DockerImageParameters {
	if in == nil {
		return nil
	}
	out := new(DockerImageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressConfigInitParameters) DeepCopyInto(out *EgressConfigInitParameters) {
	*out = *in
	if in.DefaultRules != nil {
		in, out := &in.DefaultRules, &out.DefaultRules
		*out = make([]DefaultRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetRules != nil {
		in, out := &in.TargetRules, &out.TargetRules
		*out = make([]TargetRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressConfigInitParameters.
func (in *EgressConfigInitParameters) DeepCopy() *EgressConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(EgressConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressConfigObservation) DeepCopyInto(out *EgressConfigObservation) {
	*out = *in
	if in.DefaultRules != nil {
		in, out := &in.DefaultRules, &out.DefaultRules
		*out = make([]DefaultRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetRules != nil {
		in, out := &in.TargetRules, &out.TargetRules
		*out = make([]TargetRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressConfigObservation.
func (in *EgressConfigObservation) DeepCopy() *EgressConfigObservation {
	if in == nil {
		return nil
	}
	out := new(EgressConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressConfigParameters) DeepCopyInto(out *EgressConfigParameters) {
	*out = *in
	if in.DefaultRules != nil {
		in, out := &in.DefaultRules, &out.DefaultRules
		*out = make([]DefaultRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetRules != nil {
		in, out := &in.TargetRules, &out.TargetRules
		*out = make([]TargetRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressConfigParameters.
func (in *EgressConfigParameters) DeepCopy() *EgressConfigParameters {
	if in == nil {
		return nil
	}
	out := new(EgressConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailInitParameters) DeepCopyInto(out *EmailInitParameters) {
	*out = *in
	if in.Addresses != nil {
		in, out := &in.Addresses, &out.Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailInitParameters.
func (in *EmailInitParameters) DeepCopy() *EmailInitParameters {
	if in == nil {
		return nil
	}
	out := new(EmailInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailNotificationsInitParameters) DeepCopyInto(out *EmailNotificationsInitParameters) {
	*out = *in
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailNotificationsInitParameters.
func (in *EmailNotificationsInitParameters) DeepCopy() *EmailNotificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EmailNotificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailNotificationsObservation) DeepCopyInto(out *EmailNotificationsObservation) {
	*out = *in
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailNotificationsObservation.
func (in *EmailNotificationsObservation) DeepCopy() *EmailNotificationsObservation {
	if in == nil {
		return nil
	}
	out := new(EmailNotificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailNotificationsParameters) DeepCopyInto(out *EmailNotificationsParameters) {
	*out = *in
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailNotificationsParameters.
func (in *EmailNotificationsParameters) DeepCopy() *EmailNotificationsParameters {
	if in == nil {
		return nil
	}
	out := new(EmailNotificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailObservation) DeepCopyInto(out *EmailObservation) {
	*out = *in
	if in.Addresses != nil {
		in, out := &in.Addresses, &out.Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailObservation.
func (in *EmailObservation) DeepCopy() *EmailObservation {
	if in == nil {
		return nil
	}
	out := new(EmailObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailParameters) DeepCopyInto(out *EmailParameters) {
	*out = *in
	if in.Addresses != nil {
		in, out := &in.Addresses, &out.Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailParameters.
func (in *EmailParameters) DeepCopy() *EmailParameters {
	if in == nil {
		return nil
	}
	out := new(EmailParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmbeddingSourceColumnsInitParameters) DeepCopyInto(out *EmbeddingSourceColumnsInitParameters) {
	*out = *in
	if in.EmbeddingModelEndpointName != nil {
		in, out := &in.EmbeddingModelEndpointName, &out.EmbeddingModelEndpointName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmbeddingSourceColumnsInitParameters.
func (in *EmbeddingSourceColumnsInitParameters) DeepCopy() *EmbeddingSourceColumnsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EmbeddingSourceColumnsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmbeddingSourceColumnsObservation) DeepCopyInto(out *EmbeddingSourceColumnsObservation) {
	*out = *in
	if in.EmbeddingModelEndpointName != nil {
		in, out := &in.EmbeddingModelEndpointName, &out.EmbeddingModelEndpointName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmbeddingSourceColumnsObservation.
func (in *EmbeddingSourceColumnsObservation) DeepCopy() *EmbeddingSourceColumnsObservation {
	if in == nil {
		return nil
	}
	out := new(EmbeddingSourceColumnsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmbeddingSourceColumnsParameters) DeepCopyInto(out *EmbeddingSourceColumnsParameters) {
	*out = *in
	if in.EmbeddingModelEndpointName != nil {
		in, out := &in.EmbeddingModelEndpointName, &out.EmbeddingModelEndpointName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmbeddingSourceColumnsParameters.
func (in *EmbeddingSourceColumnsParameters) DeepCopy() *EmbeddingSourceColumnsParameters {
	if in == nil {
		return nil
	}
	out := new(EmbeddingSourceColumnsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmbeddingVectorColumnsInitParameters) DeepCopyInto(out *EmbeddingVectorColumnsInitParameters) {
	*out = *in
	if in.EmbeddingDimension != nil {
		in, out := &in.EmbeddingDimension, &out.EmbeddingDimension
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmbeddingVectorColumnsInitParameters.
func (in *EmbeddingVectorColumnsInitParameters) DeepCopy() *EmbeddingVectorColumnsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EmbeddingVectorColumnsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmbeddingVectorColumnsObservation) DeepCopyInto(out *EmbeddingVectorColumnsObservation) {
	*out = *in
	if in.EmbeddingDimension != nil {
		in, out := &in.EmbeddingDimension, &out.EmbeddingDimension
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmbeddingVectorColumnsObservation.
func (in *EmbeddingVectorColumnsObservation) DeepCopy() *EmbeddingVectorColumnsObservation {
	if in == nil {
		return nil
	}
	out := new(EmbeddingVectorColumnsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmbeddingVectorColumnsParameters) DeepCopyInto(out *EmbeddingVectorColumnsParameters) {
	*out = *in
	if in.EmbeddingDimension != nil {
		in, out := &in.EmbeddingDimension, &out.EmbeddingDimension
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmbeddingVectorColumnsParameters.
func (in *EmbeddingVectorColumnsParameters) DeepCopy() *EmbeddingVectorColumnsParameters {
	if in == nil {
		return nil
	}
	out := new(EmbeddingVectorColumnsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnablementDetailsInitParameters) DeepCopyInto(out *EnablementDetailsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnablementDetailsInitParameters.
func (in *EnablementDetailsInitParameters) DeepCopy() *EnablementDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnablementDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnablementDetailsObservation) DeepCopyInto(out *EnablementDetailsObservation) {
	*out = *in
	if in.ForcedForComplianceMode != nil {
		in, out := &in.ForcedForComplianceMode, &out.ForcedForComplianceMode
		*out = new(bool)
		**out = **in
	}
	if in.UnavailableForDisabledEntitlement != nil {
		in, out := &in.UnavailableForDisabledEntitlement, &out.UnavailableForDisabledEntitlement
		*out = new(bool)
		**out = **in
	}
	if in.UnavailableForNonEnterpriseTier != nil {
		in, out := &in.UnavailableForNonEnterpriseTier, &out.UnavailableForNonEnterpriseTier
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnablementDetailsObservation.
func (in *EnablementDetailsObservation) DeepCopy() *EnablementDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(EnablementDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnablementDetailsParameters) DeepCopyInto(out *EnablementDetailsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnablementDetailsParameters.
func (in *EnablementDetailsParameters) DeepCopy() *EnablementDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(EnablementDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionDetailsInitParameters) DeepCopyInto(out *EncryptionDetailsInitParameters) {
	*out = *in
	if in.SseEncryptionDetails != nil {
		in, out := &in.SseEncryptionDetails, &out.SseEncryptionDetails
		*out = make([]SseEncryptionDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionDetailsInitParameters.
func (in *EncryptionDetailsInitParameters) DeepCopy() *EncryptionDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptionDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionDetailsObservation) DeepCopyInto(out *EncryptionDetailsObservation) {
	*out = *in
	if in.SseEncryptionDetails != nil {
		in, out := &in.SseEncryptionDetails, &out.SseEncryptionDetails
		*out = make([]SseEncryptionDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionDetailsObservation.
func (in *EncryptionDetailsObservation) DeepCopy() *EncryptionDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(EncryptionDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionDetailsParameters) DeepCopyInto(out *EncryptionDetailsParameters) {
	*out = *in
	if in.SseEncryptionDetails != nil {
		in, out := &in.SseEncryptionDetails, &out.SseEncryptionDetails
		*out = make([]SseEncryptionDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionDetailsParameters.
func (in *EncryptionDetailsParameters) DeepCopy() *EncryptionDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptionDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointStatusInitParameters) DeepCopyInto(out *EndpointStatusInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointStatusInitParameters.
func (in *EndpointStatusInitParameters) DeepCopy() *EndpointStatusInitParameters {
	if in == nil {
		return nil
	}
	out := new(EndpointStatusInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointStatusObservation) DeepCopyInto(out *EndpointStatusObservation) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointStatusObservation.
func (in *EndpointStatusObservation) DeepCopy() *EndpointStatusObservation {
	if in == nil {
		return nil
	}
	out := new(EndpointStatusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointStatusParameters) DeepCopyInto(out *EndpointStatusParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointStatusParameters.
func (in *EndpointStatusParameters) DeepCopy() *EndpointStatusParameters {
	if in == nil {
		return nil
	}
	out := new(EndpointStatusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnhancedSecurityMonitoringWorkspaceInitParameters) DeepCopyInto(out *EnhancedSecurityMonitoringWorkspaceInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnhancedSecurityMonitoringWorkspaceInitParameters.
func (in *EnhancedSecurityMonitoringWorkspaceInitParameters) DeepCopy() *EnhancedSecurityMonitoringWorkspaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnhancedSecurityMonitoringWorkspaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnhancedSecurityMonitoringWorkspaceObservation) DeepCopyInto(out *EnhancedSecurityMonitoringWorkspaceObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnhancedSecurityMonitoringWorkspaceObservation.
func (in *EnhancedSecurityMonitoringWorkspaceObservation) DeepCopy() *EnhancedSecurityMonitoringWorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(EnhancedSecurityMonitoringWorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnhancedSecurityMonitoringWorkspaceParameters) DeepCopyInto(out *EnhancedSecurityMonitoringWorkspaceParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnhancedSecurityMonitoringWorkspaceParameters.
func (in *EnhancedSecurityMonitoringWorkspaceParameters) DeepCopy() *EnhancedSecurityMonitoringWorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(EnhancedSecurityMonitoringWorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnhancedSecurityMonitoringWorkspaceSetting) DeepCopyInto(out *EnhancedSecurityMonitoringWorkspaceSetting) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnhancedSecurityMonitoringWorkspaceSetting.
func (in *EnhancedSecurityMonitoringWorkspaceSetting) DeepCopy() *EnhancedSecurityMonitoringWorkspaceSetting {
	if in == nil {
		return nil
	}
	out := new(EnhancedSecurityMonitoringWorkspaceSetting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EnhancedSecurityMonitoringWorkspaceSetting) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnhancedSecurityMonitoringWorkspaceSettingInitParameters) DeepCopyInto(out *EnhancedSecurityMonitoringWorkspaceSettingInitParameters) {
	*out = *in
	if in.EnhancedSecurityMonitoringWorkspace != nil {
		in, out := &in.EnhancedSecurityMonitoringWorkspace, &out.EnhancedSecurityMonitoringWorkspace
		*out = make([]EnhancedSecurityMonitoringWorkspaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.SettingName != nil {
		in, out := &in.SettingName, &out.SettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnhancedSecurityMonitoringWorkspaceSettingInitParameters.
func (in *EnhancedSecurityMonitoringWorkspaceSettingInitParameters) DeepCopy() *EnhancedSecurityMonitoringWorkspaceSettingInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnhancedSecurityMonitoringWorkspaceSettingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnhancedSecurityMonitoringWorkspaceSettingList) DeepCopyInto(out *EnhancedSecurityMonitoringWorkspaceSettingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EnhancedSecurityMonitoringWorkspaceSetting, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnhancedSecurityMonitoringWorkspaceSettingList.
func (in *EnhancedSecurityMonitoringWorkspaceSettingList) DeepCopy() *EnhancedSecurityMonitoringWorkspaceSettingList {
	if in == nil {
		return nil
	}
	out := new(EnhancedSecurityMonitoringWorkspaceSettingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EnhancedSecurityMonitoringWorkspaceSettingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnhancedSecurityMonitoringWorkspaceSettingObservation) DeepCopyInto(out *EnhancedSecurityMonitoringWorkspaceSettingObservation) {
	*out = *in
	if in.EnhancedSecurityMonitoringWorkspace != nil {
		in, out := &in.EnhancedSecurityMonitoringWorkspace, &out.EnhancedSecurityMonitoringWorkspace
		*out = make([]EnhancedSecurityMonitoringWorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SettingName != nil {
		in, out := &in.SettingName, &out.SettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnhancedSecurityMonitoringWorkspaceSettingObservation.
func (in *EnhancedSecurityMonitoringWorkspaceSettingObservation) DeepCopy() *EnhancedSecurityMonitoringWorkspaceSettingObservation {
	if in == nil {
		return nil
	}
	out := new(EnhancedSecurityMonitoringWorkspaceSettingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnhancedSecurityMonitoringWorkspaceSettingParameters) DeepCopyInto(out *EnhancedSecurityMonitoringWorkspaceSettingParameters) {
	*out = *in
	if in.EnhancedSecurityMonitoringWorkspace != nil {
		in, out := &in.EnhancedSecurityMonitoringWorkspace, &out.EnhancedSecurityMonitoringWorkspace
		*out = make([]EnhancedSecurityMonitoringWorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.SettingName != nil {
		in, out := &in.SettingName, &out.SettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnhancedSecurityMonitoringWorkspaceSettingParameters.
func (in *EnhancedSecurityMonitoringWorkspaceSettingParameters) DeepCopy() *EnhancedSecurityMonitoringWorkspaceSettingParameters {
	if in == nil {
		return nil
	}
	out := new(EnhancedSecurityMonitoringWorkspaceSettingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnhancedSecurityMonitoringWorkspaceSettingSpec) DeepCopyInto(out *EnhancedSecurityMonitoringWorkspaceSettingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnhancedSecurityMonitoringWorkspaceSettingSpec.
func (in *EnhancedSecurityMonitoringWorkspaceSettingSpec) DeepCopy() *EnhancedSecurityMonitoringWorkspaceSettingSpec {
	if in == nil {
		return nil
	}
	out := new(EnhancedSecurityMonitoringWorkspaceSettingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnhancedSecurityMonitoringWorkspaceSettingStatus) DeepCopyInto(out *EnhancedSecurityMonitoringWorkspaceSettingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnhancedSecurityMonitoringWorkspaceSettingStatus.
func (in *EnhancedSecurityMonitoringWorkspaceSettingStatus) DeepCopy() *EnhancedSecurityMonitoringWorkspaceSettingStatus {
	if in == nil {
		return nil
	}
	out := new(EnhancedSecurityMonitoringWorkspaceSettingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Entitlements) DeepCopyInto(out *Entitlements) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Entitlements.
func (in *Entitlements) DeepCopy() *Entitlements {
	if in == nil {
		return nil
	}
	out := new(Entitlements)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Entitlements) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntitlementsInitParameters) DeepCopyInto(out *EntitlementsInitParameters) {
	*out = *in
	if in.AllowClusterCreate != nil {
		in, out := &in.AllowClusterCreate, &out.AllowClusterCreate
		*out = new(bool)
		**out = **in
	}
	if in.AllowInstancePoolCreate != nil {
		in, out := &in.AllowInstancePoolCreate, &out.AllowInstancePoolCreate
		*out = new(bool)
		**out = **in
	}
	if in.DatabricksSQLAccess != nil {
		in, out := &in.DatabricksSQLAccess, &out.DatabricksSQLAccess
		*out = new(bool)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalID != nil {
		in, out := &in.ServicePrincipalID, &out.ServicePrincipalID
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceAccess != nil {
		in, out := &in.WorkspaceAccess, &out.WorkspaceAccess
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntitlementsInitParameters.
func (in *EntitlementsInitParameters) DeepCopy() *EntitlementsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EntitlementsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntitlementsList) DeepCopyInto(out *EntitlementsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Entitlements, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntitlementsList.
func (in *EntitlementsList) DeepCopy() *EntitlementsList {
	if in == nil {
		return nil
	}
	out := new(EntitlementsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EntitlementsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntitlementsObservation) DeepCopyInto(out *EntitlementsObservation) {
	*out = *in
	if in.AllowClusterCreate != nil {
		in, out := &in.AllowClusterCreate, &out.AllowClusterCreate
		*out = new(bool)
		**out = **in
	}
	if in.AllowInstancePoolCreate != nil {
		in, out := &in.AllowInstancePoolCreate, &out.AllowInstancePoolCreate
		*out = new(bool)
		**out = **in
	}
	if in.DatabricksSQLAccess != nil {
		in, out := &in.DatabricksSQLAccess, &out.DatabricksSQLAccess
		*out = new(bool)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalID != nil {
		in, out := &in.ServicePrincipalID, &out.ServicePrincipalID
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceAccess != nil {
		in, out := &in.WorkspaceAccess, &out.WorkspaceAccess
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntitlementsObservation.
func (in *EntitlementsObservation) DeepCopy() *EntitlementsObservation {
	if in == nil {
		return nil
	}
	out := new(EntitlementsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntitlementsParameters) DeepCopyInto(out *EntitlementsParameters) {
	*out = *in
	if in.AllowClusterCreate != nil {
		in, out := &in.AllowClusterCreate, &out.AllowClusterCreate
		*out = new(bool)
		**out = **in
	}
	if in.AllowInstancePoolCreate != nil {
		in, out := &in.AllowInstancePoolCreate, &out.AllowInstancePoolCreate
		*out = new(bool)
		**out = **in
	}
	if in.DatabricksSQLAccess != nil {
		in, out := &in.DatabricksSQLAccess, &out.DatabricksSQLAccess
		*out = new(bool)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalID != nil {
		in, out := &in.ServicePrincipalID, &out.ServicePrincipalID
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceAccess != nil {
		in, out := &in.WorkspaceAccess, &out.WorkspaceAccess
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntitlementsParameters.
func (in *EntitlementsParameters) DeepCopy() *EntitlementsParameters {
	if in == nil {
		return nil
	}
	out := new(EntitlementsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntitlementsSpec) DeepCopyInto(out *EntitlementsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntitlementsSpec.
func (in *EntitlementsSpec) DeepCopy() *EntitlementsSpec {
	if in == nil {
		return nil
	}
	out := new(EntitlementsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntitlementsStatus) DeepCopyInto(out *EntitlementsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntitlementsStatus.
func (in *EntitlementsStatus) DeepCopy() *EntitlementsStatus {
	if in == nil {
		return nil
	}
	out := new(EntitlementsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnumInitParameters) DeepCopyInto(out *EnumInitParameters) {
	*out = *in
	if in.Multiple != nil {
		in, out := &in.Multiple, &out.Multiple
		*out = make([]MultipleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnumInitParameters.
func (in *EnumInitParameters) DeepCopy() *EnumInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnumInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnumObservation) DeepCopyInto(out *EnumObservation) {
	*out = *in
	if in.Multiple != nil {
		in, out := &in.Multiple, &out.Multiple
		*out = make([]MultipleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnumObservation.
func (in *EnumObservation) DeepCopy() *EnumObservation {
	if in == nil {
		return nil
	}
	out := new(EnumObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnumParameters) DeepCopyInto(out *EnumParameters) {
	*out = *in
	if in.Multiple != nil {
		in, out := &in.Multiple, &out.Multiple
		*out = make([]MultipleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnumParameters.
func (in *EnumParameters) DeepCopy() *EnumParameters {
	if in == nil {
		return nil
	}
	out := new(EnumParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnumValueInitParameters) DeepCopyInto(out *EnumValueInitParameters) {
	*out = *in
	if in.EnumOptions != nil {
		in, out := &in.EnumOptions, &out.EnumOptions
		*out = new(string)
		**out = **in
	}
	if in.MultiValuesOptions != nil {
		in, out := &in.MultiValuesOptions, &out.MultiValuesOptions
		*out = make([]MultiValuesOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnumValueInitParameters.
func (in *EnumValueInitParameters) DeepCopy() *EnumValueInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnumValueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnumValueObservation) DeepCopyInto(out *EnumValueObservation) {
	*out = *in
	if in.EnumOptions != nil {
		in, out := &in.EnumOptions, &out.EnumOptions
		*out = new(string)
		**out = **in
	}
	if in.MultiValuesOptions != nil {
		in, out := &in.MultiValuesOptions, &out.MultiValuesOptions
		*out = make([]MultiValuesOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnumValueObservation.
func (in *EnumValueObservation) DeepCopy() *EnumValueObservation {
	if in == nil {
		return nil
	}
	out := new(EnumValueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnumValueParameters) DeepCopyInto(out *EnumValueParameters) {
	*out = *in
	if in.EnumOptions != nil {
		in, out := &in.EnumOptions, &out.EnumOptions
		*out = new(string)
		**out = **in
	}
	if in.MultiValuesOptions != nil {
		in, out := &in.MultiValuesOptions, &out.MultiValuesOptions
		*out = make([]MultiValuesOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnumValueParameters.
func (in *EnumValueParameters) DeepCopy() *EnumValueParameters {
	if in == nil {
		return nil
	}
	out := new(EnumValueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentInitParameters) DeepCopyInto(out *EnvironmentInitParameters) {
	*out = *in
	if in.EnvironmentKey != nil {
		in, out := &in.EnvironmentKey, &out.EnvironmentKey
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]SpecInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentInitParameters.
func (in *EnvironmentInitParameters) DeepCopy() *EnvironmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentObservation) DeepCopyInto(out *EnvironmentObservation) {
	*out = *in
	if in.EnvironmentKey != nil {
		in, out := &in.EnvironmentKey, &out.EnvironmentKey
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]SpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentObservation.
func (in *EnvironmentObservation) DeepCopy() *EnvironmentObservation {
	if in == nil {
		return nil
	}
	out := new(EnvironmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentParameters) DeepCopyInto(out *EnvironmentParameters) {
	*out = *in
	if in.EnvironmentKey != nil {
		in, out := &in.EnvironmentKey, &out.EnvironmentKey
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]SpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentParameters.
func (in *EnvironmentParameters) DeepCopy() *EnvironmentParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorMessagesInitParameters) DeepCopyInto(out *ErrorMessagesInitParameters) {
	*out = *in
	if in.ErrorMessage != nil {
		in, out := &in.ErrorMessage, &out.ErrorMessage
		*out = new(string)
		**out = **in
	}
	if in.ErrorType != nil {
		in, out := &in.ErrorType, &out.ErrorType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorMessagesInitParameters.
func (in *ErrorMessagesInitParameters) DeepCopy() *ErrorMessagesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ErrorMessagesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorMessagesObservation) DeepCopyInto(out *ErrorMessagesObservation) {
	*out = *in
	if in.ErrorMessage != nil {
		in, out := &in.ErrorMessage, &out.ErrorMessage
		*out = new(string)
		**out = **in
	}
	if in.ErrorType != nil {
		in, out := &in.ErrorType, &out.ErrorType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorMessagesObservation.
func (in *ErrorMessagesObservation) DeepCopy() *ErrorMessagesObservation {
	if in == nil {
		return nil
	}
	out := new(ErrorMessagesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorMessagesParameters) DeepCopyInto(out *ErrorMessagesParameters) {
	*out = *in
	if in.ErrorMessage != nil {
		in, out := &in.ErrorMessage, &out.ErrorMessage
		*out = new(string)
		**out = **in
	}
	if in.ErrorType != nil {
		in, out := &in.ErrorType, &out.ErrorType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorMessagesParameters.
func (in *ErrorMessagesParameters) DeepCopy() *ErrorMessagesParameters {
	if in == nil {
		return nil
	}
	out := new(ErrorMessagesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalCustomerInfoInitParameters) DeepCopyInto(out *ExternalCustomerInfoInitParameters) {
	*out = *in
	if in.AuthoritativeUserEmail != nil {
		in, out := &in.AuthoritativeUserEmail, &out.AuthoritativeUserEmail
		*out = new(string)
		**out = **in
	}
	if in.AuthoritativeUserFullName != nil {
		in, out := &in.AuthoritativeUserFullName, &out.AuthoritativeUserFullName
		*out = new(string)
		**out = **in
	}
	if in.CustomerName != nil {
		in, out := &in.CustomerName, &out.CustomerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalCustomerInfoInitParameters.
func (in *ExternalCustomerInfoInitParameters) DeepCopy() *ExternalCustomerInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExternalCustomerInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalCustomerInfoObservation) DeepCopyInto(out *ExternalCustomerInfoObservation) {
	*out = *in
	if in.AuthoritativeUserEmail != nil {
		in, out := &in.AuthoritativeUserEmail, &out.AuthoritativeUserEmail
		*out = new(string)
		**out = **in
	}
	if in.AuthoritativeUserFullName != nil {
		in, out := &in.AuthoritativeUserFullName, &out.AuthoritativeUserFullName
		*out = new(string)
		**out = **in
	}
	if in.CustomerName != nil {
		in, out := &in.CustomerName, &out.CustomerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalCustomerInfoObservation.
func (in *ExternalCustomerInfoObservation) DeepCopy() *ExternalCustomerInfoObservation {
	if in == nil {
		return nil
	}
	out := new(ExternalCustomerInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalCustomerInfoParameters) DeepCopyInto(out *ExternalCustomerInfoParameters) {
	*out = *in
	if in.AuthoritativeUserEmail != nil {
		in, out := &in.AuthoritativeUserEmail, &out.AuthoritativeUserEmail
		*out = new(string)
		**out = **in
	}
	if in.AuthoritativeUserFullName != nil {
		in, out := &in.AuthoritativeUserFullName, &out.AuthoritativeUserFullName
		*out = new(string)
		**out = **in
	}
	if in.CustomerName != nil {
		in, out := &in.CustomerName, &out.CustomerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalCustomerInfoParameters.
func (in *ExternalCustomerInfoParameters) DeepCopy() *ExternalCustomerInfoParameters {
	if in == nil {
		return nil
	}
	out := new(ExternalCustomerInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalLocation) DeepCopyInto(out *ExternalLocation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalLocation.
func (in *ExternalLocation) DeepCopy() *ExternalLocation {
	if in == nil {
		return nil
	}
	out := new(ExternalLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExternalLocation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalLocationInitParameters) DeepCopyInto(out *ExternalLocationInitParameters) {
	*out = *in
	if in.AccessPoint != nil {
		in, out := &in.AccessPoint, &out.AccessPoint
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CredentialName != nil {
		in, out := &in.CredentialName, &out.CredentialName
		*out = new(string)
		**out = **in
	}
	if in.EncryptionDetails != nil {
		in, out := &in.EncryptionDetails, &out.EncryptionDetails
		*out = make([]EncryptionDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ForceUpdate != nil {
		in, out := &in.ForceUpdate, &out.ForceUpdate
		*out = new(bool)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SkipValidation != nil {
		in, out := &in.SkipValidation, &out.SkipValidation
		*out = new(bool)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalLocationInitParameters.
func (in *ExternalLocationInitParameters) DeepCopy() *ExternalLocationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExternalLocationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalLocationList) DeepCopyInto(out *ExternalLocationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ExternalLocation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalLocationList.
func (in *ExternalLocationList) DeepCopy() *ExternalLocationList {
	if in == nil {
		return nil
	}
	out := new(ExternalLocationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExternalLocationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalLocationObservation) DeepCopyInto(out *ExternalLocationObservation) {
	*out = *in
	if in.AccessPoint != nil {
		in, out := &in.AccessPoint, &out.AccessPoint
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CredentialName != nil {
		in, out := &in.CredentialName, &out.CredentialName
		*out = new(string)
		**out = **in
	}
	if in.EncryptionDetails != nil {
		in, out := &in.EncryptionDetails, &out.EncryptionDetails
		*out = make([]EncryptionDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ForceUpdate != nil {
		in, out := &in.ForceUpdate, &out.ForceUpdate
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SkipValidation != nil {
		in, out := &in.SkipValidation, &out.SkipValidation
		*out = new(bool)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalLocationObservation.
func (in *ExternalLocationObservation) DeepCopy() *ExternalLocationObservation {
	if in == nil {
		return nil
	}
	out := new(ExternalLocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalLocationParameters) DeepCopyInto(out *ExternalLocationParameters) {
	*out = *in
	if in.AccessPoint != nil {
		in, out := &in.AccessPoint, &out.AccessPoint
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CredentialName != nil {
		in, out := &in.CredentialName, &out.CredentialName
		*out = new(string)
		**out = **in
	}
	if in.EncryptionDetails != nil {
		in, out := &in.EncryptionDetails, &out.EncryptionDetails
		*out = make([]EncryptionDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ForceUpdate != nil {
		in, out := &in.ForceUpdate, &out.ForceUpdate
		*out = new(bool)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SkipValidation != nil {
		in, out := &in.SkipValidation, &out.SkipValidation
		*out = new(bool)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalLocationParameters.
func (in *ExternalLocationParameters) DeepCopy() *ExternalLocationParameters {
	if in == nil {
		return nil
	}
	out := new(ExternalLocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalLocationSpec) DeepCopyInto(out *ExternalLocationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalLocationSpec.
func (in *ExternalLocationSpec) DeepCopy() *ExternalLocationSpec {
	if in == nil {
		return nil
	}
	out := new(ExternalLocationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalLocationStatus) DeepCopyInto(out *ExternalLocationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalLocationStatus.
func (in *ExternalLocationStatus) DeepCopy() *ExternalLocationStatus {
	if in == nil {
		return nil
	}
	out := new(ExternalLocationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalModelInitParameters) DeepCopyInto(out *ExternalModelInitParameters) {
	*out = *in
	if in.Ai21LabsConfig != nil {
		in, out := &in.Ai21LabsConfig, &out.Ai21LabsConfig
		*out = make([]Ai21LabsConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AmazonBedrockConfig != nil {
		in, out := &in.AmazonBedrockConfig, &out.AmazonBedrockConfig
		*out = make([]AmazonBedrockConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AnthropicConfig != nil {
		in, out := &in.AnthropicConfig, &out.AnthropicConfig
		*out = make([]AnthropicConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CohereConfig != nil {
		in, out := &in.CohereConfig, &out.CohereConfig
		*out = make([]CohereConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatabricksModelServingConfig != nil {
		in, out := &in.DatabricksModelServingConfig, &out.DatabricksModelServingConfig
		*out = make([]DatabricksModelServingConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleCloudVertexAIConfig != nil {
		in, out := &in.GoogleCloudVertexAIConfig, &out.GoogleCloudVertexAIConfig
		*out = make([]GoogleCloudVertexAIConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OpenaiConfig != nil {
		in, out := &in.OpenaiConfig, &out.OpenaiConfig
		*out = make([]OpenaiConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PalmConfig != nil {
		in, out := &in.PalmConfig, &out.PalmConfig
		*out = make([]PalmConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalModelInitParameters.
func (in *ExternalModelInitParameters) DeepCopy() *ExternalModelInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExternalModelInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalModelObservation) DeepCopyInto(out *ExternalModelObservation) {
	*out = *in
	if in.Ai21LabsConfig != nil {
		in, out := &in.Ai21LabsConfig, &out.Ai21LabsConfig
		*out = make([]Ai21LabsConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AmazonBedrockConfig != nil {
		in, out := &in.AmazonBedrockConfig, &out.AmazonBedrockConfig
		*out = make([]AmazonBedrockConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AnthropicConfig != nil {
		in, out := &in.AnthropicConfig, &out.AnthropicConfig
		*out = make([]AnthropicConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CohereConfig != nil {
		in, out := &in.CohereConfig, &out.CohereConfig
		*out = make([]CohereConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatabricksModelServingConfig != nil {
		in, out := &in.DatabricksModelServingConfig, &out.DatabricksModelServingConfig
		*out = make([]DatabricksModelServingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleCloudVertexAIConfig != nil {
		in, out := &in.GoogleCloudVertexAIConfig, &out.GoogleCloudVertexAIConfig
		*out = make([]GoogleCloudVertexAIConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OpenaiConfig != nil {
		in, out := &in.OpenaiConfig, &out.OpenaiConfig
		*out = make([]OpenaiConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PalmConfig != nil {
		in, out := &in.PalmConfig, &out.PalmConfig
		*out = make([]PalmConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalModelObservation.
func (in *ExternalModelObservation) DeepCopy() *ExternalModelObservation {
	if in == nil {
		return nil
	}
	out := new(ExternalModelObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalModelParameters) DeepCopyInto(out *ExternalModelParameters) {
	*out = *in
	if in.Ai21LabsConfig != nil {
		in, out := &in.Ai21LabsConfig, &out.Ai21LabsConfig
		*out = make([]Ai21LabsConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AmazonBedrockConfig != nil {
		in, out := &in.AmazonBedrockConfig, &out.AmazonBedrockConfig
		*out = make([]AmazonBedrockConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AnthropicConfig != nil {
		in, out := &in.AnthropicConfig, &out.AnthropicConfig
		*out = make([]AnthropicConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CohereConfig != nil {
		in, out := &in.CohereConfig, &out.CohereConfig
		*out = make([]CohereConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatabricksModelServingConfig != nil {
		in, out := &in.DatabricksModelServingConfig, &out.DatabricksModelServingConfig
		*out = make([]DatabricksModelServingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleCloudVertexAIConfig != nil {
		in, out := &in.GoogleCloudVertexAIConfig, &out.GoogleCloudVertexAIConfig
		*out = make([]GoogleCloudVertexAIConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OpenaiConfig != nil {
		in, out := &in.OpenaiConfig, &out.OpenaiConfig
		*out = make([]OpenaiConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PalmConfig != nil {
		in, out := &in.PalmConfig, &out.PalmConfig
		*out = make([]PalmConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalModelParameters.
func (in *ExternalModelParameters) DeepCopy() *ExternalModelParameters {
	if in == nil {
		return nil
	}
	out := new(ExternalModelParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailedStatusInitParameters) DeepCopyInto(out *FailedStatusInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailedStatusInitParameters.
func (in *FailedStatusInitParameters) DeepCopy() *FailedStatusInitParameters {
	if in == nil {
		return nil
	}
	out := new(FailedStatusInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailedStatusObservation) DeepCopyInto(out *FailedStatusObservation) {
	*out = *in
	if in.LastProcessedCommitVersion != nil {
		in, out := &in.LastProcessedCommitVersion, &out.LastProcessedCommitVersion
		*out = new(float64)
		**out = **in
	}
	if in.Timestamp != nil {
		in, out := &in.Timestamp, &out.Timestamp
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailedStatusObservation.
func (in *FailedStatusObservation) DeepCopy() *FailedStatusObservation {
	if in == nil {
		return nil
	}
	out := new(FailedStatusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailedStatusParameters) DeepCopyInto(out *FailedStatusParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailedStatusParameters.
func (in *FailedStatusParameters) DeepCopy() *FailedStatusParameters {
	if in == nil {
		return nil
	}
	out := new(FailedStatusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailureReasonInitParameters) DeepCopyInto(out *FailureReasonInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailureReasonInitParameters.
func (in *FailureReasonInitParameters) DeepCopy() *FailureReasonInitParameters {
	if in == nil {
		return nil
	}
	out := new(FailureReasonInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailureReasonObservation) DeepCopyInto(out *FailureReasonObservation) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailureReasonObservation.
func (in *FailureReasonObservation) DeepCopy() *FailureReasonObservation {
	if in == nil {
		return nil
	}
	out := new(FailureReasonObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailureReasonParameters) DeepCopyInto(out *FailureReasonParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailureReasonParameters.
func (in *FailureReasonParameters) DeepCopy() *FailureReasonParameters {
	if in == nil {
		return nil
	}
	out := new(FailureReasonParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *File) DeepCopyInto(out *File) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new File.
func (in *File) DeepCopy() *File {
	if in == nil {
		return nil
	}
	out := new(File)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *File) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileArrivalInitParameters) DeepCopyInto(out *FileArrivalInitParameters) {
	*out = *in
	if in.MinTimeBetweenTriggersSeconds != nil {
		in, out := &in.MinTimeBetweenTriggersSeconds, &out.MinTimeBetweenTriggersSeconds
		*out = new(float64)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WaitAfterLastChangeSeconds != nil {
		in, out := &in.WaitAfterLastChangeSeconds, &out.WaitAfterLastChangeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileArrivalInitParameters.
func (in *FileArrivalInitParameters) DeepCopy() *FileArrivalInitParameters {
	if in == nil {
		return nil
	}
	out := new(FileArrivalInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileArrivalObservation) DeepCopyInto(out *FileArrivalObservation) {
	*out = *in
	if in.MinTimeBetweenTriggersSeconds != nil {
		in, out := &in.MinTimeBetweenTriggersSeconds, &out.MinTimeBetweenTriggersSeconds
		*out = new(float64)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WaitAfterLastChangeSeconds != nil {
		in, out := &in.WaitAfterLastChangeSeconds, &out.WaitAfterLastChangeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileArrivalObservation.
func (in *FileArrivalObservation) DeepCopy() *FileArrivalObservation {
	if in == nil {
		return nil
	}
	out := new(FileArrivalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileArrivalParameters) DeepCopyInto(out *FileArrivalParameters) {
	*out = *in
	if in.MinTimeBetweenTriggersSeconds != nil {
		in, out := &in.MinTimeBetweenTriggersSeconds, &out.MinTimeBetweenTriggersSeconds
		*out = new(float64)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WaitAfterLastChangeSeconds != nil {
		in, out := &in.WaitAfterLastChangeSeconds, &out.WaitAfterLastChangeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileArrivalParameters.
func (in *FileArrivalParameters) DeepCopy() *FileArrivalParameters {
	if in == nil {
		return nil
	}
	out := new(FileArrivalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileInitParameters) DeepCopyInto(out *FileInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileInitParameters.
func (in *FileInitParameters) DeepCopy() *FileInitParameters {
	if in == nil {
		return nil
	}
	out := new(FileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileInitParameters_2) DeepCopyInto(out *FileInitParameters_2) {
	*out = *in
	if in.ContentBase64 != nil {
		in, out := &in.ContentBase64, &out.ContentBase64
		*out = new(string)
		**out = **in
	}
	if in.Md5 != nil {
		in, out := &in.Md5, &out.Md5
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.RemoteFileModified != nil {
		in, out := &in.RemoteFileModified, &out.RemoteFileModified
		*out = new(bool)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileInitParameters_2.
func (in *FileInitParameters_2) DeepCopy() *FileInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(FileInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileList) DeepCopyInto(out *FileList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]File, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileList.
func (in *FileList) DeepCopy() *FileList {
	if in == nil {
		return nil
	}
	out := new(FileList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FileList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileObservation) DeepCopyInto(out *FileObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileObservation.
func (in *FileObservation) DeepCopy() *FileObservation {
	if in == nil {
		return nil
	}
	out := new(FileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileObservation_2) DeepCopyInto(out *FileObservation_2) {
	*out = *in
	if in.ContentBase64 != nil {
		in, out := &in.ContentBase64, &out.ContentBase64
		*out = new(string)
		**out = **in
	}
	if in.FileSize != nil {
		in, out := &in.FileSize, &out.FileSize
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Md5 != nil {
		in, out := &in.Md5, &out.Md5
		*out = new(string)
		**out = **in
	}
	if in.ModificationTime != nil {
		in, out := &in.ModificationTime, &out.ModificationTime
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.RemoteFileModified != nil {
		in, out := &in.RemoteFileModified, &out.RemoteFileModified
		*out = new(bool)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileObservation_2.
func (in *FileObservation_2) DeepCopy() *FileObservation_2 {
	if in == nil {
		return nil
	}
	out := new(FileObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileParameters) DeepCopyInto(out *FileParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileParameters.
func (in *FileParameters) DeepCopy() *FileParameters {
	if in == nil {
		return nil
	}
	out := new(FileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileParameters_2) DeepCopyInto(out *FileParameters_2) {
	*out = *in
	if in.ContentBase64 != nil {
		in, out := &in.ContentBase64, &out.ContentBase64
		*out = new(string)
		**out = **in
	}
	if in.Md5 != nil {
		in, out := &in.Md5, &out.Md5
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.RemoteFileModified != nil {
		in, out := &in.RemoteFileModified, &out.RemoteFileModified
		*out = new(bool)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileParameters_2.
func (in *FileParameters_2) DeepCopy() *FileParameters_2 {
	if in == nil {
		return nil
	}
	out := new(FileParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileSpec) DeepCopyInto(out *FileSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileSpec.
func (in *FileSpec) DeepCopy() *FileSpec {
	if in == nil {
		return nil
	}
	out := new(FileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileStatus) DeepCopyInto(out *FileStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileStatus.
func (in *FileStatus) DeepCopy() *FileStatus {
	if in == nil {
		return nil
	}
	out := new(FileStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterInitParameters) DeepCopyInto(out *FilterInitParameters) {
	*out = *in
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]TagsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = make([]WorkspaceIDInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterInitParameters.
func (in *FilterInitParameters) DeepCopy() *FilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(FilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterObservation) DeepCopyInto(out *FilterObservation) {
	*out = *in
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]TagsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = make([]WorkspaceIDObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterObservation.
func (in *FilterObservation) DeepCopy() *FilterObservation {
	if in == nil {
		return nil
	}
	out := new(FilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterParameters) DeepCopyInto(out *FilterParameters) {
	*out = *in
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]TagsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = make([]WorkspaceIDParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterParameters.
func (in *FilterParameters) DeepCopy() *FilterParameters {
	if in == nil {
		return nil
	}
	out := new(FilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FiltersInitParameters) DeepCopyInto(out *FiltersInitParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FiltersInitParameters.
func (in *FiltersInitParameters) DeepCopy() *FiltersInitParameters {
	if in == nil {
		return nil
	}
	out := new(FiltersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FiltersObservation) DeepCopyInto(out *FiltersObservation) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FiltersObservation.
func (in *FiltersObservation) DeepCopy() *FiltersObservation {
	if in == nil {
		return nil
	}
	out := new(FiltersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FiltersParameters) DeepCopyInto(out *FiltersParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FiltersParameters.
func (in *FiltersParameters) DeepCopy() *FiltersParameters {
	if in == nil {
		return nil
	}
	out := new(FiltersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetOnDemandOptionInitParameters) DeepCopyInto(out *FleetOnDemandOptionInitParameters) {
	*out = *in
	if in.AllocationStrategy != nil {
		in, out := &in.AllocationStrategy, &out.AllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolsToUseCount != nil {
		in, out := &in.InstancePoolsToUseCount, &out.InstancePoolsToUseCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetOnDemandOptionInitParameters.
func (in *FleetOnDemandOptionInitParameters) DeepCopy() *FleetOnDemandOptionInitParameters {
	if in == nil {
		return nil
	}
	out := new(FleetOnDemandOptionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetOnDemandOptionObservation) DeepCopyInto(out *FleetOnDemandOptionObservation) {
	*out = *in
	if in.AllocationStrategy != nil {
		in, out := &in.AllocationStrategy, &out.AllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolsToUseCount != nil {
		in, out := &in.InstancePoolsToUseCount, &out.InstancePoolsToUseCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetOnDemandOptionObservation.
func (in *FleetOnDemandOptionObservation) DeepCopy() *FleetOnDemandOptionObservation {
	if in == nil {
		return nil
	}
	out := new(FleetOnDemandOptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetOnDemandOptionParameters) DeepCopyInto(out *FleetOnDemandOptionParameters) {
	*out = *in
	if in.AllocationStrategy != nil {
		in, out := &in.AllocationStrategy, &out.AllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolsToUseCount != nil {
		in, out := &in.InstancePoolsToUseCount, &out.InstancePoolsToUseCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetOnDemandOptionParameters.
func (in *FleetOnDemandOptionParameters) DeepCopy() *FleetOnDemandOptionParameters {
	if in == nil {
		return nil
	}
	out := new(FleetOnDemandOptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetSpotOptionInitParameters) DeepCopyInto(out *FleetSpotOptionInitParameters) {
	*out = *in
	if in.AllocationStrategy != nil {
		in, out := &in.AllocationStrategy, &out.AllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolsToUseCount != nil {
		in, out := &in.InstancePoolsToUseCount, &out.InstancePoolsToUseCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetSpotOptionInitParameters.
func (in *FleetSpotOptionInitParameters) DeepCopy() *FleetSpotOptionInitParameters {
	if in == nil {
		return nil
	}
	out := new(FleetSpotOptionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetSpotOptionObservation) DeepCopyInto(out *FleetSpotOptionObservation) {
	*out = *in
	if in.AllocationStrategy != nil {
		in, out := &in.AllocationStrategy, &out.AllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolsToUseCount != nil {
		in, out := &in.InstancePoolsToUseCount, &out.InstancePoolsToUseCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetSpotOptionObservation.
func (in *FleetSpotOptionObservation) DeepCopy() *FleetSpotOptionObservation {
	if in == nil {
		return nil
	}
	out := new(FleetSpotOptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetSpotOptionParameters) DeepCopyInto(out *FleetSpotOptionParameters) {
	*out = *in
	if in.AllocationStrategy != nil {
		in, out := &in.AllocationStrategy, &out.AllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolsToUseCount != nil {
		in, out := &in.InstancePoolsToUseCount, &out.InstancePoolsToUseCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetSpotOptionParameters.
func (in *FleetSpotOptionParameters) DeepCopy() *FleetSpotOptionParameters {
	if in == nil {
		return nil
	}
	out := new(FleetSpotOptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskInitParameters) DeepCopyInto(out *ForEachTaskInitParameters) {
	*out = *in
	if in.Concurrency != nil {
		in, out := &in.Concurrency, &out.Concurrency
		*out = new(float64)
		**out = **in
	}
	if in.Inputs != nil {
		in, out := &in.Inputs, &out.Inputs
		*out = new(string)
		**out = **in
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = make([]ForEachTaskTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskInitParameters.
func (in *ForEachTaskInitParameters) DeepCopy() *ForEachTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskObservation) DeepCopyInto(out *ForEachTaskObservation) {
	*out = *in
	if in.Concurrency != nil {
		in, out := &in.Concurrency, &out.Concurrency
		*out = new(float64)
		**out = **in
	}
	if in.Inputs != nil {
		in, out := &in.Inputs, &out.Inputs
		*out = new(string)
		**out = **in
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = make([]ForEachTaskTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskObservation.
func (in *ForEachTaskObservation) DeepCopy() *ForEachTaskObservation {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskParameters) DeepCopyInto(out *ForEachTaskParameters) {
	*out = *in
	if in.Concurrency != nil {
		in, out := &in.Concurrency, &out.Concurrency
		*out = new(float64)
		**out = **in
	}
	if in.Inputs != nil {
		in, out := &in.Inputs, &out.Inputs
		*out = new(string)
		**out = **in
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = make([]ForEachTaskTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskParameters.
func (in *ForEachTaskParameters) DeepCopy() *ForEachTaskParameters {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskTaskDbtTaskInitParameters) DeepCopyInto(out *ForEachTaskTaskDbtTaskInitParameters) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProfilesDirectory != nil {
		in, out := &in.ProfilesDirectory, &out.ProfilesDirectory
		*out = new(string)
		**out = **in
	}
	if in.ProjectDirectory != nil {
		in, out := &in.ProjectDirectory, &out.ProjectDirectory
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskTaskDbtTaskInitParameters.
func (in *ForEachTaskTaskDbtTaskInitParameters) DeepCopy() *ForEachTaskTaskDbtTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskTaskDbtTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskTaskDbtTaskObservation) DeepCopyInto(out *ForEachTaskTaskDbtTaskObservation) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProfilesDirectory != nil {
		in, out := &in.ProfilesDirectory, &out.ProfilesDirectory
		*out = new(string)
		**out = **in
	}
	if in.ProjectDirectory != nil {
		in, out := &in.ProjectDirectory, &out.ProjectDirectory
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskTaskDbtTaskObservation.
func (in *ForEachTaskTaskDbtTaskObservation) DeepCopy() *ForEachTaskTaskDbtTaskObservation {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskTaskDbtTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskTaskDbtTaskParameters) DeepCopyInto(out *ForEachTaskTaskDbtTaskParameters) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProfilesDirectory != nil {
		in, out := &in.ProfilesDirectory, &out.ProfilesDirectory
		*out = new(string)
		**out = **in
	}
	if in.ProjectDirectory != nil {
		in, out := &in.ProjectDirectory, &out.ProjectDirectory
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskTaskDbtTaskParameters.
func (in *ForEachTaskTaskDbtTaskParameters) DeepCopy() *ForEachTaskTaskDbtTaskParameters {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskTaskDbtTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskTaskEmailNotificationsInitParameters) DeepCopyInto(out *ForEachTaskTaskEmailNotificationsInitParameters) {
	*out = *in
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskTaskEmailNotificationsInitParameters.
func (in *ForEachTaskTaskEmailNotificationsInitParameters) DeepCopy() *ForEachTaskTaskEmailNotificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskTaskEmailNotificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskTaskEmailNotificationsObservation) DeepCopyInto(out *ForEachTaskTaskEmailNotificationsObservation) {
	*out = *in
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskTaskEmailNotificationsObservation.
func (in *ForEachTaskTaskEmailNotificationsObservation) DeepCopy() *ForEachTaskTaskEmailNotificationsObservation {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskTaskEmailNotificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskTaskEmailNotificationsParameters) DeepCopyInto(out *ForEachTaskTaskEmailNotificationsParameters) {
	*out = *in
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskTaskEmailNotificationsParameters.
func (in *ForEachTaskTaskEmailNotificationsParameters) DeepCopy() *ForEachTaskTaskEmailNotificationsParameters {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskTaskEmailNotificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskTaskInitParameters) DeepCopyInto(out *ForEachTaskTaskInitParameters) {
	*out = *in
	if in.ConditionTask != nil {
		in, out := &in.ConditionTask, &out.ConditionTask
		*out = make([]TaskConditionTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DbtTask != nil {
		in, out := &in.DbtTask, &out.DbtTask
		*out = make([]ForEachTaskTaskDbtTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DependsOn != nil {
		in, out := &in.DependsOn, &out.DependsOn
		*out = make([]TaskDependsOnInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableAutoOptimization != nil {
		in, out := &in.DisableAutoOptimization, &out.DisableAutoOptimization
		*out = new(bool)
		**out = **in
	}
	if in.EmailNotifications != nil {
		in, out := &in.EmailNotifications, &out.EmailNotifications
		*out = make([]ForEachTaskTaskEmailNotificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvironmentKey != nil {
		in, out := &in.EnvironmentKey, &out.EnvironmentKey
		*out = new(string)
		**out = **in
	}
	if in.ExistingClusterID != nil {
		in, out := &in.ExistingClusterID, &out.ExistingClusterID
		*out = new(string)
		**out = **in
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]TaskHealthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobClusterKey != nil {
		in, out := &in.JobClusterKey, &out.JobClusterKey
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]TaskLibraryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MinRetryIntervalMillis != nil {
		in, out := &in.MinRetryIntervalMillis, &out.MinRetryIntervalMillis
		*out = new(float64)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]TaskNewClusterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotebookTask != nil {
		in, out := &in.NotebookTask, &out.NotebookTask
		*out = make([]TaskNotebookTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]TaskNotificationSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PipelineTask != nil {
		in, out := &in.PipelineTask, &out.PipelineTask
		*out = make([]TaskPipelineTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonWheelTask != nil {
		in, out := &in.PythonWheelTask, &out.PythonWheelTask
		*out = make([]TaskPythonWheelTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryOnTimeout != nil {
		in, out := &in.RetryOnTimeout, &out.RetryOnTimeout
		*out = new(bool)
		**out = **in
	}
	if in.RunIf != nil {
		in, out := &in.RunIf, &out.RunIf
		*out = new(string)
		**out = **in
	}
	if in.RunJobTask != nil {
		in, out := &in.RunJobTask, &out.RunJobTask
		*out = make([]TaskRunJobTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SQLTask != nil {
		in, out := &in.SQLTask, &out.SQLTask
		*out = make([]SQLTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJarTask != nil {
		in, out := &in.SparkJarTask, &out.SparkJarTask
		*out = make([]TaskSparkJarTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkPythonTask != nil {
		in, out := &in.SparkPythonTask, &out.SparkPythonTask
		*out = make([]TaskSparkPythonTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSubmitTask != nil {
		in, out := &in.SparkSubmitTask, &out.SparkSubmitTask
		*out = make([]TaskSparkSubmitTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.WebhookNotifications != nil {
		in, out := &in.WebhookNotifications, &out.WebhookNotifications
		*out = make([]WebhookNotificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskTaskInitParameters.
func (in *ForEachTaskTaskInitParameters) DeepCopy() *ForEachTaskTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskTaskObservation) DeepCopyInto(out *ForEachTaskTaskObservation) {
	*out = *in
	if in.ConditionTask != nil {
		in, out := &in.ConditionTask, &out.ConditionTask
		*out = make([]TaskConditionTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DbtTask != nil {
		in, out := &in.DbtTask, &out.DbtTask
		*out = make([]ForEachTaskTaskDbtTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DependsOn != nil {
		in, out := &in.DependsOn, &out.DependsOn
		*out = make([]TaskDependsOnObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableAutoOptimization != nil {
		in, out := &in.DisableAutoOptimization, &out.DisableAutoOptimization
		*out = new(bool)
		**out = **in
	}
	if in.EmailNotifications != nil {
		in, out := &in.EmailNotifications, &out.EmailNotifications
		*out = make([]ForEachTaskTaskEmailNotificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvironmentKey != nil {
		in, out := &in.EnvironmentKey, &out.EnvironmentKey
		*out = new(string)
		**out = **in
	}
	if in.ExistingClusterID != nil {
		in, out := &in.ExistingClusterID, &out.ExistingClusterID
		*out = new(string)
		**out = **in
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]TaskHealthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobClusterKey != nil {
		in, out := &in.JobClusterKey, &out.JobClusterKey
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]TaskLibraryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MinRetryIntervalMillis != nil {
		in, out := &in.MinRetryIntervalMillis, &out.MinRetryIntervalMillis
		*out = new(float64)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]TaskNewClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotebookTask != nil {
		in, out := &in.NotebookTask, &out.NotebookTask
		*out = make([]TaskNotebookTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]TaskNotificationSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PipelineTask != nil {
		in, out := &in.PipelineTask, &out.PipelineTask
		*out = make([]TaskPipelineTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonWheelTask != nil {
		in, out := &in.PythonWheelTask, &out.PythonWheelTask
		*out = make([]TaskPythonWheelTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryOnTimeout != nil {
		in, out := &in.RetryOnTimeout, &out.RetryOnTimeout
		*out = new(bool)
		**out = **in
	}
	if in.RunIf != nil {
		in, out := &in.RunIf, &out.RunIf
		*out = new(string)
		**out = **in
	}
	if in.RunJobTask != nil {
		in, out := &in.RunJobTask, &out.RunJobTask
		*out = make([]TaskRunJobTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SQLTask != nil {
		in, out := &in.SQLTask, &out.SQLTask
		*out = make([]SQLTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJarTask != nil {
		in, out := &in.SparkJarTask, &out.SparkJarTask
		*out = make([]TaskSparkJarTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkPythonTask != nil {
		in, out := &in.SparkPythonTask, &out.SparkPythonTask
		*out = make([]TaskSparkPythonTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSubmitTask != nil {
		in, out := &in.SparkSubmitTask, &out.SparkSubmitTask
		*out = make([]TaskSparkSubmitTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.WebhookNotifications != nil {
		in, out := &in.WebhookNotifications, &out.WebhookNotifications
		*out = make([]WebhookNotificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskTaskObservation.
func (in *ForEachTaskTaskObservation) DeepCopy() *ForEachTaskTaskObservation {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForEachTaskTaskParameters) DeepCopyInto(out *ForEachTaskTaskParameters) {
	*out = *in
	if in.ConditionTask != nil {
		in, out := &in.ConditionTask, &out.ConditionTask
		*out = make([]TaskConditionTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DbtTask != nil {
		in, out := &in.DbtTask, &out.DbtTask
		*out = make([]ForEachTaskTaskDbtTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DependsOn != nil {
		in, out := &in.DependsOn, &out.DependsOn
		*out = make([]TaskDependsOnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableAutoOptimization != nil {
		in, out := &in.DisableAutoOptimization, &out.DisableAutoOptimization
		*out = new(bool)
		**out = **in
	}
	if in.EmailNotifications != nil {
		in, out := &in.EmailNotifications, &out.EmailNotifications
		*out = make([]ForEachTaskTaskEmailNotificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvironmentKey != nil {
		in, out := &in.EnvironmentKey, &out.EnvironmentKey
		*out = new(string)
		**out = **in
	}
	if in.ExistingClusterID != nil {
		in, out := &in.ExistingClusterID, &out.ExistingClusterID
		*out = new(string)
		**out = **in
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]TaskHealthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobClusterKey != nil {
		in, out := &in.JobClusterKey, &out.JobClusterKey
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]TaskLibraryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MinRetryIntervalMillis != nil {
		in, out := &in.MinRetryIntervalMillis, &out.MinRetryIntervalMillis
		*out = new(float64)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]TaskNewClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotebookTask != nil {
		in, out := &in.NotebookTask, &out.NotebookTask
		*out = make([]TaskNotebookTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]TaskNotificationSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PipelineTask != nil {
		in, out := &in.PipelineTask, &out.PipelineTask
		*out = make([]TaskPipelineTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonWheelTask != nil {
		in, out := &in.PythonWheelTask, &out.PythonWheelTask
		*out = make([]TaskPythonWheelTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryOnTimeout != nil {
		in, out := &in.RetryOnTimeout, &out.RetryOnTimeout
		*out = new(bool)
		**out = **in
	}
	if in.RunIf != nil {
		in, out := &in.RunIf, &out.RunIf
		*out = new(string)
		**out = **in
	}
	if in.RunJobTask != nil {
		in, out := &in.RunJobTask, &out.RunJobTask
		*out = make([]TaskRunJobTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SQLTask != nil {
		in, out := &in.SQLTask, &out.SQLTask
		*out = make([]SQLTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJarTask != nil {
		in, out := &in.SparkJarTask, &out.SparkJarTask
		*out = make([]TaskSparkJarTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkPythonTask != nil {
		in, out := &in.SparkPythonTask, &out.SparkPythonTask
		*out = make([]TaskSparkPythonTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSubmitTask != nil {
		in, out := &in.SparkSubmitTask, &out.SparkSubmitTask
		*out = make([]TaskSparkSubmitTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.WebhookNotifications != nil {
		in, out := &in.WebhookNotifications, &out.WebhookNotifications
		*out = make([]WebhookNotificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForEachTaskTaskParameters.
func (in *ForEachTaskTaskParameters) DeepCopy() *ForEachTaskTaskParameters {
	if in == nil {
		return nil
	}
	out := new(ForEachTaskTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPAttributesInitParameters) DeepCopyInto(out *GCPAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPAttributesInitParameters.
func (in *GCPAttributesInitParameters) DeepCopy() *GCPAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPAttributesObservation) DeepCopyInto(out *GCPAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPAttributesObservation.
func (in *GCPAttributesObservation) DeepCopy() *GCPAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(GCPAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPAttributesParameters) DeepCopyInto(out *GCPAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPAttributesParameters.
func (in *GCPAttributesParameters) DeepCopy() *GCPAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(GCPAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPInitParameters) DeepCopyInto(out *GCPInitParameters) {
	*out = *in
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPInitParameters.
func (in *GCPInitParameters) DeepCopy() *GCPInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPKeyInfoInitParameters) DeepCopyInto(out *GCPKeyInfoInitParameters) {
	*out = *in
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPKeyInfoInitParameters.
func (in *GCPKeyInfoInitParameters) DeepCopy() *GCPKeyInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPKeyInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPKeyInfoObservation) DeepCopyInto(out *GCPKeyInfoObservation) {
	*out = *in
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPKeyInfoObservation.
func (in *GCPKeyInfoObservation) DeepCopy() *GCPKeyInfoObservation {
	if in == nil {
		return nil
	}
	out := new(GCPKeyInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPKeyInfoParameters) DeepCopyInto(out *GCPKeyInfoParameters) {
	*out = *in
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPKeyInfoParameters.
func (in *GCPKeyInfoParameters) DeepCopy() *GCPKeyInfoParameters {
	if in == nil {
		return nil
	}
	out := new(GCPKeyInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPManagedNetworkConfigInitParameters) DeepCopyInto(out *GCPManagedNetworkConfigInitParameters) {
	*out = *in
	if in.GkeClusterPodIPRange != nil {
		in, out := &in.GkeClusterPodIPRange, &out.GkeClusterPodIPRange
		*out = new(string)
		**out = **in
	}
	if in.GkeClusterServiceIPRange != nil {
		in, out := &in.GkeClusterServiceIPRange, &out.GkeClusterServiceIPRange
		*out = new(string)
		**out = **in
	}
	if in.SubnetCidr != nil {
		in, out := &in.SubnetCidr, &out.SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPManagedNetworkConfigInitParameters.
func (in *GCPManagedNetworkConfigInitParameters) DeepCopy() *GCPManagedNetworkConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPManagedNetworkConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPManagedNetworkConfigObservation) DeepCopyInto(out *GCPManagedNetworkConfigObservation) {
	*out = *in
	if in.GkeClusterPodIPRange != nil {
		in, out := &in.GkeClusterPodIPRange, &out.GkeClusterPodIPRange
		*out = new(string)
		**out = **in
	}
	if in.GkeClusterServiceIPRange != nil {
		in, out := &in.GkeClusterServiceIPRange, &out.GkeClusterServiceIPRange
		*out = new(string)
		**out = **in
	}
	if in.SubnetCidr != nil {
		in, out := &in.SubnetCidr, &out.SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPManagedNetworkConfigObservation.
func (in *GCPManagedNetworkConfigObservation) DeepCopy() *GCPManagedNetworkConfigObservation {
	if in == nil {
		return nil
	}
	out := new(GCPManagedNetworkConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPManagedNetworkConfigParameters) DeepCopyInto(out *GCPManagedNetworkConfigParameters) {
	*out = *in
	if in.GkeClusterPodIPRange != nil {
		in, out := &in.GkeClusterPodIPRange, &out.GkeClusterPodIPRange
		*out = new(string)
		**out = **in
	}
	if in.GkeClusterServiceIPRange != nil {
		in, out := &in.GkeClusterServiceIPRange, &out.GkeClusterServiceIPRange
		*out = new(string)
		**out = **in
	}
	if in.SubnetCidr != nil {
		in, out := &in.SubnetCidr, &out.SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPManagedNetworkConfigParameters.
func (in *GCPManagedNetworkConfigParameters) DeepCopy() *GCPManagedNetworkConfigParameters {
	if in == nil {
		return nil
	}
	out := new(GCPManagedNetworkConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPNetworkInfoInitParameters) DeepCopyInto(out *GCPNetworkInfoInitParameters) {
	*out = *in
	if in.NetworkProjectID != nil {
		in, out := &in.NetworkProjectID, &out.NetworkProjectID
		*out = new(string)
		**out = **in
	}
	if in.PodIPRangeName != nil {
		in, out := &in.PodIPRangeName, &out.PodIPRangeName
		*out = new(string)
		**out = **in
	}
	if in.ServiceIPRangeName != nil {
		in, out := &in.ServiceIPRangeName, &out.ServiceIPRangeName
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetRegion != nil {
		in, out := &in.SubnetRegion, &out.SubnetRegion
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPNetworkInfoInitParameters.
func (in *GCPNetworkInfoInitParameters) DeepCopy() *GCPNetworkInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPNetworkInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPNetworkInfoObservation) DeepCopyInto(out *GCPNetworkInfoObservation) {
	*out = *in
	if in.NetworkProjectID != nil {
		in, out := &in.NetworkProjectID, &out.NetworkProjectID
		*out = new(string)
		**out = **in
	}
	if in.PodIPRangeName != nil {
		in, out := &in.PodIPRangeName, &out.PodIPRangeName
		*out = new(string)
		**out = **in
	}
	if in.ServiceIPRangeName != nil {
		in, out := &in.ServiceIPRangeName, &out.ServiceIPRangeName
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetRegion != nil {
		in, out := &in.SubnetRegion, &out.SubnetRegion
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPNetworkInfoObservation.
func (in *GCPNetworkInfoObservation) DeepCopy() *GCPNetworkInfoObservation {
	if in == nil {
		return nil
	}
	out := new(GCPNetworkInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPNetworkInfoParameters) DeepCopyInto(out *GCPNetworkInfoParameters) {
	*out = *in
	if in.NetworkProjectID != nil {
		in, out := &in.NetworkProjectID, &out.NetworkProjectID
		*out = new(string)
		**out = **in
	}
	if in.PodIPRangeName != nil {
		in, out := &in.PodIPRangeName, &out.PodIPRangeName
		*out = new(string)
		**out = **in
	}
	if in.ServiceIPRangeName != nil {
		in, out := &in.ServiceIPRangeName, &out.ServiceIPRangeName
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetRegion != nil {
		in, out := &in.SubnetRegion, &out.SubnetRegion
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPNetworkInfoParameters.
func (in *GCPNetworkInfoParameters) DeepCopy() *GCPNetworkInfoParameters {
	if in == nil {
		return nil
	}
	out := new(GCPNetworkInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPObservation) DeepCopyInto(out *GCPObservation) {
	*out = *in
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPObservation.
func (in *GCPObservation) DeepCopy() *GCPObservation {
	if in == nil {
		return nil
	}
	out := new(GCPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPParameters) DeepCopyInto(out *GCPParameters) {
	*out = *in
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPParameters.
func (in *GCPParameters) DeepCopy() *GCPParameters {
	if in == nil {
		return nil
	}
	out := new(GCPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPServiceAccountKeyInitParameters) DeepCopyInto(out *GCPServiceAccountKeyInitParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.PrivateKeyID != nil {
		in, out := &in.PrivateKeyID, &out.PrivateKeyID
		*out = new(string)
		**out = **in
	}
	out.PrivateKeySecretRef = in.PrivateKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPServiceAccountKeyInitParameters.
func (in *GCPServiceAccountKeyInitParameters) DeepCopy() *GCPServiceAccountKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPServiceAccountKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPServiceAccountKeyObservation) DeepCopyInto(out *GCPServiceAccountKeyObservation) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.PrivateKeyID != nil {
		in, out := &in.PrivateKeyID, &out.PrivateKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPServiceAccountKeyObservation.
func (in *GCPServiceAccountKeyObservation) DeepCopy() *GCPServiceAccountKeyObservation {
	if in == nil {
		return nil
	}
	out := new(GCPServiceAccountKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPServiceAccountKeyParameters) DeepCopyInto(out *GCPServiceAccountKeyParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.PrivateKeyID != nil {
		in, out := &in.PrivateKeyID, &out.PrivateKeyID
		*out = new(string)
		**out = **in
	}
	out.PrivateKeySecretRef = in.PrivateKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPServiceAccountKeyParameters.
func (in *GCPServiceAccountKeyParameters) DeepCopy() *GCPServiceAccountKeyParameters {
	if in == nil {
		return nil
	}
	out := new(GCPServiceAccountKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPVPCEndpointInfoInitParameters) DeepCopyInto(out *GCPVPCEndpointInfoInitParameters) {
	*out = *in
	if in.EndpointRegion != nil {
		in, out := &in.EndpointRegion, &out.EndpointRegion
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.PscConnectionID != nil {
		in, out := &in.PscConnectionID, &out.PscConnectionID
		*out = new(string)
		**out = **in
	}
	if in.PscEndpointName != nil {
		in, out := &in.PscEndpointName, &out.PscEndpointName
		*out = new(string)
		**out = **in
	}
	if in.ServiceAttachmentID != nil {
		in, out := &in.ServiceAttachmentID, &out.ServiceAttachmentID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPVPCEndpointInfoInitParameters.
func (in *GCPVPCEndpointInfoInitParameters) DeepCopy() *GCPVPCEndpointInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPVPCEndpointInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPVPCEndpointInfoObservation) DeepCopyInto(out *GCPVPCEndpointInfoObservation) {
	*out = *in
	if in.EndpointRegion != nil {
		in, out := &in.EndpointRegion, &out.EndpointRegion
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.PscConnectionID != nil {
		in, out := &in.PscConnectionID, &out.PscConnectionID
		*out = new(string)
		**out = **in
	}
	if in.PscEndpointName != nil {
		in, out := &in.PscEndpointName, &out.PscEndpointName
		*out = new(string)
		**out = **in
	}
	if in.ServiceAttachmentID != nil {
		in, out := &in.ServiceAttachmentID, &out.ServiceAttachmentID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPVPCEndpointInfoObservation.
func (in *GCPVPCEndpointInfoObservation) DeepCopy() *GCPVPCEndpointInfoObservation {
	if in == nil {
		return nil
	}
	out := new(GCPVPCEndpointInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPVPCEndpointInfoParameters) DeepCopyInto(out *GCPVPCEndpointInfoParameters) {
	*out = *in
	if in.EndpointRegion != nil {
		in, out := &in.EndpointRegion, &out.EndpointRegion
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.PscConnectionID != nil {
		in, out := &in.PscConnectionID, &out.PscConnectionID
		*out = new(string)
		**out = **in
	}
	if in.PscEndpointName != nil {
		in, out := &in.PscEndpointName, &out.PscEndpointName
		*out = new(string)
		**out = **in
	}
	if in.ServiceAttachmentID != nil {
		in, out := &in.ServiceAttachmentID, &out.ServiceAttachmentID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPVPCEndpointInfoParameters.
func (in *GCPVPCEndpointInfoParameters) DeepCopy() *GCPVPCEndpointInfoParameters {
	if in == nil {
		return nil
	}
	out := new(GCPVPCEndpointInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayDefinitionInitParameters) DeepCopyInto(out *GatewayDefinitionInitParameters) {
	*out = *in
	if in.ConnectionID != nil {
		in, out := &in.ConnectionID, &out.ConnectionID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.GatewayStorageCatalog != nil {
		in, out := &in.GatewayStorageCatalog, &out.GatewayStorageCatalog
		*out = new(string)
		**out = **in
	}
	if in.GatewayStorageName != nil {
		in, out := &in.GatewayStorageName, &out.GatewayStorageName
		*out = new(string)
		**out = **in
	}
	if in.GatewayStorageSchema != nil {
		in, out := &in.GatewayStorageSchema, &out.GatewayStorageSchema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayDefinitionInitParameters.
func (in *GatewayDefinitionInitParameters) DeepCopy() *GatewayDefinitionInitParameters {
	if in == nil {
		return nil
	}
	out := new(GatewayDefinitionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayDefinitionObservation) DeepCopyInto(out *GatewayDefinitionObservation) {
	*out = *in
	if in.ConnectionID != nil {
		in, out := &in.ConnectionID, &out.ConnectionID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.GatewayStorageCatalog != nil {
		in, out := &in.GatewayStorageCatalog, &out.GatewayStorageCatalog
		*out = new(string)
		**out = **in
	}
	if in.GatewayStorageName != nil {
		in, out := &in.GatewayStorageName, &out.GatewayStorageName
		*out = new(string)
		**out = **in
	}
	if in.GatewayStorageSchema != nil {
		in, out := &in.GatewayStorageSchema, &out.GatewayStorageSchema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayDefinitionObservation.
func (in *GatewayDefinitionObservation) DeepCopy() *GatewayDefinitionObservation {
	if in == nil {
		return nil
	}
	out := new(GatewayDefinitionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayDefinitionParameters) DeepCopyInto(out *GatewayDefinitionParameters) {
	*out = *in
	if in.ConnectionID != nil {
		in, out := &in.ConnectionID, &out.ConnectionID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.GatewayStorageCatalog != nil {
		in, out := &in.GatewayStorageCatalog, &out.GatewayStorageCatalog
		*out = new(string)
		**out = **in
	}
	if in.GatewayStorageName != nil {
		in, out := &in.GatewayStorageName, &out.GatewayStorageName
		*out = new(string)
		**out = **in
	}
	if in.GatewayStorageSchema != nil {
		in, out := &in.GatewayStorageSchema, &out.GatewayStorageSchema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayDefinitionParameters.
func (in *GatewayDefinitionParameters) DeepCopy() *GatewayDefinitionParameters {
	if in == nil {
		return nil
	}
	out := new(GatewayDefinitionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsInitParameters) DeepCopyInto(out *GcsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsInitParameters.
func (in *GcsInitParameters) DeepCopy() *GcsInitParameters {
	if in == nil {
		return nil
	}
	out := new(GcsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsObservation) DeepCopyInto(out *GcsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsObservation.
func (in *GcsObservation) DeepCopy() *GcsObservation {
	if in == nil {
		return nil
	}
	out := new(GcsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsParameters) DeepCopyInto(out *GcsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsParameters.
func (in *GcsParameters) DeepCopy() *GcsParameters {
	if in == nil {
		return nil
	}
	out := new(GcsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GenericWebhookInitParameters) DeepCopyInto(out *GenericWebhookInitParameters) {
	*out = *in
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.PasswordSet != nil {
		in, out := &in.PasswordSet, &out.PasswordSet
		*out = new(bool)
		**out = **in
	}
	if in.URLSecretRef != nil {
		in, out := &in.URLSecretRef, &out.URLSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.URLSet != nil {
		in, out := &in.URLSet, &out.URLSet
		*out = new(bool)
		**out = **in
	}
	if in.UsernameSecretRef != nil {
		in, out := &in.UsernameSecretRef, &out.UsernameSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.UsernameSet != nil {
		in, out := &in.UsernameSet, &out.UsernameSet
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GenericWebhookInitParameters.
func (in *GenericWebhookInitParameters) DeepCopy() *GenericWebhookInitParameters {
	if in == nil {
		return nil
	}
	out := new(GenericWebhookInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GenericWebhookObservation) DeepCopyInto(out *GenericWebhookObservation) {
	*out = *in
	if in.PasswordSet != nil {
		in, out := &in.PasswordSet, &out.PasswordSet
		*out = new(bool)
		**out = **in
	}
	if in.URLSet != nil {
		in, out := &in.URLSet, &out.URLSet
		*out = new(bool)
		**out = **in
	}
	if in.UsernameSet != nil {
		in, out := &in.UsernameSet, &out.UsernameSet
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GenericWebhookObservation.
func (in *GenericWebhookObservation) DeepCopy() *GenericWebhookObservation {
	if in == nil {
		return nil
	}
	out := new(GenericWebhookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GenericWebhookParameters) DeepCopyInto(out *GenericWebhookParameters) {
	*out = *in
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.PasswordSet != nil {
		in, out := &in.PasswordSet, &out.PasswordSet
		*out = new(bool)
		**out = **in
	}
	if in.URLSecretRef != nil {
		in, out := &in.URLSecretRef, &out.URLSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.URLSet != nil {
		in, out := &in.URLSet, &out.URLSet
		*out = new(bool)
		**out = **in
	}
	if in.UsernameSecretRef != nil {
		in, out := &in.UsernameSecretRef, &out.UsernameSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.UsernameSet != nil {
		in, out := &in.UsernameSet, &out.UsernameSet
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GenericWebhookParameters.
func (in *GenericWebhookParameters) DeepCopy() *GenericWebhookParameters {
	if in == nil {
		return nil
	}
	out := new(GenericWebhookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCredential) DeepCopyInto(out *GitCredential) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCredential.
func (in *GitCredential) DeepCopy() *GitCredential {
	if in == nil {
		return nil
	}
	out := new(GitCredential)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GitCredential) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCredentialInitParameters) DeepCopyInto(out *GitCredentialInitParameters) {
	*out = *in
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.GitProvider != nil {
		in, out := &in.GitProvider, &out.GitProvider
		*out = new(string)
		**out = **in
	}
	if in.GitUsername != nil {
		in, out := &in.GitUsername, &out.GitUsername
		*out = new(string)
		**out = **in
	}
	if in.PersonalAccessToken != nil {
		in, out := &in.PersonalAccessToken, &out.PersonalAccessToken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCredentialInitParameters.
func (in *GitCredentialInitParameters) DeepCopy() *GitCredentialInitParameters {
	if in == nil {
		return nil
	}
	out := new(GitCredentialInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCredentialList) DeepCopyInto(out *GitCredentialList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GitCredential, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCredentialList.
func (in *GitCredentialList) DeepCopy() *GitCredentialList {
	if in == nil {
		return nil
	}
	out := new(GitCredentialList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GitCredentialList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCredentialObservation) DeepCopyInto(out *GitCredentialObservation) {
	*out = *in
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.GitProvider != nil {
		in, out := &in.GitProvider, &out.GitProvider
		*out = new(string)
		**out = **in
	}
	if in.GitUsername != nil {
		in, out := &in.GitUsername, &out.GitUsername
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PersonalAccessToken != nil {
		in, out := &in.PersonalAccessToken, &out.PersonalAccessToken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCredentialObservation.
func (in *GitCredentialObservation) DeepCopy() *GitCredentialObservation {
	if in == nil {
		return nil
	}
	out := new(GitCredentialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCredentialParameters) DeepCopyInto(out *GitCredentialParameters) {
	*out = *in
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.GitProvider != nil {
		in, out := &in.GitProvider, &out.GitProvider
		*out = new(string)
		**out = **in
	}
	if in.GitUsername != nil {
		in, out := &in.GitUsername, &out.GitUsername
		*out = new(string)
		**out = **in
	}
	if in.PersonalAccessToken != nil {
		in, out := &in.PersonalAccessToken, &out.PersonalAccessToken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCredentialParameters.
func (in *GitCredentialParameters) DeepCopy() *GitCredentialParameters {
	if in == nil {
		return nil
	}
	out := new(GitCredentialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCredentialSpec) DeepCopyInto(out *GitCredentialSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCredentialSpec.
func (in *GitCredentialSpec) DeepCopy() *GitCredentialSpec {
	if in == nil {
		return nil
	}
	out := new(GitCredentialSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCredentialStatus) DeepCopyInto(out *GitCredentialStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCredentialStatus.
func (in *GitCredentialStatus) DeepCopy() *GitCredentialStatus {
	if in == nil {
		return nil
	}
	out := new(GitCredentialStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitSnapshotInitParameters) DeepCopyInto(out *GitSnapshotInitParameters) {
	*out = *in
	if in.UsedCommit != nil {
		in, out := &in.UsedCommit, &out.UsedCommit
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitSnapshotInitParameters.
func (in *GitSnapshotInitParameters) DeepCopy() *GitSnapshotInitParameters {
	if in == nil {
		return nil
	}
	out := new(GitSnapshotInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitSnapshotObservation) DeepCopyInto(out *GitSnapshotObservation) {
	*out = *in
	if in.UsedCommit != nil {
		in, out := &in.UsedCommit, &out.UsedCommit
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitSnapshotObservation.
func (in *GitSnapshotObservation) DeepCopy() *GitSnapshotObservation {
	if in == nil {
		return nil
	}
	out := new(GitSnapshotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitSnapshotParameters) DeepCopyInto(out *GitSnapshotParameters) {
	*out = *in
	if in.UsedCommit != nil {
		in, out := &in.UsedCommit, &out.UsedCommit
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitSnapshotParameters.
func (in *GitSnapshotParameters) DeepCopy() *GitSnapshotParameters {
	if in == nil {
		return nil
	}
	out := new(GitSnapshotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitSourceInitParameters) DeepCopyInto(out *GitSourceInitParameters) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.Commit != nil {
		in, out := &in.Commit, &out.Commit
		*out = new(string)
		**out = **in
	}
	if in.GitSnapshot != nil {
		in, out := &in.GitSnapshot, &out.GitSnapshot
		*out = make([]GitSnapshotInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobSource != nil {
		in, out := &in.JobSource, &out.JobSource
		*out = make([]JobSourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitSourceInitParameters.
func (in *GitSourceInitParameters) DeepCopy() *GitSourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(GitSourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitSourceObservation) DeepCopyInto(out *GitSourceObservation) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.Commit != nil {
		in, out := &in.Commit, &out.Commit
		*out = new(string)
		**out = **in
	}
	if in.GitSnapshot != nil {
		in, out := &in.GitSnapshot, &out.GitSnapshot
		*out = make([]GitSnapshotObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobSource != nil {
		in, out := &in.JobSource, &out.JobSource
		*out = make([]JobSourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitSourceObservation.
func (in *GitSourceObservation) DeepCopy() *GitSourceObservation {
	if in == nil {
		return nil
	}
	out := new(GitSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitSourceParameters) DeepCopyInto(out *GitSourceParameters) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.Commit != nil {
		in, out := &in.Commit, &out.Commit
		*out = new(string)
		**out = **in
	}
	if in.GitSnapshot != nil {
		in, out := &in.GitSnapshot, &out.GitSnapshot
		*out = make([]GitSnapshotParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobSource != nil {
		in, out := &in.JobSource, &out.JobSource
		*out = make([]JobSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitSourceParameters.
func (in *GitSourceParameters) DeepCopy() *GitSourceParameters {
	if in == nil {
		return nil
	}
	out := new(GitSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeConfigInitParameters) DeepCopyInto(out *GkeConfigInitParameters) {
	*out = *in
	if in.ConnectivityType != nil {
		in, out := &in.ConnectivityType, &out.ConnectivityType
		*out = new(string)
		**out = **in
	}
	if in.MasterIPRange != nil {
		in, out := &in.MasterIPRange, &out.MasterIPRange
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeConfigInitParameters.
func (in *GkeConfigInitParameters) DeepCopy() *GkeConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(GkeConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeConfigObservation) DeepCopyInto(out *GkeConfigObservation) {
	*out = *in
	if in.ConnectivityType != nil {
		in, out := &in.ConnectivityType, &out.ConnectivityType
		*out = new(string)
		**out = **in
	}
	if in.MasterIPRange != nil {
		in, out := &in.MasterIPRange, &out.MasterIPRange
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeConfigObservation.
func (in *GkeConfigObservation) DeepCopy() *GkeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(GkeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeConfigParameters) DeepCopyInto(out *GkeConfigParameters) {
	*out = *in
	if in.ConnectivityType != nil {
		in, out := &in.ConnectivityType, &out.ConnectivityType
		*out = new(string)
		**out = **in
	}
	if in.MasterIPRange != nil {
		in, out := &in.MasterIPRange, &out.MasterIPRange
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeConfigParameters.
func (in *GkeConfigParameters) DeepCopy() *GkeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(GkeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalInitScript) DeepCopyInto(out *GlobalInitScript) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalInitScript.
func (in *GlobalInitScript) DeepCopy() *GlobalInitScript {
	if in == nil {
		return nil
	}
	out := new(GlobalInitScript)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalInitScript) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalInitScriptInitParameters) DeepCopyInto(out *GlobalInitScriptInitParameters) {
	*out = *in
	if in.ContentBase64 != nil {
		in, out := &in.ContentBase64, &out.ContentBase64
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Md5 != nil {
		in, out := &in.Md5, &out.Md5
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Position != nil {
		in, out := &in.Position, &out.Position
		*out = new(float64)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalInitScriptInitParameters.
func (in *GlobalInitScriptInitParameters) DeepCopy() *GlobalInitScriptInitParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalInitScriptInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalInitScriptList) DeepCopyInto(out *GlobalInitScriptList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GlobalInitScript, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalInitScriptList.
func (in *GlobalInitScriptList) DeepCopy() *GlobalInitScriptList {
	if in == nil {
		return nil
	}
	out := new(GlobalInitScriptList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalInitScriptList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalInitScriptObservation) DeepCopyInto(out *GlobalInitScriptObservation) {
	*out = *in
	if in.ContentBase64 != nil {
		in, out := &in.ContentBase64, &out.ContentBase64
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Md5 != nil {
		in, out := &in.Md5, &out.Md5
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Position != nil {
		in, out := &in.Position, &out.Position
		*out = new(float64)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalInitScriptObservation.
func (in *GlobalInitScriptObservation) DeepCopy() *GlobalInitScriptObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalInitScriptObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalInitScriptParameters) DeepCopyInto(out *GlobalInitScriptParameters) {
	*out = *in
	if in.ContentBase64 != nil {
		in, out := &in.ContentBase64, &out.ContentBase64
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Md5 != nil {
		in, out := &in.Md5, &out.Md5
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Position != nil {
		in, out := &in.Position, &out.Position
		*out = new(float64)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalInitScriptParameters.
func (in *GlobalInitScriptParameters) DeepCopy() *GlobalInitScriptParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalInitScriptParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalInitScriptSpec) DeepCopyInto(out *GlobalInitScriptSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalInitScriptSpec.
func (in *GlobalInitScriptSpec) DeepCopy() *GlobalInitScriptSpec {
	if in == nil {
		return nil
	}
	out := new(GlobalInitScriptSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalInitScriptStatus) DeepCopyInto(out *GlobalInitScriptStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalInitScriptStatus.
func (in *GlobalInitScriptStatus) DeepCopy() *GlobalInitScriptStatus {
	if in == nil {
		return nil
	}
	out := new(GlobalInitScriptStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleCloudVertexAIConfigInitParameters) DeepCopyInto(out *GoogleCloudVertexAIConfigInitParameters) {
	*out = *in
	if in.PrivateKey != nil {
		in, out := &in.PrivateKey, &out.PrivateKey
		*out = new(string)
		**out = **in
	}
	if in.PrivateKeyPlaintext != nil {
		in, out := &in.PrivateKeyPlaintext, &out.PrivateKeyPlaintext
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleCloudVertexAIConfigInitParameters.
func (in *GoogleCloudVertexAIConfigInitParameters) DeepCopy() *GoogleCloudVertexAIConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(GoogleCloudVertexAIConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleCloudVertexAIConfigObservation) DeepCopyInto(out *GoogleCloudVertexAIConfigObservation) {
	*out = *in
	if in.PrivateKey != nil {
		in, out := &in.PrivateKey, &out.PrivateKey
		*out = new(string)
		**out = **in
	}
	if in.PrivateKeyPlaintext != nil {
		in, out := &in.PrivateKeyPlaintext, &out.PrivateKeyPlaintext
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleCloudVertexAIConfigObservation.
func (in *GoogleCloudVertexAIConfigObservation) DeepCopy() *GoogleCloudVertexAIConfigObservation {
	if in == nil {
		return nil
	}
	out := new(GoogleCloudVertexAIConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleCloudVertexAIConfigParameters) DeepCopyInto(out *GoogleCloudVertexAIConfigParameters) {
	*out = *in
	if in.PrivateKey != nil {
		in, out := &in.PrivateKey, &out.PrivateKey
		*out = new(string)
		**out = **in
	}
	if in.PrivateKeyPlaintext != nil {
		in, out := &in.PrivateKeyPlaintext, &out.PrivateKeyPlaintext
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleCloudVertexAIConfigParameters.
func (in *GoogleCloudVertexAIConfigParameters) DeepCopy() *GoogleCloudVertexAIConfigParameters {
	if in == nil {
		return nil
	}
	out := new(GoogleCloudVertexAIConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Grant) DeepCopyInto(out *Grant) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Grant.
func (in *Grant) DeepCopy() *Grant {
	if in == nil {
		return nil
	}
	out := new(Grant)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Grant) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantInitParameters) DeepCopyInto(out *GrantInitParameters) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.ExternalLocation != nil {
		in, out := &in.ExternalLocation, &out.ExternalLocation
		*out = new(string)
		**out = **in
	}
	if in.ForeignConnection != nil {
		in, out := &in.ForeignConnection, &out.ForeignConnection
		*out = new(string)
		**out = **in
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.Metastore != nil {
		in, out := &in.Metastore, &out.Metastore
		*out = new(string)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = new(string)
		**out = **in
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Recipient != nil {
		in, out := &in.Recipient, &out.Recipient
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Share != nil {
		in, out := &in.Share, &out.Share
		*out = new(string)
		**out = **in
	}
	if in.StorageCredential != nil {
		in, out := &in.StorageCredential, &out.StorageCredential
		*out = new(string)
		**out = **in
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantInitParameters.
func (in *GrantInitParameters) DeepCopy() *GrantInitParameters {
	if in == nil {
		return nil
	}
	out := new(GrantInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantList) DeepCopyInto(out *GrantList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Grant, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantList.
func (in *GrantList) DeepCopy() *GrantList {
	if in == nil {
		return nil
	}
	out := new(GrantList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GrantList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantObservation) DeepCopyInto(out *GrantObservation) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.ExternalLocation != nil {
		in, out := &in.ExternalLocation, &out.ExternalLocation
		*out = new(string)
		**out = **in
	}
	if in.ForeignConnection != nil {
		in, out := &in.ForeignConnection, &out.ForeignConnection
		*out = new(string)
		**out = **in
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Metastore != nil {
		in, out := &in.Metastore, &out.Metastore
		*out = new(string)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = new(string)
		**out = **in
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Recipient != nil {
		in, out := &in.Recipient, &out.Recipient
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Share != nil {
		in, out := &in.Share, &out.Share
		*out = new(string)
		**out = **in
	}
	if in.StorageCredential != nil {
		in, out := &in.StorageCredential, &out.StorageCredential
		*out = new(string)
		**out = **in
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantObservation.
func (in *GrantObservation) DeepCopy() *GrantObservation {
	if in == nil {
		return nil
	}
	out := new(GrantObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantParameters) DeepCopyInto(out *GrantParameters) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.ExternalLocation != nil {
		in, out := &in.ExternalLocation, &out.ExternalLocation
		*out = new(string)
		**out = **in
	}
	if in.ForeignConnection != nil {
		in, out := &in.ForeignConnection, &out.ForeignConnection
		*out = new(string)
		**out = **in
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.Metastore != nil {
		in, out := &in.Metastore, &out.Metastore
		*out = new(string)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = new(string)
		**out = **in
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Recipient != nil {
		in, out := &in.Recipient, &out.Recipient
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Share != nil {
		in, out := &in.Share, &out.Share
		*out = new(string)
		**out = **in
	}
	if in.StorageCredential != nil {
		in, out := &in.StorageCredential, &out.StorageCredential
		*out = new(string)
		**out = **in
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantParameters.
func (in *GrantParameters) DeepCopy() *GrantParameters {
	if in == nil {
		return nil
	}
	out := new(GrantParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantRulesInitParameters) DeepCopyInto(out *GrantRulesInitParameters) {
	*out = *in
	if in.Principals != nil {
		in, out := &in.Principals, &out.Principals
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantRulesInitParameters.
func (in *GrantRulesInitParameters) DeepCopy() *GrantRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(GrantRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantRulesObservation) DeepCopyInto(out *GrantRulesObservation) {
	*out = *in
	if in.Principals != nil {
		in, out := &in.Principals, &out.Principals
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantRulesObservation.
func (in *GrantRulesObservation) DeepCopy() *GrantRulesObservation {
	if in == nil {
		return nil
	}
	out := new(GrantRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantRulesParameters) DeepCopyInto(out *GrantRulesParameters) {
	*out = *in
	if in.Principals != nil {
		in, out := &in.Principals, &out.Principals
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantRulesParameters.
func (in *GrantRulesParameters) DeepCopy() *GrantRulesParameters {
	if in == nil {
		return nil
	}
	out := new(GrantRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantSpec) DeepCopyInto(out *GrantSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantSpec.
func (in *GrantSpec) DeepCopy() *GrantSpec {
	if in == nil {
		return nil
	}
	out := new(GrantSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantStatus) DeepCopyInto(out *GrantStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantStatus.
func (in *GrantStatus) DeepCopy() *GrantStatus {
	if in == nil {
		return nil
	}
	out := new(GrantStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Grants) DeepCopyInto(out *Grants) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Grants.
func (in *Grants) DeepCopy() *Grants {
	if in == nil {
		return nil
	}
	out := new(Grants)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Grants) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantsGrantInitParameters) DeepCopyInto(out *GrantsGrantInitParameters) {
	*out = *in
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantsGrantInitParameters.
func (in *GrantsGrantInitParameters) DeepCopy() *GrantsGrantInitParameters {
	if in == nil {
		return nil
	}
	out := new(GrantsGrantInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantsGrantObservation) DeepCopyInto(out *GrantsGrantObservation) {
	*out = *in
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantsGrantObservation.
func (in *GrantsGrantObservation) DeepCopy() *GrantsGrantObservation {
	if in == nil {
		return nil
	}
	out := new(GrantsGrantObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantsGrantParameters) DeepCopyInto(out *GrantsGrantParameters) {
	*out = *in
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantsGrantParameters.
func (in *GrantsGrantParameters) DeepCopy() *GrantsGrantParameters {
	if in == nil {
		return nil
	}
	out := new(GrantsGrantParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantsInitParameters) DeepCopyInto(out *GrantsInitParameters) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.ExternalLocation != nil {
		in, out := &in.ExternalLocation, &out.ExternalLocation
		*out = new(string)
		**out = **in
	}
	if in.ForeignConnection != nil {
		in, out := &in.ForeignConnection, &out.ForeignConnection
		*out = new(string)
		**out = **in
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.Grant != nil {
		in, out := &in.Grant, &out.Grant
		*out = make([]GrantsGrantInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metastore != nil {
		in, out := &in.Metastore, &out.Metastore
		*out = new(string)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = new(string)
		**out = **in
	}
	if in.Recipient != nil {
		in, out := &in.Recipient, &out.Recipient
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Share != nil {
		in, out := &in.Share, &out.Share
		*out = new(string)
		**out = **in
	}
	if in.StorageCredential != nil {
		in, out := &in.StorageCredential, &out.StorageCredential
		*out = new(string)
		**out = **in
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantsInitParameters.
func (in *GrantsInitParameters) DeepCopy() *GrantsInitParameters {
	if in == nil {
		return nil
	}
	out := new(GrantsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantsList) DeepCopyInto(out *GrantsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Grants, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantsList.
func (in *GrantsList) DeepCopy() *GrantsList {
	if in == nil {
		return nil
	}
	out := new(GrantsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GrantsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantsObservation) DeepCopyInto(out *GrantsObservation) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.ExternalLocation != nil {
		in, out := &in.ExternalLocation, &out.ExternalLocation
		*out = new(string)
		**out = **in
	}
	if in.ForeignConnection != nil {
		in, out := &in.ForeignConnection, &out.ForeignConnection
		*out = new(string)
		**out = **in
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.Grant != nil {
		in, out := &in.Grant, &out.Grant
		*out = make([]GrantsGrantObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Metastore != nil {
		in, out := &in.Metastore, &out.Metastore
		*out = new(string)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = new(string)
		**out = **in
	}
	if in.Recipient != nil {
		in, out := &in.Recipient, &out.Recipient
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Share != nil {
		in, out := &in.Share, &out.Share
		*out = new(string)
		**out = **in
	}
	if in.StorageCredential != nil {
		in, out := &in.StorageCredential, &out.StorageCredential
		*out = new(string)
		**out = **in
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantsObservation.
func (in *GrantsObservation) DeepCopy() *GrantsObservation {
	if in == nil {
		return nil
	}
	out := new(GrantsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantsParameters) DeepCopyInto(out *GrantsParameters) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.ExternalLocation != nil {
		in, out := &in.ExternalLocation, &out.ExternalLocation
		*out = new(string)
		**out = **in
	}
	if in.ForeignConnection != nil {
		in, out := &in.ForeignConnection, &out.ForeignConnection
		*out = new(string)
		**out = **in
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.Grant != nil {
		in, out := &in.Grant, &out.Grant
		*out = make([]GrantsGrantParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metastore != nil {
		in, out := &in.Metastore, &out.Metastore
		*out = new(string)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = new(string)
		**out = **in
	}
	if in.Recipient != nil {
		in, out := &in.Recipient, &out.Recipient
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Share != nil {
		in, out := &in.Share, &out.Share
		*out = new(string)
		**out = **in
	}
	if in.StorageCredential != nil {
		in, out := &in.StorageCredential, &out.StorageCredential
		*out = new(string)
		**out = **in
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantsParameters.
func (in *GrantsParameters) DeepCopy() *GrantsParameters {
	if in == nil {
		return nil
	}
	out := new(GrantsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantsSpec) DeepCopyInto(out *GrantsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantsSpec.
func (in *GrantsSpec) DeepCopy() *GrantsSpec {
	if in == nil {
		return nil
	}
	out := new(GrantsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantsStatus) DeepCopyInto(out *GrantsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantsStatus.
func (in *GrantsStatus) DeepCopy() *GrantsStatus {
	if in == nil {
		return nil
	}
	out := new(GrantsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Group) DeepCopyInto(out *Group) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Group.
func (in *Group) DeepCopy() *Group {
	if in == nil {
		return nil
	}
	out := new(Group)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Group) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupInitParameters) DeepCopyInto(out *GroupInitParameters) {
	*out = *in
	if in.ACLPrincipalID != nil {
		in, out := &in.ACLPrincipalID, &out.ACLPrincipalID
		*out = new(string)
		**out = **in
	}
	if in.AllowClusterCreate != nil {
		in, out := &in.AllowClusterCreate, &out.AllowClusterCreate
		*out = new(bool)
		**out = **in
	}
	if in.AllowInstancePoolCreate != nil {
		in, out := &in.AllowInstancePoolCreate, &out.AllowInstancePoolCreate
		*out = new(bool)
		**out = **in
	}
	if in.DatabricksSQLAccess != nil {
		in, out := &in.DatabricksSQLAccess, &out.DatabricksSQLAccess
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceAccess != nil {
		in, out := &in.WorkspaceAccess, &out.WorkspaceAccess
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupInitParameters.
func (in *GroupInitParameters) DeepCopy() *GroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(GroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupInstanceProfile) DeepCopyInto(out *GroupInstanceProfile) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupInstanceProfile.
func (in *GroupInstanceProfile) DeepCopy() *GroupInstanceProfile {
	if in == nil {
		return nil
	}
	out := new(GroupInstanceProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GroupInstanceProfile) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupInstanceProfileInitParameters) DeepCopyInto(out *GroupInstanceProfileInitParameters) {
	*out = *in
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.InstanceProfileID != nil {
		in, out := &in.InstanceProfileID, &out.InstanceProfileID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupInstanceProfileInitParameters.
func (in *GroupInstanceProfileInitParameters) DeepCopy() *GroupInstanceProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(GroupInstanceProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupInstanceProfileList) DeepCopyInto(out *GroupInstanceProfileList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GroupInstanceProfile, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupInstanceProfileList.
func (in *GroupInstanceProfileList) DeepCopy() *GroupInstanceProfileList {
	if in == nil {
		return nil
	}
	out := new(GroupInstanceProfileList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GroupInstanceProfileList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupInstanceProfileObservation) DeepCopyInto(out *GroupInstanceProfileObservation) {
	*out = *in
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceProfileID != nil {
		in, out := &in.InstanceProfileID, &out.InstanceProfileID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupInstanceProfileObservation.
func (in *GroupInstanceProfileObservation) DeepCopy() *GroupInstanceProfileObservation {
	if in == nil {
		return nil
	}
	out := new(GroupInstanceProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupInstanceProfileParameters) DeepCopyInto(out *GroupInstanceProfileParameters) {
	*out = *in
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.InstanceProfileID != nil {
		in, out := &in.InstanceProfileID, &out.InstanceProfileID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupInstanceProfileParameters.
func (in *GroupInstanceProfileParameters) DeepCopy() *GroupInstanceProfileParameters {
	if in == nil {
		return nil
	}
	out := new(GroupInstanceProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupInstanceProfileSpec) DeepCopyInto(out *GroupInstanceProfileSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupInstanceProfileSpec.
func (in *GroupInstanceProfileSpec) DeepCopy() *GroupInstanceProfileSpec {
	if in == nil {
		return nil
	}
	out := new(GroupInstanceProfileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupInstanceProfileStatus) DeepCopyInto(out *GroupInstanceProfileStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupInstanceProfileStatus.
func (in *GroupInstanceProfileStatus) DeepCopy() *GroupInstanceProfileStatus {
	if in == nil {
		return nil
	}
	out := new(GroupInstanceProfileStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupList) DeepCopyInto(out *GroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Group, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupList.
func (in *GroupList) DeepCopy() *GroupList {
	if in == nil {
		return nil
	}
	out := new(GroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupMember) DeepCopyInto(out *GroupMember) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupMember.
func (in *GroupMember) DeepCopy() *GroupMember {
	if in == nil {
		return nil
	}
	out := new(GroupMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GroupMember) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupMemberInitParameters) DeepCopyInto(out *GroupMemberInitParameters) {
	*out = *in
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.MemberID != nil {
		in, out := &in.MemberID, &out.MemberID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupMemberInitParameters.
func (in *GroupMemberInitParameters) DeepCopy() *GroupMemberInitParameters {
	if in == nil {
		return nil
	}
	out := new(GroupMemberInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupMemberList) DeepCopyInto(out *GroupMemberList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GroupMember, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupMemberList.
func (in *GroupMemberList) DeepCopy() *GroupMemberList {
	if in == nil {
		return nil
	}
	out := new(GroupMemberList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GroupMemberList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupMemberObservation) DeepCopyInto(out *GroupMemberObservation) {
	*out = *in
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MemberID != nil {
		in, out := &in.MemberID, &out.MemberID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupMemberObservation.
func (in *GroupMemberObservation) DeepCopy() *GroupMemberObservation {
	if in == nil {
		return nil
	}
	out := new(GroupMemberObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupMemberParameters) DeepCopyInto(out *GroupMemberParameters) {
	*out = *in
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.MemberID != nil {
		in, out := &in.MemberID, &out.MemberID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupMemberParameters.
func (in *GroupMemberParameters) DeepCopy() *GroupMemberParameters {
	if in == nil {
		return nil
	}
	out := new(GroupMemberParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupMemberSpec) DeepCopyInto(out *GroupMemberSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupMemberSpec.
func (in *GroupMemberSpec) DeepCopy() *GroupMemberSpec {
	if in == nil {
		return nil
	}
	out := new(GroupMemberSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupMemberStatus) DeepCopyInto(out *GroupMemberStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupMemberStatus.
func (in *GroupMemberStatus) DeepCopy() *GroupMemberStatus {
	if in == nil {
		return nil
	}
	out := new(GroupMemberStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupObservation) DeepCopyInto(out *GroupObservation) {
	*out = *in
	if in.ACLPrincipalID != nil {
		in, out := &in.ACLPrincipalID, &out.ACLPrincipalID
		*out = new(string)
		**out = **in
	}
	if in.AllowClusterCreate != nil {
		in, out := &in.AllowClusterCreate, &out.AllowClusterCreate
		*out = new(bool)
		**out = **in
	}
	if in.AllowInstancePoolCreate != nil {
		in, out := &in.AllowInstancePoolCreate, &out.AllowInstancePoolCreate
		*out = new(bool)
		**out = **in
	}
	if in.DatabricksSQLAccess != nil {
		in, out := &in.DatabricksSQLAccess, &out.DatabricksSQLAccess
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceAccess != nil {
		in, out := &in.WorkspaceAccess, &out.WorkspaceAccess
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupObservation.
func (in *GroupObservation) DeepCopy() *GroupObservation {
	if in == nil {
		return nil
	}
	out := new(GroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupParameters) DeepCopyInto(out *GroupParameters) {
	*out = *in
	if in.ACLPrincipalID != nil {
		in, out := &in.ACLPrincipalID, &out.ACLPrincipalID
		*out = new(string)
		**out = **in
	}
	if in.AllowClusterCreate != nil {
		in, out := &in.AllowClusterCreate, &out.AllowClusterCreate
		*out = new(bool)
		**out = **in
	}
	if in.AllowInstancePoolCreate != nil {
		in, out := &in.AllowInstancePoolCreate, &out.AllowInstancePoolCreate
		*out = new(bool)
		**out = **in
	}
	if in.DatabricksSQLAccess != nil {
		in, out := &in.DatabricksSQLAccess, &out.DatabricksSQLAccess
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceAccess != nil {
		in, out := &in.WorkspaceAccess, &out.WorkspaceAccess
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupParameters.
func (in *GroupParameters) DeepCopy() *GroupParameters {
	if in == nil {
		return nil
	}
	out := new(GroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupRole) DeepCopyInto(out *GroupRole) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupRole.
func (in *GroupRole) DeepCopy() *GroupRole {
	if in == nil {
		return nil
	}
	out := new(GroupRole)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GroupRole) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupRoleInitParameters) DeepCopyInto(out *GroupRoleInitParameters) {
	*out = *in
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupRoleInitParameters.
func (in *GroupRoleInitParameters) DeepCopy() *GroupRoleInitParameters {
	if in == nil {
		return nil
	}
	out := new(GroupRoleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupRoleList) DeepCopyInto(out *GroupRoleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GroupRole, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupRoleList.
func (in *GroupRoleList) DeepCopy() *GroupRoleList {
	if in == nil {
		return nil
	}
	out := new(GroupRoleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GroupRoleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupRoleObservation) DeepCopyInto(out *GroupRoleObservation) {
	*out = *in
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupRoleObservation.
func (in *GroupRoleObservation) DeepCopy() *GroupRoleObservation {
	if in == nil {
		return nil
	}
	out := new(GroupRoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupRoleParameters) DeepCopyInto(out *GroupRoleParameters) {
	*out = *in
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupRoleParameters.
func (in *GroupRoleParameters) DeepCopy() *GroupRoleParameters {
	if in == nil {
		return nil
	}
	out := new(GroupRoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupRoleSpec) DeepCopyInto(out *GroupRoleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupRoleSpec.
func (in *GroupRoleSpec) DeepCopy() *GroupRoleSpec {
	if in == nil {
		return nil
	}
	out := new(GroupRoleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupRoleStatus) DeepCopyInto(out *GroupRoleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupRoleStatus.
func (in *GroupRoleStatus) DeepCopy() *GroupRoleStatus {
	if in == nil {
		return nil
	}
	out := new(GroupRoleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSpec) DeepCopyInto(out *GroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSpec.
func (in *GroupSpec) DeepCopy() *GroupSpec {
	if in == nil {
		return nil
	}
	out := new(GroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupStatus) DeepCopyInto(out *GroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupStatus.
func (in *GroupStatus) DeepCopy() *GroupStatus {
	if in == nil {
		return nil
	}
	out := new(GroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GsInitParameters) DeepCopyInto(out *GsInitParameters) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GsInitParameters.
func (in *GsInitParameters) DeepCopy() *GsInitParameters {
	if in == nil {
		return nil
	}
	out := new(GsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GsObservation) DeepCopyInto(out *GsObservation) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GsObservation.
func (in *GsObservation) DeepCopy() *GsObservation {
	if in == nil {
		return nil
	}
	out := new(GsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GsParameters) DeepCopyInto(out *GsParameters) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GsParameters.
func (in *GsParameters) DeepCopy() *GsParameters {
	if in == nil {
		return nil
	}
	out := new(GsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GuardrailsInitParameters) DeepCopyInto(out *GuardrailsInitParameters) {
	*out = *in
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = make([]InputInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Output != nil {
		in, out := &in.Output, &out.Output
		*out = make([]OutputInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GuardrailsInitParameters.
func (in *GuardrailsInitParameters) DeepCopy() *GuardrailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(GuardrailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GuardrailsObservation) DeepCopyInto(out *GuardrailsObservation) {
	*out = *in
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = make([]InputObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Output != nil {
		in, out := &in.Output, &out.Output
		*out = make([]OutputObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GuardrailsObservation.
func (in *GuardrailsObservation) DeepCopy() *GuardrailsObservation {
	if in == nil {
		return nil
	}
	out := new(GuardrailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GuardrailsParameters) DeepCopyInto(out *GuardrailsParameters) {
	*out = *in
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = make([]InputParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Output != nil {
		in, out := &in.Output, &out.Output
		*out = make([]OutputParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GuardrailsParameters.
func (in *GuardrailsParameters) DeepCopy() *GuardrailsParameters {
	if in == nil {
		return nil
	}
	out := new(GuardrailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthInitParameters) DeepCopyInto(out *HealthInitParameters) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthInitParameters.
func (in *HealthInitParameters) DeepCopy() *HealthInitParameters {
	if in == nil {
		return nil
	}
	out := new(HealthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthObservation) DeepCopyInto(out *HealthObservation) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthObservation.
func (in *HealthObservation) DeepCopy() *HealthObservation {
	if in == nil {
		return nil
	}
	out := new(HealthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthParameters) DeepCopyInto(out *HealthParameters) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthParameters.
func (in *HealthParameters) DeepCopy() *HealthParameters {
	if in == nil {
		return nil
	}
	out := new(HealthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthRulesInitParameters) DeepCopyInto(out *HealthRulesInitParameters) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthRulesInitParameters.
func (in *HealthRulesInitParameters) DeepCopy() *HealthRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(HealthRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthRulesObservation) DeepCopyInto(out *HealthRulesObservation) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthRulesObservation.
func (in *HealthRulesObservation) DeepCopy() *HealthRulesObservation {
	if in == nil {
		return nil
	}
	out := new(HealthRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthRulesParameters) DeepCopyInto(out *HealthRulesParameters) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthRulesParameters.
func (in *HealthRulesParameters) DeepCopy() *HealthRulesParameters {
	if in == nil {
		return nil
	}
	out := new(HealthRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAccessList) DeepCopyInto(out *IPAccessList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAccessList.
func (in *IPAccessList) DeepCopy() *IPAccessList {
	if in == nil {
		return nil
	}
	out := new(IPAccessList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IPAccessList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAccessListInitParameters) DeepCopyInto(out *IPAccessListInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPAddresses != nil {
		in, out := &in.IPAddresses, &out.IPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.ListType != nil {
		in, out := &in.ListType, &out.ListType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAccessListInitParameters.
func (in *IPAccessListInitParameters) DeepCopy() *IPAccessListInitParameters {
	if in == nil {
		return nil
	}
	out := new(IPAccessListInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAccessListList) DeepCopyInto(out *IPAccessListList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IPAccessList, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAccessListList.
func (in *IPAccessListList) DeepCopy() *IPAccessListList {
	if in == nil {
		return nil
	}
	out := new(IPAccessListList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IPAccessListList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAccessListObservation) DeepCopyInto(out *IPAccessListObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddresses != nil {
		in, out := &in.IPAddresses, &out.IPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.ListType != nil {
		in, out := &in.ListType, &out.ListType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAccessListObservation.
func (in *IPAccessListObservation) DeepCopy() *IPAccessListObservation {
	if in == nil {
		return nil
	}
	out := new(IPAccessListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAccessListParameters) DeepCopyInto(out *IPAccessListParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPAddresses != nil {
		in, out := &in.IPAddresses, &out.IPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.ListType != nil {
		in, out := &in.ListType, &out.ListType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAccessListParameters.
func (in *IPAccessListParameters) DeepCopy() *IPAccessListParameters {
	if in == nil {
		return nil
	}
	out := new(IPAccessListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAccessListSpec) DeepCopyInto(out *IPAccessListSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAccessListSpec.
func (in *IPAccessListSpec) DeepCopy() *IPAccessListSpec {
	if in == nil {
		return nil
	}
	out := new(IPAccessListSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAccessListStatus) DeepCopyInto(out *IPAccessListStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAccessListStatus.
func (in *IPAccessListStatus) DeepCopy() *IPAccessListStatus {
	if in == nil {
		return nil
	}
	out := new(IPAccessListStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InferenceLogInitParameters) DeepCopyInto(out *InferenceLogInitParameters) {
	*out = *in
	if in.Granularities != nil {
		in, out := &in.Granularities, &out.Granularities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LabelCol != nil {
		in, out := &in.LabelCol, &out.LabelCol
		*out = new(string)
		**out = **in
	}
	if in.ModelIDCol != nil {
		in, out := &in.ModelIDCol, &out.ModelIDCol
		*out = new(string)
		**out = **in
	}
	if in.PredictionCol != nil {
		in, out := &in.PredictionCol, &out.PredictionCol
		*out = new(string)
		**out = **in
	}
	if in.PredictionProbaCol != nil {
		in, out := &in.PredictionProbaCol, &out.PredictionProbaCol
		*out = new(string)
		**out = **in
	}
	if in.ProblemType != nil {
		in, out := &in.ProblemType, &out.ProblemType
		*out = new(string)
		**out = **in
	}
	if in.TimestampCol != nil {
		in, out := &in.TimestampCol, &out.TimestampCol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InferenceLogInitParameters.
func (in *InferenceLogInitParameters) DeepCopy() *InferenceLogInitParameters {
	if in == nil {
		return nil
	}
	out := new(InferenceLogInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InferenceLogObservation) DeepCopyInto(out *InferenceLogObservation) {
	*out = *in
	if in.Granularities != nil {
		in, out := &in.Granularities, &out.Granularities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LabelCol != nil {
		in, out := &in.LabelCol, &out.LabelCol
		*out = new(string)
		**out = **in
	}
	if in.ModelIDCol != nil {
		in, out := &in.ModelIDCol, &out.ModelIDCol
		*out = new(string)
		**out = **in
	}
	if in.PredictionCol != nil {
		in, out := &in.PredictionCol, &out.PredictionCol
		*out = new(string)
		**out = **in
	}
	if in.PredictionProbaCol != nil {
		in, out := &in.PredictionProbaCol, &out.PredictionProbaCol
		*out = new(string)
		**out = **in
	}
	if in.ProblemType != nil {
		in, out := &in.ProblemType, &out.ProblemType
		*out = new(string)
		**out = **in
	}
	if in.TimestampCol != nil {
		in, out := &in.TimestampCol, &out.TimestampCol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InferenceLogObservation.
func (in *InferenceLogObservation) DeepCopy() *InferenceLogObservation {
	if in == nil {
		return nil
	}
	out := new(InferenceLogObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InferenceLogParameters) DeepCopyInto(out *InferenceLogParameters) {
	*out = *in
	if in.Granularities != nil {
		in, out := &in.Granularities, &out.Granularities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LabelCol != nil {
		in, out := &in.LabelCol, &out.LabelCol
		*out = new(string)
		**out = **in
	}
	if in.ModelIDCol != nil {
		in, out := &in.ModelIDCol, &out.ModelIDCol
		*out = new(string)
		**out = **in
	}
	if in.PredictionCol != nil {
		in, out := &in.PredictionCol, &out.PredictionCol
		*out = new(string)
		**out = **in
	}
	if in.PredictionProbaCol != nil {
		in, out := &in.PredictionProbaCol, &out.PredictionProbaCol
		*out = new(string)
		**out = **in
	}
	if in.ProblemType != nil {
		in, out := &in.ProblemType, &out.ProblemType
		*out = new(string)
		**out = **in
	}
	if in.TimestampCol != nil {
		in, out := &in.TimestampCol, &out.TimestampCol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InferenceLogParameters.
func (in *InferenceLogParameters) DeepCopy() *InferenceLogParameters {
	if in == nil {
		return nil
	}
	out := new(InferenceLogParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InferenceTableConfigInitParameters) DeepCopyInto(out *InferenceTableConfigInitParameters) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.TableNamePrefix != nil {
		in, out := &in.TableNamePrefix, &out.TableNamePrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InferenceTableConfigInitParameters.
func (in *InferenceTableConfigInitParameters) DeepCopy() *InferenceTableConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(InferenceTableConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InferenceTableConfigObservation) DeepCopyInto(out *InferenceTableConfigObservation) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.TableNamePrefix != nil {
		in, out := &in.TableNamePrefix, &out.TableNamePrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InferenceTableConfigObservation.
func (in *InferenceTableConfigObservation) DeepCopy() *InferenceTableConfigObservation {
	if in == nil {
		return nil
	}
	out := new(InferenceTableConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InferenceTableConfigParameters) DeepCopyInto(out *InferenceTableConfigParameters) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.TableNamePrefix != nil {
		in, out := &in.TableNamePrefix, &out.TableNamePrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InferenceTableConfigParameters.
func (in *InferenceTableConfigParameters) DeepCopy() *InferenceTableConfigParameters {
	if in == nil {
		return nil
	}
	out := new(InferenceTableConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngestionDefinitionInitParameters) DeepCopyInto(out *IngestionDefinitionInitParameters) {
	*out = *in
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.IngestionGatewayID != nil {
		in, out := &in.IngestionGatewayID, &out.IngestionGatewayID
		*out = new(string)
		**out = **in
	}
	if in.Objects != nil {
		in, out := &in.Objects, &out.Objects
		*out = make([]ObjectsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableConfiguration != nil {
		in, out := &in.TableConfiguration, &out.TableConfiguration
		*out = make([]IngestionDefinitionTableConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngestionDefinitionInitParameters.
func (in *IngestionDefinitionInitParameters) DeepCopy() *IngestionDefinitionInitParameters {
	if in == nil {
		return nil
	}
	out := new(IngestionDefinitionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngestionDefinitionObservation) DeepCopyInto(out *IngestionDefinitionObservation) {
	*out = *in
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.IngestionGatewayID != nil {
		in, out := &in.IngestionGatewayID, &out.IngestionGatewayID
		*out = new(string)
		**out = **in
	}
	if in.Objects != nil {
		in, out := &in.Objects, &out.Objects
		*out = make([]ObjectsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableConfiguration != nil {
		in, out := &in.TableConfiguration, &out.TableConfiguration
		*out = make([]IngestionDefinitionTableConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngestionDefinitionObservation.
func (in *IngestionDefinitionObservation) DeepCopy() *IngestionDefinitionObservation {
	if in == nil {
		return nil
	}
	out := new(IngestionDefinitionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngestionDefinitionParameters) DeepCopyInto(out *IngestionDefinitionParameters) {
	*out = *in
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.IngestionGatewayID != nil {
		in, out := &in.IngestionGatewayID, &out.IngestionGatewayID
		*out = new(string)
		**out = **in
	}
	if in.Objects != nil {
		in, out := &in.Objects, &out.Objects
		*out = make([]ObjectsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableConfiguration != nil {
		in, out := &in.TableConfiguration, &out.TableConfiguration
		*out = make([]IngestionDefinitionTableConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngestionDefinitionParameters.
func (in *IngestionDefinitionParameters) DeepCopy() *IngestionDefinitionParameters {
	if in == nil {
		return nil
	}
	out := new(IngestionDefinitionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngestionDefinitionTableConfigurationInitParameters) DeepCopyInto(out *IngestionDefinitionTableConfigurationInitParameters) {
	*out = *in
	if in.PrimaryKeys != nil {
		in, out := &in.PrimaryKeys, &out.PrimaryKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SalesforceIncludeFormulaFields != nil {
		in, out := &in.SalesforceIncludeFormulaFields, &out.SalesforceIncludeFormulaFields
		*out = new(bool)
		**out = **in
	}
	if in.ScdType != nil {
		in, out := &in.ScdType, &out.ScdType
		*out = new(string)
		**out = **in
	}
	if in.SequenceBy != nil {
		in, out := &in.SequenceBy, &out.SequenceBy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngestionDefinitionTableConfigurationInitParameters.
func (in *IngestionDefinitionTableConfigurationInitParameters) DeepCopy() *IngestionDefinitionTableConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(IngestionDefinitionTableConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngestionDefinitionTableConfigurationObservation) DeepCopyInto(out *IngestionDefinitionTableConfigurationObservation) {
	*out = *in
	if in.PrimaryKeys != nil {
		in, out := &in.PrimaryKeys, &out.PrimaryKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SalesforceIncludeFormulaFields != nil {
		in, out := &in.SalesforceIncludeFormulaFields, &out.SalesforceIncludeFormulaFields
		*out = new(bool)
		**out = **in
	}
	if in.ScdType != nil {
		in, out := &in.ScdType, &out.ScdType
		*out = new(string)
		**out = **in
	}
	if in.SequenceBy != nil {
		in, out := &in.SequenceBy, &out.SequenceBy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngestionDefinitionTableConfigurationObservation.
func (in *IngestionDefinitionTableConfigurationObservation) DeepCopy() *IngestionDefinitionTableConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(IngestionDefinitionTableConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngestionDefinitionTableConfigurationParameters) DeepCopyInto(out *IngestionDefinitionTableConfigurationParameters) {
	*out = *in
	if in.PrimaryKeys != nil {
		in, out := &in.PrimaryKeys, &out.PrimaryKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SalesforceIncludeFormulaFields != nil {
		in, out := &in.SalesforceIncludeFormulaFields, &out.SalesforceIncludeFormulaFields
		*out = new(bool)
		**out = **in
	}
	if in.ScdType != nil {
		in, out := &in.ScdType, &out.ScdType
		*out = new(string)
		**out = **in
	}
	if in.SequenceBy != nil {
		in, out := &in.SequenceBy, &out.SequenceBy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngestionDefinitionTableConfigurationParameters.
func (in *IngestionDefinitionTableConfigurationParameters) DeepCopy() *IngestionDefinitionTableConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(IngestionDefinitionTableConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsAbfssInitParameters) DeepCopyInto(out *InitScriptsAbfssInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsAbfssInitParameters.
func (in *InitScriptsAbfssInitParameters) DeepCopy() *InitScriptsAbfssInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsAbfssInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsAbfssObservation) DeepCopyInto(out *InitScriptsAbfssObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsAbfssObservation.
func (in *InitScriptsAbfssObservation) DeepCopy() *InitScriptsAbfssObservation {
	if in == nil {
		return nil
	}
	out := new(InitScriptsAbfssObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsAbfssParameters) DeepCopyInto(out *InitScriptsAbfssParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsAbfssParameters.
func (in *InitScriptsAbfssParameters) DeepCopy() *InitScriptsAbfssParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsAbfssParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsDbfsInitParameters) DeepCopyInto(out *InitScriptsDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsDbfsInitParameters.
func (in *InitScriptsDbfsInitParameters) DeepCopy() *InitScriptsDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsDbfsObservation) DeepCopyInto(out *InitScriptsDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsDbfsObservation.
func (in *InitScriptsDbfsObservation) DeepCopy() *InitScriptsDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(InitScriptsDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsDbfsParameters) DeepCopyInto(out *InitScriptsDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsDbfsParameters.
func (in *InitScriptsDbfsParameters) DeepCopy() *InitScriptsDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsFileInitParameters) DeepCopyInto(out *InitScriptsFileInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsFileInitParameters.
func (in *InitScriptsFileInitParameters) DeepCopy() *InitScriptsFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsFileObservation) DeepCopyInto(out *InitScriptsFileObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsFileObservation.
func (in *InitScriptsFileObservation) DeepCopy() *InitScriptsFileObservation {
	if in == nil {
		return nil
	}
	out := new(InitScriptsFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsFileParameters) DeepCopyInto(out *InitScriptsFileParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsFileParameters.
func (in *InitScriptsFileParameters) DeepCopy() *InitScriptsFileParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsGcsInitParameters) DeepCopyInto(out *InitScriptsGcsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsGcsInitParameters.
func (in *InitScriptsGcsInitParameters) DeepCopy() *InitScriptsGcsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsGcsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsGcsObservation) DeepCopyInto(out *InitScriptsGcsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsGcsObservation.
func (in *InitScriptsGcsObservation) DeepCopy() *InitScriptsGcsObservation {
	if in == nil {
		return nil
	}
	out := new(InitScriptsGcsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsGcsParameters) DeepCopyInto(out *InitScriptsGcsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsGcsParameters.
func (in *InitScriptsGcsParameters) DeepCopy() *InitScriptsGcsParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsGcsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsInitParameters) DeepCopyInto(out *InitScriptsInitParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]AbfssInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]InitScriptsDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]FileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]GcsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]InitScriptsS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]VolumesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]WorkspaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsInitParameters.
func (in *InitScriptsInitParameters) DeepCopy() *InitScriptsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsObservation) DeepCopyInto(out *InitScriptsObservation) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]AbfssObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]InitScriptsDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]FileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]GcsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]InitScriptsS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]VolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]WorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsObservation.
func (in *InitScriptsObservation) DeepCopy() *InitScriptsObservation {
	if in == nil {
		return nil
	}
	out := new(InitScriptsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsParameters) DeepCopyInto(out *InitScriptsParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]AbfssParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]InitScriptsDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]FileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]GcsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]InitScriptsS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]VolumesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]WorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsParameters.
func (in *InitScriptsParameters) DeepCopy() *InitScriptsParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsS3InitParameters) DeepCopyInto(out *InitScriptsS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsS3InitParameters.
func (in *InitScriptsS3InitParameters) DeepCopy() *InitScriptsS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsS3Observation) DeepCopyInto(out *InitScriptsS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsS3Observation.
func (in *InitScriptsS3Observation) DeepCopy() *InitScriptsS3Observation {
	if in == nil {
		return nil
	}
	out := new(InitScriptsS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsS3Parameters) DeepCopyInto(out *InitScriptsS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsS3Parameters.
func (in *InitScriptsS3Parameters) DeepCopy() *InitScriptsS3Parameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsVolumesInitParameters) DeepCopyInto(out *InitScriptsVolumesInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsVolumesInitParameters.
func (in *InitScriptsVolumesInitParameters) DeepCopy() *InitScriptsVolumesInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsVolumesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsVolumesObservation) DeepCopyInto(out *InitScriptsVolumesObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsVolumesObservation.
func (in *InitScriptsVolumesObservation) DeepCopy() *InitScriptsVolumesObservation {
	if in == nil {
		return nil
	}
	out := new(InitScriptsVolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsVolumesParameters) DeepCopyInto(out *InitScriptsVolumesParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsVolumesParameters.
func (in *InitScriptsVolumesParameters) DeepCopy() *InitScriptsVolumesParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsVolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsWorkspaceInitParameters) DeepCopyInto(out *InitScriptsWorkspaceInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsWorkspaceInitParameters.
func (in *InitScriptsWorkspaceInitParameters) DeepCopy() *InitScriptsWorkspaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsWorkspaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsWorkspaceObservation) DeepCopyInto(out *InitScriptsWorkspaceObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsWorkspaceObservation.
func (in *InitScriptsWorkspaceObservation) DeepCopy() *InitScriptsWorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(InitScriptsWorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitScriptsWorkspaceParameters) DeepCopyInto(out *InitScriptsWorkspaceParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitScriptsWorkspaceParameters.
func (in *InitScriptsWorkspaceParameters) DeepCopy() *InitScriptsWorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(InitScriptsWorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitialPipelineSyncProgressInitParameters) DeepCopyInto(out *InitialPipelineSyncProgressInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitialPipelineSyncProgressInitParameters.
func (in *InitialPipelineSyncProgressInitParameters) DeepCopy() *InitialPipelineSyncProgressInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitialPipelineSyncProgressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitialPipelineSyncProgressObservation) DeepCopyInto(out *InitialPipelineSyncProgressObservation) {
	*out = *in
	if in.EstimatedCompletionTimeSeconds != nil {
		in, out := &in.EstimatedCompletionTimeSeconds, &out.EstimatedCompletionTimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.LatestVersionCurrentlyProcessing != nil {
		in, out := &in.LatestVersionCurrentlyProcessing, &out.LatestVersionCurrentlyProcessing
		*out = new(float64)
		**out = **in
	}
	if in.SyncProgressCompletion != nil {
		in, out := &in.SyncProgressCompletion, &out.SyncProgressCompletion
		*out = new(float64)
		**out = **in
	}
	if in.SyncedRowCount != nil {
		in, out := &in.SyncedRowCount, &out.SyncedRowCount
		*out = new(float64)
		**out = **in
	}
	if in.TotalRowCount != nil {
		in, out := &in.TotalRowCount, &out.TotalRowCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitialPipelineSyncProgressObservation.
func (in *InitialPipelineSyncProgressObservation) DeepCopy() *InitialPipelineSyncProgressObservation {
	if in == nil {
		return nil
	}
	out := new(InitialPipelineSyncProgressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitialPipelineSyncProgressParameters) DeepCopyInto(out *InitialPipelineSyncProgressParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitialPipelineSyncProgressParameters.
func (in *InitialPipelineSyncProgressParameters) DeepCopy() *InitialPipelineSyncProgressParameters {
	if in == nil {
		return nil
	}
	out := new(InitialPipelineSyncProgressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InputInitParameters) DeepCopyInto(out *InputInitParameters) {
	*out = *in
	if in.InvalidKeywords != nil {
		in, out := &in.InvalidKeywords, &out.InvalidKeywords
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Pii != nil {
		in, out := &in.Pii, &out.Pii
		*out = make([]PiiInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Safety != nil {
		in, out := &in.Safety, &out.Safety
		*out = new(bool)
		**out = **in
	}
	if in.ValidTopics != nil {
		in, out := &in.ValidTopics, &out.ValidTopics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InputInitParameters.
func (in *InputInitParameters) DeepCopy() *InputInitParameters {
	if in == nil {
		return nil
	}
	out := new(InputInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InputObservation) DeepCopyInto(out *InputObservation) {
	*out = *in
	if in.InvalidKeywords != nil {
		in, out := &in.InvalidKeywords, &out.InvalidKeywords
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Pii != nil {
		in, out := &in.Pii, &out.Pii
		*out = make([]PiiObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Safety != nil {
		in, out := &in.Safety, &out.Safety
		*out = new(bool)
		**out = **in
	}
	if in.ValidTopics != nil {
		in, out := &in.ValidTopics, &out.ValidTopics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InputObservation.
func (in *InputObservation) DeepCopy() *InputObservation {
	if in == nil {
		return nil
	}
	out := new(InputObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InputParameters) DeepCopyInto(out *InputParameters) {
	*out = *in
	if in.InvalidKeywords != nil {
		in, out := &in.InvalidKeywords, &out.InvalidKeywords
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Pii != nil {
		in, out := &in.Pii, &out.Pii
		*out = make([]PiiParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Safety != nil {
		in, out := &in.Safety, &out.Safety
		*out = new(bool)
		**out = **in
	}
	if in.ValidTopics != nil {
		in, out := &in.ValidTopics, &out.ValidTopics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InputParameters.
func (in *InputParameters) DeepCopy() *InputParameters {
	if in == nil {
		return nil
	}
	out := new(InputParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePool) DeepCopyInto(out *InstancePool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePool.
func (in *InstancePool) DeepCopy() *InstancePool {
	if in == nil {
		return nil
	}
	out := new(InstancePool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstancePool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolAwsAttributesInitParameters) DeepCopyInto(out *InstancePoolAwsAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolAwsAttributesInitParameters.
func (in *InstancePoolAwsAttributesInitParameters) DeepCopy() *InstancePoolAwsAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolAwsAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolAwsAttributesObservation) DeepCopyInto(out *InstancePoolAwsAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolAwsAttributesObservation.
func (in *InstancePoolAwsAttributesObservation) DeepCopy() *InstancePoolAwsAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(InstancePoolAwsAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolAwsAttributesParameters) DeepCopyInto(out *InstancePoolAwsAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolAwsAttributesParameters.
func (in *InstancePoolAwsAttributesParameters) DeepCopy() *InstancePoolAwsAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolAwsAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolAzureAttributesInitParameters) DeepCopyInto(out *InstancePoolAzureAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolAzureAttributesInitParameters.
func (in *InstancePoolAzureAttributesInitParameters) DeepCopy() *InstancePoolAzureAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolAzureAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolAzureAttributesObservation) DeepCopyInto(out *InstancePoolAzureAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolAzureAttributesObservation.
func (in *InstancePoolAzureAttributesObservation) DeepCopy() *InstancePoolAzureAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(InstancePoolAzureAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolAzureAttributesParameters) DeepCopyInto(out *InstancePoolAzureAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolAzureAttributesParameters.
func (in *InstancePoolAzureAttributesParameters) DeepCopy() *InstancePoolAzureAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolAzureAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolFleetAttributesInitParameters) DeepCopyInto(out *InstancePoolFleetAttributesInitParameters) {
	*out = *in
	if in.FleetOnDemandOption != nil {
		in, out := &in.FleetOnDemandOption, &out.FleetOnDemandOption
		*out = make([]FleetOnDemandOptionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FleetSpotOption != nil {
		in, out := &in.FleetSpotOption, &out.FleetSpotOption
		*out = make([]FleetSpotOptionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchTemplateOverride != nil {
		in, out := &in.LaunchTemplateOverride, &out.LaunchTemplateOverride
		*out = make([]LaunchTemplateOverrideInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolFleetAttributesInitParameters.
func (in *InstancePoolFleetAttributesInitParameters) DeepCopy() *InstancePoolFleetAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolFleetAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolFleetAttributesObservation) DeepCopyInto(out *InstancePoolFleetAttributesObservation) {
	*out = *in
	if in.FleetOnDemandOption != nil {
		in, out := &in.FleetOnDemandOption, &out.FleetOnDemandOption
		*out = make([]FleetOnDemandOptionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FleetSpotOption != nil {
		in, out := &in.FleetSpotOption, &out.FleetSpotOption
		*out = make([]FleetSpotOptionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchTemplateOverride != nil {
		in, out := &in.LaunchTemplateOverride, &out.LaunchTemplateOverride
		*out = make([]LaunchTemplateOverrideObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolFleetAttributesObservation.
func (in *InstancePoolFleetAttributesObservation) DeepCopy() *InstancePoolFleetAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(InstancePoolFleetAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolFleetAttributesParameters) DeepCopyInto(out *InstancePoolFleetAttributesParameters) {
	*out = *in
	if in.FleetOnDemandOption != nil {
		in, out := &in.FleetOnDemandOption, &out.FleetOnDemandOption
		*out = make([]FleetOnDemandOptionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FleetSpotOption != nil {
		in, out := &in.FleetSpotOption, &out.FleetSpotOption
		*out = make([]FleetSpotOptionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchTemplateOverride != nil {
		in, out := &in.LaunchTemplateOverride, &out.LaunchTemplateOverride
		*out = make([]LaunchTemplateOverrideParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolFleetAttributesParameters.
func (in *InstancePoolFleetAttributesParameters) DeepCopy() *InstancePoolFleetAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolFleetAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolGCPAttributesInitParameters) DeepCopyInto(out *InstancePoolGCPAttributesInitParameters) {
	*out = *in
	if in.GCPAvailability != nil {
		in, out := &in.GCPAvailability, &out.GCPAvailability
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolGCPAttributesInitParameters.
func (in *InstancePoolGCPAttributesInitParameters) DeepCopy() *InstancePoolGCPAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolGCPAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolGCPAttributesObservation) DeepCopyInto(out *InstancePoolGCPAttributesObservation) {
	*out = *in
	if in.GCPAvailability != nil {
		in, out := &in.GCPAvailability, &out.GCPAvailability
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolGCPAttributesObservation.
func (in *InstancePoolGCPAttributesObservation) DeepCopy() *InstancePoolGCPAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(InstancePoolGCPAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolGCPAttributesParameters) DeepCopyInto(out *InstancePoolGCPAttributesParameters) {
	*out = *in
	if in.GCPAvailability != nil {
		in, out := &in.GCPAvailability, &out.GCPAvailability
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolGCPAttributesParameters.
func (in *InstancePoolGCPAttributesParameters) DeepCopy() *InstancePoolGCPAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolGCPAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolInitParameters) DeepCopyInto(out *InstancePoolInitParameters) {
	*out = *in
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]InstancePoolAwsAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]InstancePoolAzureAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DiskSpec != nil {
		in, out := &in.DiskSpec, &out.DiskSpec
		*out = make([]DiskSpecInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]InstancePoolGCPAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdleInstanceAutoterminationMinutes != nil {
		in, out := &in.IdleInstanceAutoterminationMinutes, &out.IdleInstanceAutoterminationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.InstancePoolFleetAttributes != nil {
		in, out := &in.InstancePoolFleetAttributes, &out.InstancePoolFleetAttributes
		*out = make([]InstancePoolFleetAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolName != nil {
		in, out := &in.InstancePoolName, &out.InstancePoolName
		*out = new(string)
		**out = **in
	}
	if in.MaxCapacity != nil {
		in, out := &in.MaxCapacity, &out.MaxCapacity
		*out = new(float64)
		**out = **in
	}
	if in.MinIdleInstances != nil {
		in, out := &in.MinIdleInstances, &out.MinIdleInstances
		*out = new(float64)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.PreloadedDockerImage != nil {
		in, out := &in.PreloadedDockerImage, &out.PreloadedDockerImage
		*out = make([]PreloadedDockerImageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreloadedSparkVersions != nil {
		in, out := &in.PreloadedSparkVersions, &out.PreloadedSparkVersions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolInitParameters.
func (in *InstancePoolInitParameters) DeepCopy() *InstancePoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolList) DeepCopyInto(out *InstancePoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InstancePool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolList.
func (in *InstancePoolList) DeepCopy() *InstancePoolList {
	if in == nil {
		return nil
	}
	out := new(InstancePoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstancePoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolObservation) DeepCopyInto(out *InstancePoolObservation) {
	*out = *in
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]InstancePoolAwsAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]InstancePoolAzureAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DiskSpec != nil {
		in, out := &in.DiskSpec, &out.DiskSpec
		*out = make([]DiskSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]InstancePoolGCPAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IdleInstanceAutoterminationMinutes != nil {
		in, out := &in.IdleInstanceAutoterminationMinutes, &out.IdleInstanceAutoterminationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.InstancePoolFleetAttributes != nil {
		in, out := &in.InstancePoolFleetAttributes, &out.InstancePoolFleetAttributes
		*out = make([]InstancePoolFleetAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolName != nil {
		in, out := &in.InstancePoolName, &out.InstancePoolName
		*out = new(string)
		**out = **in
	}
	if in.MaxCapacity != nil {
		in, out := &in.MaxCapacity, &out.MaxCapacity
		*out = new(float64)
		**out = **in
	}
	if in.MinIdleInstances != nil {
		in, out := &in.MinIdleInstances, &out.MinIdleInstances
		*out = new(float64)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.PreloadedDockerImage != nil {
		in, out := &in.PreloadedDockerImage, &out.PreloadedDockerImage
		*out = make([]PreloadedDockerImageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreloadedSparkVersions != nil {
		in, out := &in.PreloadedSparkVersions, &out.PreloadedSparkVersions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolObservation.
func (in *InstancePoolObservation) DeepCopy() *InstancePoolObservation {
	if in == nil {
		return nil
	}
	out := new(InstancePoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolParameters) DeepCopyInto(out *InstancePoolParameters) {
	*out = *in
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]InstancePoolAwsAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]InstancePoolAzureAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DiskSpec != nil {
		in, out := &in.DiskSpec, &out.DiskSpec
		*out = make([]DiskSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]InstancePoolGCPAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdleInstanceAutoterminationMinutes != nil {
		in, out := &in.IdleInstanceAutoterminationMinutes, &out.IdleInstanceAutoterminationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.InstancePoolFleetAttributes != nil {
		in, out := &in.InstancePoolFleetAttributes, &out.InstancePoolFleetAttributes
		*out = make([]InstancePoolFleetAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolName != nil {
		in, out := &in.InstancePoolName, &out.InstancePoolName
		*out = new(string)
		**out = **in
	}
	if in.MaxCapacity != nil {
		in, out := &in.MaxCapacity, &out.MaxCapacity
		*out = new(float64)
		**out = **in
	}
	if in.MinIdleInstances != nil {
		in, out := &in.MinIdleInstances, &out.MinIdleInstances
		*out = new(float64)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.PreloadedDockerImage != nil {
		in, out := &in.PreloadedDockerImage, &out.PreloadedDockerImage
		*out = make([]PreloadedDockerImageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreloadedSparkVersions != nil {
		in, out := &in.PreloadedSparkVersions, &out.PreloadedSparkVersions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolParameters.
func (in *InstancePoolParameters) DeepCopy() *InstancePoolParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolSpec) DeepCopyInto(out *InstancePoolSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolSpec.
func (in *InstancePoolSpec) DeepCopy() *InstancePoolSpec {
	if in == nil {
		return nil
	}
	out := new(InstancePoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolStatus) DeepCopyInto(out *InstancePoolStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolStatus.
func (in *InstancePoolStatus) DeepCopy() *InstancePoolStatus {
	if in == nil {
		return nil
	}
	out := new(InstancePoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceProfile) DeepCopyInto(out *InstanceProfile) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceProfile.
func (in *InstanceProfile) DeepCopy() *InstanceProfile {
	if in == nil {
		return nil
	}
	out := new(InstanceProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceProfile) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceProfileInitParameters) DeepCopyInto(out *InstanceProfileInitParameters) {
	*out = *in
	if in.IAMRoleArn != nil {
		in, out := &in.IAMRoleArn, &out.IAMRoleArn
		*out = new(string)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.IsMetaInstanceProfile != nil {
		in, out := &in.IsMetaInstanceProfile, &out.IsMetaInstanceProfile
		*out = new(bool)
		**out = **in
	}
	if in.SkipValidation != nil {
		in, out := &in.SkipValidation, &out.SkipValidation
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceProfileInitParameters.
func (in *InstanceProfileInitParameters) DeepCopy() *InstanceProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceProfileList) DeepCopyInto(out *InstanceProfileList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InstanceProfile, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceProfileList.
func (in *InstanceProfileList) DeepCopy() *InstanceProfileList {
	if in == nil {
		return nil
	}
	out := new(InstanceProfileList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceProfileList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceProfileObservation) DeepCopyInto(out *InstanceProfileObservation) {
	*out = *in
	if in.IAMRoleArn != nil {
		in, out := &in.IAMRoleArn, &out.IAMRoleArn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.IsMetaInstanceProfile != nil {
		in, out := &in.IsMetaInstanceProfile, &out.IsMetaInstanceProfile
		*out = new(bool)
		**out = **in
	}
	if in.SkipValidation != nil {
		in, out := &in.SkipValidation, &out.SkipValidation
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceProfileObservation.
func (in *InstanceProfileObservation) DeepCopy() *InstanceProfileObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceProfileParameters) DeepCopyInto(out *InstanceProfileParameters) {
	*out = *in
	if in.IAMRoleArn != nil {
		in, out := &in.IAMRoleArn, &out.IAMRoleArn
		*out = new(string)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.IsMetaInstanceProfile != nil {
		in, out := &in.IsMetaInstanceProfile, &out.IsMetaInstanceProfile
		*out = new(bool)
		**out = **in
	}
	if in.SkipValidation != nil {
		in, out := &in.SkipValidation, &out.SkipValidation
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceProfileParameters.
func (in *InstanceProfileParameters) DeepCopy() *InstanceProfileParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceProfileSpec) DeepCopyInto(out *InstanceProfileSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceProfileSpec.
func (in *InstanceProfileSpec) DeepCopy() *InstanceProfileSpec {
	if in == nil {
		return nil
	}
	out := new(InstanceProfileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceProfileStatus) DeepCopyInto(out *InstanceProfileStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceProfileStatus.
func (in *InstanceProfileStatus) DeepCopy() *InstanceProfileStatus {
	if in == nil {
		return nil
	}
	out := new(InstanceProfileStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Job) DeepCopyInto(out *Job) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Job.
func (in *Job) DeepCopy() *Job {
	if in == nil {
		return nil
	}
	out := new(Job)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Job) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobClusterInitParameters) DeepCopyInto(out *JobClusterInitParameters) {
	*out = *in
	if in.JobClusterKey != nil {
		in, out := &in.JobClusterKey, &out.JobClusterKey
		*out = new(string)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]NewClusterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobClusterInitParameters.
func (in *JobClusterInitParameters) DeepCopy() *JobClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobClusterObservation) DeepCopyInto(out *JobClusterObservation) {
	*out = *in
	if in.JobClusterKey != nil {
		in, out := &in.JobClusterKey, &out.JobClusterKey
		*out = new(string)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]NewClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobClusterObservation.
func (in *JobClusterObservation) DeepCopy() *JobClusterObservation {
	if in == nil {
		return nil
	}
	out := new(JobClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobClusterParameters) DeepCopyInto(out *JobClusterParameters) {
	*out = *in
	if in.JobClusterKey != nil {
		in, out := &in.JobClusterKey, &out.JobClusterKey
		*out = new(string)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]NewClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobClusterParameters.
func (in *JobClusterParameters) DeepCopy() *JobClusterParameters {
	if in == nil {
		return nil
	}
	out := new(JobClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobInitParameters) DeepCopyInto(out *JobInitParameters) {
	*out = *in
	if in.AlwaysRunning != nil {
		in, out := &in.AlwaysRunning, &out.AlwaysRunning
		*out = new(bool)
		**out = **in
	}
	if in.BudgetPolicyID != nil {
		in, out := &in.BudgetPolicyID, &out.BudgetPolicyID
		*out = new(string)
		**out = **in
	}
	if in.Continuous != nil {
		in, out := &in.Continuous, &out.Continuous
		*out = make([]ContinuousInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ControlRunState != nil {
		in, out := &in.ControlRunState, &out.ControlRunState
		*out = new(bool)
		**out = **in
	}
	if in.DbtTask != nil {
		in, out := &in.DbtTask, &out.DbtTask
		*out = make([]DbtTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = make([]DeploymentInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EditMode != nil {
		in, out := &in.EditMode, &out.EditMode
		*out = new(string)
		**out = **in
	}
	if in.EmailNotifications != nil {
		in, out := &in.EmailNotifications, &out.EmailNotifications
		*out = make([]EmailNotificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make([]EnvironmentInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExistingClusterID != nil {
		in, out := &in.ExistingClusterID, &out.ExistingClusterID
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.GitSource != nil {
		in, out := &in.GitSource, &out.GitSource
		*out = make([]GitSourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]HealthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobCluster != nil {
		in, out := &in.JobCluster, &out.JobCluster
		*out = make([]JobClusterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]JobLibraryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxConcurrentRuns != nil {
		in, out := &in.MaxConcurrentRuns, &out.MaxConcurrentRuns
		*out = new(float64)
		**out = **in
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MinRetryIntervalMillis != nil {
		in, out := &in.MinRetryIntervalMillis, &out.MinRetryIntervalMillis
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]JobNewClusterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotebookTask != nil {
		in, out := &in.NotebookTask, &out.NotebookTask
		*out = make([]NotebookTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]NotificationSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]ParameterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PipelineTask != nil {
		in, out := &in.PipelineTask, &out.PipelineTask
		*out = make([]PipelineTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonWheelTask != nil {
		in, out := &in.PythonWheelTask, &out.PythonWheelTask
		*out = make([]PythonWheelTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Queue != nil {
		in, out := &in.Queue, &out.Queue
		*out = make([]QueueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryOnTimeout != nil {
		in, out := &in.RetryOnTimeout, &out.RetryOnTimeout
		*out = new(bool)
		**out = **in
	}
	if in.RunAs != nil {
		in, out := &in.RunAs, &out.RunAs
		*out = make([]RunAsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RunJobTask != nil {
		in, out := &in.RunJobTask, &out.RunJobTask
		*out = make([]RunJobTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJarTask != nil {
		in, out := &in.SparkJarTask, &out.SparkJarTask
		*out = make([]SparkJarTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkPythonTask != nil {
		in, out := &in.SparkPythonTask, &out.SparkPythonTask
		*out = make([]SparkPythonTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSubmitTask != nil {
		in, out := &in.SparkSubmitTask, &out.SparkSubmitTask
		*out = make([]SparkSubmitTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = make([]TaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]TriggerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WebhookNotifications != nil {
		in, out := &in.WebhookNotifications, &out.WebhookNotifications
		*out = make([]JobWebhookNotificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobInitParameters.
func (in *JobInitParameters) DeepCopy() *JobInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobLibraryCranInitParameters) DeepCopyInto(out *JobLibraryCranInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobLibraryCranInitParameters.
func (in *JobLibraryCranInitParameters) DeepCopy() *JobLibraryCranInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobLibraryCranInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobLibraryCranObservation) DeepCopyInto(out *JobLibraryCranObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobLibraryCranObservation.
func (in *JobLibraryCranObservation) DeepCopy() *JobLibraryCranObservation {
	if in == nil {
		return nil
	}
	out := new(JobLibraryCranObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobLibraryCranParameters) DeepCopyInto(out *JobLibraryCranParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobLibraryCranParameters.
func (in *JobLibraryCranParameters) DeepCopy() *JobLibraryCranParameters {
	if in == nil {
		return nil
	}
	out := new(JobLibraryCranParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobLibraryInitParameters) DeepCopyInto(out *JobLibraryInitParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]JobLibraryCranInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]JobLibraryMavenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]JobLibraryPypiInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobLibraryInitParameters.
func (in *JobLibraryInitParameters) DeepCopy() *JobLibraryInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobLibraryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobLibraryMavenInitParameters) DeepCopyInto(out *JobLibraryMavenInitParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobLibraryMavenInitParameters.
func (in *JobLibraryMavenInitParameters) DeepCopy() *JobLibraryMavenInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobLibraryMavenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobLibraryMavenObservation) DeepCopyInto(out *JobLibraryMavenObservation) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobLibraryMavenObservation.
func (in *JobLibraryMavenObservation) DeepCopy() *JobLibraryMavenObservation {
	if in == nil {
		return nil
	}
	out := new(JobLibraryMavenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobLibraryMavenParameters) DeepCopyInto(out *JobLibraryMavenParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobLibraryMavenParameters.
func (in *JobLibraryMavenParameters) DeepCopy() *JobLibraryMavenParameters {
	if in == nil {
		return nil
	}
	out := new(JobLibraryMavenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobLibraryObservation) DeepCopyInto(out *JobLibraryObservation) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]JobLibraryCranObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]JobLibraryMavenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]JobLibraryPypiObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobLibraryObservation.
func (in *JobLibraryObservation) DeepCopy() *JobLibraryObservation {
	if in == nil {
		return nil
	}
	out := new(JobLibraryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobLibraryParameters) DeepCopyInto(out *JobLibraryParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]JobLibraryCranParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]JobLibraryMavenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]JobLibraryPypiParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobLibraryParameters.
func (in *JobLibraryParameters) DeepCopy() *JobLibraryParameters {
	if in == nil {
		return nil
	}
	out := new(JobLibraryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobLibraryPypiInitParameters) DeepCopyInto(out *JobLibraryPypiInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobLibraryPypiInitParameters.
func (in *JobLibraryPypiInitParameters) DeepCopy() *JobLibraryPypiInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobLibraryPypiInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobLibraryPypiObservation) DeepCopyInto(out *JobLibraryPypiObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobLibraryPypiObservation.
func (in *JobLibraryPypiObservation) DeepCopy() *JobLibraryPypiObservation {
	if in == nil {
		return nil
	}
	out := new(JobLibraryPypiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobLibraryPypiParameters) DeepCopyInto(out *JobLibraryPypiParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobLibraryPypiParameters.
func (in *JobLibraryPypiParameters) DeepCopy() *JobLibraryPypiParameters {
	if in == nil {
		return nil
	}
	out := new(JobLibraryPypiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobList) DeepCopyInto(out *JobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Job, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobList.
func (in *JobList) DeepCopy() *JobList {
	if in == nil {
		return nil
	}
	out := new(JobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *JobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterAutoscaleInitParameters) DeepCopyInto(out *JobNewClusterAutoscaleInitParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterAutoscaleInitParameters.
func (in *JobNewClusterAutoscaleInitParameters) DeepCopy() *JobNewClusterAutoscaleInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterAutoscaleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterAutoscaleObservation) DeepCopyInto(out *JobNewClusterAutoscaleObservation) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterAutoscaleObservation.
func (in *JobNewClusterAutoscaleObservation) DeepCopy() *JobNewClusterAutoscaleObservation {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterAutoscaleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterAutoscaleParameters) DeepCopyInto(out *JobNewClusterAutoscaleParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterAutoscaleParameters.
func (in *JobNewClusterAutoscaleParameters) DeepCopy() *JobNewClusterAutoscaleParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterAutoscaleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterAwsAttributesInitParameters) DeepCopyInto(out *JobNewClusterAwsAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterAwsAttributesInitParameters.
func (in *JobNewClusterAwsAttributesInitParameters) DeepCopy() *JobNewClusterAwsAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterAwsAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterAwsAttributesObservation) DeepCopyInto(out *JobNewClusterAwsAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterAwsAttributesObservation.
func (in *JobNewClusterAwsAttributesObservation) DeepCopy() *JobNewClusterAwsAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterAwsAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterAwsAttributesParameters) DeepCopyInto(out *JobNewClusterAwsAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterAwsAttributesParameters.
func (in *JobNewClusterAwsAttributesParameters) DeepCopy() *JobNewClusterAwsAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterAwsAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterAzureAttributesInitParameters) DeepCopyInto(out *JobNewClusterAzureAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]NewClusterAzureAttributesLogAnalyticsInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterAzureAttributesInitParameters.
func (in *JobNewClusterAzureAttributesInitParameters) DeepCopy() *JobNewClusterAzureAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterAzureAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterAzureAttributesObservation) DeepCopyInto(out *JobNewClusterAzureAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]NewClusterAzureAttributesLogAnalyticsInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterAzureAttributesObservation.
func (in *JobNewClusterAzureAttributesObservation) DeepCopy() *JobNewClusterAzureAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterAzureAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterAzureAttributesParameters) DeepCopyInto(out *JobNewClusterAzureAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]NewClusterAzureAttributesLogAnalyticsInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterAzureAttributesParameters.
func (in *JobNewClusterAzureAttributesParameters) DeepCopy() *JobNewClusterAzureAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterAzureAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterClusterLogConfInitParameters) DeepCopyInto(out *JobNewClusterClusterLogConfInitParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]NewClusterClusterLogConfDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]NewClusterClusterLogConfS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterClusterLogConfInitParameters.
func (in *JobNewClusterClusterLogConfInitParameters) DeepCopy() *JobNewClusterClusterLogConfInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterClusterLogConfInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterClusterLogConfObservation) DeepCopyInto(out *JobNewClusterClusterLogConfObservation) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]NewClusterClusterLogConfDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]NewClusterClusterLogConfS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterClusterLogConfObservation.
func (in *JobNewClusterClusterLogConfObservation) DeepCopy() *JobNewClusterClusterLogConfObservation {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterClusterLogConfObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterClusterLogConfParameters) DeepCopyInto(out *JobNewClusterClusterLogConfParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]NewClusterClusterLogConfDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]NewClusterClusterLogConfS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterClusterLogConfParameters.
func (in *JobNewClusterClusterLogConfParameters) DeepCopy() *JobNewClusterClusterLogConfParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterClusterLogConfParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterClusterMountInfoInitParameters) DeepCopyInto(out *JobNewClusterClusterMountInfoInitParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]NewClusterClusterMountInfoNetworkFilesystemInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterClusterMountInfoInitParameters.
func (in *JobNewClusterClusterMountInfoInitParameters) DeepCopy() *JobNewClusterClusterMountInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterClusterMountInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterClusterMountInfoObservation) DeepCopyInto(out *JobNewClusterClusterMountInfoObservation) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]NewClusterClusterMountInfoNetworkFilesystemInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterClusterMountInfoObservation.
func (in *JobNewClusterClusterMountInfoObservation) DeepCopy() *JobNewClusterClusterMountInfoObservation {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterClusterMountInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterClusterMountInfoParameters) DeepCopyInto(out *JobNewClusterClusterMountInfoParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]NewClusterClusterMountInfoNetworkFilesystemInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterClusterMountInfoParameters.
func (in *JobNewClusterClusterMountInfoParameters) DeepCopy() *JobNewClusterClusterMountInfoParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterClusterMountInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterDockerImageInitParameters) DeepCopyInto(out *JobNewClusterDockerImageInitParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]NewClusterDockerImageBasicAuthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterDockerImageInitParameters.
func (in *JobNewClusterDockerImageInitParameters) DeepCopy() *JobNewClusterDockerImageInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterDockerImageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterDockerImageObservation) DeepCopyInto(out *JobNewClusterDockerImageObservation) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]NewClusterDockerImageBasicAuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterDockerImageObservation.
func (in *JobNewClusterDockerImageObservation) DeepCopy() *JobNewClusterDockerImageObservation {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterDockerImageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterDockerImageParameters) DeepCopyInto(out *JobNewClusterDockerImageParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]NewClusterDockerImageBasicAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterDockerImageParameters.
func (in *JobNewClusterDockerImageParameters) DeepCopy() *JobNewClusterDockerImageParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterDockerImageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterGCPAttributesInitParameters) DeepCopyInto(out *JobNewClusterGCPAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterGCPAttributesInitParameters.
func (in *JobNewClusterGCPAttributesInitParameters) DeepCopy() *JobNewClusterGCPAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterGCPAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterGCPAttributesObservation) DeepCopyInto(out *JobNewClusterGCPAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterGCPAttributesObservation.
func (in *JobNewClusterGCPAttributesObservation) DeepCopy() *JobNewClusterGCPAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterGCPAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterGCPAttributesParameters) DeepCopyInto(out *JobNewClusterGCPAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterGCPAttributesParameters.
func (in *JobNewClusterGCPAttributesParameters) DeepCopy() *JobNewClusterGCPAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterGCPAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterInitParameters) DeepCopyInto(out *JobNewClusterInitParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]JobNewClusterAutoscaleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]JobNewClusterAwsAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]JobNewClusterAzureAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]JobNewClusterClusterLogConfInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]JobNewClusterClusterMountInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]JobNewClusterDockerImageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]JobNewClusterGCPAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]JobNewClusterInitScriptsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]JobNewClusterLibraryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]JobNewClusterWorkloadTypeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterInitParameters.
func (in *JobNewClusterInitParameters) DeepCopy() *JobNewClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterInitScriptsDbfsInitParameters) DeepCopyInto(out *JobNewClusterInitScriptsDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterInitScriptsDbfsInitParameters.
func (in *JobNewClusterInitScriptsDbfsInitParameters) DeepCopy() *JobNewClusterInitScriptsDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterInitScriptsDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterInitScriptsDbfsObservation) DeepCopyInto(out *JobNewClusterInitScriptsDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterInitScriptsDbfsObservation.
func (in *JobNewClusterInitScriptsDbfsObservation) DeepCopy() *JobNewClusterInitScriptsDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterInitScriptsDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterInitScriptsDbfsParameters) DeepCopyInto(out *JobNewClusterInitScriptsDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterInitScriptsDbfsParameters.
func (in *JobNewClusterInitScriptsDbfsParameters) DeepCopy() *JobNewClusterInitScriptsDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterInitScriptsDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterInitScriptsInitParameters) DeepCopyInto(out *JobNewClusterInitScriptsInitParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]NewClusterInitScriptsAbfssInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]JobNewClusterInitScriptsDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]NewClusterInitScriptsFileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]NewClusterInitScriptsGcsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]JobNewClusterInitScriptsS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]NewClusterInitScriptsVolumesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]NewClusterInitScriptsWorkspaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterInitScriptsInitParameters.
func (in *JobNewClusterInitScriptsInitParameters) DeepCopy() *JobNewClusterInitScriptsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterInitScriptsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterInitScriptsObservation) DeepCopyInto(out *JobNewClusterInitScriptsObservation) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]NewClusterInitScriptsAbfssObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]JobNewClusterInitScriptsDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]NewClusterInitScriptsFileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]NewClusterInitScriptsGcsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]JobNewClusterInitScriptsS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]NewClusterInitScriptsVolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]NewClusterInitScriptsWorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterInitScriptsObservation.
func (in *JobNewClusterInitScriptsObservation) DeepCopy() *JobNewClusterInitScriptsObservation {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterInitScriptsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterInitScriptsParameters) DeepCopyInto(out *JobNewClusterInitScriptsParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]NewClusterInitScriptsAbfssParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]JobNewClusterInitScriptsDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]NewClusterInitScriptsFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]NewClusterInitScriptsGcsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]JobNewClusterInitScriptsS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]NewClusterInitScriptsVolumesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]NewClusterInitScriptsWorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterInitScriptsParameters.
func (in *JobNewClusterInitScriptsParameters) DeepCopy() *JobNewClusterInitScriptsParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterInitScriptsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterInitScriptsS3InitParameters) DeepCopyInto(out *JobNewClusterInitScriptsS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterInitScriptsS3InitParameters.
func (in *JobNewClusterInitScriptsS3InitParameters) DeepCopy() *JobNewClusterInitScriptsS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterInitScriptsS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterInitScriptsS3Observation) DeepCopyInto(out *JobNewClusterInitScriptsS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterInitScriptsS3Observation.
func (in *JobNewClusterInitScriptsS3Observation) DeepCopy() *JobNewClusterInitScriptsS3Observation {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterInitScriptsS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterInitScriptsS3Parameters) DeepCopyInto(out *JobNewClusterInitScriptsS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterInitScriptsS3Parameters.
func (in *JobNewClusterInitScriptsS3Parameters) DeepCopy() *JobNewClusterInitScriptsS3Parameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterInitScriptsS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterLibraryInitParameters) DeepCopyInto(out *JobNewClusterLibraryInitParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]NewClusterLibraryCranInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]NewClusterLibraryMavenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]NewClusterLibraryPypiInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterLibraryInitParameters.
func (in *JobNewClusterLibraryInitParameters) DeepCopy() *JobNewClusterLibraryInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterLibraryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterLibraryObservation) DeepCopyInto(out *JobNewClusterLibraryObservation) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]NewClusterLibraryCranObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]NewClusterLibraryMavenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]NewClusterLibraryPypiObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterLibraryObservation.
func (in *JobNewClusterLibraryObservation) DeepCopy() *JobNewClusterLibraryObservation {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterLibraryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterLibraryParameters) DeepCopyInto(out *JobNewClusterLibraryParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]NewClusterLibraryCranParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]NewClusterLibraryMavenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]NewClusterLibraryPypiParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterLibraryParameters.
func (in *JobNewClusterLibraryParameters) DeepCopy() *JobNewClusterLibraryParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterLibraryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterObservation) DeepCopyInto(out *JobNewClusterObservation) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]JobNewClusterAutoscaleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]JobNewClusterAwsAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]JobNewClusterAzureAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]JobNewClusterClusterLogConfObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]JobNewClusterClusterMountInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]JobNewClusterDockerImageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]JobNewClusterGCPAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]JobNewClusterInitScriptsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]JobNewClusterLibraryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]JobNewClusterWorkloadTypeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterObservation.
func (in *JobNewClusterObservation) DeepCopy() *JobNewClusterObservation {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterParameters) DeepCopyInto(out *JobNewClusterParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]JobNewClusterAutoscaleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]JobNewClusterAwsAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]JobNewClusterAzureAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]JobNewClusterClusterLogConfParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]JobNewClusterClusterMountInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]JobNewClusterDockerImageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]JobNewClusterGCPAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]JobNewClusterInitScriptsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]JobNewClusterLibraryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]JobNewClusterWorkloadTypeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterParameters.
func (in *JobNewClusterParameters) DeepCopy() *JobNewClusterParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterWorkloadTypeInitParameters) DeepCopyInto(out *JobNewClusterWorkloadTypeInitParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]NewClusterWorkloadTypeClientsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterWorkloadTypeInitParameters.
func (in *JobNewClusterWorkloadTypeInitParameters) DeepCopy() *JobNewClusterWorkloadTypeInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterWorkloadTypeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterWorkloadTypeObservation) DeepCopyInto(out *JobNewClusterWorkloadTypeObservation) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]NewClusterWorkloadTypeClientsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterWorkloadTypeObservation.
func (in *JobNewClusterWorkloadTypeObservation) DeepCopy() *JobNewClusterWorkloadTypeObservation {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterWorkloadTypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNewClusterWorkloadTypeParameters) DeepCopyInto(out *JobNewClusterWorkloadTypeParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]NewClusterWorkloadTypeClientsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNewClusterWorkloadTypeParameters.
func (in *JobNewClusterWorkloadTypeParameters) DeepCopy() *JobNewClusterWorkloadTypeParameters {
	if in == nil {
		return nil
	}
	out := new(JobNewClusterWorkloadTypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobObservation) DeepCopyInto(out *JobObservation) {
	*out = *in
	if in.AlwaysRunning != nil {
		in, out := &in.AlwaysRunning, &out.AlwaysRunning
		*out = new(bool)
		**out = **in
	}
	if in.BudgetPolicyID != nil {
		in, out := &in.BudgetPolicyID, &out.BudgetPolicyID
		*out = new(string)
		**out = **in
	}
	if in.Continuous != nil {
		in, out := &in.Continuous, &out.Continuous
		*out = make([]ContinuousObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ControlRunState != nil {
		in, out := &in.ControlRunState, &out.ControlRunState
		*out = new(bool)
		**out = **in
	}
	if in.DbtTask != nil {
		in, out := &in.DbtTask, &out.DbtTask
		*out = make([]DbtTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = make([]DeploymentObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EditMode != nil {
		in, out := &in.EditMode, &out.EditMode
		*out = new(string)
		**out = **in
	}
	if in.EmailNotifications != nil {
		in, out := &in.EmailNotifications, &out.EmailNotifications
		*out = make([]EmailNotificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make([]EnvironmentObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExistingClusterID != nil {
		in, out := &in.ExistingClusterID, &out.ExistingClusterID
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.GitSource != nil {
		in, out := &in.GitSource, &out.GitSource
		*out = make([]GitSourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]HealthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.JobCluster != nil {
		in, out := &in.JobCluster, &out.JobCluster
		*out = make([]JobClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]JobLibraryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxConcurrentRuns != nil {
		in, out := &in.MaxConcurrentRuns, &out.MaxConcurrentRuns
		*out = new(float64)
		**out = **in
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MinRetryIntervalMillis != nil {
		in, out := &in.MinRetryIntervalMillis, &out.MinRetryIntervalMillis
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]JobNewClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotebookTask != nil {
		in, out := &in.NotebookTask, &out.NotebookTask
		*out = make([]NotebookTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]NotificationSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]ParameterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PipelineTask != nil {
		in, out := &in.PipelineTask, &out.PipelineTask
		*out = make([]PipelineTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonWheelTask != nil {
		in, out := &in.PythonWheelTask, &out.PythonWheelTask
		*out = make([]PythonWheelTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Queue != nil {
		in, out := &in.Queue, &out.Queue
		*out = make([]QueueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryOnTimeout != nil {
		in, out := &in.RetryOnTimeout, &out.RetryOnTimeout
		*out = new(bool)
		**out = **in
	}
	if in.RunAs != nil {
		in, out := &in.RunAs, &out.RunAs
		*out = make([]RunAsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RunJobTask != nil {
		in, out := &in.RunJobTask, &out.RunJobTask
		*out = make([]RunJobTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJarTask != nil {
		in, out := &in.SparkJarTask, &out.SparkJarTask
		*out = make([]SparkJarTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkPythonTask != nil {
		in, out := &in.SparkPythonTask, &out.SparkPythonTask
		*out = make([]SparkPythonTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSubmitTask != nil {
		in, out := &in.SparkSubmitTask, &out.SparkSubmitTask
		*out = make([]SparkSubmitTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = make([]TaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]TriggerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WebhookNotifications != nil {
		in, out := &in.WebhookNotifications, &out.WebhookNotifications
		*out = make([]JobWebhookNotificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobObservation.
func (in *JobObservation) DeepCopy() *JobObservation {
	if in == nil {
		return nil
	}
	out := new(JobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobParameters) DeepCopyInto(out *JobParameters) {
	*out = *in
	if in.AlwaysRunning != nil {
		in, out := &in.AlwaysRunning, &out.AlwaysRunning
		*out = new(bool)
		**out = **in
	}
	if in.BudgetPolicyID != nil {
		in, out := &in.BudgetPolicyID, &out.BudgetPolicyID
		*out = new(string)
		**out = **in
	}
	if in.Continuous != nil {
		in, out := &in.Continuous, &out.Continuous
		*out = make([]ContinuousParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ControlRunState != nil {
		in, out := &in.ControlRunState, &out.ControlRunState
		*out = new(bool)
		**out = **in
	}
	if in.DbtTask != nil {
		in, out := &in.DbtTask, &out.DbtTask
		*out = make([]DbtTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = make([]DeploymentParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EditMode != nil {
		in, out := &in.EditMode, &out.EditMode
		*out = new(string)
		**out = **in
	}
	if in.EmailNotifications != nil {
		in, out := &in.EmailNotifications, &out.EmailNotifications
		*out = make([]EmailNotificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make([]EnvironmentParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExistingClusterID != nil {
		in, out := &in.ExistingClusterID, &out.ExistingClusterID
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.GitSource != nil {
		in, out := &in.GitSource, &out.GitSource
		*out = make([]GitSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]HealthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobCluster != nil {
		in, out := &in.JobCluster, &out.JobCluster
		*out = make([]JobClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]JobLibraryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxConcurrentRuns != nil {
		in, out := &in.MaxConcurrentRuns, &out.MaxConcurrentRuns
		*out = new(float64)
		**out = **in
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MinRetryIntervalMillis != nil {
		in, out := &in.MinRetryIntervalMillis, &out.MinRetryIntervalMillis
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]JobNewClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotebookTask != nil {
		in, out := &in.NotebookTask, &out.NotebookTask
		*out = make([]NotebookTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]NotificationSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]ParameterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PipelineTask != nil {
		in, out := &in.PipelineTask, &out.PipelineTask
		*out = make([]PipelineTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonWheelTask != nil {
		in, out := &in.PythonWheelTask, &out.PythonWheelTask
		*out = make([]PythonWheelTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Queue != nil {
		in, out := &in.Queue, &out.Queue
		*out = make([]QueueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryOnTimeout != nil {
		in, out := &in.RetryOnTimeout, &out.RetryOnTimeout
		*out = new(bool)
		**out = **in
	}
	if in.RunAs != nil {
		in, out := &in.RunAs, &out.RunAs
		*out = make([]RunAsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RunJobTask != nil {
		in, out := &in.RunJobTask, &out.RunJobTask
		*out = make([]RunJobTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJarTask != nil {
		in, out := &in.SparkJarTask, &out.SparkJarTask
		*out = make([]SparkJarTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkPythonTask != nil {
		in, out := &in.SparkPythonTask, &out.SparkPythonTask
		*out = make([]SparkPythonTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSubmitTask != nil {
		in, out := &in.SparkSubmitTask, &out.SparkSubmitTask
		*out = make([]SparkSubmitTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = make([]TaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]TriggerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WebhookNotifications != nil {
		in, out := &in.WebhookNotifications, &out.WebhookNotifications
		*out = make([]JobWebhookNotificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobParameters.
func (in *JobParameters) DeepCopy() *JobParameters {
	if in == nil {
		return nil
	}
	out := new(JobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobSourceInitParameters) DeepCopyInto(out *JobSourceInitParameters) {
	*out = *in
	if in.DirtyState != nil {
		in, out := &in.DirtyState, &out.DirtyState
		*out = new(string)
		**out = **in
	}
	if in.ImportFromGitBranch != nil {
		in, out := &in.ImportFromGitBranch, &out.ImportFromGitBranch
		*out = new(string)
		**out = **in
	}
	if in.JobConfigPath != nil {
		in, out := &in.JobConfigPath, &out.JobConfigPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobSourceInitParameters.
func (in *JobSourceInitParameters) DeepCopy() *JobSourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobSourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobSourceObservation) DeepCopyInto(out *JobSourceObservation) {
	*out = *in
	if in.DirtyState != nil {
		in, out := &in.DirtyState, &out.DirtyState
		*out = new(string)
		**out = **in
	}
	if in.ImportFromGitBranch != nil {
		in, out := &in.ImportFromGitBranch, &out.ImportFromGitBranch
		*out = new(string)
		**out = **in
	}
	if in.JobConfigPath != nil {
		in, out := &in.JobConfigPath, &out.JobConfigPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobSourceObservation.
func (in *JobSourceObservation) DeepCopy() *JobSourceObservation {
	if in == nil {
		return nil
	}
	out := new(JobSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobSourceParameters) DeepCopyInto(out *JobSourceParameters) {
	*out = *in
	if in.DirtyState != nil {
		in, out := &in.DirtyState, &out.DirtyState
		*out = new(string)
		**out = **in
	}
	if in.ImportFromGitBranch != nil {
		in, out := &in.ImportFromGitBranch, &out.ImportFromGitBranch
		*out = new(string)
		**out = **in
	}
	if in.JobConfigPath != nil {
		in, out := &in.JobConfigPath, &out.JobConfigPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobSourceParameters.
func (in *JobSourceParameters) DeepCopy() *JobSourceParameters {
	if in == nil {
		return nil
	}
	out := new(JobSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobSpec) DeepCopyInto(out *JobSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobSpec.
func (in *JobSpec) DeepCopy() *JobSpec {
	if in == nil {
		return nil
	}
	out := new(JobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobStatus) DeepCopyInto(out *JobStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobStatus.
func (in *JobStatus) DeepCopy() *JobStatus {
	if in == nil {
		return nil
	}
	out := new(JobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskHealthInitParameters) DeepCopyInto(out *JobTaskHealthInitParameters) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]TaskHealthRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskHealthInitParameters.
func (in *JobTaskHealthInitParameters) DeepCopy() *JobTaskHealthInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskHealthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskHealthObservation) DeepCopyInto(out *JobTaskHealthObservation) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]TaskHealthRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskHealthObservation.
func (in *JobTaskHealthObservation) DeepCopy() *JobTaskHealthObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskHealthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskHealthParameters) DeepCopyInto(out *JobTaskHealthParameters) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]TaskHealthRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskHealthParameters.
func (in *JobTaskHealthParameters) DeepCopy() *JobTaskHealthParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskHealthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskLibraryCranInitParameters) DeepCopyInto(out *JobTaskLibraryCranInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskLibraryCranInitParameters.
func (in *JobTaskLibraryCranInitParameters) DeepCopy() *JobTaskLibraryCranInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskLibraryCranInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskLibraryCranObservation) DeepCopyInto(out *JobTaskLibraryCranObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskLibraryCranObservation.
func (in *JobTaskLibraryCranObservation) DeepCopy() *JobTaskLibraryCranObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskLibraryCranObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskLibraryCranParameters) DeepCopyInto(out *JobTaskLibraryCranParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskLibraryCranParameters.
func (in *JobTaskLibraryCranParameters) DeepCopy() *JobTaskLibraryCranParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskLibraryCranParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskLibraryInitParameters) DeepCopyInto(out *JobTaskLibraryInitParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]JobTaskLibraryCranInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]JobTaskLibraryMavenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]JobTaskLibraryPypiInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskLibraryInitParameters.
func (in *JobTaskLibraryInitParameters) DeepCopy() *JobTaskLibraryInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskLibraryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskLibraryMavenInitParameters) DeepCopyInto(out *JobTaskLibraryMavenInitParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskLibraryMavenInitParameters.
func (in *JobTaskLibraryMavenInitParameters) DeepCopy() *JobTaskLibraryMavenInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskLibraryMavenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskLibraryMavenObservation) DeepCopyInto(out *JobTaskLibraryMavenObservation) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskLibraryMavenObservation.
func (in *JobTaskLibraryMavenObservation) DeepCopy() *JobTaskLibraryMavenObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskLibraryMavenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskLibraryMavenParameters) DeepCopyInto(out *JobTaskLibraryMavenParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskLibraryMavenParameters.
func (in *JobTaskLibraryMavenParameters) DeepCopy() *JobTaskLibraryMavenParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskLibraryMavenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskLibraryObservation) DeepCopyInto(out *JobTaskLibraryObservation) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]JobTaskLibraryCranObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]JobTaskLibraryMavenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]JobTaskLibraryPypiObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskLibraryObservation.
func (in *JobTaskLibraryObservation) DeepCopy() *JobTaskLibraryObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskLibraryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskLibraryParameters) DeepCopyInto(out *JobTaskLibraryParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]JobTaskLibraryCranParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]JobTaskLibraryMavenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]JobTaskLibraryPypiParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskLibraryParameters.
func (in *JobTaskLibraryParameters) DeepCopy() *JobTaskLibraryParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskLibraryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskLibraryPypiInitParameters) DeepCopyInto(out *JobTaskLibraryPypiInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskLibraryPypiInitParameters.
func (in *JobTaskLibraryPypiInitParameters) DeepCopy() *JobTaskLibraryPypiInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskLibraryPypiInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskLibraryPypiObservation) DeepCopyInto(out *JobTaskLibraryPypiObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskLibraryPypiObservation.
func (in *JobTaskLibraryPypiObservation) DeepCopy() *JobTaskLibraryPypiObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskLibraryPypiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskLibraryPypiParameters) DeepCopyInto(out *JobTaskLibraryPypiParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskLibraryPypiParameters.
func (in *JobTaskLibraryPypiParameters) DeepCopy() *JobTaskLibraryPypiParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskLibraryPypiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAutoscaleInitParameters) DeepCopyInto(out *JobTaskNewClusterAutoscaleInitParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAutoscaleInitParameters.
func (in *JobTaskNewClusterAutoscaleInitParameters) DeepCopy() *JobTaskNewClusterAutoscaleInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAutoscaleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAutoscaleObservation) DeepCopyInto(out *JobTaskNewClusterAutoscaleObservation) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAutoscaleObservation.
func (in *JobTaskNewClusterAutoscaleObservation) DeepCopy() *JobTaskNewClusterAutoscaleObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAutoscaleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAutoscaleParameters) DeepCopyInto(out *JobTaskNewClusterAutoscaleParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAutoscaleParameters.
func (in *JobTaskNewClusterAutoscaleParameters) DeepCopy() *JobTaskNewClusterAutoscaleParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAutoscaleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAwsAttributesInitParameters) DeepCopyInto(out *JobTaskNewClusterAwsAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAwsAttributesInitParameters.
func (in *JobTaskNewClusterAwsAttributesInitParameters) DeepCopy() *JobTaskNewClusterAwsAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAwsAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAwsAttributesObservation) DeepCopyInto(out *JobTaskNewClusterAwsAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAwsAttributesObservation.
func (in *JobTaskNewClusterAwsAttributesObservation) DeepCopy() *JobTaskNewClusterAwsAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAwsAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAwsAttributesParameters) DeepCopyInto(out *JobTaskNewClusterAwsAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAwsAttributesParameters.
func (in *JobTaskNewClusterAwsAttributesParameters) DeepCopy() *JobTaskNewClusterAwsAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAwsAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAzureAttributesInitParameters) DeepCopyInto(out *JobTaskNewClusterAzureAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]JobTaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAzureAttributesInitParameters.
func (in *JobTaskNewClusterAzureAttributesInitParameters) DeepCopy() *JobTaskNewClusterAzureAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAzureAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters) DeepCopyInto(out *JobTaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters.
func (in *JobTaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters) DeepCopy() *JobTaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAzureAttributesLogAnalyticsInfoObservation) DeepCopyInto(out *JobTaskNewClusterAzureAttributesLogAnalyticsInfoObservation) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAzureAttributesLogAnalyticsInfoObservation.
func (in *JobTaskNewClusterAzureAttributesLogAnalyticsInfoObservation) DeepCopy() *JobTaskNewClusterAzureAttributesLogAnalyticsInfoObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAzureAttributesLogAnalyticsInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAzureAttributesLogAnalyticsInfoParameters) DeepCopyInto(out *JobTaskNewClusterAzureAttributesLogAnalyticsInfoParameters) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAzureAttributesLogAnalyticsInfoParameters.
func (in *JobTaskNewClusterAzureAttributesLogAnalyticsInfoParameters) DeepCopy() *JobTaskNewClusterAzureAttributesLogAnalyticsInfoParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAzureAttributesLogAnalyticsInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAzureAttributesObservation) DeepCopyInto(out *JobTaskNewClusterAzureAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]JobTaskNewClusterAzureAttributesLogAnalyticsInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAzureAttributesObservation.
func (in *JobTaskNewClusterAzureAttributesObservation) DeepCopy() *JobTaskNewClusterAzureAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAzureAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterAzureAttributesParameters) DeepCopyInto(out *JobTaskNewClusterAzureAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]JobTaskNewClusterAzureAttributesLogAnalyticsInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterAzureAttributesParameters.
func (in *JobTaskNewClusterAzureAttributesParameters) DeepCopy() *JobTaskNewClusterAzureAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterAzureAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterLogConfDbfsInitParameters) DeepCopyInto(out *JobTaskNewClusterClusterLogConfDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterLogConfDbfsInitParameters.
func (in *JobTaskNewClusterClusterLogConfDbfsInitParameters) DeepCopy() *JobTaskNewClusterClusterLogConfDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterLogConfDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterLogConfDbfsObservation) DeepCopyInto(out *JobTaskNewClusterClusterLogConfDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterLogConfDbfsObservation.
func (in *JobTaskNewClusterClusterLogConfDbfsObservation) DeepCopy() *JobTaskNewClusterClusterLogConfDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterLogConfDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterLogConfDbfsParameters) DeepCopyInto(out *JobTaskNewClusterClusterLogConfDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterLogConfDbfsParameters.
func (in *JobTaskNewClusterClusterLogConfDbfsParameters) DeepCopy() *JobTaskNewClusterClusterLogConfDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterLogConfDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterLogConfInitParameters) DeepCopyInto(out *JobTaskNewClusterClusterLogConfInitParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]JobTaskNewClusterClusterLogConfDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]JobTaskNewClusterClusterLogConfS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterLogConfInitParameters.
func (in *JobTaskNewClusterClusterLogConfInitParameters) DeepCopy() *JobTaskNewClusterClusterLogConfInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterLogConfInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterLogConfObservation) DeepCopyInto(out *JobTaskNewClusterClusterLogConfObservation) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]JobTaskNewClusterClusterLogConfDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]JobTaskNewClusterClusterLogConfS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterLogConfObservation.
func (in *JobTaskNewClusterClusterLogConfObservation) DeepCopy() *JobTaskNewClusterClusterLogConfObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterLogConfObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterLogConfParameters) DeepCopyInto(out *JobTaskNewClusterClusterLogConfParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]JobTaskNewClusterClusterLogConfDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]JobTaskNewClusterClusterLogConfS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterLogConfParameters.
func (in *JobTaskNewClusterClusterLogConfParameters) DeepCopy() *JobTaskNewClusterClusterLogConfParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterLogConfParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterLogConfS3InitParameters) DeepCopyInto(out *JobTaskNewClusterClusterLogConfS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterLogConfS3InitParameters.
func (in *JobTaskNewClusterClusterLogConfS3InitParameters) DeepCopy() *JobTaskNewClusterClusterLogConfS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterLogConfS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterLogConfS3Observation) DeepCopyInto(out *JobTaskNewClusterClusterLogConfS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterLogConfS3Observation.
func (in *JobTaskNewClusterClusterLogConfS3Observation) DeepCopy() *JobTaskNewClusterClusterLogConfS3Observation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterLogConfS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterLogConfS3Parameters) DeepCopyInto(out *JobTaskNewClusterClusterLogConfS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterLogConfS3Parameters.
func (in *JobTaskNewClusterClusterLogConfS3Parameters) DeepCopy() *JobTaskNewClusterClusterLogConfS3Parameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterLogConfS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterMountInfoInitParameters) DeepCopyInto(out *JobTaskNewClusterClusterMountInfoInitParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterMountInfoInitParameters.
func (in *JobTaskNewClusterClusterMountInfoInitParameters) DeepCopy() *JobTaskNewClusterClusterMountInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterMountInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters) DeepCopyInto(out *JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters.
func (in *JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters) DeepCopy() *JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation) DeepCopyInto(out *JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation.
func (in *JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation) DeepCopy() *JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters) DeepCopyInto(out *JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters.
func (in *JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters) DeepCopy() *JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterMountInfoObservation) DeepCopyInto(out *JobTaskNewClusterClusterMountInfoObservation) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterMountInfoObservation.
func (in *JobTaskNewClusterClusterMountInfoObservation) DeepCopy() *JobTaskNewClusterClusterMountInfoObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterMountInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterClusterMountInfoParameters) DeepCopyInto(out *JobTaskNewClusterClusterMountInfoParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]JobTaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterClusterMountInfoParameters.
func (in *JobTaskNewClusterClusterMountInfoParameters) DeepCopy() *JobTaskNewClusterClusterMountInfoParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterClusterMountInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterDockerImageBasicAuthInitParameters) DeepCopyInto(out *JobTaskNewClusterDockerImageBasicAuthInitParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterDockerImageBasicAuthInitParameters.
func (in *JobTaskNewClusterDockerImageBasicAuthInitParameters) DeepCopy() *JobTaskNewClusterDockerImageBasicAuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterDockerImageBasicAuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterDockerImageBasicAuthObservation) DeepCopyInto(out *JobTaskNewClusterDockerImageBasicAuthObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterDockerImageBasicAuthObservation.
func (in *JobTaskNewClusterDockerImageBasicAuthObservation) DeepCopy() *JobTaskNewClusterDockerImageBasicAuthObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterDockerImageBasicAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterDockerImageBasicAuthParameters) DeepCopyInto(out *JobTaskNewClusterDockerImageBasicAuthParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterDockerImageBasicAuthParameters.
func (in *JobTaskNewClusterDockerImageBasicAuthParameters) DeepCopy() *JobTaskNewClusterDockerImageBasicAuthParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterDockerImageBasicAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterDockerImageInitParameters) DeepCopyInto(out *JobTaskNewClusterDockerImageInitParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]JobTaskNewClusterDockerImageBasicAuthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterDockerImageInitParameters.
func (in *JobTaskNewClusterDockerImageInitParameters) DeepCopy() *JobTaskNewClusterDockerImageInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterDockerImageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterDockerImageObservation) DeepCopyInto(out *JobTaskNewClusterDockerImageObservation) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]JobTaskNewClusterDockerImageBasicAuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterDockerImageObservation.
func (in *JobTaskNewClusterDockerImageObservation) DeepCopy() *JobTaskNewClusterDockerImageObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterDockerImageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterDockerImageParameters) DeepCopyInto(out *JobTaskNewClusterDockerImageParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]JobTaskNewClusterDockerImageBasicAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterDockerImageParameters.
func (in *JobTaskNewClusterDockerImageParameters) DeepCopy() *JobTaskNewClusterDockerImageParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterDockerImageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterGCPAttributesInitParameters) DeepCopyInto(out *JobTaskNewClusterGCPAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterGCPAttributesInitParameters.
func (in *JobTaskNewClusterGCPAttributesInitParameters) DeepCopy() *JobTaskNewClusterGCPAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterGCPAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterGCPAttributesObservation) DeepCopyInto(out *JobTaskNewClusterGCPAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterGCPAttributesObservation.
func (in *JobTaskNewClusterGCPAttributesObservation) DeepCopy() *JobTaskNewClusterGCPAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterGCPAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterGCPAttributesParameters) DeepCopyInto(out *JobTaskNewClusterGCPAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterGCPAttributesParameters.
func (in *JobTaskNewClusterGCPAttributesParameters) DeepCopy() *JobTaskNewClusterGCPAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterGCPAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitParameters) DeepCopyInto(out *JobTaskNewClusterInitParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]JobTaskNewClusterAutoscaleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]JobTaskNewClusterAwsAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]JobTaskNewClusterAzureAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]JobTaskNewClusterClusterLogConfInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]JobTaskNewClusterClusterMountInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]JobTaskNewClusterDockerImageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]JobTaskNewClusterGCPAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]JobTaskNewClusterInitScriptsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]JobTaskNewClusterLibraryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]JobTaskNewClusterWorkloadTypeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitParameters.
func (in *JobTaskNewClusterInitParameters) DeepCopy() *JobTaskNewClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsAbfssInitParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsAbfssInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsAbfssInitParameters.
func (in *JobTaskNewClusterInitScriptsAbfssInitParameters) DeepCopy() *JobTaskNewClusterInitScriptsAbfssInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsAbfssInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsAbfssObservation) DeepCopyInto(out *JobTaskNewClusterInitScriptsAbfssObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsAbfssObservation.
func (in *JobTaskNewClusterInitScriptsAbfssObservation) DeepCopy() *JobTaskNewClusterInitScriptsAbfssObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsAbfssObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsAbfssParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsAbfssParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsAbfssParameters.
func (in *JobTaskNewClusterInitScriptsAbfssParameters) DeepCopy() *JobTaskNewClusterInitScriptsAbfssParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsAbfssParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsDbfsInitParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsDbfsInitParameters.
func (in *JobTaskNewClusterInitScriptsDbfsInitParameters) DeepCopy() *JobTaskNewClusterInitScriptsDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsDbfsObservation) DeepCopyInto(out *JobTaskNewClusterInitScriptsDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsDbfsObservation.
func (in *JobTaskNewClusterInitScriptsDbfsObservation) DeepCopy() *JobTaskNewClusterInitScriptsDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsDbfsParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsDbfsParameters.
func (in *JobTaskNewClusterInitScriptsDbfsParameters) DeepCopy() *JobTaskNewClusterInitScriptsDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsFileInitParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsFileInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsFileInitParameters.
func (in *JobTaskNewClusterInitScriptsFileInitParameters) DeepCopy() *JobTaskNewClusterInitScriptsFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsFileObservation) DeepCopyInto(out *JobTaskNewClusterInitScriptsFileObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsFileObservation.
func (in *JobTaskNewClusterInitScriptsFileObservation) DeepCopy() *JobTaskNewClusterInitScriptsFileObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsFileParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsFileParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsFileParameters.
func (in *JobTaskNewClusterInitScriptsFileParameters) DeepCopy() *JobTaskNewClusterInitScriptsFileParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsGcsInitParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsGcsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsGcsInitParameters.
func (in *JobTaskNewClusterInitScriptsGcsInitParameters) DeepCopy() *JobTaskNewClusterInitScriptsGcsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsGcsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsGcsObservation) DeepCopyInto(out *JobTaskNewClusterInitScriptsGcsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsGcsObservation.
func (in *JobTaskNewClusterInitScriptsGcsObservation) DeepCopy() *JobTaskNewClusterInitScriptsGcsObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsGcsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsGcsParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsGcsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsGcsParameters.
func (in *JobTaskNewClusterInitScriptsGcsParameters) DeepCopy() *JobTaskNewClusterInitScriptsGcsParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsGcsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsInitParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsInitParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]JobTaskNewClusterInitScriptsAbfssInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]JobTaskNewClusterInitScriptsDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]JobTaskNewClusterInitScriptsFileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]JobTaskNewClusterInitScriptsGcsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]JobTaskNewClusterInitScriptsS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]JobTaskNewClusterInitScriptsVolumesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]JobTaskNewClusterInitScriptsWorkspaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsInitParameters.
func (in *JobTaskNewClusterInitScriptsInitParameters) DeepCopy() *JobTaskNewClusterInitScriptsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsObservation) DeepCopyInto(out *JobTaskNewClusterInitScriptsObservation) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]JobTaskNewClusterInitScriptsAbfssObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]JobTaskNewClusterInitScriptsDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]JobTaskNewClusterInitScriptsFileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]JobTaskNewClusterInitScriptsGcsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]JobTaskNewClusterInitScriptsS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]JobTaskNewClusterInitScriptsVolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]JobTaskNewClusterInitScriptsWorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsObservation.
func (in *JobTaskNewClusterInitScriptsObservation) DeepCopy() *JobTaskNewClusterInitScriptsObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]JobTaskNewClusterInitScriptsAbfssParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]JobTaskNewClusterInitScriptsDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]JobTaskNewClusterInitScriptsFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]JobTaskNewClusterInitScriptsGcsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]JobTaskNewClusterInitScriptsS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]JobTaskNewClusterInitScriptsVolumesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]JobTaskNewClusterInitScriptsWorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsParameters.
func (in *JobTaskNewClusterInitScriptsParameters) DeepCopy() *JobTaskNewClusterInitScriptsParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsS3InitParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsS3InitParameters.
func (in *JobTaskNewClusterInitScriptsS3InitParameters) DeepCopy() *JobTaskNewClusterInitScriptsS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsS3Observation) DeepCopyInto(out *JobTaskNewClusterInitScriptsS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsS3Observation.
func (in *JobTaskNewClusterInitScriptsS3Observation) DeepCopy() *JobTaskNewClusterInitScriptsS3Observation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsS3Parameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsS3Parameters.
func (in *JobTaskNewClusterInitScriptsS3Parameters) DeepCopy() *JobTaskNewClusterInitScriptsS3Parameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsVolumesInitParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsVolumesInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsVolumesInitParameters.
func (in *JobTaskNewClusterInitScriptsVolumesInitParameters) DeepCopy() *JobTaskNewClusterInitScriptsVolumesInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsVolumesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsVolumesObservation) DeepCopyInto(out *JobTaskNewClusterInitScriptsVolumesObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsVolumesObservation.
func (in *JobTaskNewClusterInitScriptsVolumesObservation) DeepCopy() *JobTaskNewClusterInitScriptsVolumesObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsVolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsVolumesParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsVolumesParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsVolumesParameters.
func (in *JobTaskNewClusterInitScriptsVolumesParameters) DeepCopy() *JobTaskNewClusterInitScriptsVolumesParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsVolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsWorkspaceInitParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsWorkspaceInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsWorkspaceInitParameters.
func (in *JobTaskNewClusterInitScriptsWorkspaceInitParameters) DeepCopy() *JobTaskNewClusterInitScriptsWorkspaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsWorkspaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsWorkspaceObservation) DeepCopyInto(out *JobTaskNewClusterInitScriptsWorkspaceObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsWorkspaceObservation.
func (in *JobTaskNewClusterInitScriptsWorkspaceObservation) DeepCopy() *JobTaskNewClusterInitScriptsWorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsWorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterInitScriptsWorkspaceParameters) DeepCopyInto(out *JobTaskNewClusterInitScriptsWorkspaceParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterInitScriptsWorkspaceParameters.
func (in *JobTaskNewClusterInitScriptsWorkspaceParameters) DeepCopy() *JobTaskNewClusterInitScriptsWorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterInitScriptsWorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterLibraryCranInitParameters) DeepCopyInto(out *JobTaskNewClusterLibraryCranInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterLibraryCranInitParameters.
func (in *JobTaskNewClusterLibraryCranInitParameters) DeepCopy() *JobTaskNewClusterLibraryCranInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterLibraryCranInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterLibraryCranObservation) DeepCopyInto(out *JobTaskNewClusterLibraryCranObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterLibraryCranObservation.
func (in *JobTaskNewClusterLibraryCranObservation) DeepCopy() *JobTaskNewClusterLibraryCranObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterLibraryCranObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterLibraryCranParameters) DeepCopyInto(out *JobTaskNewClusterLibraryCranParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterLibraryCranParameters.
func (in *JobTaskNewClusterLibraryCranParameters) DeepCopy() *JobTaskNewClusterLibraryCranParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterLibraryCranParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterLibraryInitParameters) DeepCopyInto(out *JobTaskNewClusterLibraryInitParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]JobTaskNewClusterLibraryCranInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]JobTaskNewClusterLibraryMavenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]JobTaskNewClusterLibraryPypiInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterLibraryInitParameters.
func (in *JobTaskNewClusterLibraryInitParameters) DeepCopy() *JobTaskNewClusterLibraryInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterLibraryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterLibraryMavenInitParameters) DeepCopyInto(out *JobTaskNewClusterLibraryMavenInitParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterLibraryMavenInitParameters.
func (in *JobTaskNewClusterLibraryMavenInitParameters) DeepCopy() *JobTaskNewClusterLibraryMavenInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterLibraryMavenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterLibraryMavenObservation) DeepCopyInto(out *JobTaskNewClusterLibraryMavenObservation) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterLibraryMavenObservation.
func (in *JobTaskNewClusterLibraryMavenObservation) DeepCopy() *JobTaskNewClusterLibraryMavenObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterLibraryMavenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterLibraryMavenParameters) DeepCopyInto(out *JobTaskNewClusterLibraryMavenParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterLibraryMavenParameters.
func (in *JobTaskNewClusterLibraryMavenParameters) DeepCopy() *JobTaskNewClusterLibraryMavenParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterLibraryMavenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterLibraryObservation) DeepCopyInto(out *JobTaskNewClusterLibraryObservation) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]JobTaskNewClusterLibraryCranObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]JobTaskNewClusterLibraryMavenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]JobTaskNewClusterLibraryPypiObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterLibraryObservation.
func (in *JobTaskNewClusterLibraryObservation) DeepCopy() *JobTaskNewClusterLibraryObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterLibraryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterLibraryParameters) DeepCopyInto(out *JobTaskNewClusterLibraryParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]JobTaskNewClusterLibraryCranParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]JobTaskNewClusterLibraryMavenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]JobTaskNewClusterLibraryPypiParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterLibraryParameters.
func (in *JobTaskNewClusterLibraryParameters) DeepCopy() *JobTaskNewClusterLibraryParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterLibraryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterLibraryPypiInitParameters) DeepCopyInto(out *JobTaskNewClusterLibraryPypiInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterLibraryPypiInitParameters.
func (in *JobTaskNewClusterLibraryPypiInitParameters) DeepCopy() *JobTaskNewClusterLibraryPypiInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterLibraryPypiInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterLibraryPypiObservation) DeepCopyInto(out *JobTaskNewClusterLibraryPypiObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterLibraryPypiObservation.
func (in *JobTaskNewClusterLibraryPypiObservation) DeepCopy() *JobTaskNewClusterLibraryPypiObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterLibraryPypiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterLibraryPypiParameters) DeepCopyInto(out *JobTaskNewClusterLibraryPypiParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterLibraryPypiParameters.
func (in *JobTaskNewClusterLibraryPypiParameters) DeepCopy() *JobTaskNewClusterLibraryPypiParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterLibraryPypiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterObservation) DeepCopyInto(out *JobTaskNewClusterObservation) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]JobTaskNewClusterAutoscaleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]JobTaskNewClusterAwsAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]JobTaskNewClusterAzureAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]JobTaskNewClusterClusterLogConfObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]JobTaskNewClusterClusterMountInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]JobTaskNewClusterDockerImageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]JobTaskNewClusterGCPAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]JobTaskNewClusterInitScriptsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]JobTaskNewClusterLibraryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]JobTaskNewClusterWorkloadTypeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterObservation.
func (in *JobTaskNewClusterObservation) DeepCopy() *JobTaskNewClusterObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterParameters) DeepCopyInto(out *JobTaskNewClusterParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]JobTaskNewClusterAutoscaleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]JobTaskNewClusterAwsAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]JobTaskNewClusterAzureAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]JobTaskNewClusterClusterLogConfParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]JobTaskNewClusterClusterMountInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]JobTaskNewClusterDockerImageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]JobTaskNewClusterGCPAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]JobTaskNewClusterInitScriptsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]JobTaskNewClusterLibraryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]JobTaskNewClusterWorkloadTypeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterParameters.
func (in *JobTaskNewClusterParameters) DeepCopy() *JobTaskNewClusterParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterWorkloadTypeClientsInitParameters) DeepCopyInto(out *JobTaskNewClusterWorkloadTypeClientsInitParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterWorkloadTypeClientsInitParameters.
func (in *JobTaskNewClusterWorkloadTypeClientsInitParameters) DeepCopy() *JobTaskNewClusterWorkloadTypeClientsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterWorkloadTypeClientsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterWorkloadTypeClientsObservation) DeepCopyInto(out *JobTaskNewClusterWorkloadTypeClientsObservation) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterWorkloadTypeClientsObservation.
func (in *JobTaskNewClusterWorkloadTypeClientsObservation) DeepCopy() *JobTaskNewClusterWorkloadTypeClientsObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterWorkloadTypeClientsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterWorkloadTypeClientsParameters) DeepCopyInto(out *JobTaskNewClusterWorkloadTypeClientsParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterWorkloadTypeClientsParameters.
func (in *JobTaskNewClusterWorkloadTypeClientsParameters) DeepCopy() *JobTaskNewClusterWorkloadTypeClientsParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterWorkloadTypeClientsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterWorkloadTypeInitParameters) DeepCopyInto(out *JobTaskNewClusterWorkloadTypeInitParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]JobTaskNewClusterWorkloadTypeClientsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterWorkloadTypeInitParameters.
func (in *JobTaskNewClusterWorkloadTypeInitParameters) DeepCopy() *JobTaskNewClusterWorkloadTypeInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterWorkloadTypeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterWorkloadTypeObservation) DeepCopyInto(out *JobTaskNewClusterWorkloadTypeObservation) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]JobTaskNewClusterWorkloadTypeClientsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterWorkloadTypeObservation.
func (in *JobTaskNewClusterWorkloadTypeObservation) DeepCopy() *JobTaskNewClusterWorkloadTypeObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterWorkloadTypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNewClusterWorkloadTypeParameters) DeepCopyInto(out *JobTaskNewClusterWorkloadTypeParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]JobTaskNewClusterWorkloadTypeClientsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNewClusterWorkloadTypeParameters.
func (in *JobTaskNewClusterWorkloadTypeParameters) DeepCopy() *JobTaskNewClusterWorkloadTypeParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNewClusterWorkloadTypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNotebookTaskInitParameters) DeepCopyInto(out *JobTaskNotebookTaskInitParameters) {
	*out = *in
	if in.BaseParameters != nil {
		in, out := &in.BaseParameters, &out.BaseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNotebookTaskInitParameters.
func (in *JobTaskNotebookTaskInitParameters) DeepCopy() *JobTaskNotebookTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNotebookTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNotebookTaskObservation) DeepCopyInto(out *JobTaskNotebookTaskObservation) {
	*out = *in
	if in.BaseParameters != nil {
		in, out := &in.BaseParameters, &out.BaseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNotebookTaskObservation.
func (in *JobTaskNotebookTaskObservation) DeepCopy() *JobTaskNotebookTaskObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNotebookTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNotebookTaskParameters) DeepCopyInto(out *JobTaskNotebookTaskParameters) {
	*out = *in
	if in.BaseParameters != nil {
		in, out := &in.BaseParameters, &out.BaseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNotebookTaskParameters.
func (in *JobTaskNotebookTaskParameters) DeepCopy() *JobTaskNotebookTaskParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNotebookTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNotificationSettingsInitParameters) DeepCopyInto(out *JobTaskNotificationSettingsInitParameters) {
	*out = *in
	if in.AlertOnLastAttempt != nil {
		in, out := &in.AlertOnLastAttempt, &out.AlertOnLastAttempt
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForCanceledRuns != nil {
		in, out := &in.NoAlertForCanceledRuns, &out.NoAlertForCanceledRuns
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNotificationSettingsInitParameters.
func (in *JobTaskNotificationSettingsInitParameters) DeepCopy() *JobTaskNotificationSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNotificationSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNotificationSettingsObservation) DeepCopyInto(out *JobTaskNotificationSettingsObservation) {
	*out = *in
	if in.AlertOnLastAttempt != nil {
		in, out := &in.AlertOnLastAttempt, &out.AlertOnLastAttempt
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForCanceledRuns != nil {
		in, out := &in.NoAlertForCanceledRuns, &out.NoAlertForCanceledRuns
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNotificationSettingsObservation.
func (in *JobTaskNotificationSettingsObservation) DeepCopy() *JobTaskNotificationSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskNotificationSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskNotificationSettingsParameters) DeepCopyInto(out *JobTaskNotificationSettingsParameters) {
	*out = *in
	if in.AlertOnLastAttempt != nil {
		in, out := &in.AlertOnLastAttempt, &out.AlertOnLastAttempt
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForCanceledRuns != nil {
		in, out := &in.NoAlertForCanceledRuns, &out.NoAlertForCanceledRuns
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskNotificationSettingsParameters.
func (in *JobTaskNotificationSettingsParameters) DeepCopy() *JobTaskNotificationSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskNotificationSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskPipelineTaskInitParameters) DeepCopyInto(out *JobTaskPipelineTaskInitParameters) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskPipelineTaskInitParameters.
func (in *JobTaskPipelineTaskInitParameters) DeepCopy() *JobTaskPipelineTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskPipelineTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskPipelineTaskObservation) DeepCopyInto(out *JobTaskPipelineTaskObservation) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskPipelineTaskObservation.
func (in *JobTaskPipelineTaskObservation) DeepCopy() *JobTaskPipelineTaskObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskPipelineTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskPipelineTaskParameters) DeepCopyInto(out *JobTaskPipelineTaskParameters) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskPipelineTaskParameters.
func (in *JobTaskPipelineTaskParameters) DeepCopy() *JobTaskPipelineTaskParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskPipelineTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskPythonWheelTaskInitParameters) DeepCopyInto(out *JobTaskPythonWheelTaskInitParameters) {
	*out = *in
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = new(string)
		**out = **in
	}
	if in.NamedParameters != nil {
		in, out := &in.NamedParameters, &out.NamedParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PackageName != nil {
		in, out := &in.PackageName, &out.PackageName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskPythonWheelTaskInitParameters.
func (in *JobTaskPythonWheelTaskInitParameters) DeepCopy() *JobTaskPythonWheelTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskPythonWheelTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskPythonWheelTaskObservation) DeepCopyInto(out *JobTaskPythonWheelTaskObservation) {
	*out = *in
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = new(string)
		**out = **in
	}
	if in.NamedParameters != nil {
		in, out := &in.NamedParameters, &out.NamedParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PackageName != nil {
		in, out := &in.PackageName, &out.PackageName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskPythonWheelTaskObservation.
func (in *JobTaskPythonWheelTaskObservation) DeepCopy() *JobTaskPythonWheelTaskObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskPythonWheelTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskPythonWheelTaskParameters) DeepCopyInto(out *JobTaskPythonWheelTaskParameters) {
	*out = *in
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = new(string)
		**out = **in
	}
	if in.NamedParameters != nil {
		in, out := &in.NamedParameters, &out.NamedParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PackageName != nil {
		in, out := &in.PackageName, &out.PackageName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskPythonWheelTaskParameters.
func (in *JobTaskPythonWheelTaskParameters) DeepCopy() *JobTaskPythonWheelTaskParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskPythonWheelTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskRunJobTaskInitParameters) DeepCopyInto(out *JobTaskRunJobTaskInitParameters) {
	*out = *in
	if in.DbtCommands != nil {
		in, out := &in.DbtCommands, &out.DbtCommands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarParams != nil {
		in, out := &in.JarParams, &out.JarParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(float64)
		**out = **in
	}
	if in.JobParameters != nil {
		in, out := &in.JobParameters, &out.JobParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookParams != nil {
		in, out := &in.NotebookParams, &out.NotebookParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PipelineParams != nil {
		in, out := &in.PipelineParams, &out.PipelineParams
		*out = make([]RunJobTaskPipelineParamsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonNamedParams != nil {
		in, out := &in.PythonNamedParams, &out.PythonNamedParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PythonParams != nil {
		in, out := &in.PythonParams, &out.PythonParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SQLParams != nil {
		in, out := &in.SQLParams, &out.SQLParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkSubmitParams != nil {
		in, out := &in.SparkSubmitParams, &out.SparkSubmitParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskRunJobTaskInitParameters.
func (in *JobTaskRunJobTaskInitParameters) DeepCopy() *JobTaskRunJobTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskRunJobTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskRunJobTaskObservation) DeepCopyInto(out *JobTaskRunJobTaskObservation) {
	*out = *in
	if in.DbtCommands != nil {
		in, out := &in.DbtCommands, &out.DbtCommands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarParams != nil {
		in, out := &in.JarParams, &out.JarParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(float64)
		**out = **in
	}
	if in.JobParameters != nil {
		in, out := &in.JobParameters, &out.JobParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookParams != nil {
		in, out := &in.NotebookParams, &out.NotebookParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PipelineParams != nil {
		in, out := &in.PipelineParams, &out.PipelineParams
		*out = make([]RunJobTaskPipelineParamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonNamedParams != nil {
		in, out := &in.PythonNamedParams, &out.PythonNamedParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PythonParams != nil {
		in, out := &in.PythonParams, &out.PythonParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SQLParams != nil {
		in, out := &in.SQLParams, &out.SQLParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkSubmitParams != nil {
		in, out := &in.SparkSubmitParams, &out.SparkSubmitParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskRunJobTaskObservation.
func (in *JobTaskRunJobTaskObservation) DeepCopy() *JobTaskRunJobTaskObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskRunJobTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskRunJobTaskParameters) DeepCopyInto(out *JobTaskRunJobTaskParameters) {
	*out = *in
	if in.DbtCommands != nil {
		in, out := &in.DbtCommands, &out.DbtCommands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarParams != nil {
		in, out := &in.JarParams, &out.JarParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(float64)
		**out = **in
	}
	if in.JobParameters != nil {
		in, out := &in.JobParameters, &out.JobParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookParams != nil {
		in, out := &in.NotebookParams, &out.NotebookParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PipelineParams != nil {
		in, out := &in.PipelineParams, &out.PipelineParams
		*out = make([]RunJobTaskPipelineParamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonNamedParams != nil {
		in, out := &in.PythonNamedParams, &out.PythonNamedParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PythonParams != nil {
		in, out := &in.PythonParams, &out.PythonParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SQLParams != nil {
		in, out := &in.SQLParams, &out.SQLParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkSubmitParams != nil {
		in, out := &in.SparkSubmitParams, &out.SparkSubmitParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskRunJobTaskParameters.
func (in *JobTaskRunJobTaskParameters) DeepCopy() *JobTaskRunJobTaskParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskRunJobTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskSparkJarTaskInitParameters) DeepCopyInto(out *JobTaskSparkJarTaskInitParameters) {
	*out = *in
	if in.JarURI != nil {
		in, out := &in.JarURI, &out.JarURI
		*out = new(string)
		**out = **in
	}
	if in.MainClassName != nil {
		in, out := &in.MainClassName, &out.MainClassName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskSparkJarTaskInitParameters.
func (in *JobTaskSparkJarTaskInitParameters) DeepCopy() *JobTaskSparkJarTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskSparkJarTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskSparkJarTaskObservation) DeepCopyInto(out *JobTaskSparkJarTaskObservation) {
	*out = *in
	if in.JarURI != nil {
		in, out := &in.JarURI, &out.JarURI
		*out = new(string)
		**out = **in
	}
	if in.MainClassName != nil {
		in, out := &in.MainClassName, &out.MainClassName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskSparkJarTaskObservation.
func (in *JobTaskSparkJarTaskObservation) DeepCopy() *JobTaskSparkJarTaskObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskSparkJarTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskSparkJarTaskParameters) DeepCopyInto(out *JobTaskSparkJarTaskParameters) {
	*out = *in
	if in.JarURI != nil {
		in, out := &in.JarURI, &out.JarURI
		*out = new(string)
		**out = **in
	}
	if in.MainClassName != nil {
		in, out := &in.MainClassName, &out.MainClassName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskSparkJarTaskParameters.
func (in *JobTaskSparkJarTaskParameters) DeepCopy() *JobTaskSparkJarTaskParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskSparkJarTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskSparkPythonTaskInitParameters) DeepCopyInto(out *JobTaskSparkPythonTaskInitParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PythonFile != nil {
		in, out := &in.PythonFile, &out.PythonFile
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskSparkPythonTaskInitParameters.
func (in *JobTaskSparkPythonTaskInitParameters) DeepCopy() *JobTaskSparkPythonTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskSparkPythonTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskSparkPythonTaskObservation) DeepCopyInto(out *JobTaskSparkPythonTaskObservation) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PythonFile != nil {
		in, out := &in.PythonFile, &out.PythonFile
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskSparkPythonTaskObservation.
func (in *JobTaskSparkPythonTaskObservation) DeepCopy() *JobTaskSparkPythonTaskObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskSparkPythonTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskSparkPythonTaskParameters) DeepCopyInto(out *JobTaskSparkPythonTaskParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PythonFile != nil {
		in, out := &in.PythonFile, &out.PythonFile
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskSparkPythonTaskParameters.
func (in *JobTaskSparkPythonTaskParameters) DeepCopy() *JobTaskSparkPythonTaskParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskSparkPythonTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskSparkSubmitTaskInitParameters) DeepCopyInto(out *JobTaskSparkSubmitTaskInitParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskSparkSubmitTaskInitParameters.
func (in *JobTaskSparkSubmitTaskInitParameters) DeepCopy() *JobTaskSparkSubmitTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskSparkSubmitTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskSparkSubmitTaskObservation) DeepCopyInto(out *JobTaskSparkSubmitTaskObservation) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskSparkSubmitTaskObservation.
func (in *JobTaskSparkSubmitTaskObservation) DeepCopy() *JobTaskSparkSubmitTaskObservation {
	if in == nil {
		return nil
	}
	out := new(JobTaskSparkSubmitTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTaskSparkSubmitTaskParameters) DeepCopyInto(out *JobTaskSparkSubmitTaskParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTaskSparkSubmitTaskParameters.
func (in *JobTaskSparkSubmitTaskParameters) DeepCopy() *JobTaskSparkSubmitTaskParameters {
	if in == nil {
		return nil
	}
	out := new(JobTaskSparkSubmitTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsInitParameters) DeepCopyInto(out *JobWebhookNotificationsInitParameters) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]JobWebhookNotificationsOnDurationWarningThresholdExceededInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]JobWebhookNotificationsOnFailureInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]JobWebhookNotificationsOnStartInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]JobWebhookNotificationsOnStreamingBacklogExceededInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]JobWebhookNotificationsOnSuccessInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsInitParameters.
func (in *JobWebhookNotificationsInitParameters) DeepCopy() *JobWebhookNotificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsObservation) DeepCopyInto(out *JobWebhookNotificationsObservation) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]JobWebhookNotificationsOnDurationWarningThresholdExceededObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]JobWebhookNotificationsOnFailureObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]JobWebhookNotificationsOnStartObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]JobWebhookNotificationsOnStreamingBacklogExceededObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]JobWebhookNotificationsOnSuccessObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsObservation.
func (in *JobWebhookNotificationsObservation) DeepCopy() *JobWebhookNotificationsObservation {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnDurationWarningThresholdExceededInitParameters) DeepCopyInto(out *JobWebhookNotificationsOnDurationWarningThresholdExceededInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnDurationWarningThresholdExceededInitParameters.
func (in *JobWebhookNotificationsOnDurationWarningThresholdExceededInitParameters) DeepCopy() *JobWebhookNotificationsOnDurationWarningThresholdExceededInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnDurationWarningThresholdExceededInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnDurationWarningThresholdExceededObservation) DeepCopyInto(out *JobWebhookNotificationsOnDurationWarningThresholdExceededObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnDurationWarningThresholdExceededObservation.
func (in *JobWebhookNotificationsOnDurationWarningThresholdExceededObservation) DeepCopy() *JobWebhookNotificationsOnDurationWarningThresholdExceededObservation {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnDurationWarningThresholdExceededObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnDurationWarningThresholdExceededParameters) DeepCopyInto(out *JobWebhookNotificationsOnDurationWarningThresholdExceededParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnDurationWarningThresholdExceededParameters.
func (in *JobWebhookNotificationsOnDurationWarningThresholdExceededParameters) DeepCopy() *JobWebhookNotificationsOnDurationWarningThresholdExceededParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnDurationWarningThresholdExceededParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnFailureInitParameters) DeepCopyInto(out *JobWebhookNotificationsOnFailureInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnFailureInitParameters.
func (in *JobWebhookNotificationsOnFailureInitParameters) DeepCopy() *JobWebhookNotificationsOnFailureInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnFailureInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnFailureObservation) DeepCopyInto(out *JobWebhookNotificationsOnFailureObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnFailureObservation.
func (in *JobWebhookNotificationsOnFailureObservation) DeepCopy() *JobWebhookNotificationsOnFailureObservation {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnFailureObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnFailureParameters) DeepCopyInto(out *JobWebhookNotificationsOnFailureParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnFailureParameters.
func (in *JobWebhookNotificationsOnFailureParameters) DeepCopy() *JobWebhookNotificationsOnFailureParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnFailureParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnStartInitParameters) DeepCopyInto(out *JobWebhookNotificationsOnStartInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnStartInitParameters.
func (in *JobWebhookNotificationsOnStartInitParameters) DeepCopy() *JobWebhookNotificationsOnStartInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnStartInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnStartObservation) DeepCopyInto(out *JobWebhookNotificationsOnStartObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnStartObservation.
func (in *JobWebhookNotificationsOnStartObservation) DeepCopy() *JobWebhookNotificationsOnStartObservation {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnStartObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnStartParameters) DeepCopyInto(out *JobWebhookNotificationsOnStartParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnStartParameters.
func (in *JobWebhookNotificationsOnStartParameters) DeepCopy() *JobWebhookNotificationsOnStartParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnStartParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnStreamingBacklogExceededInitParameters) DeepCopyInto(out *JobWebhookNotificationsOnStreamingBacklogExceededInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnStreamingBacklogExceededInitParameters.
func (in *JobWebhookNotificationsOnStreamingBacklogExceededInitParameters) DeepCopy() *JobWebhookNotificationsOnStreamingBacklogExceededInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnStreamingBacklogExceededInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnStreamingBacklogExceededObservation) DeepCopyInto(out *JobWebhookNotificationsOnStreamingBacklogExceededObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnStreamingBacklogExceededObservation.
func (in *JobWebhookNotificationsOnStreamingBacklogExceededObservation) DeepCopy() *JobWebhookNotificationsOnStreamingBacklogExceededObservation {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnStreamingBacklogExceededObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnStreamingBacklogExceededParameters) DeepCopyInto(out *JobWebhookNotificationsOnStreamingBacklogExceededParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnStreamingBacklogExceededParameters.
func (in *JobWebhookNotificationsOnStreamingBacklogExceededParameters) DeepCopy() *JobWebhookNotificationsOnStreamingBacklogExceededParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnStreamingBacklogExceededParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnSuccessInitParameters) DeepCopyInto(out *JobWebhookNotificationsOnSuccessInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnSuccessInitParameters.
func (in *JobWebhookNotificationsOnSuccessInitParameters) DeepCopy() *JobWebhookNotificationsOnSuccessInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnSuccessInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnSuccessObservation) DeepCopyInto(out *JobWebhookNotificationsOnSuccessObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnSuccessObservation.
func (in *JobWebhookNotificationsOnSuccessObservation) DeepCopy() *JobWebhookNotificationsOnSuccessObservation {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnSuccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsOnSuccessParameters) DeepCopyInto(out *JobWebhookNotificationsOnSuccessParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsOnSuccessParameters.
func (in *JobWebhookNotificationsOnSuccessParameters) DeepCopy() *JobWebhookNotificationsOnSuccessParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsOnSuccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobWebhookNotificationsParameters) DeepCopyInto(out *JobWebhookNotificationsParameters) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]JobWebhookNotificationsOnDurationWarningThresholdExceededParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]JobWebhookNotificationsOnFailureParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]JobWebhookNotificationsOnStartParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]JobWebhookNotificationsOnStreamingBacklogExceededParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]JobWebhookNotificationsOnSuccessParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobWebhookNotificationsParameters.
func (in *JobWebhookNotificationsParameters) DeepCopy() *JobWebhookNotificationsParameters {
	if in == nil {
		return nil
	}
	out := new(JobWebhookNotificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyvaultMetadataInitParameters) DeepCopyInto(out *KeyvaultMetadataInitParameters) {
	*out = *in
	if in.DNSName != nil {
		in, out := &in.DNSName, &out.DNSName
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyvaultMetadataInitParameters.
func (in *KeyvaultMetadataInitParameters) DeepCopy() *KeyvaultMetadataInitParameters {
	if in == nil {
		return nil
	}
	out := new(KeyvaultMetadataInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyvaultMetadataObservation) DeepCopyInto(out *KeyvaultMetadataObservation) {
	*out = *in
	if in.DNSName != nil {
		in, out := &in.DNSName, &out.DNSName
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyvaultMetadataObservation.
func (in *KeyvaultMetadataObservation) DeepCopy() *KeyvaultMetadataObservation {
	if in == nil {
		return nil
	}
	out := new(KeyvaultMetadataObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyvaultMetadataParameters) DeepCopyInto(out *KeyvaultMetadataParameters) {
	*out = *in
	if in.DNSName != nil {
		in, out := &in.DNSName, &out.DNSName
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyvaultMetadataParameters.
func (in *KeyvaultMetadataParameters) DeepCopy() *KeyvaultMetadataParameters {
	if in == nil {
		return nil
	}
	out := new(KeyvaultMetadataParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakehouseMonitor) DeepCopyInto(out *LakehouseMonitor) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakehouseMonitor.
func (in *LakehouseMonitor) DeepCopy() *LakehouseMonitor {
	if in == nil {
		return nil
	}
	out := new(LakehouseMonitor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LakehouseMonitor) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakehouseMonitorInitParameters) DeepCopyInto(out *LakehouseMonitorInitParameters) {
	*out = *in
	if in.AssetsDir != nil {
		in, out := &in.AssetsDir, &out.AssetsDir
		*out = new(string)
		**out = **in
	}
	if in.BaselineTableName != nil {
		in, out := &in.BaselineTableName, &out.BaselineTableName
		*out = new(string)
		**out = **in
	}
	if in.CustomMetrics != nil {
		in, out := &in.CustomMetrics, &out.CustomMetrics
		*out = make([]CustomMetricsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataClassificationConfig != nil {
		in, out := &in.DataClassificationConfig, &out.DataClassificationConfig
		*out = make([]DataClassificationConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InferenceLog != nil {
		in, out := &in.InferenceLog, &out.InferenceLog
		*out = make([]InferenceLogInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LatestMonitorFailureMsg != nil {
		in, out := &in.LatestMonitorFailureMsg, &out.LatestMonitorFailureMsg
		*out = new(string)
		**out = **in
	}
	if in.Notifications != nil {
		in, out := &in.Notifications, &out.Notifications
		*out = make([]NotificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutputSchemaName != nil {
		in, out := &in.OutputSchemaName, &out.OutputSchemaName
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]LakehouseMonitorScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipBuiltinDashboard != nil {
		in, out := &in.SkipBuiltinDashboard, &out.SkipBuiltinDashboard
		*out = new(bool)
		**out = **in
	}
	if in.SlicingExprs != nil {
		in, out := &in.SlicingExprs, &out.SlicingExprs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Snapshot != nil {
		in, out := &in.Snapshot, &out.Snapshot
		*out = make([]SnapshotInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.TimeSeries != nil {
		in, out := &in.TimeSeries, &out.TimeSeries
		*out = make([]TimeSeriesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakehouseMonitorInitParameters.
func (in *LakehouseMonitorInitParameters) DeepCopy() *LakehouseMonitorInitParameters {
	if in == nil {
		return nil
	}
	out := new(LakehouseMonitorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakehouseMonitorList) DeepCopyInto(out *LakehouseMonitorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LakehouseMonitor, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakehouseMonitorList.
func (in *LakehouseMonitorList) DeepCopy() *LakehouseMonitorList {
	if in == nil {
		return nil
	}
	out := new(LakehouseMonitorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LakehouseMonitorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakehouseMonitorObservation) DeepCopyInto(out *LakehouseMonitorObservation) {
	*out = *in
	if in.AssetsDir != nil {
		in, out := &in.AssetsDir, &out.AssetsDir
		*out = new(string)
		**out = **in
	}
	if in.BaselineTableName != nil {
		in, out := &in.BaselineTableName, &out.BaselineTableName
		*out = new(string)
		**out = **in
	}
	if in.CustomMetrics != nil {
		in, out := &in.CustomMetrics, &out.CustomMetrics
		*out = make([]CustomMetricsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.DataClassificationConfig != nil {
		in, out := &in.DataClassificationConfig, &out.DataClassificationConfig
		*out = make([]DataClassificationConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriftMetricsTableName != nil {
		in, out := &in.DriftMetricsTableName, &out.DriftMetricsTableName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InferenceLog != nil {
		in, out := &in.InferenceLog, &out.InferenceLog
		*out = make([]InferenceLogObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LatestMonitorFailureMsg != nil {
		in, out := &in.LatestMonitorFailureMsg, &out.LatestMonitorFailureMsg
		*out = new(string)
		**out = **in
	}
	if in.MonitorVersion != nil {
		in, out := &in.MonitorVersion, &out.MonitorVersion
		*out = new(string)
		**out = **in
	}
	if in.Notifications != nil {
		in, out := &in.Notifications, &out.Notifications
		*out = make([]NotificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutputSchemaName != nil {
		in, out := &in.OutputSchemaName, &out.OutputSchemaName
		*out = new(string)
		**out = **in
	}
	if in.ProfileMetricsTableName != nil {
		in, out := &in.ProfileMetricsTableName, &out.ProfileMetricsTableName
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]LakehouseMonitorScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipBuiltinDashboard != nil {
		in, out := &in.SkipBuiltinDashboard, &out.SkipBuiltinDashboard
		*out = new(bool)
		**out = **in
	}
	if in.SlicingExprs != nil {
		in, out := &in.SlicingExprs, &out.SlicingExprs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Snapshot != nil {
		in, out := &in.Snapshot, &out.Snapshot
		*out = make([]SnapshotParameters, len(*in))
		copy(*out, *in)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.TimeSeries != nil {
		in, out := &in.TimeSeries, &out.TimeSeries
		*out = make([]TimeSeriesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakehouseMonitorObservation.
func (in *LakehouseMonitorObservation) DeepCopy() *LakehouseMonitorObservation {
	if in == nil {
		return nil
	}
	out := new(LakehouseMonitorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakehouseMonitorParameters) DeepCopyInto(out *LakehouseMonitorParameters) {
	*out = *in
	if in.AssetsDir != nil {
		in, out := &in.AssetsDir, &out.AssetsDir
		*out = new(string)
		**out = **in
	}
	if in.BaselineTableName != nil {
		in, out := &in.BaselineTableName, &out.BaselineTableName
		*out = new(string)
		**out = **in
	}
	if in.CustomMetrics != nil {
		in, out := &in.CustomMetrics, &out.CustomMetrics
		*out = make([]CustomMetricsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataClassificationConfig != nil {
		in, out := &in.DataClassificationConfig, &out.DataClassificationConfig
		*out = make([]DataClassificationConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InferenceLog != nil {
		in, out := &in.InferenceLog, &out.InferenceLog
		*out = make([]InferenceLogParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LatestMonitorFailureMsg != nil {
		in, out := &in.LatestMonitorFailureMsg, &out.LatestMonitorFailureMsg
		*out = new(string)
		**out = **in
	}
	if in.Notifications != nil {
		in, out := &in.Notifications, &out.Notifications
		*out = make([]NotificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutputSchemaName != nil {
		in, out := &in.OutputSchemaName, &out.OutputSchemaName
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]LakehouseMonitorScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipBuiltinDashboard != nil {
		in, out := &in.SkipBuiltinDashboard, &out.SkipBuiltinDashboard
		*out = new(bool)
		**out = **in
	}
	if in.SlicingExprs != nil {
		in, out := &in.SlicingExprs, &out.SlicingExprs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Snapshot != nil {
		in, out := &in.Snapshot, &out.Snapshot
		*out = make([]SnapshotParameters, len(*in))
		copy(*out, *in)
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.TimeSeries != nil {
		in, out := &in.TimeSeries, &out.TimeSeries
		*out = make([]TimeSeriesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakehouseMonitorParameters.
func (in *LakehouseMonitorParameters) DeepCopy() *LakehouseMonitorParameters {
	if in == nil {
		return nil
	}
	out := new(LakehouseMonitorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakehouseMonitorScheduleInitParameters) DeepCopyInto(out *LakehouseMonitorScheduleInitParameters) {
	*out = *in
	if in.QuartzCronExpression != nil {
		in, out := &in.QuartzCronExpression, &out.QuartzCronExpression
		*out = new(string)
		**out = **in
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakehouseMonitorScheduleInitParameters.
func (in *LakehouseMonitorScheduleInitParameters) DeepCopy() *LakehouseMonitorScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(LakehouseMonitorScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakehouseMonitorScheduleObservation) DeepCopyInto(out *LakehouseMonitorScheduleObservation) {
	*out = *in
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
	if in.QuartzCronExpression != nil {
		in, out := &in.QuartzCronExpression, &out.QuartzCronExpression
		*out = new(string)
		**out = **in
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakehouseMonitorScheduleObservation.
func (in *LakehouseMonitorScheduleObservation) DeepCopy() *LakehouseMonitorScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(LakehouseMonitorScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakehouseMonitorScheduleParameters) DeepCopyInto(out *LakehouseMonitorScheduleParameters) {
	*out = *in
	if in.QuartzCronExpression != nil {
		in, out := &in.QuartzCronExpression, &out.QuartzCronExpression
		*out = new(string)
		**out = **in
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakehouseMonitorScheduleParameters.
func (in *LakehouseMonitorScheduleParameters) DeepCopy() *LakehouseMonitorScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(LakehouseMonitorScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakehouseMonitorSpec) DeepCopyInto(out *LakehouseMonitorSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakehouseMonitorSpec.
func (in *LakehouseMonitorSpec) DeepCopy() *LakehouseMonitorSpec {
	if in == nil {
		return nil
	}
	out := new(LakehouseMonitorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakehouseMonitorStatus) DeepCopyInto(out *LakehouseMonitorStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakehouseMonitorStatus.
func (in *LakehouseMonitorStatus) DeepCopy() *LakehouseMonitorStatus {
	if in == nil {
		return nil
	}
	out := new(LakehouseMonitorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LatestUpdatesInitParameters) DeepCopyInto(out *LatestUpdatesInitParameters) {
	*out = *in
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.UpdateID != nil {
		in, out := &in.UpdateID, &out.UpdateID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LatestUpdatesInitParameters.
func (in *LatestUpdatesInitParameters) DeepCopy() *LatestUpdatesInitParameters {
	if in == nil {
		return nil
	}
	out := new(LatestUpdatesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LatestUpdatesObservation) DeepCopyInto(out *LatestUpdatesObservation) {
	*out = *in
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.UpdateID != nil {
		in, out := &in.UpdateID, &out.UpdateID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LatestUpdatesObservation.
func (in *LatestUpdatesObservation) DeepCopy() *LatestUpdatesObservation {
	if in == nil {
		return nil
	}
	out := new(LatestUpdatesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LatestUpdatesParameters) DeepCopyInto(out *LatestUpdatesParameters) {
	*out = *in
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.UpdateID != nil {
		in, out := &in.UpdateID, &out.UpdateID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LatestUpdatesParameters.
func (in *LatestUpdatesParameters) DeepCopy() *LatestUpdatesParameters {
	if in == nil {
		return nil
	}
	out := new(LatestUpdatesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateOverrideInitParameters) DeepCopyInto(out *LaunchTemplateOverrideInitParameters) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateOverrideInitParameters.
func (in *LaunchTemplateOverrideInitParameters) DeepCopy() *LaunchTemplateOverrideInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateOverrideInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateOverrideObservation) DeepCopyInto(out *LaunchTemplateOverrideObservation) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateOverrideObservation.
func (in *LaunchTemplateOverrideObservation) DeepCopy() *LaunchTemplateOverrideObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateOverrideObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateOverrideParameters) DeepCopyInto(out *LaunchTemplateOverrideParameters) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateOverrideParameters.
func (in *LaunchTemplateOverrideParameters) DeepCopy() *LaunchTemplateOverrideParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateOverrideParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibrariesCranInitParameters) DeepCopyInto(out *LibrariesCranInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibrariesCranInitParameters.
func (in *LibrariesCranInitParameters) DeepCopy() *LibrariesCranInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibrariesCranInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibrariesCranObservation) DeepCopyInto(out *LibrariesCranObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibrariesCranObservation.
func (in *LibrariesCranObservation) DeepCopy() *LibrariesCranObservation {
	if in == nil {
		return nil
	}
	out := new(LibrariesCranObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibrariesCranParameters) DeepCopyInto(out *LibrariesCranParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibrariesCranParameters.
func (in *LibrariesCranParameters) DeepCopy() *LibrariesCranParameters {
	if in == nil {
		return nil
	}
	out := new(LibrariesCranParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibrariesInitParameters) DeepCopyInto(out *LibrariesInitParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]LibrariesCranInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]LibrariesMavenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]LibrariesPypiInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibrariesInitParameters.
func (in *LibrariesInitParameters) DeepCopy() *LibrariesInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibrariesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibrariesMavenInitParameters) DeepCopyInto(out *LibrariesMavenInitParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibrariesMavenInitParameters.
func (in *LibrariesMavenInitParameters) DeepCopy() *LibrariesMavenInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibrariesMavenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibrariesMavenObservation) DeepCopyInto(out *LibrariesMavenObservation) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibrariesMavenObservation.
func (in *LibrariesMavenObservation) DeepCopy() *LibrariesMavenObservation {
	if in == nil {
		return nil
	}
	out := new(LibrariesMavenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibrariesMavenParameters) DeepCopyInto(out *LibrariesMavenParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibrariesMavenParameters.
func (in *LibrariesMavenParameters) DeepCopy() *LibrariesMavenParameters {
	if in == nil {
		return nil
	}
	out := new(LibrariesMavenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibrariesObservation) DeepCopyInto(out *LibrariesObservation) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]LibrariesCranObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]LibrariesMavenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]LibrariesPypiObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibrariesObservation.
func (in *LibrariesObservation) DeepCopy() *LibrariesObservation {
	if in == nil {
		return nil
	}
	out := new(LibrariesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibrariesParameters) DeepCopyInto(out *LibrariesParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]LibrariesCranParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]LibrariesMavenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]LibrariesPypiParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibrariesParameters.
func (in *LibrariesParameters) DeepCopy() *LibrariesParameters {
	if in == nil {
		return nil
	}
	out := new(LibrariesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibrariesPypiInitParameters) DeepCopyInto(out *LibrariesPypiInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibrariesPypiInitParameters.
func (in *LibrariesPypiInitParameters) DeepCopy() *LibrariesPypiInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibrariesPypiInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibrariesPypiObservation) DeepCopyInto(out *LibrariesPypiObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibrariesPypiObservation.
func (in *LibrariesPypiObservation) DeepCopy() *LibrariesPypiObservation {
	if in == nil {
		return nil
	}
	out := new(LibrariesPypiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibrariesPypiParameters) DeepCopyInto(out *LibrariesPypiParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibrariesPypiParameters.
func (in *LibrariesPypiParameters) DeepCopy() *LibrariesPypiParameters {
	if in == nil {
		return nil
	}
	out := new(LibrariesPypiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Library) DeepCopyInto(out *Library) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Library.
func (in *Library) DeepCopy() *Library {
	if in == nil {
		return nil
	}
	out := new(Library)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Library) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryCranInitParameters) DeepCopyInto(out *LibraryCranInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryCranInitParameters.
func (in *LibraryCranInitParameters) DeepCopy() *LibraryCranInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryCranInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryCranInitParameters_2) DeepCopyInto(out *LibraryCranInitParameters_2) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryCranInitParameters_2.
func (in *LibraryCranInitParameters_2) DeepCopy() *LibraryCranInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(LibraryCranInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryCranObservation) DeepCopyInto(out *LibraryCranObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryCranObservation.
func (in *LibraryCranObservation) DeepCopy() *LibraryCranObservation {
	if in == nil {
		return nil
	}
	out := new(LibraryCranObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryCranObservation_2) DeepCopyInto(out *LibraryCranObservation_2) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryCranObservation_2.
func (in *LibraryCranObservation_2) DeepCopy() *LibraryCranObservation_2 {
	if in == nil {
		return nil
	}
	out := new(LibraryCranObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryCranParameters) DeepCopyInto(out *LibraryCranParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryCranParameters.
func (in *LibraryCranParameters) DeepCopy() *LibraryCranParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryCranParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryCranParameters_2) DeepCopyInto(out *LibraryCranParameters_2) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryCranParameters_2.
func (in *LibraryCranParameters_2) DeepCopy() *LibraryCranParameters_2 {
	if in == nil {
		return nil
	}
	out := new(LibraryCranParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryFileInitParameters) DeepCopyInto(out *LibraryFileInitParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryFileInitParameters.
func (in *LibraryFileInitParameters) DeepCopy() *LibraryFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryFileObservation) DeepCopyInto(out *LibraryFileObservation) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryFileObservation.
func (in *LibraryFileObservation) DeepCopy() *LibraryFileObservation {
	if in == nil {
		return nil
	}
	out := new(LibraryFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryFileParameters) DeepCopyInto(out *LibraryFileParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryFileParameters.
func (in *LibraryFileParameters) DeepCopy() *LibraryFileParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryInitParameters) DeepCopyInto(out *LibraryInitParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]CranInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]MavenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]PypiInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryInitParameters.
func (in *LibraryInitParameters) DeepCopy() *LibraryInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryInitParameters_2) DeepCopyInto(out *LibraryInitParameters_2) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]LibraryCranInitParameters_2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]LibraryMavenInitParameters_2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]LibraryPypiInitParameters_2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryInitParameters_2.
func (in *LibraryInitParameters_2) DeepCopy() *LibraryInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(LibraryInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryList) DeepCopyInto(out *LibraryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Library, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryList.
func (in *LibraryList) DeepCopy() *LibraryList {
	if in == nil {
		return nil
	}
	out := new(LibraryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LibraryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryMavenInitParameters) DeepCopyInto(out *LibraryMavenInitParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryMavenInitParameters.
func (in *LibraryMavenInitParameters) DeepCopy() *LibraryMavenInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryMavenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryMavenInitParameters_2) DeepCopyInto(out *LibraryMavenInitParameters_2) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryMavenInitParameters_2.
func (in *LibraryMavenInitParameters_2) DeepCopy() *LibraryMavenInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(LibraryMavenInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryMavenObservation) DeepCopyInto(out *LibraryMavenObservation) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryMavenObservation.
func (in *LibraryMavenObservation) DeepCopy() *LibraryMavenObservation {
	if in == nil {
		return nil
	}
	out := new(LibraryMavenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryMavenObservation_2) DeepCopyInto(out *LibraryMavenObservation_2) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryMavenObservation_2.
func (in *LibraryMavenObservation_2) DeepCopy() *LibraryMavenObservation_2 {
	if in == nil {
		return nil
	}
	out := new(LibraryMavenObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryMavenParameters) DeepCopyInto(out *LibraryMavenParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryMavenParameters.
func (in *LibraryMavenParameters) DeepCopy() *LibraryMavenParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryMavenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryMavenParameters_2) DeepCopyInto(out *LibraryMavenParameters_2) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryMavenParameters_2.
func (in *LibraryMavenParameters_2) DeepCopy() *LibraryMavenParameters_2 {
	if in == nil {
		return nil
	}
	out := new(LibraryMavenParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryNotebookInitParameters) DeepCopyInto(out *LibraryNotebookInitParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryNotebookInitParameters.
func (in *LibraryNotebookInitParameters) DeepCopy() *LibraryNotebookInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryNotebookInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryNotebookObservation) DeepCopyInto(out *LibraryNotebookObservation) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryNotebookObservation.
func (in *LibraryNotebookObservation) DeepCopy() *LibraryNotebookObservation {
	if in == nil {
		return nil
	}
	out := new(LibraryNotebookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryNotebookParameters) DeepCopyInto(out *LibraryNotebookParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryNotebookParameters.
func (in *LibraryNotebookParameters) DeepCopy() *LibraryNotebookParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryNotebookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryObservation) DeepCopyInto(out *LibraryObservation) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]CranObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]MavenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]PypiObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryObservation.
func (in *LibraryObservation) DeepCopy() *LibraryObservation {
	if in == nil {
		return nil
	}
	out := new(LibraryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryObservation_2) DeepCopyInto(out *LibraryObservation_2) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]LibraryCranObservation_2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]LibraryMavenObservation_2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]LibraryPypiObservation_2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryObservation_2.
func (in *LibraryObservation_2) DeepCopy() *LibraryObservation_2 {
	if in == nil {
		return nil
	}
	out := new(LibraryObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryParameters) DeepCopyInto(out *LibraryParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]CranParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]MavenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]PypiParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryParameters.
func (in *LibraryParameters) DeepCopy() *LibraryParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryParameters_2) DeepCopyInto(out *LibraryParameters_2) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]LibraryCranParameters_2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]LibraryMavenParameters_2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]LibraryPypiParameters_2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryParameters_2.
func (in *LibraryParameters_2) DeepCopy() *LibraryParameters_2 {
	if in == nil {
		return nil
	}
	out := new(LibraryParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryPypiInitParameters) DeepCopyInto(out *LibraryPypiInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryPypiInitParameters.
func (in *LibraryPypiInitParameters) DeepCopy() *LibraryPypiInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryPypiInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryPypiInitParameters_2) DeepCopyInto(out *LibraryPypiInitParameters_2) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryPypiInitParameters_2.
func (in *LibraryPypiInitParameters_2) DeepCopy() *LibraryPypiInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(LibraryPypiInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryPypiObservation) DeepCopyInto(out *LibraryPypiObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryPypiObservation.
func (in *LibraryPypiObservation) DeepCopy() *LibraryPypiObservation {
	if in == nil {
		return nil
	}
	out := new(LibraryPypiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryPypiObservation_2) DeepCopyInto(out *LibraryPypiObservation_2) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryPypiObservation_2.
func (in *LibraryPypiObservation_2) DeepCopy() *LibraryPypiObservation_2 {
	if in == nil {
		return nil
	}
	out := new(LibraryPypiObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryPypiParameters) DeepCopyInto(out *LibraryPypiParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryPypiParameters.
func (in *LibraryPypiParameters) DeepCopy() *LibraryPypiParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryPypiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryPypiParameters_2) DeepCopyInto(out *LibraryPypiParameters_2) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryPypiParameters_2.
func (in *LibraryPypiParameters_2) DeepCopy() *LibraryPypiParameters_2 {
	if in == nil {
		return nil
	}
	out := new(LibraryPypiParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibrarySpec) DeepCopyInto(out *LibrarySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibrarySpec.
func (in *LibrarySpec) DeepCopy() *LibrarySpec {
	if in == nil {
		return nil
	}
	out := new(LibrarySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryStatus) DeepCopyInto(out *LibraryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryStatus.
func (in *LibraryStatus) DeepCopy() *LibraryStatus {
	if in == nil {
		return nil
	}
	out := new(LibraryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogAnalyticsInfoInitParameters) DeepCopyInto(out *LogAnalyticsInfoInitParameters) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogAnalyticsInfoInitParameters.
func (in *LogAnalyticsInfoInitParameters) DeepCopy() *LogAnalyticsInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogAnalyticsInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogAnalyticsInfoObservation) DeepCopyInto(out *LogAnalyticsInfoObservation) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogAnalyticsInfoObservation.
func (in *LogAnalyticsInfoObservation) DeepCopy() *LogAnalyticsInfoObservation {
	if in == nil {
		return nil
	}
	out := new(LogAnalyticsInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogAnalyticsInfoParameters) DeepCopyInto(out *LogAnalyticsInfoParameters) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogAnalyticsInfoParameters.
func (in *LogAnalyticsInfoParameters) DeepCopy() *LogAnalyticsInfoParameters {
	if in == nil {
		return nil
	}
	out := new(LogAnalyticsInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowInitParameters) DeepCopyInto(out *MaintenanceWindowInitParameters) {
	*out = *in
	if in.WeekDayBasedSchedule != nil {
		in, out := &in.WeekDayBasedSchedule, &out.WeekDayBasedSchedule
		*out = make([]WeekDayBasedScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowInitParameters.
func (in *MaintenanceWindowInitParameters) DeepCopy() *MaintenanceWindowInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowObservation) DeepCopyInto(out *MaintenanceWindowObservation) {
	*out = *in
	if in.WeekDayBasedSchedule != nil {
		in, out := &in.WeekDayBasedSchedule, &out.WeekDayBasedSchedule
		*out = make([]WeekDayBasedScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowObservation.
func (in *MaintenanceWindowObservation) DeepCopy() *MaintenanceWindowObservation {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowParameters) DeepCopyInto(out *MaintenanceWindowParameters) {
	*out = *in
	if in.WeekDayBasedSchedule != nil {
		in, out := &in.WeekDayBasedSchedule, &out.WeekDayBasedSchedule
		*out = make([]WeekDayBasedScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowParameters.
func (in *MaintenanceWindowParameters) DeepCopy() *MaintenanceWindowParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManualInitParameters) DeepCopyInto(out *ManualInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManualInitParameters.
func (in *ManualInitParameters) DeepCopy() *ManualInitParameters {
	if in == nil {
		return nil
	}
	out := new(ManualInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManualObservation) DeepCopyInto(out *ManualObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManualObservation.
func (in *ManualObservation) DeepCopy() *ManualObservation {
	if in == nil {
		return nil
	}
	out := new(ManualObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManualParameters) DeepCopyInto(out *ManualParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManualParameters.
func (in *ManualParameters) DeepCopy() *ManualParameters {
	if in == nil {
		return nil
	}
	out := new(ManualParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MavenInitParameters) DeepCopyInto(out *MavenInitParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MavenInitParameters.
func (in *MavenInitParameters) DeepCopy() *MavenInitParameters {
	if in == nil {
		return nil
	}
	out := new(MavenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MavenObservation) DeepCopyInto(out *MavenObservation) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MavenObservation.
func (in *MavenObservation) DeepCopy() *MavenObservation {
	if in == nil {
		return nil
	}
	out := new(MavenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MavenParameters) DeepCopyInto(out *MavenParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MavenParameters.
func (in *MavenParameters) DeepCopy() *MavenParameters {
	if in == nil {
		return nil
	}
	out := new(MavenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Metastore) DeepCopyInto(out *Metastore) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Metastore.
func (in *Metastore) DeepCopy() *Metastore {
	if in == nil {
		return nil
	}
	out := new(Metastore)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Metastore) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreAssignment) DeepCopyInto(out *MetastoreAssignment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreAssignment.
func (in *MetastoreAssignment) DeepCopy() *MetastoreAssignment {
	if in == nil {
		return nil
	}
	out := new(MetastoreAssignment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MetastoreAssignment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreAssignmentInitParameters) DeepCopyInto(out *MetastoreAssignmentInitParameters) {
	*out = *in
	if in.DefaultCatalogName != nil {
		in, out := &in.DefaultCatalogName, &out.DefaultCatalogName
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreAssignmentInitParameters.
func (in *MetastoreAssignmentInitParameters) DeepCopy() *MetastoreAssignmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreAssignmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreAssignmentList) DeepCopyInto(out *MetastoreAssignmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MetastoreAssignment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreAssignmentList.
func (in *MetastoreAssignmentList) DeepCopy() *MetastoreAssignmentList {
	if in == nil {
		return nil
	}
	out := new(MetastoreAssignmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MetastoreAssignmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreAssignmentObservation) DeepCopyInto(out *MetastoreAssignmentObservation) {
	*out = *in
	if in.DefaultCatalogName != nil {
		in, out := &in.DefaultCatalogName, &out.DefaultCatalogName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreAssignmentObservation.
func (in *MetastoreAssignmentObservation) DeepCopy() *MetastoreAssignmentObservation {
	if in == nil {
		return nil
	}
	out := new(MetastoreAssignmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreAssignmentParameters) DeepCopyInto(out *MetastoreAssignmentParameters) {
	*out = *in
	if in.DefaultCatalogName != nil {
		in, out := &in.DefaultCatalogName, &out.DefaultCatalogName
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreAssignmentParameters.
func (in *MetastoreAssignmentParameters) DeepCopy() *MetastoreAssignmentParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreAssignmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreAssignmentSpec) DeepCopyInto(out *MetastoreAssignmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreAssignmentSpec.
func (in *MetastoreAssignmentSpec) DeepCopy() *MetastoreAssignmentSpec {
	if in == nil {
		return nil
	}
	out := new(MetastoreAssignmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreAssignmentStatus) DeepCopyInto(out *MetastoreAssignmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreAssignmentStatus.
func (in *MetastoreAssignmentStatus) DeepCopy() *MetastoreAssignmentStatus {
	if in == nil {
		return nil
	}
	out := new(MetastoreAssignmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreDataAccess) DeepCopyInto(out *MetastoreDataAccess) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreDataAccess.
func (in *MetastoreDataAccess) DeepCopy() *MetastoreDataAccess {
	if in == nil {
		return nil
	}
	out := new(MetastoreDataAccess)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MetastoreDataAccess) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreDataAccessInitParameters) DeepCopyInto(out *MetastoreDataAccessInitParameters) {
	*out = *in
	if in.AwsIAMRole != nil {
		in, out := &in.AwsIAMRole, &out.AwsIAMRole
		*out = make([]AwsIAMRoleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureManagedIdentity != nil {
		in, out := &in.AzureManagedIdentity, &out.AzureManagedIdentity
		*out = make([]AzureManagedIdentityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureServicePrincipal != nil {
		in, out := &in.AzureServicePrincipal, &out.AzureServicePrincipal
		*out = make([]AzureServicePrincipalInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudflareAPIToken != nil {
		in, out := &in.CloudflareAPIToken, &out.CloudflareAPIToken
		*out = make([]CloudflareAPITokenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DatabricksGCPServiceAccount != nil {
		in, out := &in.DatabricksGCPServiceAccount, &out.DatabricksGCPServiceAccount
		*out = make([]DatabricksGCPServiceAccountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ForceUpdate != nil {
		in, out := &in.ForceUpdate, &out.ForceUpdate
		*out = new(bool)
		**out = **in
	}
	if in.GCPServiceAccountKey != nil {
		in, out := &in.GCPServiceAccountKey, &out.GCPServiceAccountKey
		*out = make([]GCPServiceAccountKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SkipValidation != nil {
		in, out := &in.SkipValidation, &out.SkipValidation
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreDataAccessInitParameters.
func (in *MetastoreDataAccessInitParameters) DeepCopy() *MetastoreDataAccessInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreDataAccessInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreDataAccessList) DeepCopyInto(out *MetastoreDataAccessList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MetastoreDataAccess, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreDataAccessList.
func (in *MetastoreDataAccessList) DeepCopy() *MetastoreDataAccessList {
	if in == nil {
		return nil
	}
	out := new(MetastoreDataAccessList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MetastoreDataAccessList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreDataAccessObservation) DeepCopyInto(out *MetastoreDataAccessObservation) {
	*out = *in
	if in.AwsIAMRole != nil {
		in, out := &in.AwsIAMRole, &out.AwsIAMRole
		*out = make([]AwsIAMRoleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureManagedIdentity != nil {
		in, out := &in.AzureManagedIdentity, &out.AzureManagedIdentity
		*out = make([]AzureManagedIdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureServicePrincipal != nil {
		in, out := &in.AzureServicePrincipal, &out.AzureServicePrincipal
		*out = make([]AzureServicePrincipalObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudflareAPIToken != nil {
		in, out := &in.CloudflareAPIToken, &out.CloudflareAPIToken
		*out = make([]CloudflareAPITokenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DatabricksGCPServiceAccount != nil {
		in, out := &in.DatabricksGCPServiceAccount, &out.DatabricksGCPServiceAccount
		*out = make([]DatabricksGCPServiceAccountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ForceUpdate != nil {
		in, out := &in.ForceUpdate, &out.ForceUpdate
		*out = new(bool)
		**out = **in
	}
	if in.GCPServiceAccountKey != nil {
		in, out := &in.GCPServiceAccountKey, &out.GCPServiceAccountKey
		*out = make([]GCPServiceAccountKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SkipValidation != nil {
		in, out := &in.SkipValidation, &out.SkipValidation
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreDataAccessObservation.
func (in *MetastoreDataAccessObservation) DeepCopy() *MetastoreDataAccessObservation {
	if in == nil {
		return nil
	}
	out := new(MetastoreDataAccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreDataAccessParameters) DeepCopyInto(out *MetastoreDataAccessParameters) {
	*out = *in
	if in.AwsIAMRole != nil {
		in, out := &in.AwsIAMRole, &out.AwsIAMRole
		*out = make([]AwsIAMRoleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureManagedIdentity != nil {
		in, out := &in.AzureManagedIdentity, &out.AzureManagedIdentity
		*out = make([]AzureManagedIdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureServicePrincipal != nil {
		in, out := &in.AzureServicePrincipal, &out.AzureServicePrincipal
		*out = make([]AzureServicePrincipalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudflareAPIToken != nil {
		in, out := &in.CloudflareAPIToken, &out.CloudflareAPIToken
		*out = make([]CloudflareAPITokenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DatabricksGCPServiceAccount != nil {
		in, out := &in.DatabricksGCPServiceAccount, &out.DatabricksGCPServiceAccount
		*out = make([]DatabricksGCPServiceAccountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ForceUpdate != nil {
		in, out := &in.ForceUpdate, &out.ForceUpdate
		*out = new(bool)
		**out = **in
	}
	if in.GCPServiceAccountKey != nil {
		in, out := &in.GCPServiceAccountKey, &out.GCPServiceAccountKey
		*out = make([]GCPServiceAccountKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SkipValidation != nil {
		in, out := &in.SkipValidation, &out.SkipValidation
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreDataAccessParameters.
func (in *MetastoreDataAccessParameters) DeepCopy() *MetastoreDataAccessParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreDataAccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreDataAccessSpec) DeepCopyInto(out *MetastoreDataAccessSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreDataAccessSpec.
func (in *MetastoreDataAccessSpec) DeepCopy() *MetastoreDataAccessSpec {
	if in == nil {
		return nil
	}
	out := new(MetastoreDataAccessSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreDataAccessStatus) DeepCopyInto(out *MetastoreDataAccessStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreDataAccessStatus.
func (in *MetastoreDataAccessStatus) DeepCopy() *MetastoreDataAccessStatus {
	if in == nil {
		return nil
	}
	out := new(MetastoreDataAccessStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreInitParameters) DeepCopyInto(out *MetastoreInitParameters) {
	*out = *in
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.DefaultDataAccessConfigID != nil {
		in, out := &in.DefaultDataAccessConfigID, &out.DefaultDataAccessConfigID
		*out = new(string)
		**out = **in
	}
	if in.DeltaSharingOrganizationName != nil {
		in, out := &in.DeltaSharingOrganizationName, &out.DeltaSharingOrganizationName
		*out = new(string)
		**out = **in
	}
	if in.DeltaSharingRecipientTokenLifetimeInSeconds != nil {
		in, out := &in.DeltaSharingRecipientTokenLifetimeInSeconds, &out.DeltaSharingRecipientTokenLifetimeInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.DeltaSharingScope != nil {
		in, out := &in.DeltaSharingScope, &out.DeltaSharingScope
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.GlobalMetastoreID != nil {
		in, out := &in.GlobalMetastoreID, &out.GlobalMetastoreID
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
	if in.StorageRootCredentialID != nil {
		in, out := &in.StorageRootCredentialID, &out.StorageRootCredentialID
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedBy != nil {
		in, out := &in.UpdatedBy, &out.UpdatedBy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreInitParameters.
func (in *MetastoreInitParameters) DeepCopy() *MetastoreInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreList) DeepCopyInto(out *MetastoreList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Metastore, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreList.
func (in *MetastoreList) DeepCopy() *MetastoreList {
	if in == nil {
		return nil
	}
	out := new(MetastoreList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MetastoreList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreObservation) DeepCopyInto(out *MetastoreObservation) {
	*out = *in
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.DefaultDataAccessConfigID != nil {
		in, out := &in.DefaultDataAccessConfigID, &out.DefaultDataAccessConfigID
		*out = new(string)
		**out = **in
	}
	if in.DeltaSharingOrganizationName != nil {
		in, out := &in.DeltaSharingOrganizationName, &out.DeltaSharingOrganizationName
		*out = new(string)
		**out = **in
	}
	if in.DeltaSharingRecipientTokenLifetimeInSeconds != nil {
		in, out := &in.DeltaSharingRecipientTokenLifetimeInSeconds, &out.DeltaSharingRecipientTokenLifetimeInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.DeltaSharingScope != nil {
		in, out := &in.DeltaSharingScope, &out.DeltaSharingScope
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.GlobalMetastoreID != nil {
		in, out := &in.GlobalMetastoreID, &out.GlobalMetastoreID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
	if in.StorageRootCredentialID != nil {
		in, out := &in.StorageRootCredentialID, &out.StorageRootCredentialID
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedBy != nil {
		in, out := &in.UpdatedBy, &out.UpdatedBy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreObservation.
func (in *MetastoreObservation) DeepCopy() *MetastoreObservation {
	if in == nil {
		return nil
	}
	out := new(MetastoreObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreParameters) DeepCopyInto(out *MetastoreParameters) {
	*out = *in
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.DefaultDataAccessConfigID != nil {
		in, out := &in.DefaultDataAccessConfigID, &out.DefaultDataAccessConfigID
		*out = new(string)
		**out = **in
	}
	if in.DeltaSharingOrganizationName != nil {
		in, out := &in.DeltaSharingOrganizationName, &out.DeltaSharingOrganizationName
		*out = new(string)
		**out = **in
	}
	if in.DeltaSharingRecipientTokenLifetimeInSeconds != nil {
		in, out := &in.DeltaSharingRecipientTokenLifetimeInSeconds, &out.DeltaSharingRecipientTokenLifetimeInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.DeltaSharingScope != nil {
		in, out := &in.DeltaSharingScope, &out.DeltaSharingScope
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.GlobalMetastoreID != nil {
		in, out := &in.GlobalMetastoreID, &out.GlobalMetastoreID
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
	if in.StorageRootCredentialID != nil {
		in, out := &in.StorageRootCredentialID, &out.StorageRootCredentialID
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedBy != nil {
		in, out := &in.UpdatedBy, &out.UpdatedBy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreParameters.
func (in *MetastoreParameters) DeepCopy() *MetastoreParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreSpec) DeepCopyInto(out *MetastoreSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreSpec.
func (in *MetastoreSpec) DeepCopy() *MetastoreSpec {
	if in == nil {
		return nil
	}
	out := new(MetastoreSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreStatus) DeepCopyInto(out *MetastoreStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreStatus.
func (in *MetastoreStatus) DeepCopy() *MetastoreStatus {
	if in == nil {
		return nil
	}
	out := new(MetastoreStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MicrosoftTeamsInitParameters) DeepCopyInto(out *MicrosoftTeamsInitParameters) {
	*out = *in
	if in.URLSecretRef != nil {
		in, out := &in.URLSecretRef, &out.URLSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.URLSet != nil {
		in, out := &in.URLSet, &out.URLSet
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MicrosoftTeamsInitParameters.
func (in *MicrosoftTeamsInitParameters) DeepCopy() *MicrosoftTeamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MicrosoftTeamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MicrosoftTeamsObservation) DeepCopyInto(out *MicrosoftTeamsObservation) {
	*out = *in
	if in.URLSet != nil {
		in, out := &in.URLSet, &out.URLSet
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MicrosoftTeamsObservation.
func (in *MicrosoftTeamsObservation) DeepCopy() *MicrosoftTeamsObservation {
	if in == nil {
		return nil
	}
	out := new(MicrosoftTeamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MicrosoftTeamsParameters) DeepCopyInto(out *MicrosoftTeamsParameters) {
	*out = *in
	if in.URLSecretRef != nil {
		in, out := &in.URLSecretRef, &out.URLSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.URLSet != nil {
		in, out := &in.URLSet, &out.URLSet
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MicrosoftTeamsParameters.
func (in *MicrosoftTeamsParameters) DeepCopy() *MicrosoftTeamsParameters {
	if in == nil {
		return nil
	}
	out := new(MicrosoftTeamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MlflowExperiment) DeepCopyInto(out *MlflowExperiment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MlflowExperiment.
func (in *MlflowExperiment) DeepCopy() *MlflowExperiment {
	if in == nil {
		return nil
	}
	out := new(MlflowExperiment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MlflowExperiment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MlflowExperimentInitParameters) DeepCopyInto(out *MlflowExperimentInitParameters) {
	*out = *in
	if in.ArtifactLocation != nil {
		in, out := &in.ArtifactLocation, &out.ArtifactLocation
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExperimentID != nil {
		in, out := &in.ExperimentID, &out.ExperimentID
		*out = new(string)
		**out = **in
	}
	if in.LastUpdateTime != nil {
		in, out := &in.LastUpdateTime, &out.LastUpdateTime
		*out = new(float64)
		**out = **in
	}
	if in.LifecycleStage != nil {
		in, out := &in.LifecycleStage, &out.LifecycleStage
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MlflowExperimentInitParameters.
func (in *MlflowExperimentInitParameters) DeepCopy() *MlflowExperimentInitParameters {
	if in == nil {
		return nil
	}
	out := new(MlflowExperimentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MlflowExperimentList) DeepCopyInto(out *MlflowExperimentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MlflowExperiment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MlflowExperimentList.
func (in *MlflowExperimentList) DeepCopy() *MlflowExperimentList {
	if in == nil {
		return nil
	}
	out := new(MlflowExperimentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MlflowExperimentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MlflowExperimentObservation) DeepCopyInto(out *MlflowExperimentObservation) {
	*out = *in
	if in.ArtifactLocation != nil {
		in, out := &in.ArtifactLocation, &out.ArtifactLocation
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExperimentID != nil {
		in, out := &in.ExperimentID, &out.ExperimentID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LastUpdateTime != nil {
		in, out := &in.LastUpdateTime, &out.LastUpdateTime
		*out = new(float64)
		**out = **in
	}
	if in.LifecycleStage != nil {
		in, out := &in.LifecycleStage, &out.LifecycleStage
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MlflowExperimentObservation.
func (in *MlflowExperimentObservation) DeepCopy() *MlflowExperimentObservation {
	if in == nil {
		return nil
	}
	out := new(MlflowExperimentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MlflowExperimentParameters) DeepCopyInto(out *MlflowExperimentParameters) {
	*out = *in
	if in.ArtifactLocation != nil {
		in, out := &in.ArtifactLocation, &out.ArtifactLocation
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExperimentID != nil {
		in, out := &in.ExperimentID, &out.ExperimentID
		*out = new(string)
		**out = **in
	}
	if in.LastUpdateTime != nil {
		in, out := &in.LastUpdateTime, &out.LastUpdateTime
		*out = new(float64)
		**out = **in
	}
	if in.LifecycleStage != nil {
		in, out := &in.LifecycleStage, &out.LifecycleStage
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MlflowExperimentParameters.
func (in *MlflowExperimentParameters) DeepCopy() *MlflowExperimentParameters {
	if in == nil {
		return nil
	}
	out := new(MlflowExperimentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MlflowExperimentSpec) DeepCopyInto(out *MlflowExperimentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MlflowExperimentSpec.
func (in *MlflowExperimentSpec) DeepCopy() *MlflowExperimentSpec {
	if in == nil {
		return nil
	}
	out := new(MlflowExperimentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MlflowExperimentStatus) DeepCopyInto(out *MlflowExperimentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MlflowExperimentStatus.
func (in *MlflowExperimentStatus) DeepCopy() *MlflowExperimentStatus {
	if in == nil {
		return nil
	}
	out := new(MlflowExperimentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MlflowModel) DeepCopyInto(out *MlflowModel) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MlflowModel.
func (in *MlflowModel) DeepCopy() *MlflowModel {
	if in == nil {
		return nil
	}
	out := new(MlflowModel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MlflowModel) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MlflowModelInitParameters) DeepCopyInto(out *MlflowModelInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]MlflowModelTagsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MlflowModelInitParameters.
func (in *MlflowModelInitParameters) DeepCopy() *MlflowModelInitParameters {
	if in == nil {
		return nil
	}
	out := new(MlflowModelInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MlflowModelList) DeepCopyInto(out *MlflowModelList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MlflowModel, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MlflowModelList.
func (in *MlflowModelList) DeepCopy() *MlflowModelList {
	if in == nil {
		return nil
	}
	out := new(MlflowModelList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MlflowModelList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MlflowModelObservation) DeepCopyInto(out *MlflowModelObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegisteredModelID != nil {
		in, out := &in.RegisteredModelID, &out.RegisteredModelID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]MlflowModelTagsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MlflowModelObservation.
func (in *MlflowModelObservation) DeepCopy() *MlflowModelObservation {
	if in == nil {
		return nil
	}
	out := new(MlflowModelObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MlflowModelParameters) DeepCopyInto(out *MlflowModelParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]MlflowModelTagsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MlflowModelParameters.
func (in *MlflowModelParameters) DeepCopy() *MlflowModelParameters {
	if in == nil {
		return nil
	}
	out := new(MlflowModelParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MlflowModelSpec) DeepCopyInto(out *MlflowModelSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MlflowModelSpec.
func (in *MlflowModelSpec) DeepCopy() *MlflowModelSpec {
	if in == nil {
		return nil
	}
	out := new(MlflowModelSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MlflowModelStatus) DeepCopyInto(out *MlflowModelStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MlflowModelStatus.
func (in *MlflowModelStatus) DeepCopy() *MlflowModelStatus {
	if in == nil {
		return nil
	}
	out := new(MlflowModelStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MlflowModelTagsInitParameters) DeepCopyInto(out *MlflowModelTagsInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MlflowModelTagsInitParameters.
func (in *MlflowModelTagsInitParameters) DeepCopy() *MlflowModelTagsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MlflowModelTagsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MlflowModelTagsObservation) DeepCopyInto(out *MlflowModelTagsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MlflowModelTagsObservation.
func (in *MlflowModelTagsObservation) DeepCopy() *MlflowModelTagsObservation {
	if in == nil {
		return nil
	}
	out := new(MlflowModelTagsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MlflowModelTagsParameters) DeepCopyInto(out *MlflowModelTagsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MlflowModelTagsParameters.
func (in *MlflowModelTagsParameters) DeepCopy() *MlflowModelTagsParameters {
	if in == nil {
		return nil
	}
	out := new(MlflowModelTagsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelServing) DeepCopyInto(out *ModelServing) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelServing.
func (in *ModelServing) DeepCopy() *ModelServing {
	if in == nil {
		return nil
	}
	out := new(ModelServing)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ModelServing) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelServingInitParameters) DeepCopyInto(out *ModelServingInitParameters) {
	*out = *in
	if in.AIGateway != nil {
		in, out := &in.AIGateway, &out.AIGateway
		*out = make([]AIGatewayInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RateLimits != nil {
		in, out := &in.RateLimits, &out.RateLimits
		*out = make([]ModelServingRateLimitsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RouteOptimized != nil {
		in, out := &in.RouteOptimized, &out.RouteOptimized
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]ModelServingTagsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelServingInitParameters.
func (in *ModelServingInitParameters) DeepCopy() *ModelServingInitParameters {
	if in == nil {
		return nil
	}
	out := new(ModelServingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelServingList) DeepCopyInto(out *ModelServingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ModelServing, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelServingList.
func (in *ModelServingList) DeepCopy() *ModelServingList {
	if in == nil {
		return nil
	}
	out := new(ModelServingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ModelServingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelServingObservation) DeepCopyInto(out *ModelServingObservation) {
	*out = *in
	if in.AIGateway != nil {
		in, out := &in.AIGateway, &out.AIGateway
		*out = make([]AIGatewayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RateLimits != nil {
		in, out := &in.RateLimits, &out.RateLimits
		*out = make([]ModelServingRateLimitsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RouteOptimized != nil {
		in, out := &in.RouteOptimized, &out.RouteOptimized
		*out = new(bool)
		**out = **in
	}
	if in.ServingEndpointID != nil {
		in, out := &in.ServingEndpointID, &out.ServingEndpointID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]ModelServingTagsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelServingObservation.
func (in *ModelServingObservation) DeepCopy() *ModelServingObservation {
	if in == nil {
		return nil
	}
	out := new(ModelServingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelServingParameters) DeepCopyInto(out *ModelServingParameters) {
	*out = *in
	if in.AIGateway != nil {
		in, out := &in.AIGateway, &out.AIGateway
		*out = make([]AIGatewayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RateLimits != nil {
		in, out := &in.RateLimits, &out.RateLimits
		*out = make([]ModelServingRateLimitsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RouteOptimized != nil {
		in, out := &in.RouteOptimized, &out.RouteOptimized
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]ModelServingTagsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelServingParameters.
func (in *ModelServingParameters) DeepCopy() *ModelServingParameters {
	if in == nil {
		return nil
	}
	out := new(ModelServingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelServingRateLimitsInitParameters) DeepCopyInto(out *ModelServingRateLimitsInitParameters) {
	*out = *in
	if in.Calls != nil {
		in, out := &in.Calls, &out.Calls
		*out = new(float64)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.RenewalPeriod != nil {
		in, out := &in.RenewalPeriod, &out.RenewalPeriod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelServingRateLimitsInitParameters.
func (in *ModelServingRateLimitsInitParameters) DeepCopy() *ModelServingRateLimitsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ModelServingRateLimitsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelServingRateLimitsObservation) DeepCopyInto(out *ModelServingRateLimitsObservation) {
	*out = *in
	if in.Calls != nil {
		in, out := &in.Calls, &out.Calls
		*out = new(float64)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.RenewalPeriod != nil {
		in, out := &in.RenewalPeriod, &out.RenewalPeriod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelServingRateLimitsObservation.
func (in *ModelServingRateLimitsObservation) DeepCopy() *ModelServingRateLimitsObservation {
	if in == nil {
		return nil
	}
	out := new(ModelServingRateLimitsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelServingRateLimitsParameters) DeepCopyInto(out *ModelServingRateLimitsParameters) {
	*out = *in
	if in.Calls != nil {
		in, out := &in.Calls, &out.Calls
		*out = new(float64)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.RenewalPeriod != nil {
		in, out := &in.RenewalPeriod, &out.RenewalPeriod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelServingRateLimitsParameters.
func (in *ModelServingRateLimitsParameters) DeepCopy() *ModelServingRateLimitsParameters {
	if in == nil {
		return nil
	}
	out := new(ModelServingRateLimitsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelServingSpec) DeepCopyInto(out *ModelServingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelServingSpec.
func (in *ModelServingSpec) DeepCopy() *ModelServingSpec {
	if in == nil {
		return nil
	}
	out := new(ModelServingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelServingStatus) DeepCopyInto(out *ModelServingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelServingStatus.
func (in *ModelServingStatus) DeepCopy() *ModelServingStatus {
	if in == nil {
		return nil
	}
	out := new(ModelServingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelServingTagsInitParameters) DeepCopyInto(out *ModelServingTagsInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelServingTagsInitParameters.
func (in *ModelServingTagsInitParameters) DeepCopy() *ModelServingTagsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ModelServingTagsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelServingTagsObservation) DeepCopyInto(out *ModelServingTagsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelServingTagsObservation.
func (in *ModelServingTagsObservation) DeepCopy() *ModelServingTagsObservation {
	if in == nil {
		return nil
	}
	out := new(ModelServingTagsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelServingTagsParameters) DeepCopyInto(out *ModelServingTagsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelServingTagsParameters.
func (in *ModelServingTagsParameters) DeepCopy() *ModelServingTagsParameters {
	if in == nil {
		return nil
	}
	out := new(ModelServingTagsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Mount) DeepCopyInto(out *Mount) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Mount.
func (in *Mount) DeepCopy() *Mount {
	if in == nil {
		return nil
	}
	out := new(Mount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Mount) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MountInitParameters) DeepCopyInto(out *MountInitParameters) {
	*out = *in
	if in.Abfs != nil {
		in, out := &in.Abfs, &out.Abfs
		*out = make([]AbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Adl != nil {
		in, out := &in.Adl, &out.Adl
		*out = make([]AdlInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.ExtraConfigs != nil {
		in, out := &in.ExtraConfigs, &out.ExtraConfigs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Gs != nil {
		in, out := &in.Gs, &out.Gs
		*out = make([]GsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]MountS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
	if in.Wasb != nil {
		in, out := &in.Wasb, &out.Wasb
		*out = make([]WasbInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MountInitParameters.
func (in *MountInitParameters) DeepCopy() *MountInitParameters {
	if in == nil {
		return nil
	}
	out := new(MountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MountList) DeepCopyInto(out *MountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Mount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MountList.
func (in *MountList) DeepCopy() *MountList {
	if in == nil {
		return nil
	}
	out := new(MountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MountObservation) DeepCopyInto(out *MountObservation) {
	*out = *in
	if in.Abfs != nil {
		in, out := &in.Abfs, &out.Abfs
		*out = make([]AbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Adl != nil {
		in, out := &in.Adl, &out.Adl
		*out = make([]AdlObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.ExtraConfigs != nil {
		in, out := &in.ExtraConfigs, &out.ExtraConfigs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Gs != nil {
		in, out := &in.Gs, &out.Gs
		*out = make([]GsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]MountS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
	if in.Wasb != nil {
		in, out := &in.Wasb, &out.Wasb
		*out = make([]WasbObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MountObservation.
func (in *MountObservation) DeepCopy() *MountObservation {
	if in == nil {
		return nil
	}
	out := new(MountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MountParameters) DeepCopyInto(out *MountParameters) {
	*out = *in
	if in.Abfs != nil {
		in, out := &in.Abfs, &out.Abfs
		*out = make([]AbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Adl != nil {
		in, out := &in.Adl, &out.Adl
		*out = make([]AdlParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.ExtraConfigs != nil {
		in, out := &in.ExtraConfigs, &out.ExtraConfigs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Gs != nil {
		in, out := &in.Gs, &out.Gs
		*out = make([]GsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]MountS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
	if in.Wasb != nil {
		in, out := &in.Wasb, &out.Wasb
		*out = make([]WasbParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MountParameters.
func (in *MountParameters) DeepCopy() *MountParameters {
	if in == nil {
		return nil
	}
	out := new(MountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MountS3InitParameters) DeepCopyInto(out *MountS3InitParameters) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.InstanceProfile != nil {
		in, out := &in.InstanceProfile, &out.InstanceProfile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MountS3InitParameters.
func (in *MountS3InitParameters) DeepCopy() *MountS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(MountS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MountS3Observation) DeepCopyInto(out *MountS3Observation) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.InstanceProfile != nil {
		in, out := &in.InstanceProfile, &out.InstanceProfile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MountS3Observation.
func (in *MountS3Observation) DeepCopy() *MountS3Observation {
	if in == nil {
		return nil
	}
	out := new(MountS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MountS3Parameters) DeepCopyInto(out *MountS3Parameters) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.InstanceProfile != nil {
		in, out := &in.InstanceProfile, &out.InstanceProfile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MountS3Parameters.
func (in *MountS3Parameters) DeepCopy() *MountS3Parameters {
	if in == nil {
		return nil
	}
	out := new(MountS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MountSpec) DeepCopyInto(out *MountSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MountSpec.
func (in *MountSpec) DeepCopy() *MountSpec {
	if in == nil {
		return nil
	}
	out := new(MountSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MountStatus) DeepCopyInto(out *MountStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MountStatus.
func (in *MountStatus) DeepCopy() *MountStatus {
	if in == nil {
		return nil
	}
	out := new(MountStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultiValuesOptionsInitParameters) DeepCopyInto(out *MultiValuesOptionsInitParameters) {
	*out = *in
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.Suffix != nil {
		in, out := &in.Suffix, &out.Suffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultiValuesOptionsInitParameters.
func (in *MultiValuesOptionsInitParameters) DeepCopy() *MultiValuesOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MultiValuesOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultiValuesOptionsObservation) DeepCopyInto(out *MultiValuesOptionsObservation) {
	*out = *in
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.Suffix != nil {
		in, out := &in.Suffix, &out.Suffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultiValuesOptionsObservation.
func (in *MultiValuesOptionsObservation) DeepCopy() *MultiValuesOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(MultiValuesOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultiValuesOptionsParameters) DeepCopyInto(out *MultiValuesOptionsParameters) {
	*out = *in
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.Suffix != nil {
		in, out := &in.Suffix, &out.Suffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultiValuesOptionsParameters.
func (in *MultiValuesOptionsParameters) DeepCopy() *MultiValuesOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(MultiValuesOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultipleInitParameters) DeepCopyInto(out *MultipleInitParameters) {
	*out = *in
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.Suffix != nil {
		in, out := &in.Suffix, &out.Suffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultipleInitParameters.
func (in *MultipleInitParameters) DeepCopy() *MultipleInitParameters {
	if in == nil {
		return nil
	}
	out := new(MultipleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultipleObservation) DeepCopyInto(out *MultipleObservation) {
	*out = *in
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.Suffix != nil {
		in, out := &in.Suffix, &out.Suffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultipleObservation.
func (in *MultipleObservation) DeepCopy() *MultipleObservation {
	if in == nil {
		return nil
	}
	out := new(MultipleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultipleParameters) DeepCopyInto(out *MultipleParameters) {
	*out = *in
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.Suffix != nil {
		in, out := &in.Suffix, &out.Suffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultipleParameters.
func (in *MultipleParameters) DeepCopy() *MultipleParameters {
	if in == nil {
		return nil
	}
	out := new(MultipleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsCredentials) DeepCopyInto(out *MwsCredentials) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsCredentials.
func (in *MwsCredentials) DeepCopy() *MwsCredentials {
	if in == nil {
		return nil
	}
	out := new(MwsCredentials)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MwsCredentials) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsCredentialsInitParameters) DeepCopyInto(out *MwsCredentialsInitParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.CredentialsID != nil {
		in, out := &in.CredentialsID, &out.CredentialsID
		*out = new(string)
		**out = **in
	}
	if in.CredentialsName != nil {
		in, out := &in.CredentialsName, &out.CredentialsName
		*out = new(string)
		**out = **in
	}
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsCredentialsInitParameters.
func (in *MwsCredentialsInitParameters) DeepCopy() *MwsCredentialsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MwsCredentialsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsCredentialsList) DeepCopyInto(out *MwsCredentialsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MwsCredentials, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsCredentialsList.
func (in *MwsCredentialsList) DeepCopy() *MwsCredentialsList {
	if in == nil {
		return nil
	}
	out := new(MwsCredentialsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MwsCredentialsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsCredentialsObservation) DeepCopyInto(out *MwsCredentialsObservation) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.CredentialsID != nil {
		in, out := &in.CredentialsID, &out.CredentialsID
		*out = new(string)
		**out = **in
	}
	if in.CredentialsName != nil {
		in, out := &in.CredentialsName, &out.CredentialsName
		*out = new(string)
		**out = **in
	}
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsCredentialsObservation.
func (in *MwsCredentialsObservation) DeepCopy() *MwsCredentialsObservation {
	if in == nil {
		return nil
	}
	out := new(MwsCredentialsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsCredentialsParameters) DeepCopyInto(out *MwsCredentialsParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.CredentialsID != nil {
		in, out := &in.CredentialsID, &out.CredentialsID
		*out = new(string)
		**out = **in
	}
	if in.CredentialsName != nil {
		in, out := &in.CredentialsName, &out.CredentialsName
		*out = new(string)
		**out = **in
	}
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsCredentialsParameters.
func (in *MwsCredentialsParameters) DeepCopy() *MwsCredentialsParameters {
	if in == nil {
		return nil
	}
	out := new(MwsCredentialsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsCredentialsSpec) DeepCopyInto(out *MwsCredentialsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsCredentialsSpec.
func (in *MwsCredentialsSpec) DeepCopy() *MwsCredentialsSpec {
	if in == nil {
		return nil
	}
	out := new(MwsCredentialsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsCredentialsStatus) DeepCopyInto(out *MwsCredentialsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsCredentialsStatus.
func (in *MwsCredentialsStatus) DeepCopy() *MwsCredentialsStatus {
	if in == nil {
		return nil
	}
	out := new(MwsCredentialsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsCustomerManagedKeys) DeepCopyInto(out *MwsCustomerManagedKeys) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsCustomerManagedKeys.
func (in *MwsCustomerManagedKeys) DeepCopy() *MwsCustomerManagedKeys {
	if in == nil {
		return nil
	}
	out := new(MwsCustomerManagedKeys)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MwsCustomerManagedKeys) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsCustomerManagedKeysInitParameters) DeepCopyInto(out *MwsCustomerManagedKeysInitParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.AwsKeyInfo != nil {
		in, out := &in.AwsKeyInfo, &out.AwsKeyInfo
		*out = make([]AwsKeyInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.CustomerManagedKeyID != nil {
		in, out := &in.CustomerManagedKeyID, &out.CustomerManagedKeyID
		*out = new(string)
		**out = **in
	}
	if in.GCPKeyInfo != nil {
		in, out := &in.GCPKeyInfo, &out.GCPKeyInfo
		*out = make([]GCPKeyInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UseCases != nil {
		in, out := &in.UseCases, &out.UseCases
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsCustomerManagedKeysInitParameters.
func (in *MwsCustomerManagedKeysInitParameters) DeepCopy() *MwsCustomerManagedKeysInitParameters {
	if in == nil {
		return nil
	}
	out := new(MwsCustomerManagedKeysInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsCustomerManagedKeysList) DeepCopyInto(out *MwsCustomerManagedKeysList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MwsCustomerManagedKeys, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsCustomerManagedKeysList.
func (in *MwsCustomerManagedKeysList) DeepCopy() *MwsCustomerManagedKeysList {
	if in == nil {
		return nil
	}
	out := new(MwsCustomerManagedKeysList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MwsCustomerManagedKeysList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsCustomerManagedKeysObservation) DeepCopyInto(out *MwsCustomerManagedKeysObservation) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.AwsKeyInfo != nil {
		in, out := &in.AwsKeyInfo, &out.AwsKeyInfo
		*out = make([]AwsKeyInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.CustomerManagedKeyID != nil {
		in, out := &in.CustomerManagedKeyID, &out.CustomerManagedKeyID
		*out = new(string)
		**out = **in
	}
	if in.GCPKeyInfo != nil {
		in, out := &in.GCPKeyInfo, &out.GCPKeyInfo
		*out = make([]GCPKeyInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.UseCases != nil {
		in, out := &in.UseCases, &out.UseCases
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsCustomerManagedKeysObservation.
func (in *MwsCustomerManagedKeysObservation) DeepCopy() *MwsCustomerManagedKeysObservation {
	if in == nil {
		return nil
	}
	out := new(MwsCustomerManagedKeysObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsCustomerManagedKeysParameters) DeepCopyInto(out *MwsCustomerManagedKeysParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.AwsKeyInfo != nil {
		in, out := &in.AwsKeyInfo, &out.AwsKeyInfo
		*out = make([]AwsKeyInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.CustomerManagedKeyID != nil {
		in, out := &in.CustomerManagedKeyID, &out.CustomerManagedKeyID
		*out = new(string)
		**out = **in
	}
	if in.GCPKeyInfo != nil {
		in, out := &in.GCPKeyInfo, &out.GCPKeyInfo
		*out = make([]GCPKeyInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UseCases != nil {
		in, out := &in.UseCases, &out.UseCases
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsCustomerManagedKeysParameters.
func (in *MwsCustomerManagedKeysParameters) DeepCopy() *MwsCustomerManagedKeysParameters {
	if in == nil {
		return nil
	}
	out := new(MwsCustomerManagedKeysParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsCustomerManagedKeysSpec) DeepCopyInto(out *MwsCustomerManagedKeysSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsCustomerManagedKeysSpec.
func (in *MwsCustomerManagedKeysSpec) DeepCopy() *MwsCustomerManagedKeysSpec {
	if in == nil {
		return nil
	}
	out := new(MwsCustomerManagedKeysSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsCustomerManagedKeysStatus) DeepCopyInto(out *MwsCustomerManagedKeysStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsCustomerManagedKeysStatus.
func (in *MwsCustomerManagedKeysStatus) DeepCopy() *MwsCustomerManagedKeysStatus {
	if in == nil {
		return nil
	}
	out := new(MwsCustomerManagedKeysStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsLogDelivery) DeepCopyInto(out *MwsLogDelivery) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsLogDelivery.
func (in *MwsLogDelivery) DeepCopy() *MwsLogDelivery {
	if in == nil {
		return nil
	}
	out := new(MwsLogDelivery)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MwsLogDelivery) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsLogDeliveryInitParameters) DeepCopyInto(out *MwsLogDeliveryInitParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.ConfigID != nil {
		in, out := &in.ConfigID, &out.ConfigID
		*out = new(string)
		**out = **in
	}
	if in.ConfigName != nil {
		in, out := &in.ConfigName, &out.ConfigName
		*out = new(string)
		**out = **in
	}
	if in.CredentialsID != nil {
		in, out := &in.CredentialsID, &out.CredentialsID
		*out = new(string)
		**out = **in
	}
	if in.DeliveryPathPrefix != nil {
		in, out := &in.DeliveryPathPrefix, &out.DeliveryPathPrefix
		*out = new(string)
		**out = **in
	}
	if in.DeliveryStartTime != nil {
		in, out := &in.DeliveryStartTime, &out.DeliveryStartTime
		*out = new(string)
		**out = **in
	}
	if in.LogType != nil {
		in, out := &in.LogType, &out.LogType
		*out = new(string)
		**out = **in
	}
	if in.OutputFormat != nil {
		in, out := &in.OutputFormat, &out.OutputFormat
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StorageConfigurationID != nil {
		in, out := &in.StorageConfigurationID, &out.StorageConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceIdsFilter != nil {
		in, out := &in.WorkspaceIdsFilter, &out.WorkspaceIdsFilter
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsLogDeliveryInitParameters.
func (in *MwsLogDeliveryInitParameters) DeepCopy() *MwsLogDeliveryInitParameters {
	if in == nil {
		return nil
	}
	out := new(MwsLogDeliveryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsLogDeliveryList) DeepCopyInto(out *MwsLogDeliveryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MwsLogDelivery, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsLogDeliveryList.
func (in *MwsLogDeliveryList) DeepCopy() *MwsLogDeliveryList {
	if in == nil {
		return nil
	}
	out := new(MwsLogDeliveryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MwsLogDeliveryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsLogDeliveryObservation) DeepCopyInto(out *MwsLogDeliveryObservation) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.ConfigID != nil {
		in, out := &in.ConfigID, &out.ConfigID
		*out = new(string)
		**out = **in
	}
	if in.ConfigName != nil {
		in, out := &in.ConfigName, &out.ConfigName
		*out = new(string)
		**out = **in
	}
	if in.CredentialsID != nil {
		in, out := &in.CredentialsID, &out.CredentialsID
		*out = new(string)
		**out = **in
	}
	if in.DeliveryPathPrefix != nil {
		in, out := &in.DeliveryPathPrefix, &out.DeliveryPathPrefix
		*out = new(string)
		**out = **in
	}
	if in.DeliveryStartTime != nil {
		in, out := &in.DeliveryStartTime, &out.DeliveryStartTime
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LogType != nil {
		in, out := &in.LogType, &out.LogType
		*out = new(string)
		**out = **in
	}
	if in.OutputFormat != nil {
		in, out := &in.OutputFormat, &out.OutputFormat
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StorageConfigurationID != nil {
		in, out := &in.StorageConfigurationID, &out.StorageConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceIdsFilter != nil {
		in, out := &in.WorkspaceIdsFilter, &out.WorkspaceIdsFilter
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsLogDeliveryObservation.
func (in *MwsLogDeliveryObservation) DeepCopy() *MwsLogDeliveryObservation {
	if in == nil {
		return nil
	}
	out := new(MwsLogDeliveryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsLogDeliveryParameters) DeepCopyInto(out *MwsLogDeliveryParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.ConfigID != nil {
		in, out := &in.ConfigID, &out.ConfigID
		*out = new(string)
		**out = **in
	}
	if in.ConfigName != nil {
		in, out := &in.ConfigName, &out.ConfigName
		*out = new(string)
		**out = **in
	}
	if in.CredentialsID != nil {
		in, out := &in.CredentialsID, &out.CredentialsID
		*out = new(string)
		**out = **in
	}
	if in.DeliveryPathPrefix != nil {
		in, out := &in.DeliveryPathPrefix, &out.DeliveryPathPrefix
		*out = new(string)
		**out = **in
	}
	if in.DeliveryStartTime != nil {
		in, out := &in.DeliveryStartTime, &out.DeliveryStartTime
		*out = new(string)
		**out = **in
	}
	if in.LogType != nil {
		in, out := &in.LogType, &out.LogType
		*out = new(string)
		**out = **in
	}
	if in.OutputFormat != nil {
		in, out := &in.OutputFormat, &out.OutputFormat
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StorageConfigurationID != nil {
		in, out := &in.StorageConfigurationID, &out.StorageConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceIdsFilter != nil {
		in, out := &in.WorkspaceIdsFilter, &out.WorkspaceIdsFilter
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsLogDeliveryParameters.
func (in *MwsLogDeliveryParameters) DeepCopy() *MwsLogDeliveryParameters {
	if in == nil {
		return nil
	}
	out := new(MwsLogDeliveryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsLogDeliverySpec) DeepCopyInto(out *MwsLogDeliverySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsLogDeliverySpec.
func (in *MwsLogDeliverySpec) DeepCopy() *MwsLogDeliverySpec {
	if in == nil {
		return nil
	}
	out := new(MwsLogDeliverySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsLogDeliveryStatus) DeepCopyInto(out *MwsLogDeliveryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsLogDeliveryStatus.
func (in *MwsLogDeliveryStatus) DeepCopy() *MwsLogDeliveryStatus {
	if in == nil {
		return nil
	}
	out := new(MwsLogDeliveryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsNccBinding) DeepCopyInto(out *MwsNccBinding) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsNccBinding.
func (in *MwsNccBinding) DeepCopy() *MwsNccBinding {
	if in == nil {
		return nil
	}
	out := new(MwsNccBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MwsNccBinding) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsNccBindingInitParameters) DeepCopyInto(out *MwsNccBindingInitParameters) {
	*out = *in
	if in.NetworkConnectivityConfigID != nil {
		in, out := &in.NetworkConnectivityConfigID, &out.NetworkConnectivityConfigID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsNccBindingInitParameters.
func (in *MwsNccBindingInitParameters) DeepCopy() *MwsNccBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(MwsNccBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsNccBindingList) DeepCopyInto(out *MwsNccBindingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MwsNccBinding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsNccBindingList.
func (in *MwsNccBindingList) DeepCopy() *MwsNccBindingList {
	if in == nil {
		return nil
	}
	out := new(MwsNccBindingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MwsNccBindingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsNccBindingObservation) DeepCopyInto(out *MwsNccBindingObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NetworkConnectivityConfigID != nil {
		in, out := &in.NetworkConnectivityConfigID, &out.NetworkConnectivityConfigID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsNccBindingObservation.
func (in *MwsNccBindingObservation) DeepCopy() *MwsNccBindingObservation {
	if in == nil {
		return nil
	}
	out := new(MwsNccBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsNccBindingParameters) DeepCopyInto(out *MwsNccBindingParameters) {
	*out = *in
	if in.NetworkConnectivityConfigID != nil {
		in, out := &in.NetworkConnectivityConfigID, &out.NetworkConnectivityConfigID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsNccBindingParameters.
func (in *MwsNccBindingParameters) DeepCopy() *MwsNccBindingParameters {
	if in == nil {
		return nil
	}
	out := new(MwsNccBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsNccBindingSpec) DeepCopyInto(out *MwsNccBindingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsNccBindingSpec.
func (in *MwsNccBindingSpec) DeepCopy() *MwsNccBindingSpec {
	if in == nil {
		return nil
	}
	out := new(MwsNccBindingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsNccBindingStatus) DeepCopyInto(out *MwsNccBindingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsNccBindingStatus.
func (in *MwsNccBindingStatus) DeepCopy() *MwsNccBindingStatus {
	if in == nil {
		return nil
	}
	out := new(MwsNccBindingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsNccPrivateEndpointRule) DeepCopyInto(out *MwsNccPrivateEndpointRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsNccPrivateEndpointRule.
func (in *MwsNccPrivateEndpointRule) DeepCopy() *MwsNccPrivateEndpointRule {
	if in == nil {
		return nil
	}
	out := new(MwsNccPrivateEndpointRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MwsNccPrivateEndpointRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsNccPrivateEndpointRuleInitParameters) DeepCopyInto(out *MwsNccPrivateEndpointRuleInitParameters) {
	*out = *in
	if in.ConnectionState != nil {
		in, out := &in.ConnectionState, &out.ConnectionState
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.Deactivated != nil {
		in, out := &in.Deactivated, &out.Deactivated
		*out = new(bool)
		**out = **in
	}
	if in.DeactivatedAt != nil {
		in, out := &in.DeactivatedAt, &out.DeactivatedAt
		*out = new(float64)
		**out = **in
	}
	if in.EndpointName != nil {
		in, out := &in.EndpointName, &out.EndpointName
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.NetworkConnectivityConfigID != nil {
		in, out := &in.NetworkConnectivityConfigID, &out.NetworkConnectivityConfigID
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.RuleID != nil {
		in, out := &in.RuleID, &out.RuleID
		*out = new(string)
		**out = **in
	}
	if in.UpdatedTime != nil {
		in, out := &in.UpdatedTime, &out.UpdatedTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsNccPrivateEndpointRuleInitParameters.
func (in *MwsNccPrivateEndpointRuleInitParameters) DeepCopy() *MwsNccPrivateEndpointRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(MwsNccPrivateEndpointRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsNccPrivateEndpointRuleList) DeepCopyInto(out *MwsNccPrivateEndpointRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MwsNccPrivateEndpointRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsNccPrivateEndpointRuleList.
func (in *MwsNccPrivateEndpointRuleList) DeepCopy() *MwsNccPrivateEndpointRuleList {
	if in == nil {
		return nil
	}
	out := new(MwsNccPrivateEndpointRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MwsNccPrivateEndpointRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsNccPrivateEndpointRuleObservation) DeepCopyInto(out *MwsNccPrivateEndpointRuleObservation) {
	*out = *in
	if in.ConnectionState != nil {
		in, out := &in.ConnectionState, &out.ConnectionState
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.Deactivated != nil {
		in, out := &in.Deactivated, &out.Deactivated
		*out = new(bool)
		**out = **in
	}
	if in.DeactivatedAt != nil {
		in, out := &in.DeactivatedAt, &out.DeactivatedAt
		*out = new(float64)
		**out = **in
	}
	if in.EndpointName != nil {
		in, out := &in.EndpointName, &out.EndpointName
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NetworkConnectivityConfigID != nil {
		in, out := &in.NetworkConnectivityConfigID, &out.NetworkConnectivityConfigID
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.RuleID != nil {
		in, out := &in.RuleID, &out.RuleID
		*out = new(string)
		**out = **in
	}
	if in.UpdatedTime != nil {
		in, out := &in.UpdatedTime, &out.UpdatedTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsNccPrivateEndpointRuleObservation.
func (in *MwsNccPrivateEndpointRuleObservation) DeepCopy() *MwsNccPrivateEndpointRuleObservation {
	if in == nil {
		return nil
	}
	out := new(MwsNccPrivateEndpointRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsNccPrivateEndpointRuleParameters) DeepCopyInto(out *MwsNccPrivateEndpointRuleParameters) {
	*out = *in
	if in.ConnectionState != nil {
		in, out := &in.ConnectionState, &out.ConnectionState
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.Deactivated != nil {
		in, out := &in.Deactivated, &out.Deactivated
		*out = new(bool)
		**out = **in
	}
	if in.DeactivatedAt != nil {
		in, out := &in.DeactivatedAt, &out.DeactivatedAt
		*out = new(float64)
		**out = **in
	}
	if in.EndpointName != nil {
		in, out := &in.EndpointName, &out.EndpointName
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.NetworkConnectivityConfigID != nil {
		in, out := &in.NetworkConnectivityConfigID, &out.NetworkConnectivityConfigID
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.RuleID != nil {
		in, out := &in.RuleID, &out.RuleID
		*out = new(string)
		**out = **in
	}
	if in.UpdatedTime != nil {
		in, out := &in.UpdatedTime, &out.UpdatedTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsNccPrivateEndpointRuleParameters.
func (in *MwsNccPrivateEndpointRuleParameters) DeepCopy() *MwsNccPrivateEndpointRuleParameters {
	if in == nil {
		return nil
	}
	out := new(MwsNccPrivateEndpointRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsNccPrivateEndpointRuleSpec) DeepCopyInto(out *MwsNccPrivateEndpointRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsNccPrivateEndpointRuleSpec.
func (in *MwsNccPrivateEndpointRuleSpec) DeepCopy() *MwsNccPrivateEndpointRuleSpec {
	if in == nil {
		return nil
	}
	out := new(MwsNccPrivateEndpointRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsNccPrivateEndpointRuleStatus) DeepCopyInto(out *MwsNccPrivateEndpointRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsNccPrivateEndpointRuleStatus.
func (in *MwsNccPrivateEndpointRuleStatus) DeepCopy() *MwsNccPrivateEndpointRuleStatus {
	if in == nil {
		return nil
	}
	out := new(MwsNccPrivateEndpointRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsNetworkConnectivityConfig) DeepCopyInto(out *MwsNetworkConnectivityConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsNetworkConnectivityConfig.
func (in *MwsNetworkConnectivityConfig) DeepCopy() *MwsNetworkConnectivityConfig {
	if in == nil {
		return nil
	}
	out := new(MwsNetworkConnectivityConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MwsNetworkConnectivityConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsNetworkConnectivityConfigInitParameters) DeepCopyInto(out *MwsNetworkConnectivityConfigInitParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.EgressConfig != nil {
		in, out := &in.EgressConfig, &out.EgressConfig
		*out = make([]EgressConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkConnectivityConfigID != nil {
		in, out := &in.NetworkConnectivityConfigID, &out.NetworkConnectivityConfigID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.UpdatedTime != nil {
		in, out := &in.UpdatedTime, &out.UpdatedTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsNetworkConnectivityConfigInitParameters.
func (in *MwsNetworkConnectivityConfigInitParameters) DeepCopy() *MwsNetworkConnectivityConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(MwsNetworkConnectivityConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsNetworkConnectivityConfigList) DeepCopyInto(out *MwsNetworkConnectivityConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MwsNetworkConnectivityConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsNetworkConnectivityConfigList.
func (in *MwsNetworkConnectivityConfigList) DeepCopy() *MwsNetworkConnectivityConfigList {
	if in == nil {
		return nil
	}
	out := new(MwsNetworkConnectivityConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MwsNetworkConnectivityConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsNetworkConnectivityConfigObservation) DeepCopyInto(out *MwsNetworkConnectivityConfigObservation) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.EgressConfig != nil {
		in, out := &in.EgressConfig, &out.EgressConfig
		*out = make([]EgressConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkConnectivityConfigID != nil {
		in, out := &in.NetworkConnectivityConfigID, &out.NetworkConnectivityConfigID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.UpdatedTime != nil {
		in, out := &in.UpdatedTime, &out.UpdatedTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsNetworkConnectivityConfigObservation.
func (in *MwsNetworkConnectivityConfigObservation) DeepCopy() *MwsNetworkConnectivityConfigObservation {
	if in == nil {
		return nil
	}
	out := new(MwsNetworkConnectivityConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsNetworkConnectivityConfigParameters) DeepCopyInto(out *MwsNetworkConnectivityConfigParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.EgressConfig != nil {
		in, out := &in.EgressConfig, &out.EgressConfig
		*out = make([]EgressConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkConnectivityConfigID != nil {
		in, out := &in.NetworkConnectivityConfigID, &out.NetworkConnectivityConfigID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.UpdatedTime != nil {
		in, out := &in.UpdatedTime, &out.UpdatedTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsNetworkConnectivityConfigParameters.
func (in *MwsNetworkConnectivityConfigParameters) DeepCopy() *MwsNetworkConnectivityConfigParameters {
	if in == nil {
		return nil
	}
	out := new(MwsNetworkConnectivityConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsNetworkConnectivityConfigSpec) DeepCopyInto(out *MwsNetworkConnectivityConfigSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsNetworkConnectivityConfigSpec.
func (in *MwsNetworkConnectivityConfigSpec) DeepCopy() *MwsNetworkConnectivityConfigSpec {
	if in == nil {
		return nil
	}
	out := new(MwsNetworkConnectivityConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsNetworkConnectivityConfigStatus) DeepCopyInto(out *MwsNetworkConnectivityConfigStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsNetworkConnectivityConfigStatus.
func (in *MwsNetworkConnectivityConfigStatus) DeepCopy() *MwsNetworkConnectivityConfigStatus {
	if in == nil {
		return nil
	}
	out := new(MwsNetworkConnectivityConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsNetworks) DeepCopyInto(out *MwsNetworks) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsNetworks.
func (in *MwsNetworks) DeepCopy() *MwsNetworks {
	if in == nil {
		return nil
	}
	out := new(MwsNetworks)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MwsNetworks) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsNetworksInitParameters) DeepCopyInto(out *MwsNetworksInitParameters) {
	*out = *in
	out.AccountIDSecretRef = in.AccountIDSecretRef
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.ErrorMessages != nil {
		in, out := &in.ErrorMessages, &out.ErrorMessages
		*out = make([]ErrorMessagesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GCPNetworkInfo != nil {
		in, out := &in.GCPNetworkInfo, &out.GCPNetworkInfo
		*out = make([]GCPNetworkInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.NetworkName != nil {
		in, out := &in.NetworkName, &out.NetworkName
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VPCEndpoints != nil {
		in, out := &in.VPCEndpoints, &out.VPCEndpoints
		*out = make([]VPCEndpointsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCStatus != nil {
		in, out := &in.VPCStatus, &out.VPCStatus
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsNetworksInitParameters.
func (in *MwsNetworksInitParameters) DeepCopy() *MwsNetworksInitParameters {
	if in == nil {
		return nil
	}
	out := new(MwsNetworksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsNetworksList) DeepCopyInto(out *MwsNetworksList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MwsNetworks, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsNetworksList.
func (in *MwsNetworksList) DeepCopy() *MwsNetworksList {
	if in == nil {
		return nil
	}
	out := new(MwsNetworksList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MwsNetworksList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsNetworksObservation) DeepCopyInto(out *MwsNetworksObservation) {
	*out = *in
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.ErrorMessages != nil {
		in, out := &in.ErrorMessages, &out.ErrorMessages
		*out = make([]ErrorMessagesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GCPNetworkInfo != nil {
		in, out := &in.GCPNetworkInfo, &out.GCPNetworkInfo
		*out = make([]GCPNetworkInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.NetworkName != nil {
		in, out := &in.NetworkName, &out.NetworkName
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VPCEndpoints != nil {
		in, out := &in.VPCEndpoints, &out.VPCEndpoints
		*out = make([]VPCEndpointsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCStatus != nil {
		in, out := &in.VPCStatus, &out.VPCStatus
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsNetworksObservation.
func (in *MwsNetworksObservation) DeepCopy() *MwsNetworksObservation {
	if in == nil {
		return nil
	}
	out := new(MwsNetworksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsNetworksParameters) DeepCopyInto(out *MwsNetworksParameters) {
	*out = *in
	out.AccountIDSecretRef = in.AccountIDSecretRef
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.ErrorMessages != nil {
		in, out := &in.ErrorMessages, &out.ErrorMessages
		*out = make([]ErrorMessagesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GCPNetworkInfo != nil {
		in, out := &in.GCPNetworkInfo, &out.GCPNetworkInfo
		*out = make([]GCPNetworkInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.NetworkName != nil {
		in, out := &in.NetworkName, &out.NetworkName
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VPCEndpoints != nil {
		in, out := &in.VPCEndpoints, &out.VPCEndpoints
		*out = make([]VPCEndpointsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCStatus != nil {
		in, out := &in.VPCStatus, &out.VPCStatus
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsNetworksParameters.
func (in *MwsNetworksParameters) DeepCopy() *MwsNetworksParameters {
	if in == nil {
		return nil
	}
	out := new(MwsNetworksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsNetworksSpec) DeepCopyInto(out *MwsNetworksSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsNetworksSpec.
func (in *MwsNetworksSpec) DeepCopy() *MwsNetworksSpec {
	if in == nil {
		return nil
	}
	out := new(MwsNetworksSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsNetworksStatus) DeepCopyInto(out *MwsNetworksStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsNetworksStatus.
func (in *MwsNetworksStatus) DeepCopy() *MwsNetworksStatus {
	if in == nil {
		return nil
	}
	out := new(MwsNetworksStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsPermissionAssignment) DeepCopyInto(out *MwsPermissionAssignment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsPermissionAssignment.
func (in *MwsPermissionAssignment) DeepCopy() *MwsPermissionAssignment {
	if in == nil {
		return nil
	}
	out := new(MwsPermissionAssignment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MwsPermissionAssignment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsPermissionAssignmentInitParameters) DeepCopyInto(out *MwsPermissionAssignmentInitParameters) {
	*out = *in
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(float64)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsPermissionAssignmentInitParameters.
func (in *MwsPermissionAssignmentInitParameters) DeepCopy() *MwsPermissionAssignmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(MwsPermissionAssignmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsPermissionAssignmentList) DeepCopyInto(out *MwsPermissionAssignmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MwsPermissionAssignment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsPermissionAssignmentList.
func (in *MwsPermissionAssignmentList) DeepCopy() *MwsPermissionAssignmentList {
	if in == nil {
		return nil
	}
	out := new(MwsPermissionAssignmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MwsPermissionAssignmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsPermissionAssignmentObservation) DeepCopyInto(out *MwsPermissionAssignmentObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(float64)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsPermissionAssignmentObservation.
func (in *MwsPermissionAssignmentObservation) DeepCopy() *MwsPermissionAssignmentObservation {
	if in == nil {
		return nil
	}
	out := new(MwsPermissionAssignmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsPermissionAssignmentParameters) DeepCopyInto(out *MwsPermissionAssignmentParameters) {
	*out = *in
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(float64)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsPermissionAssignmentParameters.
func (in *MwsPermissionAssignmentParameters) DeepCopy() *MwsPermissionAssignmentParameters {
	if in == nil {
		return nil
	}
	out := new(MwsPermissionAssignmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsPermissionAssignmentSpec) DeepCopyInto(out *MwsPermissionAssignmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsPermissionAssignmentSpec.
func (in *MwsPermissionAssignmentSpec) DeepCopy() *MwsPermissionAssignmentSpec {
	if in == nil {
		return nil
	}
	out := new(MwsPermissionAssignmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsPermissionAssignmentStatus) DeepCopyInto(out *MwsPermissionAssignmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsPermissionAssignmentStatus.
func (in *MwsPermissionAssignmentStatus) DeepCopy() *MwsPermissionAssignmentStatus {
	if in == nil {
		return nil
	}
	out := new(MwsPermissionAssignmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsPrivateAccessSettings) DeepCopyInto(out *MwsPrivateAccessSettings) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsPrivateAccessSettings.
func (in *MwsPrivateAccessSettings) DeepCopy() *MwsPrivateAccessSettings {
	if in == nil {
		return nil
	}
	out := new(MwsPrivateAccessSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MwsPrivateAccessSettings) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsPrivateAccessSettingsInitParameters) DeepCopyInto(out *MwsPrivateAccessSettingsInitParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.AllowedVPCEndpointIds != nil {
		in, out := &in.AllowedVPCEndpointIds, &out.AllowedVPCEndpointIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateAccessLevel != nil {
		in, out := &in.PrivateAccessLevel, &out.PrivateAccessLevel
		*out = new(string)
		**out = **in
	}
	if in.PrivateAccessSettingsID != nil {
		in, out := &in.PrivateAccessSettingsID, &out.PrivateAccessSettingsID
		*out = new(string)
		**out = **in
	}
	if in.PrivateAccessSettingsName != nil {
		in, out := &in.PrivateAccessSettingsName, &out.PrivateAccessSettingsName
		*out = new(string)
		**out = **in
	}
	if in.PublicAccessEnabled != nil {
		in, out := &in.PublicAccessEnabled, &out.PublicAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsPrivateAccessSettingsInitParameters.
func (in *MwsPrivateAccessSettingsInitParameters) DeepCopy() *MwsPrivateAccessSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MwsPrivateAccessSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsPrivateAccessSettingsList) DeepCopyInto(out *MwsPrivateAccessSettingsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MwsPrivateAccessSettings, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsPrivateAccessSettingsList.
func (in *MwsPrivateAccessSettingsList) DeepCopy() *MwsPrivateAccessSettingsList {
	if in == nil {
		return nil
	}
	out := new(MwsPrivateAccessSettingsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MwsPrivateAccessSettingsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsPrivateAccessSettingsObservation) DeepCopyInto(out *MwsPrivateAccessSettingsObservation) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.AllowedVPCEndpointIds != nil {
		in, out := &in.AllowedVPCEndpointIds, &out.AllowedVPCEndpointIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PrivateAccessLevel != nil {
		in, out := &in.PrivateAccessLevel, &out.PrivateAccessLevel
		*out = new(string)
		**out = **in
	}
	if in.PrivateAccessSettingsID != nil {
		in, out := &in.PrivateAccessSettingsID, &out.PrivateAccessSettingsID
		*out = new(string)
		**out = **in
	}
	if in.PrivateAccessSettingsName != nil {
		in, out := &in.PrivateAccessSettingsName, &out.PrivateAccessSettingsName
		*out = new(string)
		**out = **in
	}
	if in.PublicAccessEnabled != nil {
		in, out := &in.PublicAccessEnabled, &out.PublicAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsPrivateAccessSettingsObservation.
func (in *MwsPrivateAccessSettingsObservation) DeepCopy() *MwsPrivateAccessSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(MwsPrivateAccessSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsPrivateAccessSettingsParameters) DeepCopyInto(out *MwsPrivateAccessSettingsParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.AllowedVPCEndpointIds != nil {
		in, out := &in.AllowedVPCEndpointIds, &out.AllowedVPCEndpointIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateAccessLevel != nil {
		in, out := &in.PrivateAccessLevel, &out.PrivateAccessLevel
		*out = new(string)
		**out = **in
	}
	if in.PrivateAccessSettingsID != nil {
		in, out := &in.PrivateAccessSettingsID, &out.PrivateAccessSettingsID
		*out = new(string)
		**out = **in
	}
	if in.PrivateAccessSettingsName != nil {
		in, out := &in.PrivateAccessSettingsName, &out.PrivateAccessSettingsName
		*out = new(string)
		**out = **in
	}
	if in.PublicAccessEnabled != nil {
		in, out := &in.PublicAccessEnabled, &out.PublicAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsPrivateAccessSettingsParameters.
func (in *MwsPrivateAccessSettingsParameters) DeepCopy() *MwsPrivateAccessSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(MwsPrivateAccessSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsPrivateAccessSettingsSpec) DeepCopyInto(out *MwsPrivateAccessSettingsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsPrivateAccessSettingsSpec.
func (in *MwsPrivateAccessSettingsSpec) DeepCopy() *MwsPrivateAccessSettingsSpec {
	if in == nil {
		return nil
	}
	out := new(MwsPrivateAccessSettingsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsPrivateAccessSettingsStatus) DeepCopyInto(out *MwsPrivateAccessSettingsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsPrivateAccessSettingsStatus.
func (in *MwsPrivateAccessSettingsStatus) DeepCopy() *MwsPrivateAccessSettingsStatus {
	if in == nil {
		return nil
	}
	out := new(MwsPrivateAccessSettingsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsStorageConfigurations) DeepCopyInto(out *MwsStorageConfigurations) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsStorageConfigurations.
func (in *MwsStorageConfigurations) DeepCopy() *MwsStorageConfigurations {
	if in == nil {
		return nil
	}
	out := new(MwsStorageConfigurations)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MwsStorageConfigurations) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsStorageConfigurationsInitParameters) DeepCopyInto(out *MwsStorageConfigurationsInitParameters) {
	*out = *in
	out.AccountIDSecretRef = in.AccountIDSecretRef
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.StorageConfigurationName != nil {
		in, out := &in.StorageConfigurationName, &out.StorageConfigurationName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsStorageConfigurationsInitParameters.
func (in *MwsStorageConfigurationsInitParameters) DeepCopy() *MwsStorageConfigurationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MwsStorageConfigurationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsStorageConfigurationsList) DeepCopyInto(out *MwsStorageConfigurationsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MwsStorageConfigurations, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsStorageConfigurationsList.
func (in *MwsStorageConfigurationsList) DeepCopy() *MwsStorageConfigurationsList {
	if in == nil {
		return nil
	}
	out := new(MwsStorageConfigurationsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MwsStorageConfigurationsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsStorageConfigurationsObservation) DeepCopyInto(out *MwsStorageConfigurationsObservation) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.StorageConfigurationID != nil {
		in, out := &in.StorageConfigurationID, &out.StorageConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.StorageConfigurationName != nil {
		in, out := &in.StorageConfigurationName, &out.StorageConfigurationName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsStorageConfigurationsObservation.
func (in *MwsStorageConfigurationsObservation) DeepCopy() *MwsStorageConfigurationsObservation {
	if in == nil {
		return nil
	}
	out := new(MwsStorageConfigurationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsStorageConfigurationsParameters) DeepCopyInto(out *MwsStorageConfigurationsParameters) {
	*out = *in
	out.AccountIDSecretRef = in.AccountIDSecretRef
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.StorageConfigurationName != nil {
		in, out := &in.StorageConfigurationName, &out.StorageConfigurationName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsStorageConfigurationsParameters.
func (in *MwsStorageConfigurationsParameters) DeepCopy() *MwsStorageConfigurationsParameters {
	if in == nil {
		return nil
	}
	out := new(MwsStorageConfigurationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsStorageConfigurationsSpec) DeepCopyInto(out *MwsStorageConfigurationsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsStorageConfigurationsSpec.
func (in *MwsStorageConfigurationsSpec) DeepCopy() *MwsStorageConfigurationsSpec {
	if in == nil {
		return nil
	}
	out := new(MwsStorageConfigurationsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsStorageConfigurationsStatus) DeepCopyInto(out *MwsStorageConfigurationsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsStorageConfigurationsStatus.
func (in *MwsStorageConfigurationsStatus) DeepCopy() *MwsStorageConfigurationsStatus {
	if in == nil {
		return nil
	}
	out := new(MwsStorageConfigurationsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsVPCEndpoint) DeepCopyInto(out *MwsVPCEndpoint) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsVPCEndpoint.
func (in *MwsVPCEndpoint) DeepCopy() *MwsVPCEndpoint {
	if in == nil {
		return nil
	}
	out := new(MwsVPCEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MwsVPCEndpoint) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsVPCEndpointInitParameters) DeepCopyInto(out *MwsVPCEndpointInitParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.AwsAccountID != nil {
		in, out := &in.AwsAccountID, &out.AwsAccountID
		*out = new(string)
		**out = **in
	}
	if in.AwsEndpointServiceID != nil {
		in, out := &in.AwsEndpointServiceID, &out.AwsEndpointServiceID
		*out = new(string)
		**out = **in
	}
	if in.AwsVPCEndpointID != nil {
		in, out := &in.AwsVPCEndpointID, &out.AwsVPCEndpointID
		*out = new(string)
		**out = **in
	}
	if in.GCPVPCEndpointInfo != nil {
		in, out := &in.GCPVPCEndpointInfo, &out.GCPVPCEndpointInfo
		*out = make([]GCPVPCEndpointInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.UseCase != nil {
		in, out := &in.UseCase, &out.UseCase
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointID != nil {
		in, out := &in.VPCEndpointID, &out.VPCEndpointID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointName != nil {
		in, out := &in.VPCEndpointName, &out.VPCEndpointName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsVPCEndpointInitParameters.
func (in *MwsVPCEndpointInitParameters) DeepCopy() *MwsVPCEndpointInitParameters {
	if in == nil {
		return nil
	}
	out := new(MwsVPCEndpointInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsVPCEndpointList) DeepCopyInto(out *MwsVPCEndpointList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MwsVPCEndpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsVPCEndpointList.
func (in *MwsVPCEndpointList) DeepCopy() *MwsVPCEndpointList {
	if in == nil {
		return nil
	}
	out := new(MwsVPCEndpointList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MwsVPCEndpointList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsVPCEndpointObservation) DeepCopyInto(out *MwsVPCEndpointObservation) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.AwsAccountID != nil {
		in, out := &in.AwsAccountID, &out.AwsAccountID
		*out = new(string)
		**out = **in
	}
	if in.AwsEndpointServiceID != nil {
		in, out := &in.AwsEndpointServiceID, &out.AwsEndpointServiceID
		*out = new(string)
		**out = **in
	}
	if in.AwsVPCEndpointID != nil {
		in, out := &in.AwsVPCEndpointID, &out.AwsVPCEndpointID
		*out = new(string)
		**out = **in
	}
	if in.GCPVPCEndpointInfo != nil {
		in, out := &in.GCPVPCEndpointInfo, &out.GCPVPCEndpointInfo
		*out = make([]GCPVPCEndpointInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.UseCase != nil {
		in, out := &in.UseCase, &out.UseCase
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointID != nil {
		in, out := &in.VPCEndpointID, &out.VPCEndpointID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointName != nil {
		in, out := &in.VPCEndpointName, &out.VPCEndpointName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsVPCEndpointObservation.
func (in *MwsVPCEndpointObservation) DeepCopy() *MwsVPCEndpointObservation {
	if in == nil {
		return nil
	}
	out := new(MwsVPCEndpointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsVPCEndpointParameters) DeepCopyInto(out *MwsVPCEndpointParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.AwsAccountID != nil {
		in, out := &in.AwsAccountID, &out.AwsAccountID
		*out = new(string)
		**out = **in
	}
	if in.AwsEndpointServiceID != nil {
		in, out := &in.AwsEndpointServiceID, &out.AwsEndpointServiceID
		*out = new(string)
		**out = **in
	}
	if in.AwsVPCEndpointID != nil {
		in, out := &in.AwsVPCEndpointID, &out.AwsVPCEndpointID
		*out = new(string)
		**out = **in
	}
	if in.GCPVPCEndpointInfo != nil {
		in, out := &in.GCPVPCEndpointInfo, &out.GCPVPCEndpointInfo
		*out = make([]GCPVPCEndpointInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.UseCase != nil {
		in, out := &in.UseCase, &out.UseCase
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointID != nil {
		in, out := &in.VPCEndpointID, &out.VPCEndpointID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointName != nil {
		in, out := &in.VPCEndpointName, &out.VPCEndpointName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsVPCEndpointParameters.
func (in *MwsVPCEndpointParameters) DeepCopy() *MwsVPCEndpointParameters {
	if in == nil {
		return nil
	}
	out := new(MwsVPCEndpointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsVPCEndpointSpec) DeepCopyInto(out *MwsVPCEndpointSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsVPCEndpointSpec.
func (in *MwsVPCEndpointSpec) DeepCopy() *MwsVPCEndpointSpec {
	if in == nil {
		return nil
	}
	out := new(MwsVPCEndpointSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsVPCEndpointStatus) DeepCopyInto(out *MwsVPCEndpointStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsVPCEndpointStatus.
func (in *MwsVPCEndpointStatus) DeepCopy() *MwsVPCEndpointStatus {
	if in == nil {
		return nil
	}
	out := new(MwsVPCEndpointStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsWorkspaces) DeepCopyInto(out *MwsWorkspaces) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsWorkspaces.
func (in *MwsWorkspaces) DeepCopy() *MwsWorkspaces {
	if in == nil {
		return nil
	}
	out := new(MwsWorkspaces)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MwsWorkspaces) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsWorkspacesInitParameters) DeepCopyInto(out *MwsWorkspacesInitParameters) {
	*out = *in
	out.AccountIDSecretRef = in.AccountIDSecretRef
	if in.AwsRegion != nil {
		in, out := &in.AwsRegion, &out.AwsRegion
		*out = new(string)
		**out = **in
	}
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.CloudResourceContainer != nil {
		in, out := &in.CloudResourceContainer, &out.CloudResourceContainer
		*out = make([]CloudResourceContainerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.CredentialsID != nil {
		in, out := &in.CredentialsID, &out.CredentialsID
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.CustomerManagedKeyID != nil {
		in, out := &in.CustomerManagedKeyID, &out.CustomerManagedKeyID
		*out = new(string)
		**out = **in
	}
	if in.DeploymentName != nil {
		in, out := &in.DeploymentName, &out.DeploymentName
		*out = new(string)
		**out = **in
	}
	if in.ExternalCustomerInfo != nil {
		in, out := &in.ExternalCustomerInfo, &out.ExternalCustomerInfo
		*out = make([]ExternalCustomerInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GCPManagedNetworkConfig != nil {
		in, out := &in.GCPManagedNetworkConfig, &out.GCPManagedNetworkConfig
		*out = make([]GCPManagedNetworkConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GkeConfig != nil {
		in, out := &in.GkeConfig, &out.GkeConfig
		*out = make([]GkeConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsNoPublicIPEnabled != nil {
		in, out := &in.IsNoPublicIPEnabled, &out.IsNoPublicIPEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ManagedServicesCustomerManagedKeyID != nil {
		in, out := &in.ManagedServicesCustomerManagedKeyID, &out.ManagedServicesCustomerManagedKeyID
		*out = new(string)
		**out = **in
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.PricingTier != nil {
		in, out := &in.PricingTier, &out.PricingTier
		*out = new(string)
		**out = **in
	}
	if in.PrivateAccessSettingsID != nil {
		in, out := &in.PrivateAccessSettingsID, &out.PrivateAccessSettingsID
		*out = new(string)
		**out = **in
	}
	if in.StorageConfigurationID != nil {
		in, out := &in.StorageConfigurationID, &out.StorageConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.StorageCustomerManagedKeyID != nil {
		in, out := &in.StorageCustomerManagedKeyID, &out.StorageCustomerManagedKeyID
		*out = new(string)
		**out = **in
	}
	if in.Token != nil {
		in, out := &in.Token, &out.Token
		*out = make([]TokenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
	if in.WorkspaceName != nil {
		in, out := &in.WorkspaceName, &out.WorkspaceName
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceStatus != nil {
		in, out := &in.WorkspaceStatus, &out.WorkspaceStatus
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceStatusMessage != nil {
		in, out := &in.WorkspaceStatusMessage, &out.WorkspaceStatusMessage
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceURL != nil {
		in, out := &in.WorkspaceURL, &out.WorkspaceURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsWorkspacesInitParameters.
func (in *MwsWorkspacesInitParameters) DeepCopy() *MwsWorkspacesInitParameters {
	if in == nil {
		return nil
	}
	out := new(MwsWorkspacesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsWorkspacesList) DeepCopyInto(out *MwsWorkspacesList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MwsWorkspaces, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsWorkspacesList.
func (in *MwsWorkspacesList) DeepCopy() *MwsWorkspacesList {
	if in == nil {
		return nil
	}
	out := new(MwsWorkspacesList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MwsWorkspacesList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsWorkspacesObservation) DeepCopyInto(out *MwsWorkspacesObservation) {
	*out = *in
	if in.AwsRegion != nil {
		in, out := &in.AwsRegion, &out.AwsRegion
		*out = new(string)
		**out = **in
	}
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.CloudResourceContainer != nil {
		in, out := &in.CloudResourceContainer, &out.CloudResourceContainer
		*out = make([]CloudResourceContainerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.CredentialsID != nil {
		in, out := &in.CredentialsID, &out.CredentialsID
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.CustomerManagedKeyID != nil {
		in, out := &in.CustomerManagedKeyID, &out.CustomerManagedKeyID
		*out = new(string)
		**out = **in
	}
	if in.DeploymentName != nil {
		in, out := &in.DeploymentName, &out.DeploymentName
		*out = new(string)
		**out = **in
	}
	if in.ExternalCustomerInfo != nil {
		in, out := &in.ExternalCustomerInfo, &out.ExternalCustomerInfo
		*out = make([]ExternalCustomerInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GCPManagedNetworkConfig != nil {
		in, out := &in.GCPManagedNetworkConfig, &out.GCPManagedNetworkConfig
		*out = make([]GCPManagedNetworkConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GCPWorkspaceSa != nil {
		in, out := &in.GCPWorkspaceSa, &out.GCPWorkspaceSa
		*out = new(string)
		**out = **in
	}
	if in.GkeConfig != nil {
		in, out := &in.GkeConfig, &out.GkeConfig
		*out = make([]GkeConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsNoPublicIPEnabled != nil {
		in, out := &in.IsNoPublicIPEnabled, &out.IsNoPublicIPEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ManagedServicesCustomerManagedKeyID != nil {
		in, out := &in.ManagedServicesCustomerManagedKeyID, &out.ManagedServicesCustomerManagedKeyID
		*out = new(string)
		**out = **in
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.PricingTier != nil {
		in, out := &in.PricingTier, &out.PricingTier
		*out = new(string)
		**out = **in
	}
	if in.PrivateAccessSettingsID != nil {
		in, out := &in.PrivateAccessSettingsID, &out.PrivateAccessSettingsID
		*out = new(string)
		**out = **in
	}
	if in.StorageConfigurationID != nil {
		in, out := &in.StorageConfigurationID, &out.StorageConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.StorageCustomerManagedKeyID != nil {
		in, out := &in.StorageCustomerManagedKeyID, &out.StorageCustomerManagedKeyID
		*out = new(string)
		**out = **in
	}
	if in.Token != nil {
		in, out := &in.Token, &out.Token
		*out = make([]TokenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
	if in.WorkspaceName != nil {
		in, out := &in.WorkspaceName, &out.WorkspaceName
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceStatus != nil {
		in, out := &in.WorkspaceStatus, &out.WorkspaceStatus
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceStatusMessage != nil {
		in, out := &in.WorkspaceStatusMessage, &out.WorkspaceStatusMessage
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceURL != nil {
		in, out := &in.WorkspaceURL, &out.WorkspaceURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsWorkspacesObservation.
func (in *MwsWorkspacesObservation) DeepCopy() *MwsWorkspacesObservation {
	if in == nil {
		return nil
	}
	out := new(MwsWorkspacesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsWorkspacesParameters) DeepCopyInto(out *MwsWorkspacesParameters) {
	*out = *in
	out.AccountIDSecretRef = in.AccountIDSecretRef
	if in.AwsRegion != nil {
		in, out := &in.AwsRegion, &out.AwsRegion
		*out = new(string)
		**out = **in
	}
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.CloudResourceContainer != nil {
		in, out := &in.CloudResourceContainer, &out.CloudResourceContainer
		*out = make([]CloudResourceContainerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.CredentialsID != nil {
		in, out := &in.CredentialsID, &out.CredentialsID
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.CustomerManagedKeyID != nil {
		in, out := &in.CustomerManagedKeyID, &out.CustomerManagedKeyID
		*out = new(string)
		**out = **in
	}
	if in.DeploymentName != nil {
		in, out := &in.DeploymentName, &out.DeploymentName
		*out = new(string)
		**out = **in
	}
	if in.ExternalCustomerInfo != nil {
		in, out := &in.ExternalCustomerInfo, &out.ExternalCustomerInfo
		*out = make([]ExternalCustomerInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GCPManagedNetworkConfig != nil {
		in, out := &in.GCPManagedNetworkConfig, &out.GCPManagedNetworkConfig
		*out = make([]GCPManagedNetworkConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GkeConfig != nil {
		in, out := &in.GkeConfig, &out.GkeConfig
		*out = make([]GkeConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsNoPublicIPEnabled != nil {
		in, out := &in.IsNoPublicIPEnabled, &out.IsNoPublicIPEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ManagedServicesCustomerManagedKeyID != nil {
		in, out := &in.ManagedServicesCustomerManagedKeyID, &out.ManagedServicesCustomerManagedKeyID
		*out = new(string)
		**out = **in
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.PricingTier != nil {
		in, out := &in.PricingTier, &out.PricingTier
		*out = new(string)
		**out = **in
	}
	if in.PrivateAccessSettingsID != nil {
		in, out := &in.PrivateAccessSettingsID, &out.PrivateAccessSettingsID
		*out = new(string)
		**out = **in
	}
	if in.StorageConfigurationID != nil {
		in, out := &in.StorageConfigurationID, &out.StorageConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.StorageCustomerManagedKeyID != nil {
		in, out := &in.StorageCustomerManagedKeyID, &out.StorageCustomerManagedKeyID
		*out = new(string)
		**out = **in
	}
	if in.Token != nil {
		in, out := &in.Token, &out.Token
		*out = make([]TokenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
	if in.WorkspaceName != nil {
		in, out := &in.WorkspaceName, &out.WorkspaceName
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceStatus != nil {
		in, out := &in.WorkspaceStatus, &out.WorkspaceStatus
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceStatusMessage != nil {
		in, out := &in.WorkspaceStatusMessage, &out.WorkspaceStatusMessage
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceURL != nil {
		in, out := &in.WorkspaceURL, &out.WorkspaceURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsWorkspacesParameters.
func (in *MwsWorkspacesParameters) DeepCopy() *MwsWorkspacesParameters {
	if in == nil {
		return nil
	}
	out := new(MwsWorkspacesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsWorkspacesSpec) DeepCopyInto(out *MwsWorkspacesSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsWorkspacesSpec.
func (in *MwsWorkspacesSpec) DeepCopy() *MwsWorkspacesSpec {
	if in == nil {
		return nil
	}
	out := new(MwsWorkspacesSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MwsWorkspacesStatus) DeepCopyInto(out *MwsWorkspacesStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MwsWorkspacesStatus.
func (in *MwsWorkspacesStatus) DeepCopy() *MwsWorkspacesStatus {
	if in == nil {
		return nil
	}
	out := new(MwsWorkspacesStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceInitParameters) DeepCopyInto(out *NamespaceInitParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceInitParameters.
func (in *NamespaceInitParameters) DeepCopy() *NamespaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(NamespaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceObservation) DeepCopyInto(out *NamespaceObservation) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceObservation.
func (in *NamespaceObservation) DeepCopy() *NamespaceObservation {
	if in == nil {
		return nil
	}
	out := new(NamespaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceParameters) DeepCopyInto(out *NamespaceParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceParameters.
func (in *NamespaceParameters) DeepCopy() *NamespaceParameters {
	if in == nil {
		return nil
	}
	out := new(NamespaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFilesystemInfoInitParameters) DeepCopyInto(out *NetworkFilesystemInfoInitParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFilesystemInfoInitParameters.
func (in *NetworkFilesystemInfoInitParameters) DeepCopy() *NetworkFilesystemInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkFilesystemInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFilesystemInfoObservation) DeepCopyInto(out *NetworkFilesystemInfoObservation) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFilesystemInfoObservation.
func (in *NetworkFilesystemInfoObservation) DeepCopy() *NetworkFilesystemInfoObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkFilesystemInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFilesystemInfoParameters) DeepCopyInto(out *NetworkFilesystemInfoParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFilesystemInfoParameters.
func (in *NetworkFilesystemInfoParameters) DeepCopy() *NetworkFilesystemInfoParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkFilesystemInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAutoscaleInitParameters) DeepCopyInto(out *NewClusterAutoscaleInitParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAutoscaleInitParameters.
func (in *NewClusterAutoscaleInitParameters) DeepCopy() *NewClusterAutoscaleInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterAutoscaleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAutoscaleObservation) DeepCopyInto(out *NewClusterAutoscaleObservation) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAutoscaleObservation.
func (in *NewClusterAutoscaleObservation) DeepCopy() *NewClusterAutoscaleObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterAutoscaleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAutoscaleParameters) DeepCopyInto(out *NewClusterAutoscaleParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAutoscaleParameters.
func (in *NewClusterAutoscaleParameters) DeepCopy() *NewClusterAutoscaleParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterAutoscaleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAwsAttributesInitParameters) DeepCopyInto(out *NewClusterAwsAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAwsAttributesInitParameters.
func (in *NewClusterAwsAttributesInitParameters) DeepCopy() *NewClusterAwsAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterAwsAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAwsAttributesObservation) DeepCopyInto(out *NewClusterAwsAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAwsAttributesObservation.
func (in *NewClusterAwsAttributesObservation) DeepCopy() *NewClusterAwsAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterAwsAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAwsAttributesParameters) DeepCopyInto(out *NewClusterAwsAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAwsAttributesParameters.
func (in *NewClusterAwsAttributesParameters) DeepCopy() *NewClusterAwsAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterAwsAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAzureAttributesInitParameters) DeepCopyInto(out *NewClusterAzureAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]AzureAttributesLogAnalyticsInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAzureAttributesInitParameters.
func (in *NewClusterAzureAttributesInitParameters) DeepCopy() *NewClusterAzureAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterAzureAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAzureAttributesLogAnalyticsInfoInitParameters) DeepCopyInto(out *NewClusterAzureAttributesLogAnalyticsInfoInitParameters) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAzureAttributesLogAnalyticsInfoInitParameters.
func (in *NewClusterAzureAttributesLogAnalyticsInfoInitParameters) DeepCopy() *NewClusterAzureAttributesLogAnalyticsInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterAzureAttributesLogAnalyticsInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAzureAttributesLogAnalyticsInfoObservation) DeepCopyInto(out *NewClusterAzureAttributesLogAnalyticsInfoObservation) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAzureAttributesLogAnalyticsInfoObservation.
func (in *NewClusterAzureAttributesLogAnalyticsInfoObservation) DeepCopy() *NewClusterAzureAttributesLogAnalyticsInfoObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterAzureAttributesLogAnalyticsInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAzureAttributesLogAnalyticsInfoParameters) DeepCopyInto(out *NewClusterAzureAttributesLogAnalyticsInfoParameters) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAzureAttributesLogAnalyticsInfoParameters.
func (in *NewClusterAzureAttributesLogAnalyticsInfoParameters) DeepCopy() *NewClusterAzureAttributesLogAnalyticsInfoParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterAzureAttributesLogAnalyticsInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAzureAttributesObservation) DeepCopyInto(out *NewClusterAzureAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]AzureAttributesLogAnalyticsInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAzureAttributesObservation.
func (in *NewClusterAzureAttributesObservation) DeepCopy() *NewClusterAzureAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterAzureAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterAzureAttributesParameters) DeepCopyInto(out *NewClusterAzureAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]AzureAttributesLogAnalyticsInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterAzureAttributesParameters.
func (in *NewClusterAzureAttributesParameters) DeepCopy() *NewClusterAzureAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterAzureAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterLogConfDbfsInitParameters) DeepCopyInto(out *NewClusterClusterLogConfDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterLogConfDbfsInitParameters.
func (in *NewClusterClusterLogConfDbfsInitParameters) DeepCopy() *NewClusterClusterLogConfDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterLogConfDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterLogConfDbfsObservation) DeepCopyInto(out *NewClusterClusterLogConfDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterLogConfDbfsObservation.
func (in *NewClusterClusterLogConfDbfsObservation) DeepCopy() *NewClusterClusterLogConfDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterLogConfDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterLogConfDbfsParameters) DeepCopyInto(out *NewClusterClusterLogConfDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterLogConfDbfsParameters.
func (in *NewClusterClusterLogConfDbfsParameters) DeepCopy() *NewClusterClusterLogConfDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterLogConfDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterLogConfInitParameters) DeepCopyInto(out *NewClusterClusterLogConfInitParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]ClusterLogConfDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]ClusterLogConfS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterLogConfInitParameters.
func (in *NewClusterClusterLogConfInitParameters) DeepCopy() *NewClusterClusterLogConfInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterLogConfInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterLogConfObservation) DeepCopyInto(out *NewClusterClusterLogConfObservation) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]ClusterLogConfDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]ClusterLogConfS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterLogConfObservation.
func (in *NewClusterClusterLogConfObservation) DeepCopy() *NewClusterClusterLogConfObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterLogConfObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterLogConfParameters) DeepCopyInto(out *NewClusterClusterLogConfParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]ClusterLogConfDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]ClusterLogConfS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterLogConfParameters.
func (in *NewClusterClusterLogConfParameters) DeepCopy() *NewClusterClusterLogConfParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterLogConfParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterLogConfS3InitParameters) DeepCopyInto(out *NewClusterClusterLogConfS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterLogConfS3InitParameters.
func (in *NewClusterClusterLogConfS3InitParameters) DeepCopy() *NewClusterClusterLogConfS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterLogConfS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterLogConfS3Observation) DeepCopyInto(out *NewClusterClusterLogConfS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterLogConfS3Observation.
func (in *NewClusterClusterLogConfS3Observation) DeepCopy() *NewClusterClusterLogConfS3Observation {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterLogConfS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterLogConfS3Parameters) DeepCopyInto(out *NewClusterClusterLogConfS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterLogConfS3Parameters.
func (in *NewClusterClusterLogConfS3Parameters) DeepCopy() *NewClusterClusterLogConfS3Parameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterLogConfS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterMountInfoInitParameters) DeepCopyInto(out *NewClusterClusterMountInfoInitParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]ClusterMountInfoNetworkFilesystemInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterMountInfoInitParameters.
func (in *NewClusterClusterMountInfoInitParameters) DeepCopy() *NewClusterClusterMountInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterMountInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterMountInfoNetworkFilesystemInfoInitParameters) DeepCopyInto(out *NewClusterClusterMountInfoNetworkFilesystemInfoInitParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterMountInfoNetworkFilesystemInfoInitParameters.
func (in *NewClusterClusterMountInfoNetworkFilesystemInfoInitParameters) DeepCopy() *NewClusterClusterMountInfoNetworkFilesystemInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterMountInfoNetworkFilesystemInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterMountInfoNetworkFilesystemInfoObservation) DeepCopyInto(out *NewClusterClusterMountInfoNetworkFilesystemInfoObservation) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterMountInfoNetworkFilesystemInfoObservation.
func (in *NewClusterClusterMountInfoNetworkFilesystemInfoObservation) DeepCopy() *NewClusterClusterMountInfoNetworkFilesystemInfoObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterMountInfoNetworkFilesystemInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterMountInfoNetworkFilesystemInfoParameters) DeepCopyInto(out *NewClusterClusterMountInfoNetworkFilesystemInfoParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterMountInfoNetworkFilesystemInfoParameters.
func (in *NewClusterClusterMountInfoNetworkFilesystemInfoParameters) DeepCopy() *NewClusterClusterMountInfoNetworkFilesystemInfoParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterMountInfoNetworkFilesystemInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterMountInfoObservation) DeepCopyInto(out *NewClusterClusterMountInfoObservation) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]ClusterMountInfoNetworkFilesystemInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterMountInfoObservation.
func (in *NewClusterClusterMountInfoObservation) DeepCopy() *NewClusterClusterMountInfoObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterMountInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterClusterMountInfoParameters) DeepCopyInto(out *NewClusterClusterMountInfoParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]ClusterMountInfoNetworkFilesystemInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterClusterMountInfoParameters.
func (in *NewClusterClusterMountInfoParameters) DeepCopy() *NewClusterClusterMountInfoParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterClusterMountInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterDockerImageBasicAuthInitParameters) DeepCopyInto(out *NewClusterDockerImageBasicAuthInitParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterDockerImageBasicAuthInitParameters.
func (in *NewClusterDockerImageBasicAuthInitParameters) DeepCopy() *NewClusterDockerImageBasicAuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterDockerImageBasicAuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterDockerImageBasicAuthObservation) DeepCopyInto(out *NewClusterDockerImageBasicAuthObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterDockerImageBasicAuthObservation.
func (in *NewClusterDockerImageBasicAuthObservation) DeepCopy() *NewClusterDockerImageBasicAuthObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterDockerImageBasicAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterDockerImageBasicAuthParameters) DeepCopyInto(out *NewClusterDockerImageBasicAuthParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterDockerImageBasicAuthParameters.
func (in *NewClusterDockerImageBasicAuthParameters) DeepCopy() *NewClusterDockerImageBasicAuthParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterDockerImageBasicAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterDockerImageInitParameters) DeepCopyInto(out *NewClusterDockerImageInitParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]DockerImageBasicAuthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterDockerImageInitParameters.
func (in *NewClusterDockerImageInitParameters) DeepCopy() *NewClusterDockerImageInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterDockerImageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterDockerImageObservation) DeepCopyInto(out *NewClusterDockerImageObservation) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]DockerImageBasicAuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterDockerImageObservation.
func (in *NewClusterDockerImageObservation) DeepCopy() *NewClusterDockerImageObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterDockerImageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterDockerImageParameters) DeepCopyInto(out *NewClusterDockerImageParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]DockerImageBasicAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterDockerImageParameters.
func (in *NewClusterDockerImageParameters) DeepCopy() *NewClusterDockerImageParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterDockerImageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterGCPAttributesInitParameters) DeepCopyInto(out *NewClusterGCPAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterGCPAttributesInitParameters.
func (in *NewClusterGCPAttributesInitParameters) DeepCopy() *NewClusterGCPAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterGCPAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterGCPAttributesObservation) DeepCopyInto(out *NewClusterGCPAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterGCPAttributesObservation.
func (in *NewClusterGCPAttributesObservation) DeepCopy() *NewClusterGCPAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterGCPAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterGCPAttributesParameters) DeepCopyInto(out *NewClusterGCPAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterGCPAttributesParameters.
func (in *NewClusterGCPAttributesParameters) DeepCopy() *NewClusterGCPAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterGCPAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitParameters) DeepCopyInto(out *NewClusterInitParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]NewClusterAutoscaleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]NewClusterAwsAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]NewClusterAzureAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]NewClusterClusterLogConfInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]NewClusterClusterMountInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]NewClusterDockerImageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]NewClusterGCPAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]NewClusterInitScriptsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]NewClusterLibraryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]NewClusterWorkloadTypeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitParameters.
func (in *NewClusterInitParameters) DeepCopy() *NewClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsAbfssInitParameters) DeepCopyInto(out *NewClusterInitScriptsAbfssInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsAbfssInitParameters.
func (in *NewClusterInitScriptsAbfssInitParameters) DeepCopy() *NewClusterInitScriptsAbfssInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsAbfssInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsAbfssObservation) DeepCopyInto(out *NewClusterInitScriptsAbfssObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsAbfssObservation.
func (in *NewClusterInitScriptsAbfssObservation) DeepCopy() *NewClusterInitScriptsAbfssObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsAbfssObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsAbfssParameters) DeepCopyInto(out *NewClusterInitScriptsAbfssParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsAbfssParameters.
func (in *NewClusterInitScriptsAbfssParameters) DeepCopy() *NewClusterInitScriptsAbfssParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsAbfssParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsDbfsInitParameters) DeepCopyInto(out *NewClusterInitScriptsDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsDbfsInitParameters.
func (in *NewClusterInitScriptsDbfsInitParameters) DeepCopy() *NewClusterInitScriptsDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsDbfsObservation) DeepCopyInto(out *NewClusterInitScriptsDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsDbfsObservation.
func (in *NewClusterInitScriptsDbfsObservation) DeepCopy() *NewClusterInitScriptsDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsDbfsParameters) DeepCopyInto(out *NewClusterInitScriptsDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsDbfsParameters.
func (in *NewClusterInitScriptsDbfsParameters) DeepCopy() *NewClusterInitScriptsDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsFileInitParameters) DeepCopyInto(out *NewClusterInitScriptsFileInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsFileInitParameters.
func (in *NewClusterInitScriptsFileInitParameters) DeepCopy() *NewClusterInitScriptsFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsFileObservation) DeepCopyInto(out *NewClusterInitScriptsFileObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsFileObservation.
func (in *NewClusterInitScriptsFileObservation) DeepCopy() *NewClusterInitScriptsFileObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsFileParameters) DeepCopyInto(out *NewClusterInitScriptsFileParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsFileParameters.
func (in *NewClusterInitScriptsFileParameters) DeepCopy() *NewClusterInitScriptsFileParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsGcsInitParameters) DeepCopyInto(out *NewClusterInitScriptsGcsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsGcsInitParameters.
func (in *NewClusterInitScriptsGcsInitParameters) DeepCopy() *NewClusterInitScriptsGcsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsGcsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsGcsObservation) DeepCopyInto(out *NewClusterInitScriptsGcsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsGcsObservation.
func (in *NewClusterInitScriptsGcsObservation) DeepCopy() *NewClusterInitScriptsGcsObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsGcsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsGcsParameters) DeepCopyInto(out *NewClusterInitScriptsGcsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsGcsParameters.
func (in *NewClusterInitScriptsGcsParameters) DeepCopy() *NewClusterInitScriptsGcsParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsGcsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsInitParameters) DeepCopyInto(out *NewClusterInitScriptsInitParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]InitScriptsAbfssInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]NewClusterInitScriptsDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]InitScriptsFileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]InitScriptsGcsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]NewClusterInitScriptsS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]InitScriptsVolumesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]InitScriptsWorkspaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsInitParameters.
func (in *NewClusterInitScriptsInitParameters) DeepCopy() *NewClusterInitScriptsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsObservation) DeepCopyInto(out *NewClusterInitScriptsObservation) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]InitScriptsAbfssObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]NewClusterInitScriptsDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]InitScriptsFileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]InitScriptsGcsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]NewClusterInitScriptsS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]InitScriptsVolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]InitScriptsWorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsObservation.
func (in *NewClusterInitScriptsObservation) DeepCopy() *NewClusterInitScriptsObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsParameters) DeepCopyInto(out *NewClusterInitScriptsParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]InitScriptsAbfssParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]NewClusterInitScriptsDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]InitScriptsFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]InitScriptsGcsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]NewClusterInitScriptsS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]InitScriptsVolumesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]InitScriptsWorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsParameters.
func (in *NewClusterInitScriptsParameters) DeepCopy() *NewClusterInitScriptsParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsS3InitParameters) DeepCopyInto(out *NewClusterInitScriptsS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsS3InitParameters.
func (in *NewClusterInitScriptsS3InitParameters) DeepCopy() *NewClusterInitScriptsS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsS3Observation) DeepCopyInto(out *NewClusterInitScriptsS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsS3Observation.
func (in *NewClusterInitScriptsS3Observation) DeepCopy() *NewClusterInitScriptsS3Observation {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsS3Parameters) DeepCopyInto(out *NewClusterInitScriptsS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsS3Parameters.
func (in *NewClusterInitScriptsS3Parameters) DeepCopy() *NewClusterInitScriptsS3Parameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsVolumesInitParameters) DeepCopyInto(out *NewClusterInitScriptsVolumesInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsVolumesInitParameters.
func (in *NewClusterInitScriptsVolumesInitParameters) DeepCopy() *NewClusterInitScriptsVolumesInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsVolumesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsVolumesObservation) DeepCopyInto(out *NewClusterInitScriptsVolumesObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsVolumesObservation.
func (in *NewClusterInitScriptsVolumesObservation) DeepCopy() *NewClusterInitScriptsVolumesObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsVolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsVolumesParameters) DeepCopyInto(out *NewClusterInitScriptsVolumesParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsVolumesParameters.
func (in *NewClusterInitScriptsVolumesParameters) DeepCopy() *NewClusterInitScriptsVolumesParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsVolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsWorkspaceInitParameters) DeepCopyInto(out *NewClusterInitScriptsWorkspaceInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsWorkspaceInitParameters.
func (in *NewClusterInitScriptsWorkspaceInitParameters) DeepCopy() *NewClusterInitScriptsWorkspaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsWorkspaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsWorkspaceObservation) DeepCopyInto(out *NewClusterInitScriptsWorkspaceObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsWorkspaceObservation.
func (in *NewClusterInitScriptsWorkspaceObservation) DeepCopy() *NewClusterInitScriptsWorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsWorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterInitScriptsWorkspaceParameters) DeepCopyInto(out *NewClusterInitScriptsWorkspaceParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterInitScriptsWorkspaceParameters.
func (in *NewClusterInitScriptsWorkspaceParameters) DeepCopy() *NewClusterInitScriptsWorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterInitScriptsWorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterLibraryCranInitParameters) DeepCopyInto(out *NewClusterLibraryCranInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterLibraryCranInitParameters.
func (in *NewClusterLibraryCranInitParameters) DeepCopy() *NewClusterLibraryCranInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterLibraryCranInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterLibraryCranObservation) DeepCopyInto(out *NewClusterLibraryCranObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterLibraryCranObservation.
func (in *NewClusterLibraryCranObservation) DeepCopy() *NewClusterLibraryCranObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterLibraryCranObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterLibraryCranParameters) DeepCopyInto(out *NewClusterLibraryCranParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterLibraryCranParameters.
func (in *NewClusterLibraryCranParameters) DeepCopy() *NewClusterLibraryCranParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterLibraryCranParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterLibraryInitParameters) DeepCopyInto(out *NewClusterLibraryInitParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]LibraryCranInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]LibraryMavenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]LibraryPypiInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterLibraryInitParameters.
func (in *NewClusterLibraryInitParameters) DeepCopy() *NewClusterLibraryInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterLibraryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterLibraryMavenInitParameters) DeepCopyInto(out *NewClusterLibraryMavenInitParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterLibraryMavenInitParameters.
func (in *NewClusterLibraryMavenInitParameters) DeepCopy() *NewClusterLibraryMavenInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterLibraryMavenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterLibraryMavenObservation) DeepCopyInto(out *NewClusterLibraryMavenObservation) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterLibraryMavenObservation.
func (in *NewClusterLibraryMavenObservation) DeepCopy() *NewClusterLibraryMavenObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterLibraryMavenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterLibraryMavenParameters) DeepCopyInto(out *NewClusterLibraryMavenParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterLibraryMavenParameters.
func (in *NewClusterLibraryMavenParameters) DeepCopy() *NewClusterLibraryMavenParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterLibraryMavenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterLibraryObservation) DeepCopyInto(out *NewClusterLibraryObservation) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]LibraryCranObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]LibraryMavenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]LibraryPypiObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterLibraryObservation.
func (in *NewClusterLibraryObservation) DeepCopy() *NewClusterLibraryObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterLibraryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterLibraryParameters) DeepCopyInto(out *NewClusterLibraryParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]LibraryCranParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]LibraryMavenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]LibraryPypiParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterLibraryParameters.
func (in *NewClusterLibraryParameters) DeepCopy() *NewClusterLibraryParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterLibraryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterLibraryPypiInitParameters) DeepCopyInto(out *NewClusterLibraryPypiInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterLibraryPypiInitParameters.
func (in *NewClusterLibraryPypiInitParameters) DeepCopy() *NewClusterLibraryPypiInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterLibraryPypiInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterLibraryPypiObservation) DeepCopyInto(out *NewClusterLibraryPypiObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterLibraryPypiObservation.
func (in *NewClusterLibraryPypiObservation) DeepCopy() *NewClusterLibraryPypiObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterLibraryPypiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterLibraryPypiParameters) DeepCopyInto(out *NewClusterLibraryPypiParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterLibraryPypiParameters.
func (in *NewClusterLibraryPypiParameters) DeepCopy() *NewClusterLibraryPypiParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterLibraryPypiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterObservation) DeepCopyInto(out *NewClusterObservation) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]NewClusterAutoscaleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]NewClusterAwsAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]NewClusterAzureAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]NewClusterClusterLogConfObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]NewClusterClusterMountInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]NewClusterDockerImageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]NewClusterGCPAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]NewClusterInitScriptsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]NewClusterLibraryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]NewClusterWorkloadTypeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterObservation.
func (in *NewClusterObservation) DeepCopy() *NewClusterObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterParameters) DeepCopyInto(out *NewClusterParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]NewClusterAutoscaleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]NewClusterAwsAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]NewClusterAzureAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]NewClusterClusterLogConfParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]NewClusterClusterMountInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]NewClusterDockerImageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]NewClusterGCPAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]NewClusterInitScriptsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]NewClusterLibraryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]NewClusterWorkloadTypeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterParameters.
func (in *NewClusterParameters) DeepCopy() *NewClusterParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterWorkloadTypeClientsInitParameters) DeepCopyInto(out *NewClusterWorkloadTypeClientsInitParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterWorkloadTypeClientsInitParameters.
func (in *NewClusterWorkloadTypeClientsInitParameters) DeepCopy() *NewClusterWorkloadTypeClientsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterWorkloadTypeClientsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterWorkloadTypeClientsObservation) DeepCopyInto(out *NewClusterWorkloadTypeClientsObservation) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterWorkloadTypeClientsObservation.
func (in *NewClusterWorkloadTypeClientsObservation) DeepCopy() *NewClusterWorkloadTypeClientsObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterWorkloadTypeClientsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterWorkloadTypeClientsParameters) DeepCopyInto(out *NewClusterWorkloadTypeClientsParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterWorkloadTypeClientsParameters.
func (in *NewClusterWorkloadTypeClientsParameters) DeepCopy() *NewClusterWorkloadTypeClientsParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterWorkloadTypeClientsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterWorkloadTypeInitParameters) DeepCopyInto(out *NewClusterWorkloadTypeInitParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]WorkloadTypeClientsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterWorkloadTypeInitParameters.
func (in *NewClusterWorkloadTypeInitParameters) DeepCopy() *NewClusterWorkloadTypeInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterWorkloadTypeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterWorkloadTypeObservation) DeepCopyInto(out *NewClusterWorkloadTypeObservation) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]WorkloadTypeClientsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterWorkloadTypeObservation.
func (in *NewClusterWorkloadTypeObservation) DeepCopy() *NewClusterWorkloadTypeObservation {
	if in == nil {
		return nil
	}
	out := new(NewClusterWorkloadTypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewClusterWorkloadTypeParameters) DeepCopyInto(out *NewClusterWorkloadTypeParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]WorkloadTypeClientsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewClusterWorkloadTypeParameters.
func (in *NewClusterWorkloadTypeParameters) DeepCopy() *NewClusterWorkloadTypeParameters {
	if in == nil {
		return nil
	}
	out := new(NewClusterWorkloadTypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Notebook) DeepCopyInto(out *Notebook) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Notebook.
func (in *Notebook) DeepCopy() *Notebook {
	if in == nil {
		return nil
	}
	out := new(Notebook)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Notebook) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookInitParameters) DeepCopyInto(out *NotebookInitParameters) {
	*out = *in
	if in.ContentBase64 != nil {
		in, out := &in.ContentBase64, &out.ContentBase64
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.Language != nil {
		in, out := &in.Language, &out.Language
		*out = new(string)
		**out = **in
	}
	if in.Md5 != nil {
		in, out := &in.Md5, &out.Md5
		*out = new(string)
		**out = **in
	}
	if in.ObjectID != nil {
		in, out := &in.ObjectID, &out.ObjectID
		*out = new(float64)
		**out = **in
	}
	if in.ObjectType != nil {
		in, out := &in.ObjectType, &out.ObjectType
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookInitParameters.
func (in *NotebookInitParameters) DeepCopy() *NotebookInitParameters {
	if in == nil {
		return nil
	}
	out := new(NotebookInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookList) DeepCopyInto(out *NotebookList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Notebook, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookList.
func (in *NotebookList) DeepCopy() *NotebookList {
	if in == nil {
		return nil
	}
	out := new(NotebookList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NotebookList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookObservation) DeepCopyInto(out *NotebookObservation) {
	*out = *in
	if in.ContentBase64 != nil {
		in, out := &in.ContentBase64, &out.ContentBase64
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Language != nil {
		in, out := &in.Language, &out.Language
		*out = new(string)
		**out = **in
	}
	if in.Md5 != nil {
		in, out := &in.Md5, &out.Md5
		*out = new(string)
		**out = **in
	}
	if in.ObjectID != nil {
		in, out := &in.ObjectID, &out.ObjectID
		*out = new(float64)
		**out = **in
	}
	if in.ObjectType != nil {
		in, out := &in.ObjectType, &out.ObjectType
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WorkspacePath != nil {
		in, out := &in.WorkspacePath, &out.WorkspacePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookObservation.
func (in *NotebookObservation) DeepCopy() *NotebookObservation {
	if in == nil {
		return nil
	}
	out := new(NotebookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookParameters) DeepCopyInto(out *NotebookParameters) {
	*out = *in
	if in.ContentBase64 != nil {
		in, out := &in.ContentBase64, &out.ContentBase64
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.Language != nil {
		in, out := &in.Language, &out.Language
		*out = new(string)
		**out = **in
	}
	if in.Md5 != nil {
		in, out := &in.Md5, &out.Md5
		*out = new(string)
		**out = **in
	}
	if in.ObjectID != nil {
		in, out := &in.ObjectID, &out.ObjectID
		*out = new(float64)
		**out = **in
	}
	if in.ObjectType != nil {
		in, out := &in.ObjectType, &out.ObjectType
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookParameters.
func (in *NotebookParameters) DeepCopy() *NotebookParameters {
	if in == nil {
		return nil
	}
	out := new(NotebookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookSpec) DeepCopyInto(out *NotebookSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookSpec.
func (in *NotebookSpec) DeepCopy() *NotebookSpec {
	if in == nil {
		return nil
	}
	out := new(NotebookSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookStatus) DeepCopyInto(out *NotebookStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookStatus.
func (in *NotebookStatus) DeepCopy() *NotebookStatus {
	if in == nil {
		return nil
	}
	out := new(NotebookStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookTaskInitParameters) DeepCopyInto(out *NotebookTaskInitParameters) {
	*out = *in
	if in.BaseParameters != nil {
		in, out := &in.BaseParameters, &out.BaseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookTaskInitParameters.
func (in *NotebookTaskInitParameters) DeepCopy() *NotebookTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(NotebookTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookTaskObservation) DeepCopyInto(out *NotebookTaskObservation) {
	*out = *in
	if in.BaseParameters != nil {
		in, out := &in.BaseParameters, &out.BaseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookTaskObservation.
func (in *NotebookTaskObservation) DeepCopy() *NotebookTaskObservation {
	if in == nil {
		return nil
	}
	out := new(NotebookTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookTaskParameters) DeepCopyInto(out *NotebookTaskParameters) {
	*out = *in
	if in.BaseParameters != nil {
		in, out := &in.BaseParameters, &out.BaseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookTaskParameters.
func (in *NotebookTaskParameters) DeepCopy() *NotebookTaskParameters {
	if in == nil {
		return nil
	}
	out := new(NotebookTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationDestination) DeepCopyInto(out *NotificationDestination) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationDestination.
func (in *NotificationDestination) DeepCopy() *NotificationDestination {
	if in == nil {
		return nil
	}
	out := new(NotificationDestination)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NotificationDestination) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationDestinationConfigInitParameters) DeepCopyInto(out *NotificationDestinationConfigInitParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = make([]EmailInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GenericWebhook != nil {
		in, out := &in.GenericWebhook, &out.GenericWebhook
		*out = make([]GenericWebhookInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MicrosoftTeams != nil {
		in, out := &in.MicrosoftTeams, &out.MicrosoftTeams
		*out = make([]MicrosoftTeamsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pagerduty != nil {
		in, out := &in.Pagerduty, &out.Pagerduty
		*out = make([]PagerdutyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Slack != nil {
		in, out := &in.Slack, &out.Slack
		*out = make([]SlackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationDestinationConfigInitParameters.
func (in *NotificationDestinationConfigInitParameters) DeepCopy() *NotificationDestinationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationDestinationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationDestinationConfigObservation) DeepCopyInto(out *NotificationDestinationConfigObservation) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = make([]EmailObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GenericWebhook != nil {
		in, out := &in.GenericWebhook, &out.GenericWebhook
		*out = make([]GenericWebhookObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MicrosoftTeams != nil {
		in, out := &in.MicrosoftTeams, &out.MicrosoftTeams
		*out = make([]MicrosoftTeamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pagerduty != nil {
		in, out := &in.Pagerduty, &out.Pagerduty
		*out = make([]PagerdutyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Slack != nil {
		in, out := &in.Slack, &out.Slack
		*out = make([]SlackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationDestinationConfigObservation.
func (in *NotificationDestinationConfigObservation) DeepCopy() *NotificationDestinationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(NotificationDestinationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationDestinationConfigParameters) DeepCopyInto(out *NotificationDestinationConfigParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = make([]EmailParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GenericWebhook != nil {
		in, out := &in.GenericWebhook, &out.GenericWebhook
		*out = make([]GenericWebhookParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MicrosoftTeams != nil {
		in, out := &in.MicrosoftTeams, &out.MicrosoftTeams
		*out = make([]MicrosoftTeamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pagerduty != nil {
		in, out := &in.Pagerduty, &out.Pagerduty
		*out = make([]PagerdutyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Slack != nil {
		in, out := &in.Slack, &out.Slack
		*out = make([]SlackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationDestinationConfigParameters.
func (in *NotificationDestinationConfigParameters) DeepCopy() *NotificationDestinationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationDestinationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationDestinationInitParameters) DeepCopyInto(out *NotificationDestinationInitParameters) {
	*out = *in
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]NotificationDestinationConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DestinationType != nil {
		in, out := &in.DestinationType, &out.DestinationType
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationDestinationInitParameters.
func (in *NotificationDestinationInitParameters) DeepCopy() *NotificationDestinationInitParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationDestinationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationDestinationList) DeepCopyInto(out *NotificationDestinationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NotificationDestination, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationDestinationList.
func (in *NotificationDestinationList) DeepCopy() *NotificationDestinationList {
	if in == nil {
		return nil
	}
	out := new(NotificationDestinationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NotificationDestinationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationDestinationObservation) DeepCopyInto(out *NotificationDestinationObservation) {
	*out = *in
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]NotificationDestinationConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DestinationType != nil {
		in, out := &in.DestinationType, &out.DestinationType
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationDestinationObservation.
func (in *NotificationDestinationObservation) DeepCopy() *NotificationDestinationObservation {
	if in == nil {
		return nil
	}
	out := new(NotificationDestinationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationDestinationParameters) DeepCopyInto(out *NotificationDestinationParameters) {
	*out = *in
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]NotificationDestinationConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DestinationType != nil {
		in, out := &in.DestinationType, &out.DestinationType
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationDestinationParameters.
func (in *NotificationDestinationParameters) DeepCopy() *NotificationDestinationParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationDestinationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationDestinationSpec) DeepCopyInto(out *NotificationDestinationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationDestinationSpec.
func (in *NotificationDestinationSpec) DeepCopy() *NotificationDestinationSpec {
	if in == nil {
		return nil
	}
	out := new(NotificationDestinationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationDestinationStatus) DeepCopyInto(out *NotificationDestinationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationDestinationStatus.
func (in *NotificationDestinationStatus) DeepCopy() *NotificationDestinationStatus {
	if in == nil {
		return nil
	}
	out := new(NotificationDestinationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationInitParameters) DeepCopyInto(out *NotificationInitParameters) {
	*out = *in
	if in.Alerts != nil {
		in, out := &in.Alerts, &out.Alerts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EmailRecipients != nil {
		in, out := &in.EmailRecipients, &out.EmailRecipients
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationInitParameters.
func (in *NotificationInitParameters) DeepCopy() *NotificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationObservation) DeepCopyInto(out *NotificationObservation) {
	*out = *in
	if in.Alerts != nil {
		in, out := &in.Alerts, &out.Alerts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EmailRecipients != nil {
		in, out := &in.EmailRecipients, &out.EmailRecipients
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationObservation.
func (in *NotificationObservation) DeepCopy() *NotificationObservation {
	if in == nil {
		return nil
	}
	out := new(NotificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationParameters) DeepCopyInto(out *NotificationParameters) {
	*out = *in
	if in.Alerts != nil {
		in, out := &in.Alerts, &out.Alerts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EmailRecipients != nil {
		in, out := &in.EmailRecipients, &out.EmailRecipients
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationParameters.
func (in *NotificationParameters) DeepCopy() *NotificationParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationSettingsInitParameters) DeepCopyInto(out *NotificationSettingsInitParameters) {
	*out = *in
	if in.NoAlertForCanceledRuns != nil {
		in, out := &in.NoAlertForCanceledRuns, &out.NoAlertForCanceledRuns
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationSettingsInitParameters.
func (in *NotificationSettingsInitParameters) DeepCopy() *NotificationSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationSettingsObservation) DeepCopyInto(out *NotificationSettingsObservation) {
	*out = *in
	if in.NoAlertForCanceledRuns != nil {
		in, out := &in.NoAlertForCanceledRuns, &out.NoAlertForCanceledRuns
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationSettingsObservation.
func (in *NotificationSettingsObservation) DeepCopy() *NotificationSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(NotificationSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationSettingsParameters) DeepCopyInto(out *NotificationSettingsParameters) {
	*out = *in
	if in.NoAlertForCanceledRuns != nil {
		in, out := &in.NoAlertForCanceledRuns, &out.NoAlertForCanceledRuns
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationSettingsParameters.
func (in *NotificationSettingsParameters) DeepCopy() *NotificationSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationsInitParameters) DeepCopyInto(out *NotificationsInitParameters) {
	*out = *in
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]NotificationsOnFailureInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnNewClassificationTagDetected != nil {
		in, out := &in.OnNewClassificationTagDetected, &out.OnNewClassificationTagDetected
		*out = make([]OnNewClassificationTagDetectedInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationsInitParameters.
func (in *NotificationsInitParameters) DeepCopy() *NotificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationsObservation) DeepCopyInto(out *NotificationsObservation) {
	*out = *in
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]NotificationsOnFailureObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnNewClassificationTagDetected != nil {
		in, out := &in.OnNewClassificationTagDetected, &out.OnNewClassificationTagDetected
		*out = make([]OnNewClassificationTagDetectedObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationsObservation.
func (in *NotificationsObservation) DeepCopy() *NotificationsObservation {
	if in == nil {
		return nil
	}
	out := new(NotificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationsOnFailureInitParameters) DeepCopyInto(out *NotificationsOnFailureInitParameters) {
	*out = *in
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationsOnFailureInitParameters.
func (in *NotificationsOnFailureInitParameters) DeepCopy() *NotificationsOnFailureInitParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationsOnFailureInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationsOnFailureObservation) DeepCopyInto(out *NotificationsOnFailureObservation) {
	*out = *in
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationsOnFailureObservation.
func (in *NotificationsOnFailureObservation) DeepCopy() *NotificationsOnFailureObservation {
	if in == nil {
		return nil
	}
	out := new(NotificationsOnFailureObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationsOnFailureParameters) DeepCopyInto(out *NotificationsOnFailureParameters) {
	*out = *in
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationsOnFailureParameters.
func (in *NotificationsOnFailureParameters) DeepCopy() *NotificationsOnFailureParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationsOnFailureParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationsOnNewClassificationTagDetectedInitParameters) DeepCopyInto(out *NotificationsOnNewClassificationTagDetectedInitParameters) {
	*out = *in
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationsOnNewClassificationTagDetectedInitParameters.
func (in *NotificationsOnNewClassificationTagDetectedInitParameters) DeepCopy() *NotificationsOnNewClassificationTagDetectedInitParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationsOnNewClassificationTagDetectedInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationsOnNewClassificationTagDetectedObservation) DeepCopyInto(out *NotificationsOnNewClassificationTagDetectedObservation) {
	*out = *in
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationsOnNewClassificationTagDetectedObservation.
func (in *NotificationsOnNewClassificationTagDetectedObservation) DeepCopy() *NotificationsOnNewClassificationTagDetectedObservation {
	if in == nil {
		return nil
	}
	out := new(NotificationsOnNewClassificationTagDetectedObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationsOnNewClassificationTagDetectedParameters) DeepCopyInto(out *NotificationsOnNewClassificationTagDetectedParameters) {
	*out = *in
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationsOnNewClassificationTagDetectedParameters.
func (in *NotificationsOnNewClassificationTagDetectedParameters) DeepCopy() *NotificationsOnNewClassificationTagDetectedParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationsOnNewClassificationTagDetectedParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationsParameters) DeepCopyInto(out *NotificationsParameters) {
	*out = *in
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]NotificationsOnFailureParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnNewClassificationTagDetected != nil {
		in, out := &in.OnNewClassificationTagDetected, &out.OnNewClassificationTagDetected
		*out = make([]OnNewClassificationTagDetectedParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationsParameters.
func (in *NotificationsParameters) DeepCopy() *NotificationsParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NumberInitParameters) DeepCopyInto(out *NumberInitParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NumberInitParameters.
func (in *NumberInitParameters) DeepCopy() *NumberInitParameters {
	if in == nil {
		return nil
	}
	out := new(NumberInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NumberObservation) DeepCopyInto(out *NumberObservation) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NumberObservation.
func (in *NumberObservation) DeepCopy() *NumberObservation {
	if in == nil {
		return nil
	}
	out := new(NumberObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NumberParameters) DeepCopyInto(out *NumberParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NumberParameters.
func (in *NumberParameters) DeepCopy() *NumberParameters {
	if in == nil {
		return nil
	}
	out := new(NumberParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NumericValueInitParameters) DeepCopyInto(out *NumericValueInitParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NumericValueInitParameters.
func (in *NumericValueInitParameters) DeepCopy() *NumericValueInitParameters {
	if in == nil {
		return nil
	}
	out := new(NumericValueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NumericValueObservation) DeepCopyInto(out *NumericValueObservation) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NumericValueObservation.
func (in *NumericValueObservation) DeepCopy() *NumericValueObservation {
	if in == nil {
		return nil
	}
	out := new(NumericValueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NumericValueParameters) DeepCopyInto(out *NumericValueParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NumericValueParameters.
func (in *NumericValueParameters) DeepCopy() *NumericValueParameters {
	if in == nil {
		return nil
	}
	out := new(NumericValueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectInitParameters) DeepCopyInto(out *ObjectInitParameters) {
	*out = *in
	if in.AddedAt != nil {
		in, out := &in.AddedAt, &out.AddedAt
		*out = new(float64)
		**out = **in
	}
	if in.AddedBy != nil {
		in, out := &in.AddedBy, &out.AddedBy
		*out = new(string)
		**out = **in
	}
	if in.CdfEnabled != nil {
		in, out := &in.CdfEnabled, &out.CdfEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.DataObjectType != nil {
		in, out := &in.DataObjectType, &out.DataObjectType
		*out = new(string)
		**out = **in
	}
	if in.HistoryDataSharingStatus != nil {
		in, out := &in.HistoryDataSharingStatus, &out.HistoryDataSharingStatus
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Partition != nil {
		in, out := &in.Partition, &out.Partition
		*out = make([]PartitionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SharedAs != nil {
		in, out := &in.SharedAs, &out.SharedAs
		*out = new(string)
		**out = **in
	}
	if in.StartVersion != nil {
		in, out := &in.StartVersion, &out.StartVersion
		*out = new(float64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StringSharedAs != nil {
		in, out := &in.StringSharedAs, &out.StringSharedAs
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectInitParameters.
func (in *ObjectInitParameters) DeepCopy() *ObjectInitParameters {
	if in == nil {
		return nil
	}
	out := new(ObjectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectObservation) DeepCopyInto(out *ObjectObservation) {
	*out = *in
	if in.AddedAt != nil {
		in, out := &in.AddedAt, &out.AddedAt
		*out = new(float64)
		**out = **in
	}
	if in.AddedBy != nil {
		in, out := &in.AddedBy, &out.AddedBy
		*out = new(string)
		**out = **in
	}
	if in.CdfEnabled != nil {
		in, out := &in.CdfEnabled, &out.CdfEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.DataObjectType != nil {
		in, out := &in.DataObjectType, &out.DataObjectType
		*out = new(string)
		**out = **in
	}
	if in.HistoryDataSharingStatus != nil {
		in, out := &in.HistoryDataSharingStatus, &out.HistoryDataSharingStatus
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Partition != nil {
		in, out := &in.Partition, &out.Partition
		*out = make([]PartitionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SharedAs != nil {
		in, out := &in.SharedAs, &out.SharedAs
		*out = new(string)
		**out = **in
	}
	if in.StartVersion != nil {
		in, out := &in.StartVersion, &out.StartVersion
		*out = new(float64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StringSharedAs != nil {
		in, out := &in.StringSharedAs, &out.StringSharedAs
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectObservation.
func (in *ObjectObservation) DeepCopy() *ObjectObservation {
	if in == nil {
		return nil
	}
	out := new(ObjectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectParameters) DeepCopyInto(out *ObjectParameters) {
	*out = *in
	if in.AddedAt != nil {
		in, out := &in.AddedAt, &out.AddedAt
		*out = new(float64)
		**out = **in
	}
	if in.AddedBy != nil {
		in, out := &in.AddedBy, &out.AddedBy
		*out = new(string)
		**out = **in
	}
	if in.CdfEnabled != nil {
		in, out := &in.CdfEnabled, &out.CdfEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.DataObjectType != nil {
		in, out := &in.DataObjectType, &out.DataObjectType
		*out = new(string)
		**out = **in
	}
	if in.HistoryDataSharingStatus != nil {
		in, out := &in.HistoryDataSharingStatus, &out.HistoryDataSharingStatus
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Partition != nil {
		in, out := &in.Partition, &out.Partition
		*out = make([]PartitionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SharedAs != nil {
		in, out := &in.SharedAs, &out.SharedAs
		*out = new(string)
		**out = **in
	}
	if in.StartVersion != nil {
		in, out := &in.StartVersion, &out.StartVersion
		*out = new(float64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StringSharedAs != nil {
		in, out := &in.StringSharedAs, &out.StringSharedAs
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectParameters.
func (in *ObjectParameters) DeepCopy() *ObjectParameters {
	if in == nil {
		return nil
	}
	out := new(ObjectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectPartitionInitParameters) DeepCopyInto(out *ObjectPartitionInitParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]ObjectPartitionValueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectPartitionInitParameters.
func (in *ObjectPartitionInitParameters) DeepCopy() *ObjectPartitionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ObjectPartitionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectPartitionObservation) DeepCopyInto(out *ObjectPartitionObservation) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]ObjectPartitionValueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectPartitionObservation.
func (in *ObjectPartitionObservation) DeepCopy() *ObjectPartitionObservation {
	if in == nil {
		return nil
	}
	out := new(ObjectPartitionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectPartitionParameters) DeepCopyInto(out *ObjectPartitionParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]ObjectPartitionValueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectPartitionParameters.
func (in *ObjectPartitionParameters) DeepCopy() *ObjectPartitionParameters {
	if in == nil {
		return nil
	}
	out := new(ObjectPartitionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectPartitionValueInitParameters) DeepCopyInto(out *ObjectPartitionValueInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.RecipientPropertyKey != nil {
		in, out := &in.RecipientPropertyKey, &out.RecipientPropertyKey
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectPartitionValueInitParameters.
func (in *ObjectPartitionValueInitParameters) DeepCopy() *ObjectPartitionValueInitParameters {
	if in == nil {
		return nil
	}
	out := new(ObjectPartitionValueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectPartitionValueObservation) DeepCopyInto(out *ObjectPartitionValueObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.RecipientPropertyKey != nil {
		in, out := &in.RecipientPropertyKey, &out.RecipientPropertyKey
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectPartitionValueObservation.
func (in *ObjectPartitionValueObservation) DeepCopy() *ObjectPartitionValueObservation {
	if in == nil {
		return nil
	}
	out := new(ObjectPartitionValueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectPartitionValueParameters) DeepCopyInto(out *ObjectPartitionValueParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.RecipientPropertyKey != nil {
		in, out := &in.RecipientPropertyKey, &out.RecipientPropertyKey
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectPartitionValueParameters.
func (in *ObjectPartitionValueParameters) DeepCopy() *ObjectPartitionValueParameters {
	if in == nil {
		return nil
	}
	out := new(ObjectPartitionValueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectsInitParameters) DeepCopyInto(out *ObjectsInitParameters) {
	*out = *in
	if in.Report != nil {
		in, out := &in.Report, &out.Report
		*out = make([]ReportInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = make([]SchemaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = make([]ObjectsTableInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectsInitParameters.
func (in *ObjectsInitParameters) DeepCopy() *ObjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ObjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectsObservation) DeepCopyInto(out *ObjectsObservation) {
	*out = *in
	if in.Report != nil {
		in, out := &in.Report, &out.Report
		*out = make([]ReportObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = make([]SchemaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = make([]ObjectsTableObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectsObservation.
func (in *ObjectsObservation) DeepCopy() *ObjectsObservation {
	if in == nil {
		return nil
	}
	out := new(ObjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectsParameters) DeepCopyInto(out *ObjectsParameters) {
	*out = *in
	if in.Report != nil {
		in, out := &in.Report, &out.Report
		*out = make([]ReportParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = make([]SchemaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = make([]ObjectsTableParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectsParameters.
func (in *ObjectsParameters) DeepCopy() *ObjectsParameters {
	if in == nil {
		return nil
	}
	out := new(ObjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectsTableInitParameters) DeepCopyInto(out *ObjectsTableInitParameters) {
	*out = *in
	if in.DestinationCatalog != nil {
		in, out := &in.DestinationCatalog, &out.DestinationCatalog
		*out = new(string)
		**out = **in
	}
	if in.DestinationSchema != nil {
		in, out := &in.DestinationSchema, &out.DestinationSchema
		*out = new(string)
		**out = **in
	}
	if in.DestinationTable != nil {
		in, out := &in.DestinationTable, &out.DestinationTable
		*out = new(string)
		**out = **in
	}
	if in.SourceCatalog != nil {
		in, out := &in.SourceCatalog, &out.SourceCatalog
		*out = new(string)
		**out = **in
	}
	if in.SourceSchema != nil {
		in, out := &in.SourceSchema, &out.SourceSchema
		*out = new(string)
		**out = **in
	}
	if in.SourceTable != nil {
		in, out := &in.SourceTable, &out.SourceTable
		*out = new(string)
		**out = **in
	}
	if in.TableConfiguration != nil {
		in, out := &in.TableConfiguration, &out.TableConfiguration
		*out = make([]TableTableConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectsTableInitParameters.
func (in *ObjectsTableInitParameters) DeepCopy() *ObjectsTableInitParameters {
	if in == nil {
		return nil
	}
	out := new(ObjectsTableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectsTableObservation) DeepCopyInto(out *ObjectsTableObservation) {
	*out = *in
	if in.DestinationCatalog != nil {
		in, out := &in.DestinationCatalog, &out.DestinationCatalog
		*out = new(string)
		**out = **in
	}
	if in.DestinationSchema != nil {
		in, out := &in.DestinationSchema, &out.DestinationSchema
		*out = new(string)
		**out = **in
	}
	if in.DestinationTable != nil {
		in, out := &in.DestinationTable, &out.DestinationTable
		*out = new(string)
		**out = **in
	}
	if in.SourceCatalog != nil {
		in, out := &in.SourceCatalog, &out.SourceCatalog
		*out = new(string)
		**out = **in
	}
	if in.SourceSchema != nil {
		in, out := &in.SourceSchema, &out.SourceSchema
		*out = new(string)
		**out = **in
	}
	if in.SourceTable != nil {
		in, out := &in.SourceTable, &out.SourceTable
		*out = new(string)
		**out = **in
	}
	if in.TableConfiguration != nil {
		in, out := &in.TableConfiguration, &out.TableConfiguration
		*out = make([]TableTableConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectsTableObservation.
func (in *ObjectsTableObservation) DeepCopy() *ObjectsTableObservation {
	if in == nil {
		return nil
	}
	out := new(ObjectsTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectsTableParameters) DeepCopyInto(out *ObjectsTableParameters) {
	*out = *in
	if in.DestinationCatalog != nil {
		in, out := &in.DestinationCatalog, &out.DestinationCatalog
		*out = new(string)
		**out = **in
	}
	if in.DestinationSchema != nil {
		in, out := &in.DestinationSchema, &out.DestinationSchema
		*out = new(string)
		**out = **in
	}
	if in.DestinationTable != nil {
		in, out := &in.DestinationTable, &out.DestinationTable
		*out = new(string)
		**out = **in
	}
	if in.SourceCatalog != nil {
		in, out := &in.SourceCatalog, &out.SourceCatalog
		*out = new(string)
		**out = **in
	}
	if in.SourceSchema != nil {
		in, out := &in.SourceSchema, &out.SourceSchema
		*out = new(string)
		**out = **in
	}
	if in.SourceTable != nil {
		in, out := &in.SourceTable, &out.SourceTable
		*out = new(string)
		**out = **in
	}
	if in.TableConfiguration != nil {
		in, out := &in.TableConfiguration, &out.TableConfiguration
		*out = make([]TableTableConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectsTableParameters.
func (in *ObjectsTableParameters) DeepCopy() *ObjectsTableParameters {
	if in == nil {
		return nil
	}
	out := new(ObjectsTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OboToken) DeepCopyInto(out *OboToken) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OboToken.
func (in *OboToken) DeepCopy() *OboToken {
	if in == nil {
		return nil
	}
	out := new(OboToken)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OboToken) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OboTokenInitParameters) DeepCopyInto(out *OboTokenInitParameters) {
	*out = *in
	if in.ApplicationID != nil {
		in, out := &in.ApplicationID, &out.ApplicationID
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.LifetimeSeconds != nil {
		in, out := &in.LifetimeSeconds, &out.LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OboTokenInitParameters.
func (in *OboTokenInitParameters) DeepCopy() *OboTokenInitParameters {
	if in == nil {
		return nil
	}
	out := new(OboTokenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OboTokenList) DeepCopyInto(out *OboTokenList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OboToken, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OboTokenList.
func (in *OboTokenList) DeepCopy() *OboTokenList {
	if in == nil {
		return nil
	}
	out := new(OboTokenList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OboTokenList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OboTokenObservation) DeepCopyInto(out *OboTokenObservation) {
	*out = *in
	if in.ApplicationID != nil {
		in, out := &in.ApplicationID, &out.ApplicationID
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LifetimeSeconds != nil {
		in, out := &in.LifetimeSeconds, &out.LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OboTokenObservation.
func (in *OboTokenObservation) DeepCopy() *OboTokenObservation {
	if in == nil {
		return nil
	}
	out := new(OboTokenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OboTokenParameters) DeepCopyInto(out *OboTokenParameters) {
	*out = *in
	if in.ApplicationID != nil {
		in, out := &in.ApplicationID, &out.ApplicationID
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.LifetimeSeconds != nil {
		in, out := &in.LifetimeSeconds, &out.LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OboTokenParameters.
func (in *OboTokenParameters) DeepCopy() *OboTokenParameters {
	if in == nil {
		return nil
	}
	out := new(OboTokenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OboTokenSpec) DeepCopyInto(out *OboTokenSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OboTokenSpec.
func (in *OboTokenSpec) DeepCopy() *OboTokenSpec {
	if in == nil {
		return nil
	}
	out := new(OboTokenSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OboTokenStatus) DeepCopyInto(out *OboTokenStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OboTokenStatus.
func (in *OboTokenStatus) DeepCopy() *OboTokenStatus {
	if in == nil {
		return nil
	}
	out := new(OboTokenStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OdbcParamsInitParameters) DeepCopyInto(out *OdbcParamsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OdbcParamsInitParameters.
func (in *OdbcParamsInitParameters) DeepCopy() *OdbcParamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OdbcParamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OdbcParamsObservation) DeepCopyInto(out *OdbcParamsObservation) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OdbcParamsObservation.
func (in *OdbcParamsObservation) DeepCopy() *OdbcParamsObservation {
	if in == nil {
		return nil
	}
	out := new(OdbcParamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OdbcParamsParameters) DeepCopyInto(out *OdbcParamsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OdbcParamsParameters.
func (in *OdbcParamsParameters) DeepCopy() *OdbcParamsParameters {
	if in == nil {
		return nil
	}
	out := new(OdbcParamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnDurationWarningThresholdExceededInitParameters) DeepCopyInto(out *OnDurationWarningThresholdExceededInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnDurationWarningThresholdExceededInitParameters.
func (in *OnDurationWarningThresholdExceededInitParameters) DeepCopy() *OnDurationWarningThresholdExceededInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnDurationWarningThresholdExceededInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnDurationWarningThresholdExceededObservation) DeepCopyInto(out *OnDurationWarningThresholdExceededObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnDurationWarningThresholdExceededObservation.
func (in *OnDurationWarningThresholdExceededObservation) DeepCopy() *OnDurationWarningThresholdExceededObservation {
	if in == nil {
		return nil
	}
	out := new(OnDurationWarningThresholdExceededObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnDurationWarningThresholdExceededParameters) DeepCopyInto(out *OnDurationWarningThresholdExceededParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnDurationWarningThresholdExceededParameters.
func (in *OnDurationWarningThresholdExceededParameters) DeepCopy() *OnDurationWarningThresholdExceededParameters {
	if in == nil {
		return nil
	}
	out := new(OnDurationWarningThresholdExceededParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnFailureInitParameters) DeepCopyInto(out *OnFailureInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnFailureInitParameters.
func (in *OnFailureInitParameters) DeepCopy() *OnFailureInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnFailureInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnFailureObservation) DeepCopyInto(out *OnFailureObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnFailureObservation.
func (in *OnFailureObservation) DeepCopy() *OnFailureObservation {
	if in == nil {
		return nil
	}
	out := new(OnFailureObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnFailureParameters) DeepCopyInto(out *OnFailureParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnFailureParameters.
func (in *OnFailureParameters) DeepCopy() *OnFailureParameters {
	if in == nil {
		return nil
	}
	out := new(OnFailureParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnNewClassificationTagDetectedInitParameters) DeepCopyInto(out *OnNewClassificationTagDetectedInitParameters) {
	*out = *in
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnNewClassificationTagDetectedInitParameters.
func (in *OnNewClassificationTagDetectedInitParameters) DeepCopy() *OnNewClassificationTagDetectedInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnNewClassificationTagDetectedInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnNewClassificationTagDetectedObservation) DeepCopyInto(out *OnNewClassificationTagDetectedObservation) {
	*out = *in
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnNewClassificationTagDetectedObservation.
func (in *OnNewClassificationTagDetectedObservation) DeepCopy() *OnNewClassificationTagDetectedObservation {
	if in == nil {
		return nil
	}
	out := new(OnNewClassificationTagDetectedObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnNewClassificationTagDetectedParameters) DeepCopyInto(out *OnNewClassificationTagDetectedParameters) {
	*out = *in
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnNewClassificationTagDetectedParameters.
func (in *OnNewClassificationTagDetectedParameters) DeepCopy() *OnNewClassificationTagDetectedParameters {
	if in == nil {
		return nil
	}
	out := new(OnNewClassificationTagDetectedParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnStartInitParameters) DeepCopyInto(out *OnStartInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnStartInitParameters.
func (in *OnStartInitParameters) DeepCopy() *OnStartInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnStartInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnStartObservation) DeepCopyInto(out *OnStartObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnStartObservation.
func (in *OnStartObservation) DeepCopy() *OnStartObservation {
	if in == nil {
		return nil
	}
	out := new(OnStartObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnStartParameters) DeepCopyInto(out *OnStartParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnStartParameters.
func (in *OnStartParameters) DeepCopy() *OnStartParameters {
	if in == nil {
		return nil
	}
	out := new(OnStartParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnStreamingBacklogExceededInitParameters) DeepCopyInto(out *OnStreamingBacklogExceededInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnStreamingBacklogExceededInitParameters.
func (in *OnStreamingBacklogExceededInitParameters) DeepCopy() *OnStreamingBacklogExceededInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnStreamingBacklogExceededInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnStreamingBacklogExceededObservation) DeepCopyInto(out *OnStreamingBacklogExceededObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnStreamingBacklogExceededObservation.
func (in *OnStreamingBacklogExceededObservation) DeepCopy() *OnStreamingBacklogExceededObservation {
	if in == nil {
		return nil
	}
	out := new(OnStreamingBacklogExceededObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnStreamingBacklogExceededParameters) DeepCopyInto(out *OnStreamingBacklogExceededParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnStreamingBacklogExceededParameters.
func (in *OnStreamingBacklogExceededParameters) DeepCopy() *OnStreamingBacklogExceededParameters {
	if in == nil {
		return nil
	}
	out := new(OnStreamingBacklogExceededParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnSuccessInitParameters) DeepCopyInto(out *OnSuccessInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnSuccessInitParameters.
func (in *OnSuccessInitParameters) DeepCopy() *OnSuccessInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnSuccessInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnSuccessObservation) DeepCopyInto(out *OnSuccessObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnSuccessObservation.
func (in *OnSuccessObservation) DeepCopy() *OnSuccessObservation {
	if in == nil {
		return nil
	}
	out := new(OnSuccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnSuccessParameters) DeepCopyInto(out *OnSuccessParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnSuccessParameters.
func (in *OnSuccessParameters) DeepCopy() *OnSuccessParameters {
	if in == nil {
		return nil
	}
	out := new(OnSuccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnlineTable) DeepCopyInto(out *OnlineTable) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnlineTable.
func (in *OnlineTable) DeepCopy() *OnlineTable {
	if in == nil {
		return nil
	}
	out := new(OnlineTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OnlineTable) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnlineTableInitParameters) DeepCopyInto(out *OnlineTableInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]OnlineTableSpecInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnlineTableInitParameters.
func (in *OnlineTableInitParameters) DeepCopy() *OnlineTableInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnlineTableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnlineTableList) DeepCopyInto(out *OnlineTableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OnlineTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnlineTableList.
func (in *OnlineTableList) DeepCopy() *OnlineTableList {
	if in == nil {
		return nil
	}
	out := new(OnlineTableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OnlineTableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnlineTableObservation) DeepCopyInto(out *OnlineTableObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]OnlineTableSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = make([]StatusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableServingURL != nil {
		in, out := &in.TableServingURL, &out.TableServingURL
		*out = new(string)
		**out = **in
	}
	if in.UnityCatalogProvisioningState != nil {
		in, out := &in.UnityCatalogProvisioningState, &out.UnityCatalogProvisioningState
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnlineTableObservation.
func (in *OnlineTableObservation) DeepCopy() *OnlineTableObservation {
	if in == nil {
		return nil
	}
	out := new(OnlineTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnlineTableParameters) DeepCopyInto(out *OnlineTableParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]OnlineTableSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnlineTableParameters.
func (in *OnlineTableParameters) DeepCopy() *OnlineTableParameters {
	if in == nil {
		return nil
	}
	out := new(OnlineTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnlineTableSpec) DeepCopyInto(out *OnlineTableSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnlineTableSpec.
func (in *OnlineTableSpec) DeepCopy() *OnlineTableSpec {
	if in == nil {
		return nil
	}
	out := new(OnlineTableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnlineTableSpecInitParameters) DeepCopyInto(out *OnlineTableSpecInitParameters) {
	*out = *in
	if in.PerformFullCopy != nil {
		in, out := &in.PerformFullCopy, &out.PerformFullCopy
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryKeyColumns != nil {
		in, out := &in.PrimaryKeyColumns, &out.PrimaryKeyColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RunContinuously != nil {
		in, out := &in.RunContinuously, &out.RunContinuously
		*out = make([]RunContinuouslyInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.RunTriggered != nil {
		in, out := &in.RunTriggered, &out.RunTriggered
		*out = make([]RunTriggeredInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.SourceTableFullName != nil {
		in, out := &in.SourceTableFullName, &out.SourceTableFullName
		*out = new(string)
		**out = **in
	}
	if in.TimeseriesKey != nil {
		in, out := &in.TimeseriesKey, &out.TimeseriesKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnlineTableSpecInitParameters.
func (in *OnlineTableSpecInitParameters) DeepCopy() *OnlineTableSpecInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnlineTableSpecInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnlineTableSpecObservation) DeepCopyInto(out *OnlineTableSpecObservation) {
	*out = *in
	if in.PerformFullCopy != nil {
		in, out := &in.PerformFullCopy, &out.PerformFullCopy
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
	if in.PrimaryKeyColumns != nil {
		in, out := &in.PrimaryKeyColumns, &out.PrimaryKeyColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RunContinuously != nil {
		in, out := &in.RunContinuously, &out.RunContinuously
		*out = make([]RunContinuouslyParameters, len(*in))
		copy(*out, *in)
	}
	if in.RunTriggered != nil {
		in, out := &in.RunTriggered, &out.RunTriggered
		*out = make([]RunTriggeredParameters, len(*in))
		copy(*out, *in)
	}
	if in.SourceTableFullName != nil {
		in, out := &in.SourceTableFullName, &out.SourceTableFullName
		*out = new(string)
		**out = **in
	}
	if in.TimeseriesKey != nil {
		in, out := &in.TimeseriesKey, &out.TimeseriesKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnlineTableSpecObservation.
func (in *OnlineTableSpecObservation) DeepCopy() *OnlineTableSpecObservation {
	if in == nil {
		return nil
	}
	out := new(OnlineTableSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnlineTableSpecParameters) DeepCopyInto(out *OnlineTableSpecParameters) {
	*out = *in
	if in.PerformFullCopy != nil {
		in, out := &in.PerformFullCopy, &out.PerformFullCopy
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryKeyColumns != nil {
		in, out := &in.PrimaryKeyColumns, &out.PrimaryKeyColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RunContinuously != nil {
		in, out := &in.RunContinuously, &out.RunContinuously
		*out = make([]RunContinuouslyParameters, len(*in))
		copy(*out, *in)
	}
	if in.RunTriggered != nil {
		in, out := &in.RunTriggered, &out.RunTriggered
		*out = make([]RunTriggeredParameters, len(*in))
		copy(*out, *in)
	}
	if in.SourceTableFullName != nil {
		in, out := &in.SourceTableFullName, &out.SourceTableFullName
		*out = new(string)
		**out = **in
	}
	if in.TimeseriesKey != nil {
		in, out := &in.TimeseriesKey, &out.TimeseriesKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnlineTableSpecParameters.
func (in *OnlineTableSpecParameters) DeepCopy() *OnlineTableSpecParameters {
	if in == nil {
		return nil
	}
	out := new(OnlineTableSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnlineTableStatus) DeepCopyInto(out *OnlineTableStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnlineTableStatus.
func (in *OnlineTableStatus) DeepCopy() *OnlineTableStatus {
	if in == nil {
		return nil
	}
	out := new(OnlineTableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenaiConfigInitParameters) DeepCopyInto(out *OpenaiConfigInitParameters) {
	*out = *in
	if in.MicrosoftEntraClientID != nil {
		in, out := &in.MicrosoftEntraClientID, &out.MicrosoftEntraClientID
		*out = new(string)
		**out = **in
	}
	if in.MicrosoftEntraClientSecret != nil {
		in, out := &in.MicrosoftEntraClientSecret, &out.MicrosoftEntraClientSecret
		*out = new(string)
		**out = **in
	}
	if in.MicrosoftEntraClientSecretPlaintext != nil {
		in, out := &in.MicrosoftEntraClientSecretPlaintext, &out.MicrosoftEntraClientSecretPlaintext
		*out = new(string)
		**out = **in
	}
	if in.MicrosoftEntraTenantID != nil {
		in, out := &in.MicrosoftEntraTenantID, &out.MicrosoftEntraTenantID
		*out = new(string)
		**out = **in
	}
	if in.OpenaiAPIBase != nil {
		in, out := &in.OpenaiAPIBase, &out.OpenaiAPIBase
		*out = new(string)
		**out = **in
	}
	if in.OpenaiAPIKey != nil {
		in, out := &in.OpenaiAPIKey, &out.OpenaiAPIKey
		*out = new(string)
		**out = **in
	}
	if in.OpenaiAPIKeyPlaintext != nil {
		in, out := &in.OpenaiAPIKeyPlaintext, &out.OpenaiAPIKeyPlaintext
		*out = new(string)
		**out = **in
	}
	if in.OpenaiAPIType != nil {
		in, out := &in.OpenaiAPIType, &out.OpenaiAPIType
		*out = new(string)
		**out = **in
	}
	if in.OpenaiAPIVersion != nil {
		in, out := &in.OpenaiAPIVersion, &out.OpenaiAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.OpenaiDeploymentName != nil {
		in, out := &in.OpenaiDeploymentName, &out.OpenaiDeploymentName
		*out = new(string)
		**out = **in
	}
	if in.OpenaiOrganization != nil {
		in, out := &in.OpenaiOrganization, &out.OpenaiOrganization
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenaiConfigInitParameters.
func (in *OpenaiConfigInitParameters) DeepCopy() *OpenaiConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(OpenaiConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenaiConfigObservation) DeepCopyInto(out *OpenaiConfigObservation) {
	*out = *in
	if in.MicrosoftEntraClientID != nil {
		in, out := &in.MicrosoftEntraClientID, &out.MicrosoftEntraClientID
		*out = new(string)
		**out = **in
	}
	if in.MicrosoftEntraClientSecret != nil {
		in, out := &in.MicrosoftEntraClientSecret, &out.MicrosoftEntraClientSecret
		*out = new(string)
		**out = **in
	}
	if in.MicrosoftEntraClientSecretPlaintext != nil {
		in, out := &in.MicrosoftEntraClientSecretPlaintext, &out.MicrosoftEntraClientSecretPlaintext
		*out = new(string)
		**out = **in
	}
	if in.MicrosoftEntraTenantID != nil {
		in, out := &in.MicrosoftEntraTenantID, &out.MicrosoftEntraTenantID
		*out = new(string)
		**out = **in
	}
	if in.OpenaiAPIBase != nil {
		in, out := &in.OpenaiAPIBase, &out.OpenaiAPIBase
		*out = new(string)
		**out = **in
	}
	if in.OpenaiAPIKey != nil {
		in, out := &in.OpenaiAPIKey, &out.OpenaiAPIKey
		*out = new(string)
		**out = **in
	}
	if in.OpenaiAPIKeyPlaintext != nil {
		in, out := &in.OpenaiAPIKeyPlaintext, &out.OpenaiAPIKeyPlaintext
		*out = new(string)
		**out = **in
	}
	if in.OpenaiAPIType != nil {
		in, out := &in.OpenaiAPIType, &out.OpenaiAPIType
		*out = new(string)
		**out = **in
	}
	if in.OpenaiAPIVersion != nil {
		in, out := &in.OpenaiAPIVersion, &out.OpenaiAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.OpenaiDeploymentName != nil {
		in, out := &in.OpenaiDeploymentName, &out.OpenaiDeploymentName
		*out = new(string)
		**out = **in
	}
	if in.OpenaiOrganization != nil {
		in, out := &in.OpenaiOrganization, &out.OpenaiOrganization
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenaiConfigObservation.
func (in *OpenaiConfigObservation) DeepCopy() *OpenaiConfigObservation {
	if in == nil {
		return nil
	}
	out := new(OpenaiConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenaiConfigParameters) DeepCopyInto(out *OpenaiConfigParameters) {
	*out = *in
	if in.MicrosoftEntraClientID != nil {
		in, out := &in.MicrosoftEntraClientID, &out.MicrosoftEntraClientID
		*out = new(string)
		**out = **in
	}
	if in.MicrosoftEntraClientSecret != nil {
		in, out := &in.MicrosoftEntraClientSecret, &out.MicrosoftEntraClientSecret
		*out = new(string)
		**out = **in
	}
	if in.MicrosoftEntraClientSecretPlaintext != nil {
		in, out := &in.MicrosoftEntraClientSecretPlaintext, &out.MicrosoftEntraClientSecretPlaintext
		*out = new(string)
		**out = **in
	}
	if in.MicrosoftEntraTenantID != nil {
		in, out := &in.MicrosoftEntraTenantID, &out.MicrosoftEntraTenantID
		*out = new(string)
		**out = **in
	}
	if in.OpenaiAPIBase != nil {
		in, out := &in.OpenaiAPIBase, &out.OpenaiAPIBase
		*out = new(string)
		**out = **in
	}
	if in.OpenaiAPIKey != nil {
		in, out := &in.OpenaiAPIKey, &out.OpenaiAPIKey
		*out = new(string)
		**out = **in
	}
	if in.OpenaiAPIKeyPlaintext != nil {
		in, out := &in.OpenaiAPIKeyPlaintext, &out.OpenaiAPIKeyPlaintext
		*out = new(string)
		**out = **in
	}
	if in.OpenaiAPIType != nil {
		in, out := &in.OpenaiAPIType, &out.OpenaiAPIType
		*out = new(string)
		**out = **in
	}
	if in.OpenaiAPIVersion != nil {
		in, out := &in.OpenaiAPIVersion, &out.OpenaiAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.OpenaiDeploymentName != nil {
		in, out := &in.OpenaiDeploymentName, &out.OpenaiDeploymentName
		*out = new(string)
		**out = **in
	}
	if in.OpenaiOrganization != nil {
		in, out := &in.OpenaiOrganization, &out.OpenaiOrganization
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenaiConfigParameters.
func (in *OpenaiConfigParameters) DeepCopy() *OpenaiConfigParameters {
	if in == nil {
		return nil
	}
	out := new(OpenaiConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperandInitParameters) DeepCopyInto(out *OperandInitParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = make([]ColumnInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperandInitParameters.
func (in *OperandInitParameters) DeepCopy() *OperandInitParameters {
	if in == nil {
		return nil
	}
	out := new(OperandInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperandObservation) DeepCopyInto(out *OperandObservation) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = make([]ColumnObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperandObservation.
func (in *OperandObservation) DeepCopy() *OperandObservation {
	if in == nil {
		return nil
	}
	out := new(OperandObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperandParameters) DeepCopyInto(out *OperandParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = make([]ColumnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperandParameters.
func (in *OperandParameters) DeepCopy() *OperandParameters {
	if in == nil {
		return nil
	}
	out := new(OperandParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsInitParameters) DeepCopyInto(out *OptionsInitParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.CustomBody != nil {
		in, out := &in.CustomBody, &out.CustomBody
		*out = new(string)
		**out = **in
	}
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.EmptyResultState != nil {
		in, out := &in.EmptyResultState, &out.EmptyResultState
		*out = new(string)
		**out = **in
	}
	if in.Muted != nil {
		in, out := &in.Muted, &out.Muted
		*out = new(bool)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsInitParameters.
func (in *OptionsInitParameters) DeepCopy() *OptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsObservation) DeepCopyInto(out *OptionsObservation) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.CustomBody != nil {
		in, out := &in.CustomBody, &out.CustomBody
		*out = new(string)
		**out = **in
	}
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.EmptyResultState != nil {
		in, out := &in.EmptyResultState, &out.EmptyResultState
		*out = new(string)
		**out = **in
	}
	if in.Muted != nil {
		in, out := &in.Muted, &out.Muted
		*out = new(bool)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsObservation.
func (in *OptionsObservation) DeepCopy() *OptionsObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsParameters) DeepCopyInto(out *OptionsParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.CustomBody != nil {
		in, out := &in.CustomBody, &out.CustomBody
		*out = new(string)
		**out = **in
	}
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.EmptyResultState != nil {
		in, out := &in.EmptyResultState, &out.EmptyResultState
		*out = new(string)
		**out = **in
	}
	if in.Muted != nil {
		in, out := &in.Muted, &out.Muted
		*out = new(bool)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsParameters.
func (in *OptionsParameters) DeepCopy() *OptionsParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutputInitParameters) DeepCopyInto(out *OutputInitParameters) {
	*out = *in
	if in.InvalidKeywords != nil {
		in, out := &in.InvalidKeywords, &out.InvalidKeywords
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Pii != nil {
		in, out := &in.Pii, &out.Pii
		*out = make([]OutputPiiInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Safety != nil {
		in, out := &in.Safety, &out.Safety
		*out = new(bool)
		**out = **in
	}
	if in.ValidTopics != nil {
		in, out := &in.ValidTopics, &out.ValidTopics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutputInitParameters.
func (in *OutputInitParameters) DeepCopy() *OutputInitParameters {
	if in == nil {
		return nil
	}
	out := new(OutputInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutputObservation) DeepCopyInto(out *OutputObservation) {
	*out = *in
	if in.InvalidKeywords != nil {
		in, out := &in.InvalidKeywords, &out.InvalidKeywords
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Pii != nil {
		in, out := &in.Pii, &out.Pii
		*out = make([]OutputPiiObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Safety != nil {
		in, out := &in.Safety, &out.Safety
		*out = new(bool)
		**out = **in
	}
	if in.ValidTopics != nil {
		in, out := &in.ValidTopics, &out.ValidTopics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutputObservation.
func (in *OutputObservation) DeepCopy() *OutputObservation {
	if in == nil {
		return nil
	}
	out := new(OutputObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutputParameters) DeepCopyInto(out *OutputParameters) {
	*out = *in
	if in.InvalidKeywords != nil {
		in, out := &in.InvalidKeywords, &out.InvalidKeywords
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Pii != nil {
		in, out := &in.Pii, &out.Pii
		*out = make([]OutputPiiParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Safety != nil {
		in, out := &in.Safety, &out.Safety
		*out = new(bool)
		**out = **in
	}
	if in.ValidTopics != nil {
		in, out := &in.ValidTopics, &out.ValidTopics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutputParameters.
func (in *OutputParameters) DeepCopy() *OutputParameters {
	if in == nil {
		return nil
	}
	out := new(OutputParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutputPiiInitParameters) DeepCopyInto(out *OutputPiiInitParameters) {
	*out = *in
	if in.Behavior != nil {
		in, out := &in.Behavior, &out.Behavior
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutputPiiInitParameters.
func (in *OutputPiiInitParameters) DeepCopy() *OutputPiiInitParameters {
	if in == nil {
		return nil
	}
	out := new(OutputPiiInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutputPiiObservation) DeepCopyInto(out *OutputPiiObservation) {
	*out = *in
	if in.Behavior != nil {
		in, out := &in.Behavior, &out.Behavior
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutputPiiObservation.
func (in *OutputPiiObservation) DeepCopy() *OutputPiiObservation {
	if in == nil {
		return nil
	}
	out := new(OutputPiiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutputPiiParameters) DeepCopyInto(out *OutputPiiParameters) {
	*out = *in
	if in.Behavior != nil {
		in, out := &in.Behavior, &out.Behavior
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutputPiiParameters.
func (in *OutputPiiParameters) DeepCopy() *OutputPiiParameters {
	if in == nil {
		return nil
	}
	out := new(OutputPiiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PagerdutyInitParameters) DeepCopyInto(out *PagerdutyInitParameters) {
	*out = *in
	if in.IntegrationKeySecretRef != nil {
		in, out := &in.IntegrationKeySecretRef, &out.IntegrationKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.IntegrationKeySet != nil {
		in, out := &in.IntegrationKeySet, &out.IntegrationKeySet
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PagerdutyInitParameters.
func (in *PagerdutyInitParameters) DeepCopy() *PagerdutyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PagerdutyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PagerdutyObservation) DeepCopyInto(out *PagerdutyObservation) {
	*out = *in
	if in.IntegrationKeySet != nil {
		in, out := &in.IntegrationKeySet, &out.IntegrationKeySet
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PagerdutyObservation.
func (in *PagerdutyObservation) DeepCopy() *PagerdutyObservation {
	if in == nil {
		return nil
	}
	out := new(PagerdutyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PagerdutyParameters) DeepCopyInto(out *PagerdutyParameters) {
	*out = *in
	if in.IntegrationKeySecretRef != nil {
		in, out := &in.IntegrationKeySecretRef, &out.IntegrationKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.IntegrationKeySet != nil {
		in, out := &in.IntegrationKeySet, &out.IntegrationKeySet
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PagerdutyParameters.
func (in *PagerdutyParameters) DeepCopy() *PagerdutyParameters {
	if in == nil {
		return nil
	}
	out := new(PagerdutyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PalmConfigInitParameters) DeepCopyInto(out *PalmConfigInitParameters) {
	*out = *in
	if in.PalmAPIKey != nil {
		in, out := &in.PalmAPIKey, &out.PalmAPIKey
		*out = new(string)
		**out = **in
	}
	if in.PalmAPIKeyPlaintext != nil {
		in, out := &in.PalmAPIKeyPlaintext, &out.PalmAPIKeyPlaintext
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PalmConfigInitParameters.
func (in *PalmConfigInitParameters) DeepCopy() *PalmConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(PalmConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PalmConfigObservation) DeepCopyInto(out *PalmConfigObservation) {
	*out = *in
	if in.PalmAPIKey != nil {
		in, out := &in.PalmAPIKey, &out.PalmAPIKey
		*out = new(string)
		**out = **in
	}
	if in.PalmAPIKeyPlaintext != nil {
		in, out := &in.PalmAPIKeyPlaintext, &out.PalmAPIKeyPlaintext
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PalmConfigObservation.
func (in *PalmConfigObservation) DeepCopy() *PalmConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PalmConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PalmConfigParameters) DeepCopyInto(out *PalmConfigParameters) {
	*out = *in
	if in.PalmAPIKey != nil {
		in, out := &in.PalmAPIKey, &out.PalmAPIKey
		*out = new(string)
		**out = **in
	}
	if in.PalmAPIKeyPlaintext != nil {
		in, out := &in.PalmAPIKeyPlaintext, &out.PalmAPIKeyPlaintext
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PalmConfigParameters.
func (in *PalmConfigParameters) DeepCopy() *PalmConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PalmConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterInitParameters) DeepCopyInto(out *ParameterInitParameters) {
	*out = *in
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterInitParameters.
func (in *ParameterInitParameters) DeepCopy() *ParameterInitParameters {
	if in == nil {
		return nil
	}
	out := new(ParameterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterObservation) DeepCopyInto(out *ParameterObservation) {
	*out = *in
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterObservation.
func (in *ParameterObservation) DeepCopy() *ParameterObservation {
	if in == nil {
		return nil
	}
	out := new(ParameterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterParameters) DeepCopyInto(out *ParameterParameters) {
	*out = *in
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterParameters.
func (in *ParameterParameters) DeepCopy() *ParameterParameters {
	if in == nil {
		return nil
	}
	out := new(ParameterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterQueryInitParameters) DeepCopyInto(out *ParameterQueryInitParameters) {
	*out = *in
	if in.Multiple != nil {
		in, out := &in.Multiple, &out.Multiple
		*out = make([]QueryMultipleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterQueryInitParameters.
func (in *ParameterQueryInitParameters) DeepCopy() *ParameterQueryInitParameters {
	if in == nil {
		return nil
	}
	out := new(ParameterQueryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterQueryObservation) DeepCopyInto(out *ParameterQueryObservation) {
	*out = *in
	if in.Multiple != nil {
		in, out := &in.Multiple, &out.Multiple
		*out = make([]QueryMultipleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterQueryObservation.
func (in *ParameterQueryObservation) DeepCopy() *ParameterQueryObservation {
	if in == nil {
		return nil
	}
	out := new(ParameterQueryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterQueryParameters) DeepCopyInto(out *ParameterQueryParameters) {
	*out = *in
	if in.Multiple != nil {
		in, out := &in.Multiple, &out.Multiple
		*out = make([]QueryMultipleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterQueryParameters.
func (in *ParameterQueryParameters) DeepCopy() *ParameterQueryParameters {
	if in == nil {
		return nil
	}
	out := new(ParameterQueryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionInitParameters) DeepCopyInto(out *PartitionInitParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]PartitionValueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionInitParameters.
func (in *PartitionInitParameters) DeepCopy() *PartitionInitParameters {
	if in == nil {
		return nil
	}
	out := new(PartitionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionObservation) DeepCopyInto(out *PartitionObservation) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]PartitionValueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionObservation.
func (in *PartitionObservation) DeepCopy() *PartitionObservation {
	if in == nil {
		return nil
	}
	out := new(PartitionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionParameters) DeepCopyInto(out *PartitionParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]PartitionValueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionParameters.
func (in *PartitionParameters) DeepCopy() *PartitionParameters {
	if in == nil {
		return nil
	}
	out := new(PartitionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionValueInitParameters) DeepCopyInto(out *PartitionValueInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.RecipientPropertyKey != nil {
		in, out := &in.RecipientPropertyKey, &out.RecipientPropertyKey
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionValueInitParameters.
func (in *PartitionValueInitParameters) DeepCopy() *PartitionValueInitParameters {
	if in == nil {
		return nil
	}
	out := new(PartitionValueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionValueObservation) DeepCopyInto(out *PartitionValueObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.RecipientPropertyKey != nil {
		in, out := &in.RecipientPropertyKey, &out.RecipientPropertyKey
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionValueObservation.
func (in *PartitionValueObservation) DeepCopy() *PartitionValueObservation {
	if in == nil {
		return nil
	}
	out := new(PartitionValueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionValueParameters) DeepCopyInto(out *PartitionValueParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.RecipientPropertyKey != nil {
		in, out := &in.RecipientPropertyKey, &out.RecipientPropertyKey
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionValueParameters.
func (in *PartitionValueParameters) DeepCopy() *PartitionValueParameters {
	if in == nil {
		return nil
	}
	out := new(PartitionValueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PeriodicInitParameters) DeepCopyInto(out *PeriodicInitParameters) {
	*out = *in
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.Unit != nil {
		in, out := &in.Unit, &out.Unit
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PeriodicInitParameters.
func (in *PeriodicInitParameters) DeepCopy() *PeriodicInitParameters {
	if in == nil {
		return nil
	}
	out := new(PeriodicInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PeriodicObservation) DeepCopyInto(out *PeriodicObservation) {
	*out = *in
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.Unit != nil {
		in, out := &in.Unit, &out.Unit
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PeriodicObservation.
func (in *PeriodicObservation) DeepCopy() *PeriodicObservation {
	if in == nil {
		return nil
	}
	out := new(PeriodicObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PeriodicParameters) DeepCopyInto(out *PeriodicParameters) {
	*out = *in
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.Unit != nil {
		in, out := &in.Unit, &out.Unit
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PeriodicParameters.
func (in *PeriodicParameters) DeepCopy() *PeriodicParameters {
	if in == nil {
		return nil
	}
	out := new(PeriodicParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionAssignment) DeepCopyInto(out *PermissionAssignment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionAssignment.
func (in *PermissionAssignment) DeepCopy() *PermissionAssignment {
	if in == nil {
		return nil
	}
	out := new(PermissionAssignment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PermissionAssignment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionAssignmentInitParameters) DeepCopyInto(out *PermissionAssignmentInitParameters) {
	*out = *in
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionAssignmentInitParameters.
func (in *PermissionAssignmentInitParameters) DeepCopy() *PermissionAssignmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(PermissionAssignmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionAssignmentList) DeepCopyInto(out *PermissionAssignmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PermissionAssignment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionAssignmentList.
func (in *PermissionAssignmentList) DeepCopy() *PermissionAssignmentList {
	if in == nil {
		return nil
	}
	out := new(PermissionAssignmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PermissionAssignmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionAssignmentObservation) DeepCopyInto(out *PermissionAssignmentObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionAssignmentObservation.
func (in *PermissionAssignmentObservation) DeepCopy() *PermissionAssignmentObservation {
	if in == nil {
		return nil
	}
	out := new(PermissionAssignmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionAssignmentParameters) DeepCopyInto(out *PermissionAssignmentParameters) {
	*out = *in
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionAssignmentParameters.
func (in *PermissionAssignmentParameters) DeepCopy() *PermissionAssignmentParameters {
	if in == nil {
		return nil
	}
	out := new(PermissionAssignmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionAssignmentSpec) DeepCopyInto(out *PermissionAssignmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionAssignmentSpec.
func (in *PermissionAssignmentSpec) DeepCopy() *PermissionAssignmentSpec {
	if in == nil {
		return nil
	}
	out := new(PermissionAssignmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionAssignmentStatus) DeepCopyInto(out *PermissionAssignmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionAssignmentStatus.
func (in *PermissionAssignmentStatus) DeepCopy() *PermissionAssignmentStatus {
	if in == nil {
		return nil
	}
	out := new(PermissionAssignmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Permissions) DeepCopyInto(out *Permissions) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Permissions.
func (in *Permissions) DeepCopy() *Permissions {
	if in == nil {
		return nil
	}
	out := new(Permissions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Permissions) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionsInitParameters) DeepCopyInto(out *PermissionsInitParameters) {
	*out = *in
	if in.AccessControl != nil {
		in, out := &in.AccessControl, &out.AccessControl
		*out = make([]AccessControlInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Authorization != nil {
		in, out := &in.Authorization, &out.Authorization
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterPolicyID != nil {
		in, out := &in.ClusterPolicyID, &out.ClusterPolicyID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPolicyIDRef != nil {
		in, out := &in.ClusterPolicyIDRef, &out.ClusterPolicyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterPolicyIDSelector != nil {
		in, out := &in.ClusterPolicyIDSelector, &out.ClusterPolicyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.DirectoryID != nil {
		in, out := &in.DirectoryID, &out.DirectoryID
		*out = new(string)
		**out = **in
	}
	if in.DirectoryPath != nil {
		in, out := &in.DirectoryPath, &out.DirectoryPath
		*out = new(string)
		**out = **in
	}
	if in.ExperimentID != nil {
		in, out := &in.ExperimentID, &out.ExperimentID
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolIDRef != nil {
		in, out := &in.InstancePoolIDRef, &out.InstancePoolIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstancePoolIDSelector != nil {
		in, out := &in.InstancePoolIDSelector, &out.InstancePoolIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(string)
		**out = **in
	}
	if in.NotebookID != nil {
		in, out := &in.NotebookID, &out.NotebookID
		*out = new(string)
		**out = **in
	}
	if in.NotebookIDRef != nil {
		in, out := &in.NotebookIDRef, &out.NotebookIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NotebookIDSelector != nil {
		in, out := &in.NotebookIDSelector, &out.NotebookIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.ObjectType != nil {
		in, out := &in.ObjectType, &out.ObjectType
		*out = new(string)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
	if in.PipelineIDRef != nil {
		in, out := &in.PipelineIDRef, &out.PipelineIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PipelineIDSelector != nil {
		in, out := &in.PipelineIDSelector, &out.PipelineIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RegisteredModelID != nil {
		in, out := &in.RegisteredModelID, &out.RegisteredModelID
		*out = new(string)
		**out = **in
	}
	if in.RepoID != nil {
		in, out := &in.RepoID, &out.RepoID
		*out = new(string)
		**out = **in
	}
	if in.RepoPath != nil {
		in, out := &in.RepoPath, &out.RepoPath
		*out = new(string)
		**out = **in
	}
	if in.SQLAlertID != nil {
		in, out := &in.SQLAlertID, &out.SQLAlertID
		*out = new(string)
		**out = **in
	}
	if in.SQLAlertIDRef != nil {
		in, out := &in.SQLAlertIDRef, &out.SQLAlertIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SQLAlertIDSelector != nil {
		in, out := &in.SQLAlertIDSelector, &out.SQLAlertIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SQLDashboardID != nil {
		in, out := &in.SQLDashboardID, &out.SQLDashboardID
		*out = new(string)
		**out = **in
	}
	if in.SQLDashboardIDRef != nil {
		in, out := &in.SQLDashboardIDRef, &out.SQLDashboardIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SQLDashboardIDSelector != nil {
		in, out := &in.SQLDashboardIDSelector, &out.SQLDashboardIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SQLEndpointID != nil {
		in, out := &in.SQLEndpointID, &out.SQLEndpointID
		*out = new(string)
		**out = **in
	}
	if in.SQLEndpointIDRef != nil {
		in, out := &in.SQLEndpointIDRef, &out.SQLEndpointIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SQLEndpointIDSelector != nil {
		in, out := &in.SQLEndpointIDSelector, &out.SQLEndpointIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SQLQueryID != nil {
		in, out := &in.SQLQueryID, &out.SQLQueryID
		*out = new(string)
		**out = **in
	}
	if in.SQLQueryIDRef != nil {
		in, out := &in.SQLQueryIDRef, &out.SQLQueryIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SQLQueryIDSelector != nil {
		in, out := &in.SQLQueryIDSelector, &out.SQLQueryIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServingEndpointID != nil {
		in, out := &in.ServingEndpointID, &out.ServingEndpointID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceFileID != nil {
		in, out := &in.WorkspaceFileID, &out.WorkspaceFileID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceFilePath != nil {
		in, out := &in.WorkspaceFilePath, &out.WorkspaceFilePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionsInitParameters.
func (in *PermissionsInitParameters) DeepCopy() *PermissionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PermissionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionsList) DeepCopyInto(out *PermissionsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Permissions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionsList.
func (in *PermissionsList) DeepCopy() *PermissionsList {
	if in == nil {
		return nil
	}
	out := new(PermissionsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PermissionsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionsObservation) DeepCopyInto(out *PermissionsObservation) {
	*out = *in
	if in.AccessControl != nil {
		in, out := &in.AccessControl, &out.AccessControl
		*out = make([]AccessControlObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Authorization != nil {
		in, out := &in.Authorization, &out.Authorization
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPolicyID != nil {
		in, out := &in.ClusterPolicyID, &out.ClusterPolicyID
		*out = new(string)
		**out = **in
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.DirectoryID != nil {
		in, out := &in.DirectoryID, &out.DirectoryID
		*out = new(string)
		**out = **in
	}
	if in.DirectoryPath != nil {
		in, out := &in.DirectoryPath, &out.DirectoryPath
		*out = new(string)
		**out = **in
	}
	if in.ExperimentID != nil {
		in, out := &in.ExperimentID, &out.ExperimentID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(string)
		**out = **in
	}
	if in.NotebookID != nil {
		in, out := &in.NotebookID, &out.NotebookID
		*out = new(string)
		**out = **in
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.ObjectType != nil {
		in, out := &in.ObjectType, &out.ObjectType
		*out = new(string)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
	if in.RegisteredModelID != nil {
		in, out := &in.RegisteredModelID, &out.RegisteredModelID
		*out = new(string)
		**out = **in
	}
	if in.RepoID != nil {
		in, out := &in.RepoID, &out.RepoID
		*out = new(string)
		**out = **in
	}
	if in.RepoPath != nil {
		in, out := &in.RepoPath, &out.RepoPath
		*out = new(string)
		**out = **in
	}
	if in.SQLAlertID != nil {
		in, out := &in.SQLAlertID, &out.SQLAlertID
		*out = new(string)
		**out = **in
	}
	if in.SQLDashboardID != nil {
		in, out := &in.SQLDashboardID, &out.SQLDashboardID
		*out = new(string)
		**out = **in
	}
	if in.SQLEndpointID != nil {
		in, out := &in.SQLEndpointID, &out.SQLEndpointID
		*out = new(string)
		**out = **in
	}
	if in.SQLQueryID != nil {
		in, out := &in.SQLQueryID, &out.SQLQueryID
		*out = new(string)
		**out = **in
	}
	if in.ServingEndpointID != nil {
		in, out := &in.ServingEndpointID, &out.ServingEndpointID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceFileID != nil {
		in, out := &in.WorkspaceFileID, &out.WorkspaceFileID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceFilePath != nil {
		in, out := &in.WorkspaceFilePath, &out.WorkspaceFilePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionsObservation.
func (in *PermissionsObservation) DeepCopy() *PermissionsObservation {
	if in == nil {
		return nil
	}
	out := new(PermissionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionsParameters) DeepCopyInto(out *PermissionsParameters) {
	*out = *in
	if in.AccessControl != nil {
		in, out := &in.AccessControl, &out.AccessControl
		*out = make([]AccessControlParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Authorization != nil {
		in, out := &in.Authorization, &out.Authorization
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterPolicyID != nil {
		in, out := &in.ClusterPolicyID, &out.ClusterPolicyID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPolicyIDRef != nil {
		in, out := &in.ClusterPolicyIDRef, &out.ClusterPolicyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterPolicyIDSelector != nil {
		in, out := &in.ClusterPolicyIDSelector, &out.ClusterPolicyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.DirectoryID != nil {
		in, out := &in.DirectoryID, &out.DirectoryID
		*out = new(string)
		**out = **in
	}
	if in.DirectoryPath != nil {
		in, out := &in.DirectoryPath, &out.DirectoryPath
		*out = new(string)
		**out = **in
	}
	if in.ExperimentID != nil {
		in, out := &in.ExperimentID, &out.ExperimentID
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolIDRef != nil {
		in, out := &in.InstancePoolIDRef, &out.InstancePoolIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstancePoolIDSelector != nil {
		in, out := &in.InstancePoolIDSelector, &out.InstancePoolIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(string)
		**out = **in
	}
	if in.NotebookID != nil {
		in, out := &in.NotebookID, &out.NotebookID
		*out = new(string)
		**out = **in
	}
	if in.NotebookIDRef != nil {
		in, out := &in.NotebookIDRef, &out.NotebookIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NotebookIDSelector != nil {
		in, out := &in.NotebookIDSelector, &out.NotebookIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.ObjectType != nil {
		in, out := &in.ObjectType, &out.ObjectType
		*out = new(string)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
	if in.PipelineIDRef != nil {
		in, out := &in.PipelineIDRef, &out.PipelineIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PipelineIDSelector != nil {
		in, out := &in.PipelineIDSelector, &out.PipelineIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RegisteredModelID != nil {
		in, out := &in.RegisteredModelID, &out.RegisteredModelID
		*out = new(string)
		**out = **in
	}
	if in.RepoID != nil {
		in, out := &in.RepoID, &out.RepoID
		*out = new(string)
		**out = **in
	}
	if in.RepoPath != nil {
		in, out := &in.RepoPath, &out.RepoPath
		*out = new(string)
		**out = **in
	}
	if in.SQLAlertID != nil {
		in, out := &in.SQLAlertID, &out.SQLAlertID
		*out = new(string)
		**out = **in
	}
	if in.SQLAlertIDRef != nil {
		in, out := &in.SQLAlertIDRef, &out.SQLAlertIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SQLAlertIDSelector != nil {
		in, out := &in.SQLAlertIDSelector, &out.SQLAlertIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SQLDashboardID != nil {
		in, out := &in.SQLDashboardID, &out.SQLDashboardID
		*out = new(string)
		**out = **in
	}
	if in.SQLDashboardIDRef != nil {
		in, out := &in.SQLDashboardIDRef, &out.SQLDashboardIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SQLDashboardIDSelector != nil {
		in, out := &in.SQLDashboardIDSelector, &out.SQLDashboardIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SQLEndpointID != nil {
		in, out := &in.SQLEndpointID, &out.SQLEndpointID
		*out = new(string)
		**out = **in
	}
	if in.SQLEndpointIDRef != nil {
		in, out := &in.SQLEndpointIDRef, &out.SQLEndpointIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SQLEndpointIDSelector != nil {
		in, out := &in.SQLEndpointIDSelector, &out.SQLEndpointIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SQLQueryID != nil {
		in, out := &in.SQLQueryID, &out.SQLQueryID
		*out = new(string)
		**out = **in
	}
	if in.SQLQueryIDRef != nil {
		in, out := &in.SQLQueryIDRef, &out.SQLQueryIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SQLQueryIDSelector != nil {
		in, out := &in.SQLQueryIDSelector, &out.SQLQueryIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServingEndpointID != nil {
		in, out := &in.ServingEndpointID, &out.ServingEndpointID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceFileID != nil {
		in, out := &in.WorkspaceFileID, &out.WorkspaceFileID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceFilePath != nil {
		in, out := &in.WorkspaceFilePath, &out.WorkspaceFilePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionsParameters.
func (in *PermissionsParameters) DeepCopy() *PermissionsParameters {
	if in == nil {
		return nil
	}
	out := new(PermissionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionsSpec) DeepCopyInto(out *PermissionsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionsSpec.
func (in *PermissionsSpec) DeepCopy() *PermissionsSpec {
	if in == nil {
		return nil
	}
	out := new(PermissionsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionsStatus) DeepCopyInto(out *PermissionsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionsStatus.
func (in *PermissionsStatus) DeepCopy() *PermissionsStatus {
	if in == nil {
		return nil
	}
	out := new(PermissionsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PiiInitParameters) DeepCopyInto(out *PiiInitParameters) {
	*out = *in
	if in.Behavior != nil {
		in, out := &in.Behavior, &out.Behavior
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PiiInitParameters.
func (in *PiiInitParameters) DeepCopy() *PiiInitParameters {
	if in == nil {
		return nil
	}
	out := new(PiiInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PiiObservation) DeepCopyInto(out *PiiObservation) {
	*out = *in
	if in.Behavior != nil {
		in, out := &in.Behavior, &out.Behavior
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PiiObservation.
func (in *PiiObservation) DeepCopy() *PiiObservation {
	if in == nil {
		return nil
	}
	out := new(PiiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PiiParameters) DeepCopyInto(out *PiiParameters) {
	*out = *in
	if in.Behavior != nil {
		in, out := &in.Behavior, &out.Behavior
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PiiParameters.
func (in *PiiParameters) DeepCopy() *PiiParameters {
	if in == nil {
		return nil
	}
	out := new(PiiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pipeline) DeepCopyInto(out *Pipeline) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pipeline.
func (in *Pipeline) DeepCopy() *Pipeline {
	if in == nil {
		return nil
	}
	out := new(Pipeline)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Pipeline) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineClusterInitParameters) DeepCopyInto(out *PipelineClusterInitParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]ClusterAutoscaleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]ClusterAwsAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]ClusterAzureAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]ClusterClusterLogConfInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]ClusterGCPAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]ClusterInitScriptsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineClusterInitParameters.
func (in *PipelineClusterInitParameters) DeepCopy() *PipelineClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineClusterObservation) DeepCopyInto(out *PipelineClusterObservation) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]ClusterAutoscaleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]ClusterAwsAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]ClusterAzureAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]ClusterClusterLogConfObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]ClusterGCPAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]ClusterInitScriptsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineClusterObservation.
func (in *PipelineClusterObservation) DeepCopy() *PipelineClusterObservation {
	if in == nil {
		return nil
	}
	out := new(PipelineClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineClusterParameters) DeepCopyInto(out *PipelineClusterParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]ClusterAutoscaleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]ClusterAwsAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]ClusterAzureAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]ClusterClusterLogConfParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]ClusterGCPAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]ClusterInitScriptsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineClusterParameters.
func (in *PipelineClusterParameters) DeepCopy() *PipelineClusterParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineDeploymentInitParameters) DeepCopyInto(out *PipelineDeploymentInitParameters) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.MetadataFilePath != nil {
		in, out := &in.MetadataFilePath, &out.MetadataFilePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineDeploymentInitParameters.
func (in *PipelineDeploymentInitParameters) DeepCopy() *PipelineDeploymentInitParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineDeploymentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineDeploymentObservation) DeepCopyInto(out *PipelineDeploymentObservation) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.MetadataFilePath != nil {
		in, out := &in.MetadataFilePath, &out.MetadataFilePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineDeploymentObservation.
func (in *PipelineDeploymentObservation) DeepCopy() *PipelineDeploymentObservation {
	if in == nil {
		return nil
	}
	out := new(PipelineDeploymentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineDeploymentParameters) DeepCopyInto(out *PipelineDeploymentParameters) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.MetadataFilePath != nil {
		in, out := &in.MetadataFilePath, &out.MetadataFilePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineDeploymentParameters.
func (in *PipelineDeploymentParameters) DeepCopy() *PipelineDeploymentParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineDeploymentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineInitParameters) DeepCopyInto(out *PipelineInitParameters) {
	*out = *in
	if in.AllowDuplicateNames != nil {
		in, out := &in.AllowDuplicateNames, &out.AllowDuplicateNames
		*out = new(bool)
		**out = **in
	}
	if in.BudgetPolicyID != nil {
		in, out := &in.BudgetPolicyID, &out.BudgetPolicyID
		*out = new(string)
		**out = **in
	}
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Cause != nil {
		in, out := &in.Cause, &out.Cause
		*out = new(string)
		**out = **in
	}
	if in.Channel != nil {
		in, out := &in.Channel, &out.Channel
		*out = new(string)
		**out = **in
	}
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]PipelineClusterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Continuous != nil {
		in, out := &in.Continuous, &out.Continuous
		*out = new(bool)
		**out = **in
	}
	if in.CreatorUserName != nil {
		in, out := &in.CreatorUserName, &out.CreatorUserName
		*out = new(string)
		**out = **in
	}
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = make([]PipelineDeploymentInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Development != nil {
		in, out := &in.Development, &out.Development
		*out = new(bool)
		**out = **in
	}
	if in.Edition != nil {
		in, out := &in.Edition, &out.Edition
		*out = new(string)
		**out = **in
	}
	if in.ExpectedLastModified != nil {
		in, out := &in.ExpectedLastModified, &out.ExpectedLastModified
		*out = new(float64)
		**out = **in
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]FiltersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GatewayDefinition != nil {
		in, out := &in.GatewayDefinition, &out.GatewayDefinition
		*out = make([]GatewayDefinitionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = new(string)
		**out = **in
	}
	if in.IngestionDefinition != nil {
		in, out := &in.IngestionDefinition, &out.IngestionDefinition
		*out = make([]IngestionDefinitionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastModified != nil {
		in, out := &in.LastModified, &out.LastModified
		*out = new(float64)
		**out = **in
	}
	if in.LatestUpdates != nil {
		in, out := &in.LatestUpdates, &out.LatestUpdates
		*out = make([]LatestUpdatesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]PipelineLibraryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Notification != nil {
		in, out := &in.Notification, &out.Notification
		*out = make([]NotificationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Photon != nil {
		in, out := &in.Photon, &out.Photon
		*out = new(bool)
		**out = **in
	}
	if in.RestartWindow != nil {
		in, out := &in.RestartWindow, &out.RestartWindow
		*out = make([]RestartWindowInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RunAsUserName != nil {
		in, out := &in.RunAsUserName, &out.RunAsUserName
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Serverless != nil {
		in, out := &in.Serverless, &out.Serverless
		*out = new(bool)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]PipelineTriggerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineInitParameters.
func (in *PipelineInitParameters) DeepCopy() *PipelineInitParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineLibraryInitParameters) DeepCopyInto(out *PipelineLibraryInitParameters) {
	*out = *in
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]LibraryFileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]PipelineLibraryMavenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Notebook != nil {
		in, out := &in.Notebook, &out.Notebook
		*out = make([]LibraryNotebookInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineLibraryInitParameters.
func (in *PipelineLibraryInitParameters) DeepCopy() *PipelineLibraryInitParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineLibraryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineLibraryMavenInitParameters) DeepCopyInto(out *PipelineLibraryMavenInitParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineLibraryMavenInitParameters.
func (in *PipelineLibraryMavenInitParameters) DeepCopy() *PipelineLibraryMavenInitParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineLibraryMavenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineLibraryMavenObservation) DeepCopyInto(out *PipelineLibraryMavenObservation) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineLibraryMavenObservation.
func (in *PipelineLibraryMavenObservation) DeepCopy() *PipelineLibraryMavenObservation {
	if in == nil {
		return nil
	}
	out := new(PipelineLibraryMavenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineLibraryMavenParameters) DeepCopyInto(out *PipelineLibraryMavenParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineLibraryMavenParameters.
func (in *PipelineLibraryMavenParameters) DeepCopy() *PipelineLibraryMavenParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineLibraryMavenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineLibraryObservation) DeepCopyInto(out *PipelineLibraryObservation) {
	*out = *in
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]LibraryFileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]PipelineLibraryMavenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Notebook != nil {
		in, out := &in.Notebook, &out.Notebook
		*out = make([]LibraryNotebookObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineLibraryObservation.
func (in *PipelineLibraryObservation) DeepCopy() *PipelineLibraryObservation {
	if in == nil {
		return nil
	}
	out := new(PipelineLibraryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineLibraryParameters) DeepCopyInto(out *PipelineLibraryParameters) {
	*out = *in
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]LibraryFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]PipelineLibraryMavenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Notebook != nil {
		in, out := &in.Notebook, &out.Notebook
		*out = make([]LibraryNotebookParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineLibraryParameters.
func (in *PipelineLibraryParameters) DeepCopy() *PipelineLibraryParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineLibraryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineList) DeepCopyInto(out *PipelineList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Pipeline, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineList.
func (in *PipelineList) DeepCopy() *PipelineList {
	if in == nil {
		return nil
	}
	out := new(PipelineList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PipelineList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineObservation) DeepCopyInto(out *PipelineObservation) {
	*out = *in
	if in.AllowDuplicateNames != nil {
		in, out := &in.AllowDuplicateNames, &out.AllowDuplicateNames
		*out = new(bool)
		**out = **in
	}
	if in.BudgetPolicyID != nil {
		in, out := &in.BudgetPolicyID, &out.BudgetPolicyID
		*out = new(string)
		**out = **in
	}
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Cause != nil {
		in, out := &in.Cause, &out.Cause
		*out = new(string)
		**out = **in
	}
	if in.Channel != nil {
		in, out := &in.Channel, &out.Channel
		*out = new(string)
		**out = **in
	}
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]PipelineClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Continuous != nil {
		in, out := &in.Continuous, &out.Continuous
		*out = new(bool)
		**out = **in
	}
	if in.CreatorUserName != nil {
		in, out := &in.CreatorUserName, &out.CreatorUserName
		*out = new(string)
		**out = **in
	}
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = make([]PipelineDeploymentObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Development != nil {
		in, out := &in.Development, &out.Development
		*out = new(bool)
		**out = **in
	}
	if in.Edition != nil {
		in, out := &in.Edition, &out.Edition
		*out = new(string)
		**out = **in
	}
	if in.ExpectedLastModified != nil {
		in, out := &in.ExpectedLastModified, &out.ExpectedLastModified
		*out = new(float64)
		**out = **in
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]FiltersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GatewayDefinition != nil {
		in, out := &in.GatewayDefinition, &out.GatewayDefinition
		*out = make([]GatewayDefinitionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IngestionDefinition != nil {
		in, out := &in.IngestionDefinition, &out.IngestionDefinition
		*out = make([]IngestionDefinitionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastModified != nil {
		in, out := &in.LastModified, &out.LastModified
		*out = new(float64)
		**out = **in
	}
	if in.LatestUpdates != nil {
		in, out := &in.LatestUpdates, &out.LatestUpdates
		*out = make([]LatestUpdatesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]PipelineLibraryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Notification != nil {
		in, out := &in.Notification, &out.Notification
		*out = make([]NotificationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Photon != nil {
		in, out := &in.Photon, &out.Photon
		*out = new(bool)
		**out = **in
	}
	if in.RestartWindow != nil {
		in, out := &in.RestartWindow, &out.RestartWindow
		*out = make([]RestartWindowObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RunAsUserName != nil {
		in, out := &in.RunAsUserName, &out.RunAsUserName
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Serverless != nil {
		in, out := &in.Serverless, &out.Serverless
		*out = new(bool)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]PipelineTriggerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineObservation.
func (in *PipelineObservation) DeepCopy() *PipelineObservation {
	if in == nil {
		return nil
	}
	out := new(PipelineObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineParameters) DeepCopyInto(out *PipelineParameters) {
	*out = *in
	if in.AllowDuplicateNames != nil {
		in, out := &in.AllowDuplicateNames, &out.AllowDuplicateNames
		*out = new(bool)
		**out = **in
	}
	if in.BudgetPolicyID != nil {
		in, out := &in.BudgetPolicyID, &out.BudgetPolicyID
		*out = new(string)
		**out = **in
	}
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Cause != nil {
		in, out := &in.Cause, &out.Cause
		*out = new(string)
		**out = **in
	}
	if in.Channel != nil {
		in, out := &in.Channel, &out.Channel
		*out = new(string)
		**out = **in
	}
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]PipelineClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Continuous != nil {
		in, out := &in.Continuous, &out.Continuous
		*out = new(bool)
		**out = **in
	}
	if in.CreatorUserName != nil {
		in, out := &in.CreatorUserName, &out.CreatorUserName
		*out = new(string)
		**out = **in
	}
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = make([]PipelineDeploymentParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Development != nil {
		in, out := &in.Development, &out.Development
		*out = new(bool)
		**out = **in
	}
	if in.Edition != nil {
		in, out := &in.Edition, &out.Edition
		*out = new(string)
		**out = **in
	}
	if in.ExpectedLastModified != nil {
		in, out := &in.ExpectedLastModified, &out.ExpectedLastModified
		*out = new(float64)
		**out = **in
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]FiltersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GatewayDefinition != nil {
		in, out := &in.GatewayDefinition, &out.GatewayDefinition
		*out = make([]GatewayDefinitionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = new(string)
		**out = **in
	}
	if in.IngestionDefinition != nil {
		in, out := &in.IngestionDefinition, &out.IngestionDefinition
		*out = make([]IngestionDefinitionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastModified != nil {
		in, out := &in.LastModified, &out.LastModified
		*out = new(float64)
		**out = **in
	}
	if in.LatestUpdates != nil {
		in, out := &in.LatestUpdates, &out.LatestUpdates
		*out = make([]LatestUpdatesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]PipelineLibraryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Notification != nil {
		in, out := &in.Notification, &out.Notification
		*out = make([]NotificationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Photon != nil {
		in, out := &in.Photon, &out.Photon
		*out = new(bool)
		**out = **in
	}
	if in.RestartWindow != nil {
		in, out := &in.RestartWindow, &out.RestartWindow
		*out = make([]RestartWindowParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RunAsUserName != nil {
		in, out := &in.RunAsUserName, &out.RunAsUserName
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Serverless != nil {
		in, out := &in.Serverless, &out.Serverless
		*out = new(bool)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]PipelineTriggerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineParameters.
func (in *PipelineParameters) DeepCopy() *PipelineParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineParamsInitParameters) DeepCopyInto(out *PipelineParamsInitParameters) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineParamsInitParameters.
func (in *PipelineParamsInitParameters) DeepCopy() *PipelineParamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineParamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineParamsObservation) DeepCopyInto(out *PipelineParamsObservation) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineParamsObservation.
func (in *PipelineParamsObservation) DeepCopy() *PipelineParamsObservation {
	if in == nil {
		return nil
	}
	out := new(PipelineParamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineParamsParameters) DeepCopyInto(out *PipelineParamsParameters) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineParamsParameters.
func (in *PipelineParamsParameters) DeepCopy() *PipelineParamsParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineParamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineSpec) DeepCopyInto(out *PipelineSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineSpec.
func (in *PipelineSpec) DeepCopy() *PipelineSpec {
	if in == nil {
		return nil
	}
	out := new(PipelineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineStatus) DeepCopyInto(out *PipelineStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineStatus.
func (in *PipelineStatus) DeepCopy() *PipelineStatus {
	if in == nil {
		return nil
	}
	out := new(PipelineStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineTaskInitParameters) DeepCopyInto(out *PipelineTaskInitParameters) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineTaskInitParameters.
func (in *PipelineTaskInitParameters) DeepCopy() *PipelineTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineTaskObservation) DeepCopyInto(out *PipelineTaskObservation) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineTaskObservation.
func (in *PipelineTaskObservation) DeepCopy() *PipelineTaskObservation {
	if in == nil {
		return nil
	}
	out := new(PipelineTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineTaskParameters) DeepCopyInto(out *PipelineTaskParameters) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineTaskParameters.
func (in *PipelineTaskParameters) DeepCopy() *PipelineTaskParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineTriggerInitParameters) DeepCopyInto(out *PipelineTriggerInitParameters) {
	*out = *in
	if in.Cron != nil {
		in, out := &in.Cron, &out.Cron
		*out = make([]CronInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Manual != nil {
		in, out := &in.Manual, &out.Manual
		*out = make([]ManualInitParameters, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineTriggerInitParameters.
func (in *PipelineTriggerInitParameters) DeepCopy() *PipelineTriggerInitParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineTriggerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineTriggerObservation) DeepCopyInto(out *PipelineTriggerObservation) {
	*out = *in
	if in.Cron != nil {
		in, out := &in.Cron, &out.Cron
		*out = make([]CronObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Manual != nil {
		in, out := &in.Manual, &out.Manual
		*out = make([]ManualParameters, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineTriggerObservation.
func (in *PipelineTriggerObservation) DeepCopy() *PipelineTriggerObservation {
	if in == nil {
		return nil
	}
	out := new(PipelineTriggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineTriggerParameters) DeepCopyInto(out *PipelineTriggerParameters) {
	*out = *in
	if in.Cron != nil {
		in, out := &in.Cron, &out.Cron
		*out = make([]CronParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Manual != nil {
		in, out := &in.Manual, &out.Manual
		*out = make([]ManualParameters, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineTriggerParameters.
func (in *PipelineTriggerParameters) DeepCopy() *PipelineTriggerParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineTriggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PositionInitParameters) DeepCopyInto(out *PositionInitParameters) {
	*out = *in
	if in.AutoHeight != nil {
		in, out := &in.AutoHeight, &out.AutoHeight
		*out = new(bool)
		**out = **in
	}
	if in.PosX != nil {
		in, out := &in.PosX, &out.PosX
		*out = new(float64)
		**out = **in
	}
	if in.PosY != nil {
		in, out := &in.PosY, &out.PosY
		*out = new(float64)
		**out = **in
	}
	if in.SizeX != nil {
		in, out := &in.SizeX, &out.SizeX
		*out = new(float64)
		**out = **in
	}
	if in.SizeY != nil {
		in, out := &in.SizeY, &out.SizeY
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PositionInitParameters.
func (in *PositionInitParameters) DeepCopy() *PositionInitParameters {
	if in == nil {
		return nil
	}
	out := new(PositionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PositionObservation) DeepCopyInto(out *PositionObservation) {
	*out = *in
	if in.AutoHeight != nil {
		in, out := &in.AutoHeight, &out.AutoHeight
		*out = new(bool)
		**out = **in
	}
	if in.PosX != nil {
		in, out := &in.PosX, &out.PosX
		*out = new(float64)
		**out = **in
	}
	if in.PosY != nil {
		in, out := &in.PosY, &out.PosY
		*out = new(float64)
		**out = **in
	}
	if in.SizeX != nil {
		in, out := &in.SizeX, &out.SizeX
		*out = new(float64)
		**out = **in
	}
	if in.SizeY != nil {
		in, out := &in.SizeY, &out.SizeY
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PositionObservation.
func (in *PositionObservation) DeepCopy() *PositionObservation {
	if in == nil {
		return nil
	}
	out := new(PositionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PositionParameters) DeepCopyInto(out *PositionParameters) {
	*out = *in
	if in.AutoHeight != nil {
		in, out := &in.AutoHeight, &out.AutoHeight
		*out = new(bool)
		**out = **in
	}
	if in.PosX != nil {
		in, out := &in.PosX, &out.PosX
		*out = new(float64)
		**out = **in
	}
	if in.PosY != nil {
		in, out := &in.PosY, &out.PosY
		*out = new(float64)
		**out = **in
	}
	if in.SizeX != nil {
		in, out := &in.SizeX, &out.SizeX
		*out = new(float64)
		**out = **in
	}
	if in.SizeY != nil {
		in, out := &in.SizeY, &out.SizeY
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PositionParameters.
func (in *PositionParameters) DeepCopy() *PositionParameters {
	if in == nil {
		return nil
	}
	out := new(PositionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreloadedDockerImageBasicAuthInitParameters) DeepCopyInto(out *PreloadedDockerImageBasicAuthInitParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreloadedDockerImageBasicAuthInitParameters.
func (in *PreloadedDockerImageBasicAuthInitParameters) DeepCopy() *PreloadedDockerImageBasicAuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(PreloadedDockerImageBasicAuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreloadedDockerImageBasicAuthObservation) DeepCopyInto(out *PreloadedDockerImageBasicAuthObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreloadedDockerImageBasicAuthObservation.
func (in *PreloadedDockerImageBasicAuthObservation) DeepCopy() *PreloadedDockerImageBasicAuthObservation {
	if in == nil {
		return nil
	}
	out := new(PreloadedDockerImageBasicAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreloadedDockerImageBasicAuthParameters) DeepCopyInto(out *PreloadedDockerImageBasicAuthParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreloadedDockerImageBasicAuthParameters.
func (in *PreloadedDockerImageBasicAuthParameters) DeepCopy() *PreloadedDockerImageBasicAuthParameters {
	if in == nil {
		return nil
	}
	out := new(PreloadedDockerImageBasicAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreloadedDockerImageInitParameters) DeepCopyInto(out *PreloadedDockerImageInitParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]PreloadedDockerImageBasicAuthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreloadedDockerImageInitParameters.
func (in *PreloadedDockerImageInitParameters) DeepCopy() *PreloadedDockerImageInitParameters {
	if in == nil {
		return nil
	}
	out := new(PreloadedDockerImageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreloadedDockerImageObservation) DeepCopyInto(out *PreloadedDockerImageObservation) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]PreloadedDockerImageBasicAuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreloadedDockerImageObservation.
func (in *PreloadedDockerImageObservation) DeepCopy() *PreloadedDockerImageObservation {
	if in == nil {
		return nil
	}
	out := new(PreloadedDockerImageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreloadedDockerImageParameters) DeepCopyInto(out *PreloadedDockerImageParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]PreloadedDockerImageBasicAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreloadedDockerImageParameters.
func (in *PreloadedDockerImageParameters) DeepCopy() *PreloadedDockerImageParameters {
	if in == nil {
		return nil
	}
	out := new(PreloadedDockerImageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegeAssignmentsInitParameters) DeepCopyInto(out *PrivilegeAssignmentsInitParameters) {
	*out = *in
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegeAssignmentsInitParameters.
func (in *PrivilegeAssignmentsInitParameters) DeepCopy() *PrivilegeAssignmentsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivilegeAssignmentsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegeAssignmentsObservation) DeepCopyInto(out *PrivilegeAssignmentsObservation) {
	*out = *in
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegeAssignmentsObservation.
func (in *PrivilegeAssignmentsObservation) DeepCopy() *PrivilegeAssignmentsObservation {
	if in == nil {
		return nil
	}
	out := new(PrivilegeAssignmentsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegeAssignmentsParameters) DeepCopyInto(out *PrivilegeAssignmentsParameters) {
	*out = *in
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegeAssignmentsParameters.
func (in *PrivilegeAssignmentsParameters) DeepCopy() *PrivilegeAssignmentsParameters {
	if in == nil {
		return nil
	}
	out := new(PrivilegeAssignmentsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PropertiesKvpairsInitParameters) DeepCopyInto(out *PropertiesKvpairsInitParameters) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PropertiesKvpairsInitParameters.
func (in *PropertiesKvpairsInitParameters) DeepCopy() *PropertiesKvpairsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PropertiesKvpairsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PropertiesKvpairsObservation) DeepCopyInto(out *PropertiesKvpairsObservation) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PropertiesKvpairsObservation.
func (in *PropertiesKvpairsObservation) DeepCopy() *PropertiesKvpairsObservation {
	if in == nil {
		return nil
	}
	out := new(PropertiesKvpairsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PropertiesKvpairsParameters) DeepCopyInto(out *PropertiesKvpairsParameters) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PropertiesKvpairsParameters.
func (in *PropertiesKvpairsParameters) DeepCopy() *PropertiesKvpairsParameters {
	if in == nil {
		return nil
	}
	out := new(PropertiesKvpairsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Provider) DeepCopyInto(out *Provider) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Provider.
func (in *Provider) DeepCopy() *Provider {
	if in == nil {
		return nil
	}
	out := new(Provider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Provider) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProviderInitParameters) DeepCopyInto(out *ProviderInitParameters) {
	*out = *in
	if in.AuthenticationType != nil {
		in, out := &in.AuthenticationType, &out.AuthenticationType
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	out.RecipientProfileStrSecretRef = in.RecipientProfileStrSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProviderInitParameters.
func (in *ProviderInitParameters) DeepCopy() *ProviderInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProviderInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProviderList) DeepCopyInto(out *ProviderList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Provider, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProviderList.
func (in *ProviderList) DeepCopy() *ProviderList {
	if in == nil {
		return nil
	}
	out := new(ProviderList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProviderList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProviderObservation) DeepCopyInto(out *ProviderObservation) {
	*out = *in
	if in.AuthenticationType != nil {
		in, out := &in.AuthenticationType, &out.AuthenticationType
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProviderObservation.
func (in *ProviderObservation) DeepCopy() *ProviderObservation {
	if in == nil {
		return nil
	}
	out := new(ProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProviderParameters) DeepCopyInto(out *ProviderParameters) {
	*out = *in
	if in.AuthenticationType != nil {
		in, out := &in.AuthenticationType, &out.AuthenticationType
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	out.RecipientProfileStrSecretRef = in.RecipientProfileStrSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProviderParameters.
func (in *ProviderParameters) DeepCopy() *ProviderParameters {
	if in == nil {
		return nil
	}
	out := new(ProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProviderSpec) DeepCopyInto(out *ProviderSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProviderSpec.
func (in *ProviderSpec) DeepCopy() *ProviderSpec {
	if in == nil {
		return nil
	}
	out := new(ProviderSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProviderStatus) DeepCopyInto(out *ProviderStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProviderStatus.
func (in *ProviderStatus) DeepCopy() *ProviderStatus {
	if in == nil {
		return nil
	}
	out := new(ProviderStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningStatusInitParameters) DeepCopyInto(out *ProvisioningStatusInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningStatusInitParameters.
func (in *ProvisioningStatusInitParameters) DeepCopy() *ProvisioningStatusInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProvisioningStatusInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningStatusInitialPipelineSyncProgressInitParameters) DeepCopyInto(out *ProvisioningStatusInitialPipelineSyncProgressInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningStatusInitialPipelineSyncProgressInitParameters.
func (in *ProvisioningStatusInitialPipelineSyncProgressInitParameters) DeepCopy() *ProvisioningStatusInitialPipelineSyncProgressInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProvisioningStatusInitialPipelineSyncProgressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningStatusInitialPipelineSyncProgressObservation) DeepCopyInto(out *ProvisioningStatusInitialPipelineSyncProgressObservation) {
	*out = *in
	if in.EstimatedCompletionTimeSeconds != nil {
		in, out := &in.EstimatedCompletionTimeSeconds, &out.EstimatedCompletionTimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.LatestVersionCurrentlyProcessing != nil {
		in, out := &in.LatestVersionCurrentlyProcessing, &out.LatestVersionCurrentlyProcessing
		*out = new(float64)
		**out = **in
	}
	if in.SyncProgressCompletion != nil {
		in, out := &in.SyncProgressCompletion, &out.SyncProgressCompletion
		*out = new(float64)
		**out = **in
	}
	if in.SyncedRowCount != nil {
		in, out := &in.SyncedRowCount, &out.SyncedRowCount
		*out = new(float64)
		**out = **in
	}
	if in.TotalRowCount != nil {
		in, out := &in.TotalRowCount, &out.TotalRowCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningStatusInitialPipelineSyncProgressObservation.
func (in *ProvisioningStatusInitialPipelineSyncProgressObservation) DeepCopy() *ProvisioningStatusInitialPipelineSyncProgressObservation {
	if in == nil {
		return nil
	}
	out := new(ProvisioningStatusInitialPipelineSyncProgressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningStatusInitialPipelineSyncProgressParameters) DeepCopyInto(out *ProvisioningStatusInitialPipelineSyncProgressParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningStatusInitialPipelineSyncProgressParameters.
func (in *ProvisioningStatusInitialPipelineSyncProgressParameters) DeepCopy() *ProvisioningStatusInitialPipelineSyncProgressParameters {
	if in == nil {
		return nil
	}
	out := new(ProvisioningStatusInitialPipelineSyncProgressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningStatusObservation) DeepCopyInto(out *ProvisioningStatusObservation) {
	*out = *in
	if in.InitialPipelineSyncProgress != nil {
		in, out := &in.InitialPipelineSyncProgress, &out.InitialPipelineSyncProgress
		*out = make([]ProvisioningStatusInitialPipelineSyncProgressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningStatusObservation.
func (in *ProvisioningStatusObservation) DeepCopy() *ProvisioningStatusObservation {
	if in == nil {
		return nil
	}
	out := new(ProvisioningStatusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningStatusParameters) DeepCopyInto(out *ProvisioningStatusParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningStatusParameters.
func (in *ProvisioningStatusParameters) DeepCopy() *ProvisioningStatusParameters {
	if in == nil {
		return nil
	}
	out := new(ProvisioningStatusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PypiInitParameters) DeepCopyInto(out *PypiInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PypiInitParameters.
func (in *PypiInitParameters) DeepCopy() *PypiInitParameters {
	if in == nil {
		return nil
	}
	out := new(PypiInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PypiObservation) DeepCopyInto(out *PypiObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PypiObservation.
func (in *PypiObservation) DeepCopy() *PypiObservation {
	if in == nil {
		return nil
	}
	out := new(PypiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PypiParameters) DeepCopyInto(out *PypiParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PypiParameters.
func (in *PypiParameters) DeepCopy() *PypiParameters {
	if in == nil {
		return nil
	}
	out := new(PypiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PythonWheelTaskInitParameters) DeepCopyInto(out *PythonWheelTaskInitParameters) {
	*out = *in
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = new(string)
		**out = **in
	}
	if in.NamedParameters != nil {
		in, out := &in.NamedParameters, &out.NamedParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PackageName != nil {
		in, out := &in.PackageName, &out.PackageName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PythonWheelTaskInitParameters.
func (in *PythonWheelTaskInitParameters) DeepCopy() *PythonWheelTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(PythonWheelTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PythonWheelTaskObservation) DeepCopyInto(out *PythonWheelTaskObservation) {
	*out = *in
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = new(string)
		**out = **in
	}
	if in.NamedParameters != nil {
		in, out := &in.NamedParameters, &out.NamedParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PackageName != nil {
		in, out := &in.PackageName, &out.PackageName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PythonWheelTaskObservation.
func (in *PythonWheelTaskObservation) DeepCopy() *PythonWheelTaskObservation {
	if in == nil {
		return nil
	}
	out := new(PythonWheelTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PythonWheelTaskParameters) DeepCopyInto(out *PythonWheelTaskParameters) {
	*out = *in
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = new(string)
		**out = **in
	}
	if in.NamedParameters != nil {
		in, out := &in.NamedParameters, &out.NamedParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PackageName != nil {
		in, out := &in.PackageName, &out.PackageName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PythonWheelTaskParameters.
func (in *PythonWheelTaskParameters) DeepCopy() *PythonWheelTaskParameters {
	if in == nil {
		return nil
	}
	out := new(PythonWheelTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitor) DeepCopyInto(out *QualityMonitor) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitor.
func (in *QualityMonitor) DeepCopy() *QualityMonitor {
	if in == nil {
		return nil
	}
	out := new(QualityMonitor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *QualityMonitor) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorCustomMetricsInitParameters) DeepCopyInto(out *QualityMonitorCustomMetricsInitParameters) {
	*out = *in
	if in.Definition != nil {
		in, out := &in.Definition, &out.Definition
		*out = new(string)
		**out = **in
	}
	if in.InputColumns != nil {
		in, out := &in.InputColumns, &out.InputColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OutputDataType != nil {
		in, out := &in.OutputDataType, &out.OutputDataType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorCustomMetricsInitParameters.
func (in *QualityMonitorCustomMetricsInitParameters) DeepCopy() *QualityMonitorCustomMetricsInitParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorCustomMetricsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorCustomMetricsObservation) DeepCopyInto(out *QualityMonitorCustomMetricsObservation) {
	*out = *in
	if in.Definition != nil {
		in, out := &in.Definition, &out.Definition
		*out = new(string)
		**out = **in
	}
	if in.InputColumns != nil {
		in, out := &in.InputColumns, &out.InputColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OutputDataType != nil {
		in, out := &in.OutputDataType, &out.OutputDataType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorCustomMetricsObservation.
func (in *QualityMonitorCustomMetricsObservation) DeepCopy() *QualityMonitorCustomMetricsObservation {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorCustomMetricsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorCustomMetricsParameters) DeepCopyInto(out *QualityMonitorCustomMetricsParameters) {
	*out = *in
	if in.Definition != nil {
		in, out := &in.Definition, &out.Definition
		*out = new(string)
		**out = **in
	}
	if in.InputColumns != nil {
		in, out := &in.InputColumns, &out.InputColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OutputDataType != nil {
		in, out := &in.OutputDataType, &out.OutputDataType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorCustomMetricsParameters.
func (in *QualityMonitorCustomMetricsParameters) DeepCopy() *QualityMonitorCustomMetricsParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorCustomMetricsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorDataClassificationConfigInitParameters) DeepCopyInto(out *QualityMonitorDataClassificationConfigInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorDataClassificationConfigInitParameters.
func (in *QualityMonitorDataClassificationConfigInitParameters) DeepCopy() *QualityMonitorDataClassificationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorDataClassificationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorDataClassificationConfigObservation) DeepCopyInto(out *QualityMonitorDataClassificationConfigObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorDataClassificationConfigObservation.
func (in *QualityMonitorDataClassificationConfigObservation) DeepCopy() *QualityMonitorDataClassificationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorDataClassificationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorDataClassificationConfigParameters) DeepCopyInto(out *QualityMonitorDataClassificationConfigParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorDataClassificationConfigParameters.
func (in *QualityMonitorDataClassificationConfigParameters) DeepCopy() *QualityMonitorDataClassificationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorDataClassificationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorInferenceLogInitParameters) DeepCopyInto(out *QualityMonitorInferenceLogInitParameters) {
	*out = *in
	if in.Granularities != nil {
		in, out := &in.Granularities, &out.Granularities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LabelCol != nil {
		in, out := &in.LabelCol, &out.LabelCol
		*out = new(string)
		**out = **in
	}
	if in.ModelIDCol != nil {
		in, out := &in.ModelIDCol, &out.ModelIDCol
		*out = new(string)
		**out = **in
	}
	if in.PredictionCol != nil {
		in, out := &in.PredictionCol, &out.PredictionCol
		*out = new(string)
		**out = **in
	}
	if in.PredictionProbaCol != nil {
		in, out := &in.PredictionProbaCol, &out.PredictionProbaCol
		*out = new(string)
		**out = **in
	}
	if in.ProblemType != nil {
		in, out := &in.ProblemType, &out.ProblemType
		*out = new(string)
		**out = **in
	}
	if in.TimestampCol != nil {
		in, out := &in.TimestampCol, &out.TimestampCol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorInferenceLogInitParameters.
func (in *QualityMonitorInferenceLogInitParameters) DeepCopy() *QualityMonitorInferenceLogInitParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorInferenceLogInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorInferenceLogObservation) DeepCopyInto(out *QualityMonitorInferenceLogObservation) {
	*out = *in
	if in.Granularities != nil {
		in, out := &in.Granularities, &out.Granularities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LabelCol != nil {
		in, out := &in.LabelCol, &out.LabelCol
		*out = new(string)
		**out = **in
	}
	if in.ModelIDCol != nil {
		in, out := &in.ModelIDCol, &out.ModelIDCol
		*out = new(string)
		**out = **in
	}
	if in.PredictionCol != nil {
		in, out := &in.PredictionCol, &out.PredictionCol
		*out = new(string)
		**out = **in
	}
	if in.PredictionProbaCol != nil {
		in, out := &in.PredictionProbaCol, &out.PredictionProbaCol
		*out = new(string)
		**out = **in
	}
	if in.ProblemType != nil {
		in, out := &in.ProblemType, &out.ProblemType
		*out = new(string)
		**out = **in
	}
	if in.TimestampCol != nil {
		in, out := &in.TimestampCol, &out.TimestampCol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorInferenceLogObservation.
func (in *QualityMonitorInferenceLogObservation) DeepCopy() *QualityMonitorInferenceLogObservation {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorInferenceLogObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorInferenceLogParameters) DeepCopyInto(out *QualityMonitorInferenceLogParameters) {
	*out = *in
	if in.Granularities != nil {
		in, out := &in.Granularities, &out.Granularities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LabelCol != nil {
		in, out := &in.LabelCol, &out.LabelCol
		*out = new(string)
		**out = **in
	}
	if in.ModelIDCol != nil {
		in, out := &in.ModelIDCol, &out.ModelIDCol
		*out = new(string)
		**out = **in
	}
	if in.PredictionCol != nil {
		in, out := &in.PredictionCol, &out.PredictionCol
		*out = new(string)
		**out = **in
	}
	if in.PredictionProbaCol != nil {
		in, out := &in.PredictionProbaCol, &out.PredictionProbaCol
		*out = new(string)
		**out = **in
	}
	if in.ProblemType != nil {
		in, out := &in.ProblemType, &out.ProblemType
		*out = new(string)
		**out = **in
	}
	if in.TimestampCol != nil {
		in, out := &in.TimestampCol, &out.TimestampCol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorInferenceLogParameters.
func (in *QualityMonitorInferenceLogParameters) DeepCopy() *QualityMonitorInferenceLogParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorInferenceLogParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorInitParameters) DeepCopyInto(out *QualityMonitorInitParameters) {
	*out = *in
	if in.AssetsDir != nil {
		in, out := &in.AssetsDir, &out.AssetsDir
		*out = new(string)
		**out = **in
	}
	if in.BaselineTableName != nil {
		in, out := &in.BaselineTableName, &out.BaselineTableName
		*out = new(string)
		**out = **in
	}
	if in.CustomMetrics != nil {
		in, out := &in.CustomMetrics, &out.CustomMetrics
		*out = make([]QualityMonitorCustomMetricsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataClassificationConfig != nil {
		in, out := &in.DataClassificationConfig, &out.DataClassificationConfig
		*out = make([]QualityMonitorDataClassificationConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InferenceLog != nil {
		in, out := &in.InferenceLog, &out.InferenceLog
		*out = make([]QualityMonitorInferenceLogInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LatestMonitorFailureMsg != nil {
		in, out := &in.LatestMonitorFailureMsg, &out.LatestMonitorFailureMsg
		*out = new(string)
		**out = **in
	}
	if in.Notifications != nil {
		in, out := &in.Notifications, &out.Notifications
		*out = make([]QualityMonitorNotificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutputSchemaName != nil {
		in, out := &in.OutputSchemaName, &out.OutputSchemaName
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]QualityMonitorScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipBuiltinDashboard != nil {
		in, out := &in.SkipBuiltinDashboard, &out.SkipBuiltinDashboard
		*out = new(bool)
		**out = **in
	}
	if in.SlicingExprs != nil {
		in, out := &in.SlicingExprs, &out.SlicingExprs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Snapshot != nil {
		in, out := &in.Snapshot, &out.Snapshot
		*out = make([]QualityMonitorSnapshotInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.TimeSeries != nil {
		in, out := &in.TimeSeries, &out.TimeSeries
		*out = make([]QualityMonitorTimeSeriesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorInitParameters.
func (in *QualityMonitorInitParameters) DeepCopy() *QualityMonitorInitParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorList) DeepCopyInto(out *QualityMonitorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]QualityMonitor, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorList.
func (in *QualityMonitorList) DeepCopy() *QualityMonitorList {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *QualityMonitorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorNotificationsInitParameters) DeepCopyInto(out *QualityMonitorNotificationsInitParameters) {
	*out = *in
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]QualityMonitorNotificationsOnFailureInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnNewClassificationTagDetected != nil {
		in, out := &in.OnNewClassificationTagDetected, &out.OnNewClassificationTagDetected
		*out = make([]NotificationsOnNewClassificationTagDetectedInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorNotificationsInitParameters.
func (in *QualityMonitorNotificationsInitParameters) DeepCopy() *QualityMonitorNotificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorNotificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorNotificationsObservation) DeepCopyInto(out *QualityMonitorNotificationsObservation) {
	*out = *in
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]QualityMonitorNotificationsOnFailureObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnNewClassificationTagDetected != nil {
		in, out := &in.OnNewClassificationTagDetected, &out.OnNewClassificationTagDetected
		*out = make([]NotificationsOnNewClassificationTagDetectedObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorNotificationsObservation.
func (in *QualityMonitorNotificationsObservation) DeepCopy() *QualityMonitorNotificationsObservation {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorNotificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorNotificationsOnFailureInitParameters) DeepCopyInto(out *QualityMonitorNotificationsOnFailureInitParameters) {
	*out = *in
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorNotificationsOnFailureInitParameters.
func (in *QualityMonitorNotificationsOnFailureInitParameters) DeepCopy() *QualityMonitorNotificationsOnFailureInitParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorNotificationsOnFailureInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorNotificationsOnFailureObservation) DeepCopyInto(out *QualityMonitorNotificationsOnFailureObservation) {
	*out = *in
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorNotificationsOnFailureObservation.
func (in *QualityMonitorNotificationsOnFailureObservation) DeepCopy() *QualityMonitorNotificationsOnFailureObservation {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorNotificationsOnFailureObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorNotificationsOnFailureParameters) DeepCopyInto(out *QualityMonitorNotificationsOnFailureParameters) {
	*out = *in
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorNotificationsOnFailureParameters.
func (in *QualityMonitorNotificationsOnFailureParameters) DeepCopy() *QualityMonitorNotificationsOnFailureParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorNotificationsOnFailureParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorNotificationsParameters) DeepCopyInto(out *QualityMonitorNotificationsParameters) {
	*out = *in
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]QualityMonitorNotificationsOnFailureParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnNewClassificationTagDetected != nil {
		in, out := &in.OnNewClassificationTagDetected, &out.OnNewClassificationTagDetected
		*out = make([]NotificationsOnNewClassificationTagDetectedParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorNotificationsParameters.
func (in *QualityMonitorNotificationsParameters) DeepCopy() *QualityMonitorNotificationsParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorNotificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorObservation) DeepCopyInto(out *QualityMonitorObservation) {
	*out = *in
	if in.AssetsDir != nil {
		in, out := &in.AssetsDir, &out.AssetsDir
		*out = new(string)
		**out = **in
	}
	if in.BaselineTableName != nil {
		in, out := &in.BaselineTableName, &out.BaselineTableName
		*out = new(string)
		**out = **in
	}
	if in.CustomMetrics != nil {
		in, out := &in.CustomMetrics, &out.CustomMetrics
		*out = make([]QualityMonitorCustomMetricsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.DataClassificationConfig != nil {
		in, out := &in.DataClassificationConfig, &out.DataClassificationConfig
		*out = make([]QualityMonitorDataClassificationConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriftMetricsTableName != nil {
		in, out := &in.DriftMetricsTableName, &out.DriftMetricsTableName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InferenceLog != nil {
		in, out := &in.InferenceLog, &out.InferenceLog
		*out = make([]QualityMonitorInferenceLogObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LatestMonitorFailureMsg != nil {
		in, out := &in.LatestMonitorFailureMsg, &out.LatestMonitorFailureMsg
		*out = new(string)
		**out = **in
	}
	if in.MonitorVersion != nil {
		in, out := &in.MonitorVersion, &out.MonitorVersion
		*out = new(string)
		**out = **in
	}
	if in.Notifications != nil {
		in, out := &in.Notifications, &out.Notifications
		*out = make([]QualityMonitorNotificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutputSchemaName != nil {
		in, out := &in.OutputSchemaName, &out.OutputSchemaName
		*out = new(string)
		**out = **in
	}
	if in.ProfileMetricsTableName != nil {
		in, out := &in.ProfileMetricsTableName, &out.ProfileMetricsTableName
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]QualityMonitorScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipBuiltinDashboard != nil {
		in, out := &in.SkipBuiltinDashboard, &out.SkipBuiltinDashboard
		*out = new(bool)
		**out = **in
	}
	if in.SlicingExprs != nil {
		in, out := &in.SlicingExprs, &out.SlicingExprs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Snapshot != nil {
		in, out := &in.Snapshot, &out.Snapshot
		*out = make([]QualityMonitorSnapshotParameters, len(*in))
		copy(*out, *in)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.TimeSeries != nil {
		in, out := &in.TimeSeries, &out.TimeSeries
		*out = make([]QualityMonitorTimeSeriesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorObservation.
func (in *QualityMonitorObservation) DeepCopy() *QualityMonitorObservation {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorParameters) DeepCopyInto(out *QualityMonitorParameters) {
	*out = *in
	if in.AssetsDir != nil {
		in, out := &in.AssetsDir, &out.AssetsDir
		*out = new(string)
		**out = **in
	}
	if in.BaselineTableName != nil {
		in, out := &in.BaselineTableName, &out.BaselineTableName
		*out = new(string)
		**out = **in
	}
	if in.CustomMetrics != nil {
		in, out := &in.CustomMetrics, &out.CustomMetrics
		*out = make([]QualityMonitorCustomMetricsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataClassificationConfig != nil {
		in, out := &in.DataClassificationConfig, &out.DataClassificationConfig
		*out = make([]QualityMonitorDataClassificationConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InferenceLog != nil {
		in, out := &in.InferenceLog, &out.InferenceLog
		*out = make([]QualityMonitorInferenceLogParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LatestMonitorFailureMsg != nil {
		in, out := &in.LatestMonitorFailureMsg, &out.LatestMonitorFailureMsg
		*out = new(string)
		**out = **in
	}
	if in.Notifications != nil {
		in, out := &in.Notifications, &out.Notifications
		*out = make([]QualityMonitorNotificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutputSchemaName != nil {
		in, out := &in.OutputSchemaName, &out.OutputSchemaName
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]QualityMonitorScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipBuiltinDashboard != nil {
		in, out := &in.SkipBuiltinDashboard, &out.SkipBuiltinDashboard
		*out = new(bool)
		**out = **in
	}
	if in.SlicingExprs != nil {
		in, out := &in.SlicingExprs, &out.SlicingExprs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Snapshot != nil {
		in, out := &in.Snapshot, &out.Snapshot
		*out = make([]QualityMonitorSnapshotParameters, len(*in))
		copy(*out, *in)
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.TimeSeries != nil {
		in, out := &in.TimeSeries, &out.TimeSeries
		*out = make([]QualityMonitorTimeSeriesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorParameters.
func (in *QualityMonitorParameters) DeepCopy() *QualityMonitorParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorScheduleInitParameters) DeepCopyInto(out *QualityMonitorScheduleInitParameters) {
	*out = *in
	if in.QuartzCronExpression != nil {
		in, out := &in.QuartzCronExpression, &out.QuartzCronExpression
		*out = new(string)
		**out = **in
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorScheduleInitParameters.
func (in *QualityMonitorScheduleInitParameters) DeepCopy() *QualityMonitorScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorScheduleObservation) DeepCopyInto(out *QualityMonitorScheduleObservation) {
	*out = *in
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
	if in.QuartzCronExpression != nil {
		in, out := &in.QuartzCronExpression, &out.QuartzCronExpression
		*out = new(string)
		**out = **in
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorScheduleObservation.
func (in *QualityMonitorScheduleObservation) DeepCopy() *QualityMonitorScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorScheduleParameters) DeepCopyInto(out *QualityMonitorScheduleParameters) {
	*out = *in
	if in.QuartzCronExpression != nil {
		in, out := &in.QuartzCronExpression, &out.QuartzCronExpression
		*out = new(string)
		**out = **in
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorScheduleParameters.
func (in *QualityMonitorScheduleParameters) DeepCopy() *QualityMonitorScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorSnapshotInitParameters) DeepCopyInto(out *QualityMonitorSnapshotInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorSnapshotInitParameters.
func (in *QualityMonitorSnapshotInitParameters) DeepCopy() *QualityMonitorSnapshotInitParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorSnapshotInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorSnapshotObservation) DeepCopyInto(out *QualityMonitorSnapshotObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorSnapshotObservation.
func (in *QualityMonitorSnapshotObservation) DeepCopy() *QualityMonitorSnapshotObservation {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorSnapshotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorSnapshotParameters) DeepCopyInto(out *QualityMonitorSnapshotParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorSnapshotParameters.
func (in *QualityMonitorSnapshotParameters) DeepCopy() *QualityMonitorSnapshotParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorSnapshotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorSpec) DeepCopyInto(out *QualityMonitorSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorSpec.
func (in *QualityMonitorSpec) DeepCopy() *QualityMonitorSpec {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorStatus) DeepCopyInto(out *QualityMonitorStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorStatus.
func (in *QualityMonitorStatus) DeepCopy() *QualityMonitorStatus {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorTimeSeriesInitParameters) DeepCopyInto(out *QualityMonitorTimeSeriesInitParameters) {
	*out = *in
	if in.Granularities != nil {
		in, out := &in.Granularities, &out.Granularities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TimestampCol != nil {
		in, out := &in.TimestampCol, &out.TimestampCol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorTimeSeriesInitParameters.
func (in *QualityMonitorTimeSeriesInitParameters) DeepCopy() *QualityMonitorTimeSeriesInitParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorTimeSeriesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorTimeSeriesObservation) DeepCopyInto(out *QualityMonitorTimeSeriesObservation) {
	*out = *in
	if in.Granularities != nil {
		in, out := &in.Granularities, &out.Granularities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TimestampCol != nil {
		in, out := &in.TimestampCol, &out.TimestampCol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorTimeSeriesObservation.
func (in *QualityMonitorTimeSeriesObservation) DeepCopy() *QualityMonitorTimeSeriesObservation {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorTimeSeriesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorTimeSeriesParameters) DeepCopyInto(out *QualityMonitorTimeSeriesParameters) {
	*out = *in
	if in.Granularities != nil {
		in, out := &in.Granularities, &out.Granularities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TimestampCol != nil {
		in, out := &in.TimestampCol, &out.TimestampCol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorTimeSeriesParameters.
func (in *QualityMonitorTimeSeriesParameters) DeepCopy() *QualityMonitorTimeSeriesParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorTimeSeriesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Query) DeepCopyInto(out *Query) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Query.
func (in *Query) DeepCopy() *Query {
	if in == nil {
		return nil
	}
	out := new(Query)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Query) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryBackedValueInitParameters) DeepCopyInto(out *QueryBackedValueInitParameters) {
	*out = *in
	if in.MultiValuesOptions != nil {
		in, out := &in.MultiValuesOptions, &out.MultiValuesOptions
		*out = make([]QueryBackedValueMultiValuesOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryBackedValueInitParameters.
func (in *QueryBackedValueInitParameters) DeepCopy() *QueryBackedValueInitParameters {
	if in == nil {
		return nil
	}
	out := new(QueryBackedValueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryBackedValueMultiValuesOptionsInitParameters) DeepCopyInto(out *QueryBackedValueMultiValuesOptionsInitParameters) {
	*out = *in
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.Suffix != nil {
		in, out := &in.Suffix, &out.Suffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryBackedValueMultiValuesOptionsInitParameters.
func (in *QueryBackedValueMultiValuesOptionsInitParameters) DeepCopy() *QueryBackedValueMultiValuesOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(QueryBackedValueMultiValuesOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryBackedValueMultiValuesOptionsObservation) DeepCopyInto(out *QueryBackedValueMultiValuesOptionsObservation) {
	*out = *in
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.Suffix != nil {
		in, out := &in.Suffix, &out.Suffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryBackedValueMultiValuesOptionsObservation.
func (in *QueryBackedValueMultiValuesOptionsObservation) DeepCopy() *QueryBackedValueMultiValuesOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(QueryBackedValueMultiValuesOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryBackedValueMultiValuesOptionsParameters) DeepCopyInto(out *QueryBackedValueMultiValuesOptionsParameters) {
	*out = *in
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.Suffix != nil {
		in, out := &in.Suffix, &out.Suffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryBackedValueMultiValuesOptionsParameters.
func (in *QueryBackedValueMultiValuesOptionsParameters) DeepCopy() *QueryBackedValueMultiValuesOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(QueryBackedValueMultiValuesOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryBackedValueObservation) DeepCopyInto(out *QueryBackedValueObservation) {
	*out = *in
	if in.MultiValuesOptions != nil {
		in, out := &in.MultiValuesOptions, &out.MultiValuesOptions
		*out = make([]QueryBackedValueMultiValuesOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryBackedValueObservation.
func (in *QueryBackedValueObservation) DeepCopy() *QueryBackedValueObservation {
	if in == nil {
		return nil
	}
	out := new(QueryBackedValueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryBackedValueParameters) DeepCopyInto(out *QueryBackedValueParameters) {
	*out = *in
	if in.MultiValuesOptions != nil {
		in, out := &in.MultiValuesOptions, &out.MultiValuesOptions
		*out = make([]QueryBackedValueMultiValuesOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryBackedValueParameters.
func (in *QueryBackedValueParameters) DeepCopy() *QueryBackedValueParameters {
	if in == nil {
		return nil
	}
	out := new(QueryBackedValueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryInitParameters) DeepCopyInto(out *QueryInitParameters) {
	*out = *in
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryInitParameters.
func (in *QueryInitParameters) DeepCopy() *QueryInitParameters {
	if in == nil {
		return nil
	}
	out := new(QueryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryInitParameters_2) DeepCopyInto(out *QueryInitParameters_2) {
	*out = *in
	if in.ApplyAutoLimit != nil {
		in, out := &in.ApplyAutoLimit, &out.ApplyAutoLimit
		*out = new(bool)
		**out = **in
	}
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.OwnerUserName != nil {
		in, out := &in.OwnerUserName, &out.OwnerUserName
		*out = new(string)
		**out = **in
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]QueryParameterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ParentPath != nil {
		in, out := &in.ParentPath, &out.ParentPath
		*out = new(string)
		**out = **in
	}
	if in.QueryText != nil {
		in, out := &in.QueryText, &out.QueryText
		*out = new(string)
		**out = **in
	}
	if in.RunAsMode != nil {
		in, out := &in.RunAsMode, &out.RunAsMode
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryInitParameters_2.
func (in *QueryInitParameters_2) DeepCopy() *QueryInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(QueryInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryList) DeepCopyInto(out *QueryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Query, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryList.
func (in *QueryList) DeepCopy() *QueryList {
	if in == nil {
		return nil
	}
	out := new(QueryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *QueryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryMultipleInitParameters) DeepCopyInto(out *QueryMultipleInitParameters) {
	*out = *in
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.Suffix != nil {
		in, out := &in.Suffix, &out.Suffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryMultipleInitParameters.
func (in *QueryMultipleInitParameters) DeepCopy() *QueryMultipleInitParameters {
	if in == nil {
		return nil
	}
	out := new(QueryMultipleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryMultipleObservation) DeepCopyInto(out *QueryMultipleObservation) {
	*out = *in
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.Suffix != nil {
		in, out := &in.Suffix, &out.Suffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryMultipleObservation.
func (in *QueryMultipleObservation) DeepCopy() *QueryMultipleObservation {
	if in == nil {
		return nil
	}
	out := new(QueryMultipleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryMultipleParameters) DeepCopyInto(out *QueryMultipleParameters) {
	*out = *in
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.Suffix != nil {
		in, out := &in.Suffix, &out.Suffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryMultipleParameters.
func (in *QueryMultipleParameters) DeepCopy() *QueryMultipleParameters {
	if in == nil {
		return nil
	}
	out := new(QueryMultipleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryObservation) DeepCopyInto(out *QueryObservation) {
	*out = *in
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryObservation.
func (in *QueryObservation) DeepCopy() *QueryObservation {
	if in == nil {
		return nil
	}
	out := new(QueryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryObservation_2) DeepCopyInto(out *QueryObservation_2) {
	*out = *in
	if in.ApplyAutoLimit != nil {
		in, out := &in.ApplyAutoLimit, &out.ApplyAutoLimit
		*out = new(bool)
		**out = **in
	}
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LastModifierUserName != nil {
		in, out := &in.LastModifierUserName, &out.LastModifierUserName
		*out = new(string)
		**out = **in
	}
	if in.LifecycleState != nil {
		in, out := &in.LifecycleState, &out.LifecycleState
		*out = new(string)
		**out = **in
	}
	if in.OwnerUserName != nil {
		in, out := &in.OwnerUserName, &out.OwnerUserName
		*out = new(string)
		**out = **in
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]QueryParameterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ParentPath != nil {
		in, out := &in.ParentPath, &out.ParentPath
		*out = new(string)
		**out = **in
	}
	if in.QueryText != nil {
		in, out := &in.QueryText, &out.QueryText
		*out = new(string)
		**out = **in
	}
	if in.RunAsMode != nil {
		in, out := &in.RunAsMode, &out.RunAsMode
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryObservation_2.
func (in *QueryObservation_2) DeepCopy() *QueryObservation_2 {
	if in == nil {
		return nil
	}
	out := new(QueryObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryParameterInitParameters) DeepCopyInto(out *QueryParameterInitParameters) {
	*out = *in
	if in.DateRangeValue != nil {
		in, out := &in.DateRangeValue, &out.DateRangeValue
		*out = make([]DateRangeValueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DateValue != nil {
		in, out := &in.DateValue, &out.DateValue
		*out = make([]DateValueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnumValue != nil {
		in, out := &in.EnumValue, &out.EnumValue
		*out = make([]EnumValueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NumericValue != nil {
		in, out := &in.NumericValue, &out.NumericValue
		*out = make([]NumericValueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryBackedValue != nil {
		in, out := &in.QueryBackedValue, &out.QueryBackedValue
		*out = make([]QueryBackedValueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TextValue != nil {
		in, out := &in.TextValue, &out.TextValue
		*out = make([]TextValueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryParameterInitParameters.
func (in *QueryParameterInitParameters) DeepCopy() *QueryParameterInitParameters {
	if in == nil {
		return nil
	}
	out := new(QueryParameterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryParameterObservation) DeepCopyInto(out *QueryParameterObservation) {
	*out = *in
	if in.DateRangeValue != nil {
		in, out := &in.DateRangeValue, &out.DateRangeValue
		*out = make([]DateRangeValueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DateValue != nil {
		in, out := &in.DateValue, &out.DateValue
		*out = make([]DateValueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnumValue != nil {
		in, out := &in.EnumValue, &out.EnumValue
		*out = make([]EnumValueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NumericValue != nil {
		in, out := &in.NumericValue, &out.NumericValue
		*out = make([]NumericValueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryBackedValue != nil {
		in, out := &in.QueryBackedValue, &out.QueryBackedValue
		*out = make([]QueryBackedValueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TextValue != nil {
		in, out := &in.TextValue, &out.TextValue
		*out = make([]TextValueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryParameterObservation.
func (in *QueryParameterObservation) DeepCopy() *QueryParameterObservation {
	if in == nil {
		return nil
	}
	out := new(QueryParameterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryParameterParameters) DeepCopyInto(out *QueryParameterParameters) {
	*out = *in
	if in.DateRangeValue != nil {
		in, out := &in.DateRangeValue, &out.DateRangeValue
		*out = make([]DateRangeValueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DateValue != nil {
		in, out := &in.DateValue, &out.DateValue
		*out = make([]DateValueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnumValue != nil {
		in, out := &in.EnumValue, &out.EnumValue
		*out = make([]EnumValueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NumericValue != nil {
		in, out := &in.NumericValue, &out.NumericValue
		*out = make([]NumericValueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryBackedValue != nil {
		in, out := &in.QueryBackedValue, &out.QueryBackedValue
		*out = make([]QueryBackedValueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TextValue != nil {
		in, out := &in.TextValue, &out.TextValue
		*out = make([]TextValueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryParameterParameters.
func (in *QueryParameterParameters) DeepCopy() *QueryParameterParameters {
	if in == nil {
		return nil
	}
	out := new(QueryParameterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryParameters) DeepCopyInto(out *QueryParameters) {
	*out = *in
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryParameters.
func (in *QueryParameters) DeepCopy() *QueryParameters {
	if in == nil {
		return nil
	}
	out := new(QueryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryParameters_2) DeepCopyInto(out *QueryParameters_2) {
	*out = *in
	if in.ApplyAutoLimit != nil {
		in, out := &in.ApplyAutoLimit, &out.ApplyAutoLimit
		*out = new(bool)
		**out = **in
	}
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.OwnerUserName != nil {
		in, out := &in.OwnerUserName, &out.OwnerUserName
		*out = new(string)
		**out = **in
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]QueryParameterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ParentPath != nil {
		in, out := &in.ParentPath, &out.ParentPath
		*out = new(string)
		**out = **in
	}
	if in.QueryText != nil {
		in, out := &in.QueryText, &out.QueryText
		*out = new(string)
		**out = **in
	}
	if in.RunAsMode != nil {
		in, out := &in.RunAsMode, &out.RunAsMode
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryParameters_2.
func (in *QueryParameters_2) DeepCopy() *QueryParameters_2 {
	if in == nil {
		return nil
	}
	out := new(QueryParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QuerySpec) DeepCopyInto(out *QuerySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QuerySpec.
func (in *QuerySpec) DeepCopy() *QuerySpec {
	if in == nil {
		return nil
	}
	out := new(QuerySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryStatus) DeepCopyInto(out *QueryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryStatus.
func (in *QueryStatus) DeepCopy() *QueryStatus {
	if in == nil {
		return nil
	}
	out := new(QueryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueInitParameters) DeepCopyInto(out *QueueInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueInitParameters.
func (in *QueueInitParameters) DeepCopy() *QueueInitParameters {
	if in == nil {
		return nil
	}
	out := new(QueueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueObservation) DeepCopyInto(out *QueueObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueObservation.
func (in *QueueObservation) DeepCopy() *QueueObservation {
	if in == nil {
		return nil
	}
	out := new(QueueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueParameters) DeepCopyInto(out *QueueParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueParameters.
func (in *QueueParameters) DeepCopy() *QueueParameters {
	if in == nil {
		return nil
	}
	out := new(QueueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangeInitParameters) DeepCopyInto(out *RangeInitParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangeInitParameters.
func (in *RangeInitParameters) DeepCopy() *RangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(RangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangeObservation) DeepCopyInto(out *RangeObservation) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangeObservation.
func (in *RangeObservation) DeepCopy() *RangeObservation {
	if in == nil {
		return nil
	}
	out := new(RangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangeParameters) DeepCopyInto(out *RangeParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangeParameters.
func (in *RangeParameters) DeepCopy() *RangeParameters {
	if in == nil {
		return nil
	}
	out := new(RangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimitsInitParameters) DeepCopyInto(out *RateLimitsInitParameters) {
	*out = *in
	if in.Calls != nil {
		in, out := &in.Calls, &out.Calls
		*out = new(float64)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.RenewalPeriod != nil {
		in, out := &in.RenewalPeriod, &out.RenewalPeriod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimitsInitParameters.
func (in *RateLimitsInitParameters) DeepCopy() *RateLimitsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RateLimitsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimitsObservation) DeepCopyInto(out *RateLimitsObservation) {
	*out = *in
	if in.Calls != nil {
		in, out := &in.Calls, &out.Calls
		*out = new(float64)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.RenewalPeriod != nil {
		in, out := &in.RenewalPeriod, &out.RenewalPeriod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimitsObservation.
func (in *RateLimitsObservation) DeepCopy() *RateLimitsObservation {
	if in == nil {
		return nil
	}
	out := new(RateLimitsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimitsParameters) DeepCopyInto(out *RateLimitsParameters) {
	*out = *in
	if in.Calls != nil {
		in, out := &in.Calls, &out.Calls
		*out = new(float64)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.RenewalPeriod != nil {
		in, out := &in.RenewalPeriod, &out.RenewalPeriod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimitsParameters.
func (in *RateLimitsParameters) DeepCopy() *RateLimitsParameters {
	if in == nil {
		return nil
	}
	out := new(RateLimitsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Recipient) DeepCopyInto(out *Recipient) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Recipient.
func (in *Recipient) DeepCopy() *Recipient {
	if in == nil {
		return nil
	}
	out := new(Recipient)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Recipient) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipientIPAccessListInitParameters) DeepCopyInto(out *RecipientIPAccessListInitParameters) {
	*out = *in
	if in.AllowedIPAddresses != nil {
		in, out := &in.AllowedIPAddresses, &out.AllowedIPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipientIPAccessListInitParameters.
func (in *RecipientIPAccessListInitParameters) DeepCopy() *RecipientIPAccessListInitParameters {
	if in == nil {
		return nil
	}
	out := new(RecipientIPAccessListInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipientIPAccessListObservation) DeepCopyInto(out *RecipientIPAccessListObservation) {
	*out = *in
	if in.AllowedIPAddresses != nil {
		in, out := &in.AllowedIPAddresses, &out.AllowedIPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipientIPAccessListObservation.
func (in *RecipientIPAccessListObservation) DeepCopy() *RecipientIPAccessListObservation {
	if in == nil {
		return nil
	}
	out := new(RecipientIPAccessListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipientIPAccessListParameters) DeepCopyInto(out *RecipientIPAccessListParameters) {
	*out = *in
	if in.AllowedIPAddresses != nil {
		in, out := &in.AllowedIPAddresses, &out.AllowedIPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipientIPAccessListParameters.
func (in *RecipientIPAccessListParameters) DeepCopy() *RecipientIPAccessListParameters {
	if in == nil {
		return nil
	}
	out := new(RecipientIPAccessListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipientInitParameters) DeepCopyInto(out *RecipientInitParameters) {
	*out = *in
	if in.AuthenticationType != nil {
		in, out := &in.AuthenticationType, &out.AuthenticationType
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DataRecipientGlobalMetastoreID != nil {
		in, out := &in.DataRecipientGlobalMetastoreID, &out.DataRecipientGlobalMetastoreID
		*out = new(string)
		**out = **in
	}
	if in.IPAccessList != nil {
		in, out := &in.IPAccessList, &out.IPAccessList
		*out = make([]RecipientIPAccessListInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.PropertiesKvpairs != nil {
		in, out := &in.PropertiesKvpairs, &out.PropertiesKvpairs
		*out = make([]PropertiesKvpairsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SharingCodeSecretRef != nil {
		in, out := &in.SharingCodeSecretRef, &out.SharingCodeSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]TokensInitParameters, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipientInitParameters.
func (in *RecipientInitParameters) DeepCopy() *RecipientInitParameters {
	if in == nil {
		return nil
	}
	out := new(RecipientInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipientList) DeepCopyInto(out *RecipientList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Recipient, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipientList.
func (in *RecipientList) DeepCopy() *RecipientList {
	if in == nil {
		return nil
	}
	out := new(RecipientList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RecipientList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipientObservation) DeepCopyInto(out *RecipientObservation) {
	*out = *in
	if in.Activated != nil {
		in, out := &in.Activated, &out.Activated
		*out = new(bool)
		**out = **in
	}
	if in.ActivationURL != nil {
		in, out := &in.ActivationURL, &out.ActivationURL
		*out = new(string)
		**out = **in
	}
	if in.AuthenticationType != nil {
		in, out := &in.AuthenticationType, &out.AuthenticationType
		*out = new(string)
		**out = **in
	}
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.DataRecipientGlobalMetastoreID != nil {
		in, out := &in.DataRecipientGlobalMetastoreID, &out.DataRecipientGlobalMetastoreID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAccessList != nil {
		in, out := &in.IPAccessList, &out.IPAccessList
		*out = make([]RecipientIPAccessListObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.PropertiesKvpairs != nil {
		in, out := &in.PropertiesKvpairs, &out.PropertiesKvpairs
		*out = make([]PropertiesKvpairsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]TokensObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedBy != nil {
		in, out := &in.UpdatedBy, &out.UpdatedBy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipientObservation.
func (in *RecipientObservation) DeepCopy() *RecipientObservation {
	if in == nil {
		return nil
	}
	out := new(RecipientObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipientParameters) DeepCopyInto(out *RecipientParameters) {
	*out = *in
	if in.AuthenticationType != nil {
		in, out := &in.AuthenticationType, &out.AuthenticationType
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DataRecipientGlobalMetastoreID != nil {
		in, out := &in.DataRecipientGlobalMetastoreID, &out.DataRecipientGlobalMetastoreID
		*out = new(string)
		**out = **in
	}
	if in.IPAccessList != nil {
		in, out := &in.IPAccessList, &out.IPAccessList
		*out = make([]RecipientIPAccessListParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.PropertiesKvpairs != nil {
		in, out := &in.PropertiesKvpairs, &out.PropertiesKvpairs
		*out = make([]PropertiesKvpairsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SharingCodeSecretRef != nil {
		in, out := &in.SharingCodeSecretRef, &out.SharingCodeSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]TokensParameters, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipientParameters.
func (in *RecipientParameters) DeepCopy() *RecipientParameters {
	if in == nil {
		return nil
	}
	out := new(RecipientParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipientSpec) DeepCopyInto(out *RecipientSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipientSpec.
func (in *RecipientSpec) DeepCopy() *RecipientSpec {
	if in == nil {
		return nil
	}
	out := new(RecipientSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipientStatus) DeepCopyInto(out *RecipientStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipientStatus.
func (in *RecipientStatus) DeepCopy() *RecipientStatus {
	if in == nil {
		return nil
	}
	out := new(RecipientStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegisteredModel) DeepCopyInto(out *RegisteredModel) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegisteredModel.
func (in *RegisteredModel) DeepCopy() *RegisteredModel {
	if in == nil {
		return nil
	}
	out := new(RegisteredModel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegisteredModel) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegisteredModelInitParameters) DeepCopyInto(out *RegisteredModelInitParameters) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegisteredModelInitParameters.
func (in *RegisteredModelInitParameters) DeepCopy() *RegisteredModelInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegisteredModelInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegisteredModelList) DeepCopyInto(out *RegisteredModelList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegisteredModel, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegisteredModelList.
func (in *RegisteredModelList) DeepCopy() *RegisteredModelList {
	if in == nil {
		return nil
	}
	out := new(RegisteredModelList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegisteredModelList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegisteredModelObservation) DeepCopyInto(out *RegisteredModelObservation) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegisteredModelObservation.
func (in *RegisteredModelObservation) DeepCopy() *RegisteredModelObservation {
	if in == nil {
		return nil
	}
	out := new(RegisteredModelObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegisteredModelParameters) DeepCopyInto(out *RegisteredModelParameters) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegisteredModelParameters.
func (in *RegisteredModelParameters) DeepCopy() *RegisteredModelParameters {
	if in == nil {
		return nil
	}
	out := new(RegisteredModelParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegisteredModelSpec) DeepCopyInto(out *RegisteredModelSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegisteredModelSpec.
func (in *RegisteredModelSpec) DeepCopy() *RegisteredModelSpec {
	if in == nil {
		return nil
	}
	out := new(RegisteredModelSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegisteredModelStatus) DeepCopyInto(out *RegisteredModelStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegisteredModelStatus.
func (in *RegisteredModelStatus) DeepCopy() *RegisteredModelStatus {
	if in == nil {
		return nil
	}
	out := new(RegisteredModelStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Repo) DeepCopyInto(out *Repo) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Repo.
func (in *Repo) DeepCopy() *Repo {
	if in == nil {
		return nil
	}
	out := new(Repo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Repo) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepoInitParameters) DeepCopyInto(out *RepoInitParameters) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.CommitHash != nil {
		in, out := &in.CommitHash, &out.CommitHash
		*out = new(string)
		**out = **in
	}
	if in.GitProvider != nil {
		in, out := &in.GitProvider, &out.GitProvider
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.SparseCheckout != nil {
		in, out := &in.SparseCheckout, &out.SparseCheckout
		*out = make([]SparseCheckoutInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepoInitParameters.
func (in *RepoInitParameters) DeepCopy() *RepoInitParameters {
	if in == nil {
		return nil
	}
	out := new(RepoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepoList) DeepCopyInto(out *RepoList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Repo, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepoList.
func (in *RepoList) DeepCopy() *RepoList {
	if in == nil {
		return nil
	}
	out := new(RepoList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RepoList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepoObservation) DeepCopyInto(out *RepoObservation) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.CommitHash != nil {
		in, out := &in.CommitHash, &out.CommitHash
		*out = new(string)
		**out = **in
	}
	if in.GitProvider != nil {
		in, out := &in.GitProvider, &out.GitProvider
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.SparseCheckout != nil {
		in, out := &in.SparseCheckout, &out.SparseCheckout
		*out = make([]SparseCheckoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WorkspacePath != nil {
		in, out := &in.WorkspacePath, &out.WorkspacePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepoObservation.
func (in *RepoObservation) DeepCopy() *RepoObservation {
	if in == nil {
		return nil
	}
	out := new(RepoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepoParameters) DeepCopyInto(out *RepoParameters) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.CommitHash != nil {
		in, out := &in.CommitHash, &out.CommitHash
		*out = new(string)
		**out = **in
	}
	if in.GitProvider != nil {
		in, out := &in.GitProvider, &out.GitProvider
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.SparseCheckout != nil {
		in, out := &in.SparseCheckout, &out.SparseCheckout
		*out = make([]SparseCheckoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepoParameters.
func (in *RepoParameters) DeepCopy() *RepoParameters {
	if in == nil {
		return nil
	}
	out := new(RepoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepoSpec) DeepCopyInto(out *RepoSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepoSpec.
func (in *RepoSpec) DeepCopy() *RepoSpec {
	if in == nil {
		return nil
	}
	out := new(RepoSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepoStatus) DeepCopyInto(out *RepoStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepoStatus.
func (in *RepoStatus) DeepCopy() *RepoStatus {
	if in == nil {
		return nil
	}
	out := new(RepoStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportInitParameters) DeepCopyInto(out *ReportInitParameters) {
	*out = *in
	if in.DestinationCatalog != nil {
		in, out := &in.DestinationCatalog, &out.DestinationCatalog
		*out = new(string)
		**out = **in
	}
	if in.DestinationSchema != nil {
		in, out := &in.DestinationSchema, &out.DestinationSchema
		*out = new(string)
		**out = **in
	}
	if in.DestinationTable != nil {
		in, out := &in.DestinationTable, &out.DestinationTable
		*out = new(string)
		**out = **in
	}
	if in.SourceURL != nil {
		in, out := &in.SourceURL, &out.SourceURL
		*out = new(string)
		**out = **in
	}
	if in.TableConfiguration != nil {
		in, out := &in.TableConfiguration, &out.TableConfiguration
		*out = make([]TableConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportInitParameters.
func (in *ReportInitParameters) DeepCopy() *ReportInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReportInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportObservation) DeepCopyInto(out *ReportObservation) {
	*out = *in
	if in.DestinationCatalog != nil {
		in, out := &in.DestinationCatalog, &out.DestinationCatalog
		*out = new(string)
		**out = **in
	}
	if in.DestinationSchema != nil {
		in, out := &in.DestinationSchema, &out.DestinationSchema
		*out = new(string)
		**out = **in
	}
	if in.DestinationTable != nil {
		in, out := &in.DestinationTable, &out.DestinationTable
		*out = new(string)
		**out = **in
	}
	if in.SourceURL != nil {
		in, out := &in.SourceURL, &out.SourceURL
		*out = new(string)
		**out = **in
	}
	if in.TableConfiguration != nil {
		in, out := &in.TableConfiguration, &out.TableConfiguration
		*out = make([]TableConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportObservation.
func (in *ReportObservation) DeepCopy() *ReportObservation {
	if in == nil {
		return nil
	}
	out := new(ReportObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportParameters) DeepCopyInto(out *ReportParameters) {
	*out = *in
	if in.DestinationCatalog != nil {
		in, out := &in.DestinationCatalog, &out.DestinationCatalog
		*out = new(string)
		**out = **in
	}
	if in.DestinationSchema != nil {
		in, out := &in.DestinationSchema, &out.DestinationSchema
		*out = new(string)
		**out = **in
	}
	if in.DestinationTable != nil {
		in, out := &in.DestinationTable, &out.DestinationTable
		*out = new(string)
		**out = **in
	}
	if in.SourceURL != nil {
		in, out := &in.SourceURL, &out.SourceURL
		*out = new(string)
		**out = **in
	}
	if in.TableConfiguration != nil {
		in, out := &in.TableConfiguration, &out.TableConfiguration
		*out = make([]TableConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportParameters.
func (in *ReportParameters) DeepCopy() *ReportParameters {
	if in == nil {
		return nil
	}
	out := new(ReportParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestartWindowInitParameters) DeepCopyInto(out *RestartWindowInitParameters) {
	*out = *in
	if in.DaysOfWeek != nil {
		in, out := &in.DaysOfWeek, &out.DaysOfWeek
		*out = new(string)
		**out = **in
	}
	if in.StartHour != nil {
		in, out := &in.StartHour, &out.StartHour
		*out = new(float64)
		**out = **in
	}
	if in.TimeZoneID != nil {
		in, out := &in.TimeZoneID, &out.TimeZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestartWindowInitParameters.
func (in *RestartWindowInitParameters) DeepCopy() *RestartWindowInitParameters {
	if in == nil {
		return nil
	}
	out := new(RestartWindowInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestartWindowObservation) DeepCopyInto(out *RestartWindowObservation) {
	*out = *in
	if in.DaysOfWeek != nil {
		in, out := &in.DaysOfWeek, &out.DaysOfWeek
		*out = new(string)
		**out = **in
	}
	if in.StartHour != nil {
		in, out := &in.StartHour, &out.StartHour
		*out = new(float64)
		**out = **in
	}
	if in.TimeZoneID != nil {
		in, out := &in.TimeZoneID, &out.TimeZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestartWindowObservation.
func (in *RestartWindowObservation) DeepCopy() *RestartWindowObservation {
	if in == nil {
		return nil
	}
	out := new(RestartWindowObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestartWindowParameters) DeepCopyInto(out *RestartWindowParameters) {
	*out = *in
	if in.DaysOfWeek != nil {
		in, out := &in.DaysOfWeek, &out.DaysOfWeek
		*out = new(string)
		**out = **in
	}
	if in.StartHour != nil {
		in, out := &in.StartHour, &out.StartHour
		*out = new(float64)
		**out = **in
	}
	if in.TimeZoneID != nil {
		in, out := &in.TimeZoneID, &out.TimeZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestartWindowParameters.
func (in *RestartWindowParameters) DeepCopy() *RestartWindowParameters {
	if in == nil {
		return nil
	}
	out := new(RestartWindowParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestrictWorkspaceAdminsInitParameters) DeepCopyInto(out *RestrictWorkspaceAdminsInitParameters) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestrictWorkspaceAdminsInitParameters.
func (in *RestrictWorkspaceAdminsInitParameters) DeepCopy() *RestrictWorkspaceAdminsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RestrictWorkspaceAdminsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestrictWorkspaceAdminsObservation) DeepCopyInto(out *RestrictWorkspaceAdminsObservation) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestrictWorkspaceAdminsObservation.
func (in *RestrictWorkspaceAdminsObservation) DeepCopy() *RestrictWorkspaceAdminsObservation {
	if in == nil {
		return nil
	}
	out := new(RestrictWorkspaceAdminsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestrictWorkspaceAdminsParameters) DeepCopyInto(out *RestrictWorkspaceAdminsParameters) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestrictWorkspaceAdminsParameters.
func (in *RestrictWorkspaceAdminsParameters) DeepCopy() *RestrictWorkspaceAdminsParameters {
	if in == nil {
		return nil
	}
	out := new(RestrictWorkspaceAdminsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestrictWorkspaceAdminsSetting) DeepCopyInto(out *RestrictWorkspaceAdminsSetting) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestrictWorkspaceAdminsSetting.
func (in *RestrictWorkspaceAdminsSetting) DeepCopy() *RestrictWorkspaceAdminsSetting {
	if in == nil {
		return nil
	}
	out := new(RestrictWorkspaceAdminsSetting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RestrictWorkspaceAdminsSetting) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestrictWorkspaceAdminsSettingInitParameters) DeepCopyInto(out *RestrictWorkspaceAdminsSettingInitParameters) {
	*out = *in
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.RestrictWorkspaceAdmins != nil {
		in, out := &in.RestrictWorkspaceAdmins, &out.RestrictWorkspaceAdmins
		*out = make([]RestrictWorkspaceAdminsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SettingName != nil {
		in, out := &in.SettingName, &out.SettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestrictWorkspaceAdminsSettingInitParameters.
func (in *RestrictWorkspaceAdminsSettingInitParameters) DeepCopy() *RestrictWorkspaceAdminsSettingInitParameters {
	if in == nil {
		return nil
	}
	out := new(RestrictWorkspaceAdminsSettingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestrictWorkspaceAdminsSettingList) DeepCopyInto(out *RestrictWorkspaceAdminsSettingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RestrictWorkspaceAdminsSetting, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestrictWorkspaceAdminsSettingList.
func (in *RestrictWorkspaceAdminsSettingList) DeepCopy() *RestrictWorkspaceAdminsSettingList {
	if in == nil {
		return nil
	}
	out := new(RestrictWorkspaceAdminsSettingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RestrictWorkspaceAdminsSettingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestrictWorkspaceAdminsSettingObservation) DeepCopyInto(out *RestrictWorkspaceAdminsSettingObservation) {
	*out = *in
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RestrictWorkspaceAdmins != nil {
		in, out := &in.RestrictWorkspaceAdmins, &out.RestrictWorkspaceAdmins
		*out = make([]RestrictWorkspaceAdminsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SettingName != nil {
		in, out := &in.SettingName, &out.SettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestrictWorkspaceAdminsSettingObservation.
func (in *RestrictWorkspaceAdminsSettingObservation) DeepCopy() *RestrictWorkspaceAdminsSettingObservation {
	if in == nil {
		return nil
	}
	out := new(RestrictWorkspaceAdminsSettingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestrictWorkspaceAdminsSettingParameters) DeepCopyInto(out *RestrictWorkspaceAdminsSettingParameters) {
	*out = *in
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.RestrictWorkspaceAdmins != nil {
		in, out := &in.RestrictWorkspaceAdmins, &out.RestrictWorkspaceAdmins
		*out = make([]RestrictWorkspaceAdminsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SettingName != nil {
		in, out := &in.SettingName, &out.SettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestrictWorkspaceAdminsSettingParameters.
func (in *RestrictWorkspaceAdminsSettingParameters) DeepCopy() *RestrictWorkspaceAdminsSettingParameters {
	if in == nil {
		return nil
	}
	out := new(RestrictWorkspaceAdminsSettingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestrictWorkspaceAdminsSettingSpec) DeepCopyInto(out *RestrictWorkspaceAdminsSettingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestrictWorkspaceAdminsSettingSpec.
func (in *RestrictWorkspaceAdminsSettingSpec) DeepCopy() *RestrictWorkspaceAdminsSettingSpec {
	if in == nil {
		return nil
	}
	out := new(RestrictWorkspaceAdminsSettingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestrictWorkspaceAdminsSettingStatus) DeepCopyInto(out *RestrictWorkspaceAdminsSettingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestrictWorkspaceAdminsSettingStatus.
func (in *RestrictWorkspaceAdminsSettingStatus) DeepCopy() *RestrictWorkspaceAdminsSettingStatus {
	if in == nil {
		return nil
	}
	out := new(RestrictWorkspaceAdminsSettingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutesInitParameters) DeepCopyInto(out *RoutesInitParameters) {
	*out = *in
	if in.ServedModelName != nil {
		in, out := &in.ServedModelName, &out.ServedModelName
		*out = new(string)
		**out = **in
	}
	if in.TrafficPercentage != nil {
		in, out := &in.TrafficPercentage, &out.TrafficPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutesInitParameters.
func (in *RoutesInitParameters) DeepCopy() *RoutesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RoutesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutesObservation) DeepCopyInto(out *RoutesObservation) {
	*out = *in
	if in.ServedModelName != nil {
		in, out := &in.ServedModelName, &out.ServedModelName
		*out = new(string)
		**out = **in
	}
	if in.TrafficPercentage != nil {
		in, out := &in.TrafficPercentage, &out.TrafficPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutesObservation.
func (in *RoutesObservation) DeepCopy() *RoutesObservation {
	if in == nil {
		return nil
	}
	out := new(RoutesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutesParameters) DeepCopyInto(out *RoutesParameters) {
	*out = *in
	if in.ServedModelName != nil {
		in, out := &in.ServedModelName, &out.ServedModelName
		*out = new(string)
		**out = **in
	}
	if in.TrafficPercentage != nil {
		in, out := &in.TrafficPercentage, &out.TrafficPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutesParameters.
func (in *RoutesParameters) DeepCopy() *RoutesParameters {
	if in == nil {
		return nil
	}
	out := new(RoutesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesInitParameters) DeepCopyInto(out *RulesInitParameters) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesInitParameters.
func (in *RulesInitParameters) DeepCopy() *RulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesObservation) DeepCopyInto(out *RulesObservation) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesObservation.
func (in *RulesObservation) DeepCopy() *RulesObservation {
	if in == nil {
		return nil
	}
	out := new(RulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesParameters) DeepCopyInto(out *RulesParameters) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesParameters.
func (in *RulesParameters) DeepCopy() *RulesParameters {
	if in == nil {
		return nil
	}
	out := new(RulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunAsInitParameters) DeepCopyInto(out *RunAsInitParameters) {
	*out = *in
	if in.ServicePrincipalName != nil {
		in, out := &in.ServicePrincipalName, &out.ServicePrincipalName
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunAsInitParameters.
func (in *RunAsInitParameters) DeepCopy() *RunAsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RunAsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunAsObservation) DeepCopyInto(out *RunAsObservation) {
	*out = *in
	if in.ServicePrincipalName != nil {
		in, out := &in.ServicePrincipalName, &out.ServicePrincipalName
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunAsObservation.
func (in *RunAsObservation) DeepCopy() *RunAsObservation {
	if in == nil {
		return nil
	}
	out := new(RunAsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunAsParameters) DeepCopyInto(out *RunAsParameters) {
	*out = *in
	if in.ServicePrincipalName != nil {
		in, out := &in.ServicePrincipalName, &out.ServicePrincipalName
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunAsParameters.
func (in *RunAsParameters) DeepCopy() *RunAsParameters {
	if in == nil {
		return nil
	}
	out := new(RunAsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunContinuouslyInitParameters) DeepCopyInto(out *RunContinuouslyInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunContinuouslyInitParameters.
func (in *RunContinuouslyInitParameters) DeepCopy() *RunContinuouslyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RunContinuouslyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunContinuouslyObservation) DeepCopyInto(out *RunContinuouslyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunContinuouslyObservation.
func (in *RunContinuouslyObservation) DeepCopy() *RunContinuouslyObservation {
	if in == nil {
		return nil
	}
	out := new(RunContinuouslyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunContinuouslyParameters) DeepCopyInto(out *RunContinuouslyParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunContinuouslyParameters.
func (in *RunContinuouslyParameters) DeepCopy() *RunContinuouslyParameters {
	if in == nil {
		return nil
	}
	out := new(RunContinuouslyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunJobTaskInitParameters) DeepCopyInto(out *RunJobTaskInitParameters) {
	*out = *in
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(float64)
		**out = **in
	}
	if in.JobParameters != nil {
		in, out := &in.JobParameters, &out.JobParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunJobTaskInitParameters.
func (in *RunJobTaskInitParameters) DeepCopy() *RunJobTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(RunJobTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunJobTaskObservation) DeepCopyInto(out *RunJobTaskObservation) {
	*out = *in
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(float64)
		**out = **in
	}
	if in.JobParameters != nil {
		in, out := &in.JobParameters, &out.JobParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunJobTaskObservation.
func (in *RunJobTaskObservation) DeepCopy() *RunJobTaskObservation {
	if in == nil {
		return nil
	}
	out := new(RunJobTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunJobTaskParameters) DeepCopyInto(out *RunJobTaskParameters) {
	*out = *in
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(float64)
		**out = **in
	}
	if in.JobParameters != nil {
		in, out := &in.JobParameters, &out.JobParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunJobTaskParameters.
func (in *RunJobTaskParameters) DeepCopy() *RunJobTaskParameters {
	if in == nil {
		return nil
	}
	out := new(RunJobTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunJobTaskPipelineParamsInitParameters) DeepCopyInto(out *RunJobTaskPipelineParamsInitParameters) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunJobTaskPipelineParamsInitParameters.
func (in *RunJobTaskPipelineParamsInitParameters) DeepCopy() *RunJobTaskPipelineParamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RunJobTaskPipelineParamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunJobTaskPipelineParamsObservation) DeepCopyInto(out *RunJobTaskPipelineParamsObservation) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunJobTaskPipelineParamsObservation.
func (in *RunJobTaskPipelineParamsObservation) DeepCopy() *RunJobTaskPipelineParamsObservation {
	if in == nil {
		return nil
	}
	out := new(RunJobTaskPipelineParamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunJobTaskPipelineParamsParameters) DeepCopyInto(out *RunJobTaskPipelineParamsParameters) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunJobTaskPipelineParamsParameters.
func (in *RunJobTaskPipelineParamsParameters) DeepCopy() *RunJobTaskPipelineParamsParameters {
	if in == nil {
		return nil
	}
	out := new(RunJobTaskPipelineParamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunTriggeredInitParameters) DeepCopyInto(out *RunTriggeredInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunTriggeredInitParameters.
func (in *RunTriggeredInitParameters) DeepCopy() *RunTriggeredInitParameters {
	if in == nil {
		return nil
	}
	out := new(RunTriggeredInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunTriggeredObservation) DeepCopyInto(out *RunTriggeredObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunTriggeredObservation.
func (in *RunTriggeredObservation) DeepCopy() *RunTriggeredObservation {
	if in == nil {
		return nil
	}
	out := new(RunTriggeredObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunTriggeredParameters) DeepCopyInto(out *RunTriggeredParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunTriggeredParameters.
func (in *RunTriggeredParameters) DeepCopy() *RunTriggeredParameters {
	if in == nil {
		return nil
	}
	out := new(RunTriggeredParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3InitParameters) DeepCopyInto(out *S3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3InitParameters.
func (in *S3InitParameters) DeepCopy() *S3InitParameters {
	if in == nil {
		return nil
	}
	out := new(S3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3Observation) DeepCopyInto(out *S3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3Observation.
func (in *S3Observation) DeepCopy() *S3Observation {
	if in == nil {
		return nil
	}
	out := new(S3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3Parameters) DeepCopyInto(out *S3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3Parameters.
func (in *S3Parameters) DeepCopy() *S3Parameters {
	if in == nil {
		return nil
	}
	out := new(S3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLAlert) DeepCopyInto(out *SQLAlert) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLAlert.
func (in *SQLAlert) DeepCopy() *SQLAlert {
	if in == nil {
		return nil
	}
	out := new(SQLAlert)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLAlert) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLAlertInitParameters) DeepCopyInto(out *SQLAlertInitParameters) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]OptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(string)
		**out = **in
	}
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
	if in.Rearm != nil {
		in, out := &in.Rearm, &out.Rearm
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLAlertInitParameters.
func (in *SQLAlertInitParameters) DeepCopy() *SQLAlertInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLAlertInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLAlertList) DeepCopyInto(out *SQLAlertList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SQLAlert, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLAlertList.
func (in *SQLAlertList) DeepCopy() *SQLAlertList {
	if in == nil {
		return nil
	}
	out := new(SQLAlertList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLAlertList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLAlertObservation) DeepCopyInto(out *SQLAlertObservation) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]OptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(string)
		**out = **in
	}
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
	if in.Rearm != nil {
		in, out := &in.Rearm, &out.Rearm
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLAlertObservation.
func (in *SQLAlertObservation) DeepCopy() *SQLAlertObservation {
	if in == nil {
		return nil
	}
	out := new(SQLAlertObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLAlertParameters) DeepCopyInto(out *SQLAlertParameters) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]OptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(string)
		**out = **in
	}
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
	if in.Rearm != nil {
		in, out := &in.Rearm, &out.Rearm
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLAlertParameters.
func (in *SQLAlertParameters) DeepCopy() *SQLAlertParameters {
	if in == nil {
		return nil
	}
	out := new(SQLAlertParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLAlertSpec) DeepCopyInto(out *SQLAlertSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLAlertSpec.
func (in *SQLAlertSpec) DeepCopy() *SQLAlertSpec {
	if in == nil {
		return nil
	}
	out := new(SQLAlertSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLAlertStatus) DeepCopyInto(out *SQLAlertStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLAlertStatus.
func (in *SQLAlertStatus) DeepCopy() *SQLAlertStatus {
	if in == nil {
		return nil
	}
	out := new(SQLAlertStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDashboard) DeepCopyInto(out *SQLDashboard) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDashboard.
func (in *SQLDashboard) DeepCopy() *SQLDashboard {
	if in == nil {
		return nil
	}
	out := new(SQLDashboard)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLDashboard) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDashboardInitParameters) DeepCopyInto(out *SQLDashboardInitParameters) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.DashboardFiltersEnabled != nil {
		in, out := &in.DashboardFiltersEnabled, &out.DashboardFiltersEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(string)
		**out = **in
	}
	if in.RunAsRole != nil {
		in, out := &in.RunAsRole, &out.RunAsRole
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDashboardInitParameters.
func (in *SQLDashboardInitParameters) DeepCopy() *SQLDashboardInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLDashboardInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDashboardList) DeepCopyInto(out *SQLDashboardList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SQLDashboard, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDashboardList.
func (in *SQLDashboardList) DeepCopy() *SQLDashboardList {
	if in == nil {
		return nil
	}
	out := new(SQLDashboardList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLDashboardList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDashboardObservation) DeepCopyInto(out *SQLDashboardObservation) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.DashboardFiltersEnabled != nil {
		in, out := &in.DashboardFiltersEnabled, &out.DashboardFiltersEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(string)
		**out = **in
	}
	if in.RunAsRole != nil {
		in, out := &in.RunAsRole, &out.RunAsRole
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDashboardObservation.
func (in *SQLDashboardObservation) DeepCopy() *SQLDashboardObservation {
	if in == nil {
		return nil
	}
	out := new(SQLDashboardObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDashboardParameters) DeepCopyInto(out *SQLDashboardParameters) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.DashboardFiltersEnabled != nil {
		in, out := &in.DashboardFiltersEnabled, &out.DashboardFiltersEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(string)
		**out = **in
	}
	if in.RunAsRole != nil {
		in, out := &in.RunAsRole, &out.RunAsRole
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDashboardParameters.
func (in *SQLDashboardParameters) DeepCopy() *SQLDashboardParameters {
	if in == nil {
		return nil
	}
	out := new(SQLDashboardParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDashboardSpec) DeepCopyInto(out *SQLDashboardSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDashboardSpec.
func (in *SQLDashboardSpec) DeepCopy() *SQLDashboardSpec {
	if in == nil {
		return nil
	}
	out := new(SQLDashboardSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDashboardStatus) DeepCopyInto(out *SQLDashboardStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDashboardStatus.
func (in *SQLDashboardStatus) DeepCopy() *SQLDashboardStatus {
	if in == nil {
		return nil
	}
	out := new(SQLDashboardStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLEndpoint) DeepCopyInto(out *SQLEndpoint) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLEndpoint.
func (in *SQLEndpoint) DeepCopy() *SQLEndpoint {
	if in == nil {
		return nil
	}
	out := new(SQLEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLEndpoint) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLEndpointHealthInitParameters) DeepCopyInto(out *SQLEndpointHealthInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLEndpointHealthInitParameters.
func (in *SQLEndpointHealthInitParameters) DeepCopy() *SQLEndpointHealthInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLEndpointHealthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLEndpointHealthObservation) DeepCopyInto(out *SQLEndpointHealthObservation) {
	*out = *in
	if in.Details != nil {
		in, out := &in.Details, &out.Details
		*out = new(string)
		**out = **in
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = make([]FailureReasonObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Summary != nil {
		in, out := &in.Summary, &out.Summary
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLEndpointHealthObservation.
func (in *SQLEndpointHealthObservation) DeepCopy() *SQLEndpointHealthObservation {
	if in == nil {
		return nil
	}
	out := new(SQLEndpointHealthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLEndpointHealthParameters) DeepCopyInto(out *SQLEndpointHealthParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLEndpointHealthParameters.
func (in *SQLEndpointHealthParameters) DeepCopy() *SQLEndpointHealthParameters {
	if in == nil {
		return nil
	}
	out := new(SQLEndpointHealthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLEndpointInitParameters) DeepCopyInto(out *SQLEndpointInitParameters) {
	*out = *in
	if in.AutoStopMins != nil {
		in, out := &in.AutoStopMins, &out.AutoStopMins
		*out = new(float64)
		**out = **in
	}
	if in.Channel != nil {
		in, out := &in.Channel, &out.Channel
		*out = make([]ChannelInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterSize != nil {
		in, out := &in.ClusterSize, &out.ClusterSize
		*out = new(string)
		**out = **in
	}
	if in.DataSourceID != nil {
		in, out := &in.DataSourceID, &out.DataSourceID
		*out = new(string)
		**out = **in
	}
	if in.EnablePhoton != nil {
		in, out := &in.EnablePhoton, &out.EnablePhoton
		*out = new(bool)
		**out = **in
	}
	if in.EnableServerlessCompute != nil {
		in, out := &in.EnableServerlessCompute, &out.EnableServerlessCompute
		*out = new(bool)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.MaxNumClusters != nil {
		in, out := &in.MaxNumClusters, &out.MaxNumClusters
		*out = new(float64)
		**out = **in
	}
	if in.MinNumClusters != nil {
		in, out := &in.MinNumClusters, &out.MinNumClusters
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SpotInstancePolicy != nil {
		in, out := &in.SpotInstancePolicy, &out.SpotInstancePolicy
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]SQLEndpointTagsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseType != nil {
		in, out := &in.WarehouseType, &out.WarehouseType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLEndpointInitParameters.
func (in *SQLEndpointInitParameters) DeepCopy() *SQLEndpointInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLEndpointInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLEndpointList) DeepCopyInto(out *SQLEndpointList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SQLEndpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLEndpointList.
func (in *SQLEndpointList) DeepCopy() *SQLEndpointList {
	if in == nil {
		return nil
	}
	out := new(SQLEndpointList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLEndpointList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLEndpointObservation) DeepCopyInto(out *SQLEndpointObservation) {
	*out = *in
	if in.AutoStopMins != nil {
		in, out := &in.AutoStopMins, &out.AutoStopMins
		*out = new(float64)
		**out = **in
	}
	if in.Channel != nil {
		in, out := &in.Channel, &out.Channel
		*out = make([]ChannelObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterSize != nil {
		in, out := &in.ClusterSize, &out.ClusterSize
		*out = new(string)
		**out = **in
	}
	if in.CreatorName != nil {
		in, out := &in.CreatorName, &out.CreatorName
		*out = new(string)
		**out = **in
	}
	if in.DataSourceID != nil {
		in, out := &in.DataSourceID, &out.DataSourceID
		*out = new(string)
		**out = **in
	}
	if in.EnablePhoton != nil {
		in, out := &in.EnablePhoton, &out.EnablePhoton
		*out = new(bool)
		**out = **in
	}
	if in.EnableServerlessCompute != nil {
		in, out := &in.EnableServerlessCompute, &out.EnableServerlessCompute
		*out = new(bool)
		**out = **in
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]SQLEndpointHealthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.JdbcURL != nil {
		in, out := &in.JdbcURL, &out.JdbcURL
		*out = new(string)
		**out = **in
	}
	if in.MaxNumClusters != nil {
		in, out := &in.MaxNumClusters, &out.MaxNumClusters
		*out = new(float64)
		**out = **in
	}
	if in.MinNumClusters != nil {
		in, out := &in.MinNumClusters, &out.MinNumClusters
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NumActiveSessions != nil {
		in, out := &in.NumActiveSessions, &out.NumActiveSessions
		*out = new(float64)
		**out = **in
	}
	if in.NumClusters != nil {
		in, out := &in.NumClusters, &out.NumClusters
		*out = new(float64)
		**out = **in
	}
	if in.OdbcParams != nil {
		in, out := &in.OdbcParams, &out.OdbcParams
		*out = make([]OdbcParamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotInstancePolicy != nil {
		in, out := &in.SpotInstancePolicy, &out.SpotInstancePolicy
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]SQLEndpointTagsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseType != nil {
		in, out := &in.WarehouseType, &out.WarehouseType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLEndpointObservation.
func (in *SQLEndpointObservation) DeepCopy() *SQLEndpointObservation {
	if in == nil {
		return nil
	}
	out := new(SQLEndpointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLEndpointParameters) DeepCopyInto(out *SQLEndpointParameters) {
	*out = *in
	if in.AutoStopMins != nil {
		in, out := &in.AutoStopMins, &out.AutoStopMins
		*out = new(float64)
		**out = **in
	}
	if in.Channel != nil {
		in, out := &in.Channel, &out.Channel
		*out = make([]ChannelParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterSize != nil {
		in, out := &in.ClusterSize, &out.ClusterSize
		*out = new(string)
		**out = **in
	}
	if in.DataSourceID != nil {
		in, out := &in.DataSourceID, &out.DataSourceID
		*out = new(string)
		**out = **in
	}
	if in.EnablePhoton != nil {
		in, out := &in.EnablePhoton, &out.EnablePhoton
		*out = new(bool)
		**out = **in
	}
	if in.EnableServerlessCompute != nil {
		in, out := &in.EnableServerlessCompute, &out.EnableServerlessCompute
		*out = new(bool)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.MaxNumClusters != nil {
		in, out := &in.MaxNumClusters, &out.MaxNumClusters
		*out = new(float64)
		**out = **in
	}
	if in.MinNumClusters != nil {
		in, out := &in.MinNumClusters, &out.MinNumClusters
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SpotInstancePolicy != nil {
		in, out := &in.SpotInstancePolicy, &out.SpotInstancePolicy
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]SQLEndpointTagsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseType != nil {
		in, out := &in.WarehouseType, &out.WarehouseType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLEndpointParameters.
func (in *SQLEndpointParameters) DeepCopy() *SQLEndpointParameters {
	if in == nil {
		return nil
	}
	out := new(SQLEndpointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLEndpointSpec) DeepCopyInto(out *SQLEndpointSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLEndpointSpec.
func (in *SQLEndpointSpec) DeepCopy() *SQLEndpointSpec {
	if in == nil {
		return nil
	}
	out := new(SQLEndpointSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLEndpointStatus) DeepCopyInto(out *SQLEndpointStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLEndpointStatus.
func (in *SQLEndpointStatus) DeepCopy() *SQLEndpointStatus {
	if in == nil {
		return nil
	}
	out := new(SQLEndpointStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLEndpointTagsInitParameters) DeepCopyInto(out *SQLEndpointTagsInitParameters) {
	*out = *in
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make([]CustomTagsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLEndpointTagsInitParameters.
func (in *SQLEndpointTagsInitParameters) DeepCopy() *SQLEndpointTagsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLEndpointTagsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLEndpointTagsObservation) DeepCopyInto(out *SQLEndpointTagsObservation) {
	*out = *in
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make([]CustomTagsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLEndpointTagsObservation.
func (in *SQLEndpointTagsObservation) DeepCopy() *SQLEndpointTagsObservation {
	if in == nil {
		return nil
	}
	out := new(SQLEndpointTagsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLEndpointTagsParameters) DeepCopyInto(out *SQLEndpointTagsParameters) {
	*out = *in
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make([]CustomTagsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLEndpointTagsParameters.
func (in *SQLEndpointTagsParameters) DeepCopy() *SQLEndpointTagsParameters {
	if in == nil {
		return nil
	}
	out := new(SQLEndpointTagsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLGlobalConfig) DeepCopyInto(out *SQLGlobalConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLGlobalConfig.
func (in *SQLGlobalConfig) DeepCopy() *SQLGlobalConfig {
	if in == nil {
		return nil
	}
	out := new(SQLGlobalConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLGlobalConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLGlobalConfigInitParameters) DeepCopyInto(out *SQLGlobalConfigInitParameters) {
	*out = *in
	if in.DataAccessConfig != nil {
		in, out := &in.DataAccessConfig, &out.DataAccessConfig
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EnableServerlessCompute != nil {
		in, out := &in.EnableServerlessCompute, &out.EnableServerlessCompute
		*out = new(bool)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SQLConfigParams != nil {
		in, out := &in.SQLConfigParams, &out.SQLConfigParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SecurityPolicy != nil {
		in, out := &in.SecurityPolicy, &out.SecurityPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLGlobalConfigInitParameters.
func (in *SQLGlobalConfigInitParameters) DeepCopy() *SQLGlobalConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLGlobalConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLGlobalConfigList) DeepCopyInto(out *SQLGlobalConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SQLGlobalConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLGlobalConfigList.
func (in *SQLGlobalConfigList) DeepCopy() *SQLGlobalConfigList {
	if in == nil {
		return nil
	}
	out := new(SQLGlobalConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLGlobalConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLGlobalConfigObservation) DeepCopyInto(out *SQLGlobalConfigObservation) {
	*out = *in
	if in.DataAccessConfig != nil {
		in, out := &in.DataAccessConfig, &out.DataAccessConfig
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EnableServerlessCompute != nil {
		in, out := &in.EnableServerlessCompute, &out.EnableServerlessCompute
		*out = new(bool)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SQLConfigParams != nil {
		in, out := &in.SQLConfigParams, &out.SQLConfigParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SecurityPolicy != nil {
		in, out := &in.SecurityPolicy, &out.SecurityPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLGlobalConfigObservation.
func (in *SQLGlobalConfigObservation) DeepCopy() *SQLGlobalConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SQLGlobalConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLGlobalConfigParameters) DeepCopyInto(out *SQLGlobalConfigParameters) {
	*out = *in
	if in.DataAccessConfig != nil {
		in, out := &in.DataAccessConfig, &out.DataAccessConfig
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EnableServerlessCompute != nil {
		in, out := &in.EnableServerlessCompute, &out.EnableServerlessCompute
		*out = new(bool)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SQLConfigParams != nil {
		in, out := &in.SQLConfigParams, &out.SQLConfigParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SecurityPolicy != nil {
		in, out := &in.SecurityPolicy, &out.SecurityPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLGlobalConfigParameters.
func (in *SQLGlobalConfigParameters) DeepCopy() *SQLGlobalConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SQLGlobalConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLGlobalConfigSpec) DeepCopyInto(out *SQLGlobalConfigSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLGlobalConfigSpec.
func (in *SQLGlobalConfigSpec) DeepCopy() *SQLGlobalConfigSpec {
	if in == nil {
		return nil
	}
	out := new(SQLGlobalConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLGlobalConfigStatus) DeepCopyInto(out *SQLGlobalConfigStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLGlobalConfigStatus.
func (in *SQLGlobalConfigStatus) DeepCopy() *SQLGlobalConfigStatus {
	if in == nil {
		return nil
	}
	out := new(SQLGlobalConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLPermissions) DeepCopyInto(out *SQLPermissions) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLPermissions.
func (in *SQLPermissions) DeepCopy() *SQLPermissions {
	if in == nil {
		return nil
	}
	out := new(SQLPermissions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLPermissions) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLPermissionsInitParameters) DeepCopyInto(out *SQLPermissionsInitParameters) {
	*out = *in
	if in.AnonymousFunction != nil {
		in, out := &in.AnonymousFunction, &out.AnonymousFunction
		*out = new(bool)
		**out = **in
	}
	if in.AnyFile != nil {
		in, out := &in.AnyFile, &out.AnyFile
		*out = new(bool)
		**out = **in
	}
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(bool)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.PrivilegeAssignments != nil {
		in, out := &in.PrivilegeAssignments, &out.PrivilegeAssignments
		*out = make([]PrivilegeAssignmentsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLPermissionsInitParameters.
func (in *SQLPermissionsInitParameters) DeepCopy() *SQLPermissionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLPermissionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLPermissionsList) DeepCopyInto(out *SQLPermissionsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SQLPermissions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLPermissionsList.
func (in *SQLPermissionsList) DeepCopy() *SQLPermissionsList {
	if in == nil {
		return nil
	}
	out := new(SQLPermissionsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLPermissionsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLPermissionsObservation) DeepCopyInto(out *SQLPermissionsObservation) {
	*out = *in
	if in.AnonymousFunction != nil {
		in, out := &in.AnonymousFunction, &out.AnonymousFunction
		*out = new(bool)
		**out = **in
	}
	if in.AnyFile != nil {
		in, out := &in.AnyFile, &out.AnyFile
		*out = new(bool)
		**out = **in
	}
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(bool)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PrivilegeAssignments != nil {
		in, out := &in.PrivilegeAssignments, &out.PrivilegeAssignments
		*out = make([]PrivilegeAssignmentsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLPermissionsObservation.
func (in *SQLPermissionsObservation) DeepCopy() *SQLPermissionsObservation {
	if in == nil {
		return nil
	}
	out := new(SQLPermissionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLPermissionsParameters) DeepCopyInto(out *SQLPermissionsParameters) {
	*out = *in
	if in.AnonymousFunction != nil {
		in, out := &in.AnonymousFunction, &out.AnonymousFunction
		*out = new(bool)
		**out = **in
	}
	if in.AnyFile != nil {
		in, out := &in.AnyFile, &out.AnyFile
		*out = new(bool)
		**out = **in
	}
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(bool)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.PrivilegeAssignments != nil {
		in, out := &in.PrivilegeAssignments, &out.PrivilegeAssignments
		*out = make([]PrivilegeAssignmentsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLPermissionsParameters.
func (in *SQLPermissionsParameters) DeepCopy() *SQLPermissionsParameters {
	if in == nil {
		return nil
	}
	out := new(SQLPermissionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLPermissionsSpec) DeepCopyInto(out *SQLPermissionsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLPermissionsSpec.
func (in *SQLPermissionsSpec) DeepCopy() *SQLPermissionsSpec {
	if in == nil {
		return nil
	}
	out := new(SQLPermissionsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLPermissionsStatus) DeepCopyInto(out *SQLPermissionsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLPermissionsStatus.
func (in *SQLPermissionsStatus) DeepCopy() *SQLPermissionsStatus {
	if in == nil {
		return nil
	}
	out := new(SQLPermissionsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLQuery) DeepCopyInto(out *SQLQuery) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLQuery.
func (in *SQLQuery) DeepCopy() *SQLQuery {
	if in == nil {
		return nil
	}
	out := new(SQLQuery)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLQuery) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLQueryInitParameters) DeepCopyInto(out *SQLQueryInitParameters) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.DataSourceID != nil {
		in, out := &in.DataSourceID, &out.DataSourceID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]SQLQueryParameterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.RunAsRole != nil {
		in, out := &in.RunAsRole, &out.RunAsRole
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]SQLQueryScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLQueryInitParameters.
func (in *SQLQueryInitParameters) DeepCopy() *SQLQueryInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLQueryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLQueryList) DeepCopyInto(out *SQLQueryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SQLQuery, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLQueryList.
func (in *SQLQueryList) DeepCopy() *SQLQueryList {
	if in == nil {
		return nil
	}
	out := new(SQLQueryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLQueryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLQueryObservation) DeepCopyInto(out *SQLQueryObservation) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.DataSourceID != nil {
		in, out := &in.DataSourceID, &out.DataSourceID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]SQLQueryParameterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.RunAsRole != nil {
		in, out := &in.RunAsRole, &out.RunAsRole
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]SQLQueryScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLQueryObservation.
func (in *SQLQueryObservation) DeepCopy() *SQLQueryObservation {
	if in == nil {
		return nil
	}
	out := new(SQLQueryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLQueryParameterInitParameters) DeepCopyInto(out *SQLQueryParameterInitParameters) {
	*out = *in
	if in.Date != nil {
		in, out := &in.Date, &out.Date
		*out = make([]DateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DateRange != nil {
		in, out := &in.DateRange, &out.DateRange
		*out = make([]DateRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Datetime != nil {
		in, out := &in.Datetime, &out.Datetime
		*out = make([]DatetimeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatetimeRange != nil {
		in, out := &in.DatetimeRange, &out.DatetimeRange
		*out = make([]DatetimeRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Datetimesec != nil {
		in, out := &in.Datetimesec, &out.Datetimesec
		*out = make([]DatetimesecInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatetimesecRange != nil {
		in, out := &in.DatetimesecRange, &out.DatetimesecRange
		*out = make([]DatetimesecRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enum != nil {
		in, out := &in.Enum, &out.Enum
		*out = make([]EnumInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Number != nil {
		in, out := &in.Number, &out.Number
		*out = make([]NumberInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]ParameterQueryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Text != nil {
		in, out := &in.Text, &out.Text
		*out = make([]TextInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLQueryParameterInitParameters.
func (in *SQLQueryParameterInitParameters) DeepCopy() *SQLQueryParameterInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLQueryParameterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLQueryParameterObservation) DeepCopyInto(out *SQLQueryParameterObservation) {
	*out = *in
	if in.Date != nil {
		in, out := &in.Date, &out.Date
		*out = make([]DateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DateRange != nil {
		in, out := &in.DateRange, &out.DateRange
		*out = make([]DateRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Datetime != nil {
		in, out := &in.Datetime, &out.Datetime
		*out = make([]DatetimeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatetimeRange != nil {
		in, out := &in.DatetimeRange, &out.DatetimeRange
		*out = make([]DatetimeRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Datetimesec != nil {
		in, out := &in.Datetimesec, &out.Datetimesec
		*out = make([]DatetimesecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatetimesecRange != nil {
		in, out := &in.DatetimesecRange, &out.DatetimesecRange
		*out = make([]DatetimesecRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enum != nil {
		in, out := &in.Enum, &out.Enum
		*out = make([]EnumObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Number != nil {
		in, out := &in.Number, &out.Number
		*out = make([]NumberObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]ParameterQueryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Text != nil {
		in, out := &in.Text, &out.Text
		*out = make([]TextObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLQueryParameterObservation.
func (in *SQLQueryParameterObservation) DeepCopy() *SQLQueryParameterObservation {
	if in == nil {
		return nil
	}
	out := new(SQLQueryParameterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLQueryParameterParameters) DeepCopyInto(out *SQLQueryParameterParameters) {
	*out = *in
	if in.Date != nil {
		in, out := &in.Date, &out.Date
		*out = make([]DateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DateRange != nil {
		in, out := &in.DateRange, &out.DateRange
		*out = make([]DateRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Datetime != nil {
		in, out := &in.Datetime, &out.Datetime
		*out = make([]DatetimeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatetimeRange != nil {
		in, out := &in.DatetimeRange, &out.DatetimeRange
		*out = make([]DatetimeRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Datetimesec != nil {
		in, out := &in.Datetimesec, &out.Datetimesec
		*out = make([]DatetimesecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatetimesecRange != nil {
		in, out := &in.DatetimesecRange, &out.DatetimesecRange
		*out = make([]DatetimesecRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enum != nil {
		in, out := &in.Enum, &out.Enum
		*out = make([]EnumParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Number != nil {
		in, out := &in.Number, &out.Number
		*out = make([]NumberParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]ParameterQueryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Text != nil {
		in, out := &in.Text, &out.Text
		*out = make([]TextParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLQueryParameterParameters.
func (in *SQLQueryParameterParameters) DeepCopy() *SQLQueryParameterParameters {
	if in == nil {
		return nil
	}
	out := new(SQLQueryParameterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLQueryParameters) DeepCopyInto(out *SQLQueryParameters) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.DataSourceID != nil {
		in, out := &in.DataSourceID, &out.DataSourceID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]SQLQueryParameterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.RunAsRole != nil {
		in, out := &in.RunAsRole, &out.RunAsRole
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]SQLQueryScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLQueryParameters.
func (in *SQLQueryParameters) DeepCopy() *SQLQueryParameters {
	if in == nil {
		return nil
	}
	out := new(SQLQueryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLQueryScheduleInitParameters) DeepCopyInto(out *SQLQueryScheduleInitParameters) {
	*out = *in
	if in.Continuous != nil {
		in, out := &in.Continuous, &out.Continuous
		*out = make([]ScheduleContinuousInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Daily != nil {
		in, out := &in.Daily, &out.Daily
		*out = make([]DailyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weekly != nil {
		in, out := &in.Weekly, &out.Weekly
		*out = make([]WeeklyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLQueryScheduleInitParameters.
func (in *SQLQueryScheduleInitParameters) DeepCopy() *SQLQueryScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLQueryScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLQueryScheduleObservation) DeepCopyInto(out *SQLQueryScheduleObservation) {
	*out = *in
	if in.Continuous != nil {
		in, out := &in.Continuous, &out.Continuous
		*out = make([]ScheduleContinuousObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Daily != nil {
		in, out := &in.Daily, &out.Daily
		*out = make([]DailyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weekly != nil {
		in, out := &in.Weekly, &out.Weekly
		*out = make([]WeeklyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLQueryScheduleObservation.
func (in *SQLQueryScheduleObservation) DeepCopy() *SQLQueryScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(SQLQueryScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLQueryScheduleParameters) DeepCopyInto(out *SQLQueryScheduleParameters) {
	*out = *in
	if in.Continuous != nil {
		in, out := &in.Continuous, &out.Continuous
		*out = make([]ScheduleContinuousParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Daily != nil {
		in, out := &in.Daily, &out.Daily
		*out = make([]DailyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weekly != nil {
		in, out := &in.Weekly, &out.Weekly
		*out = make([]WeeklyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLQueryScheduleParameters.
func (in *SQLQueryScheduleParameters) DeepCopy() *SQLQueryScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(SQLQueryScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLQuerySpec) DeepCopyInto(out *SQLQuerySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLQuerySpec.
func (in *SQLQuerySpec) DeepCopy() *SQLQuerySpec {
	if in == nil {
		return nil
	}
	out := new(SQLQuerySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLQueryStatus) DeepCopyInto(out *SQLQueryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLQueryStatus.
func (in *SQLQueryStatus) DeepCopy() *SQLQueryStatus {
	if in == nil {
		return nil
	}
	out := new(SQLQueryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTable) DeepCopyInto(out *SQLTable) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTable.
func (in *SQLTable) DeepCopy() *SQLTable {
	if in == nil {
		return nil
	}
	out := new(SQLTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLTable) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTableColumnInitParameters) DeepCopyInto(out *SQLTableColumnInitParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.TypeJSON != nil {
		in, out := &in.TypeJSON, &out.TypeJSON
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTableColumnInitParameters.
func (in *SQLTableColumnInitParameters) DeepCopy() *SQLTableColumnInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTableColumnInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTableColumnObservation) DeepCopyInto(out *SQLTableColumnObservation) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.TypeJSON != nil {
		in, out := &in.TypeJSON, &out.TypeJSON
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTableColumnObservation.
func (in *SQLTableColumnObservation) DeepCopy() *SQLTableColumnObservation {
	if in == nil {
		return nil
	}
	out := new(SQLTableColumnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTableColumnParameters) DeepCopyInto(out *SQLTableColumnParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.TypeJSON != nil {
		in, out := &in.TypeJSON, &out.TypeJSON
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTableColumnParameters.
func (in *SQLTableColumnParameters) DeepCopy() *SQLTableColumnParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTableColumnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTableInitParameters) DeepCopyInto(out *SQLTableInitParameters) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterKeys != nil {
		in, out := &in.ClusterKeys, &out.ClusterKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = make([]SQLTableColumnInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DataSourceFormat != nil {
		in, out := &in.DataSourceFormat, &out.DataSourceFormat
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Partitions != nil {
		in, out := &in.Partitions, &out.Partitions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.StorageCredentialName != nil {
		in, out := &in.StorageCredentialName, &out.StorageCredentialName
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
	if in.TableType != nil {
		in, out := &in.TableType, &out.TableType
		*out = new(string)
		**out = **in
	}
	if in.ViewDefinition != nil {
		in, out := &in.ViewDefinition, &out.ViewDefinition
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTableInitParameters.
func (in *SQLTableInitParameters) DeepCopy() *SQLTableInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTableList) DeepCopyInto(out *SQLTableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SQLTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTableList.
func (in *SQLTableList) DeepCopy() *SQLTableList {
	if in == nil {
		return nil
	}
	out := new(SQLTableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLTableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTableObservation) DeepCopyInto(out *SQLTableObservation) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterKeys != nil {
		in, out := &in.ClusterKeys, &out.ClusterKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = make([]SQLTableColumnObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DataSourceFormat != nil {
		in, out := &in.DataSourceFormat, &out.DataSourceFormat
		*out = new(string)
		**out = **in
	}
	if in.EffectiveProperties != nil {
		in, out := &in.EffectiveProperties, &out.EffectiveProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Partitions != nil {
		in, out := &in.Partitions, &out.Partitions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.StorageCredentialName != nil {
		in, out := &in.StorageCredentialName, &out.StorageCredentialName
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
	if in.TableType != nil {
		in, out := &in.TableType, &out.TableType
		*out = new(string)
		**out = **in
	}
	if in.ViewDefinition != nil {
		in, out := &in.ViewDefinition, &out.ViewDefinition
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTableObservation.
func (in *SQLTableObservation) DeepCopy() *SQLTableObservation {
	if in == nil {
		return nil
	}
	out := new(SQLTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTableParameters) DeepCopyInto(out *SQLTableParameters) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterKeys != nil {
		in, out := &in.ClusterKeys, &out.ClusterKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = make([]SQLTableColumnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DataSourceFormat != nil {
		in, out := &in.DataSourceFormat, &out.DataSourceFormat
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Partitions != nil {
		in, out := &in.Partitions, &out.Partitions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.StorageCredentialName != nil {
		in, out := &in.StorageCredentialName, &out.StorageCredentialName
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
	if in.TableType != nil {
		in, out := &in.TableType, &out.TableType
		*out = new(string)
		**out = **in
	}
	if in.ViewDefinition != nil {
		in, out := &in.ViewDefinition, &out.ViewDefinition
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTableParameters.
func (in *SQLTableParameters) DeepCopy() *SQLTableParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTableSpec) DeepCopyInto(out *SQLTableSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTableSpec.
func (in *SQLTableSpec) DeepCopy() *SQLTableSpec {
	if in == nil {
		return nil
	}
	out := new(SQLTableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTableStatus) DeepCopyInto(out *SQLTableStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTableStatus.
func (in *SQLTableStatus) DeepCopy() *SQLTableStatus {
	if in == nil {
		return nil
	}
	out := new(SQLTableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskAlertInitParameters) DeepCopyInto(out *SQLTaskAlertInitParameters) {
	*out = *in
	if in.AlertID != nil {
		in, out := &in.AlertID, &out.AlertID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]SubscriptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskAlertInitParameters.
func (in *SQLTaskAlertInitParameters) DeepCopy() *SQLTaskAlertInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskAlertInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskAlertObservation) DeepCopyInto(out *SQLTaskAlertObservation) {
	*out = *in
	if in.AlertID != nil {
		in, out := &in.AlertID, &out.AlertID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]SubscriptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskAlertObservation.
func (in *SQLTaskAlertObservation) DeepCopy() *SQLTaskAlertObservation {
	if in == nil {
		return nil
	}
	out := new(SQLTaskAlertObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskAlertParameters) DeepCopyInto(out *SQLTaskAlertParameters) {
	*out = *in
	if in.AlertID != nil {
		in, out := &in.AlertID, &out.AlertID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]SubscriptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskAlertParameters.
func (in *SQLTaskAlertParameters) DeepCopy() *SQLTaskAlertParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskAlertParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskDashboardInitParameters) DeepCopyInto(out *SQLTaskDashboardInitParameters) {
	*out = *in
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]DashboardSubscriptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskDashboardInitParameters.
func (in *SQLTaskDashboardInitParameters) DeepCopy() *SQLTaskDashboardInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskDashboardInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskDashboardObservation) DeepCopyInto(out *SQLTaskDashboardObservation) {
	*out = *in
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]DashboardSubscriptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskDashboardObservation.
func (in *SQLTaskDashboardObservation) DeepCopy() *SQLTaskDashboardObservation {
	if in == nil {
		return nil
	}
	out := new(SQLTaskDashboardObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskDashboardParameters) DeepCopyInto(out *SQLTaskDashboardParameters) {
	*out = *in
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]DashboardSubscriptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskDashboardParameters.
func (in *SQLTaskDashboardParameters) DeepCopy() *SQLTaskDashboardParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskDashboardParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskDashboardSubscriptionsInitParameters) DeepCopyInto(out *SQLTaskDashboardSubscriptionsInitParameters) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskDashboardSubscriptionsInitParameters.
func (in *SQLTaskDashboardSubscriptionsInitParameters) DeepCopy() *SQLTaskDashboardSubscriptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskDashboardSubscriptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskDashboardSubscriptionsObservation) DeepCopyInto(out *SQLTaskDashboardSubscriptionsObservation) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskDashboardSubscriptionsObservation.
func (in *SQLTaskDashboardSubscriptionsObservation) DeepCopy() *SQLTaskDashboardSubscriptionsObservation {
	if in == nil {
		return nil
	}
	out := new(SQLTaskDashboardSubscriptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskDashboardSubscriptionsParameters) DeepCopyInto(out *SQLTaskDashboardSubscriptionsParameters) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskDashboardSubscriptionsParameters.
func (in *SQLTaskDashboardSubscriptionsParameters) DeepCopy() *SQLTaskDashboardSubscriptionsParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskDashboardSubscriptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskFileInitParameters) DeepCopyInto(out *SQLTaskFileInitParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskFileInitParameters.
func (in *SQLTaskFileInitParameters) DeepCopy() *SQLTaskFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskFileObservation) DeepCopyInto(out *SQLTaskFileObservation) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskFileObservation.
func (in *SQLTaskFileObservation) DeepCopy() *SQLTaskFileObservation {
	if in == nil {
		return nil
	}
	out := new(SQLTaskFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskFileParameters) DeepCopyInto(out *SQLTaskFileParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskFileParameters.
func (in *SQLTaskFileParameters) DeepCopy() *SQLTaskFileParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskInitParameters) DeepCopyInto(out *SQLTaskInitParameters) {
	*out = *in
	if in.Alert != nil {
		in, out := &in.Alert, &out.Alert
		*out = make([]SQLTaskAlertInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dashboard != nil {
		in, out := &in.Dashboard, &out.Dashboard
		*out = make([]SQLTaskDashboardInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]SQLTaskFileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]QueryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskInitParameters.
func (in *SQLTaskInitParameters) DeepCopy() *SQLTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskObservation) DeepCopyInto(out *SQLTaskObservation) {
	*out = *in
	if in.Alert != nil {
		in, out := &in.Alert, &out.Alert
		*out = make([]SQLTaskAlertObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dashboard != nil {
		in, out := &in.Dashboard, &out.Dashboard
		*out = make([]SQLTaskDashboardObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]SQLTaskFileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]QueryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskObservation.
func (in *SQLTaskObservation) DeepCopy() *SQLTaskObservation {
	if in == nil {
		return nil
	}
	out := new(SQLTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskParameters) DeepCopyInto(out *SQLTaskParameters) {
	*out = *in
	if in.Alert != nil {
		in, out := &in.Alert, &out.Alert
		*out = make([]SQLTaskAlertParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dashboard != nil {
		in, out := &in.Dashboard, &out.Dashboard
		*out = make([]SQLTaskDashboardParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]SQLTaskFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]QueryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskParameters.
func (in *SQLTaskParameters) DeepCopy() *SQLTaskParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskQueryInitParameters) DeepCopyInto(out *SQLTaskQueryInitParameters) {
	*out = *in
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskQueryInitParameters.
func (in *SQLTaskQueryInitParameters) DeepCopy() *SQLTaskQueryInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskQueryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskQueryObservation) DeepCopyInto(out *SQLTaskQueryObservation) {
	*out = *in
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskQueryObservation.
func (in *SQLTaskQueryObservation) DeepCopy() *SQLTaskQueryObservation {
	if in == nil {
		return nil
	}
	out := new(SQLTaskQueryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTaskQueryParameters) DeepCopyInto(out *SQLTaskQueryParameters) {
	*out = *in
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTaskQueryParameters.
func (in *SQLTaskQueryParameters) DeepCopy() *SQLTaskQueryParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTaskQueryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLVisualization) DeepCopyInto(out *SQLVisualization) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLVisualization.
func (in *SQLVisualization) DeepCopy() *SQLVisualization {
	if in == nil {
		return nil
	}
	out := new(SQLVisualization)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLVisualization) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLVisualizationInitParameters) DeepCopyInto(out *SQLVisualizationInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(string)
		**out = **in
	}
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
	if in.QueryPlan != nil {
		in, out := &in.QueryPlan, &out.QueryPlan
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VisualizationID != nil {
		in, out := &in.VisualizationID, &out.VisualizationID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLVisualizationInitParameters.
func (in *SQLVisualizationInitParameters) DeepCopy() *SQLVisualizationInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLVisualizationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLVisualizationList) DeepCopyInto(out *SQLVisualizationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SQLVisualization, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLVisualizationList.
func (in *SQLVisualizationList) DeepCopy() *SQLVisualizationList {
	if in == nil {
		return nil
	}
	out := new(SQLVisualizationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLVisualizationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLVisualizationObservation) DeepCopyInto(out *SQLVisualizationObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(string)
		**out = **in
	}
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
	if in.QueryPlan != nil {
		in, out := &in.QueryPlan, &out.QueryPlan
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VisualizationID != nil {
		in, out := &in.VisualizationID, &out.VisualizationID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLVisualizationObservation.
func (in *SQLVisualizationObservation) DeepCopy() *SQLVisualizationObservation {
	if in == nil {
		return nil
	}
	out := new(SQLVisualizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLVisualizationParameters) DeepCopyInto(out *SQLVisualizationParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(string)
		**out = **in
	}
	if in.QueryID != nil {
		in, out := &in.QueryID, &out.QueryID
		*out = new(string)
		**out = **in
	}
	if in.QueryPlan != nil {
		in, out := &in.QueryPlan, &out.QueryPlan
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VisualizationID != nil {
		in, out := &in.VisualizationID, &out.VisualizationID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLVisualizationParameters.
func (in *SQLVisualizationParameters) DeepCopy() *SQLVisualizationParameters {
	if in == nil {
		return nil
	}
	out := new(SQLVisualizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLVisualizationSpec) DeepCopyInto(out *SQLVisualizationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLVisualizationSpec.
func (in *SQLVisualizationSpec) DeepCopy() *SQLVisualizationSpec {
	if in == nil {
		return nil
	}
	out := new(SQLVisualizationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLVisualizationStatus) DeepCopyInto(out *SQLVisualizationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLVisualizationStatus.
func (in *SQLVisualizationStatus) DeepCopy() *SQLVisualizationStatus {
	if in == nil {
		return nil
	}
	out := new(SQLVisualizationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLWidget) DeepCopyInto(out *SQLWidget) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLWidget.
func (in *SQLWidget) DeepCopy() *SQLWidget {
	if in == nil {
		return nil
	}
	out := new(SQLWidget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLWidget) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLWidgetInitParameters) DeepCopyInto(out *SQLWidgetInitParameters) {
	*out = *in
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]SQLWidgetParameterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Position != nil {
		in, out := &in.Position, &out.Position
		*out = make([]PositionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Text != nil {
		in, out := &in.Text, &out.Text
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.VisualizationID != nil {
		in, out := &in.VisualizationID, &out.VisualizationID
		*out = new(string)
		**out = **in
	}
	if in.WidgetID != nil {
		in, out := &in.WidgetID, &out.WidgetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLWidgetInitParameters.
func (in *SQLWidgetInitParameters) DeepCopy() *SQLWidgetInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLWidgetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLWidgetList) DeepCopyInto(out *SQLWidgetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SQLWidget, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLWidgetList.
func (in *SQLWidgetList) DeepCopy() *SQLWidgetList {
	if in == nil {
		return nil
	}
	out := new(SQLWidgetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLWidgetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLWidgetObservation) DeepCopyInto(out *SQLWidgetObservation) {
	*out = *in
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]SQLWidgetParameterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Position != nil {
		in, out := &in.Position, &out.Position
		*out = make([]PositionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Text != nil {
		in, out := &in.Text, &out.Text
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.VisualizationID != nil {
		in, out := &in.VisualizationID, &out.VisualizationID
		*out = new(string)
		**out = **in
	}
	if in.WidgetID != nil {
		in, out := &in.WidgetID, &out.WidgetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLWidgetObservation.
func (in *SQLWidgetObservation) DeepCopy() *SQLWidgetObservation {
	if in == nil {
		return nil
	}
	out := new(SQLWidgetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLWidgetParameterInitParameters) DeepCopyInto(out *SQLWidgetParameterInitParameters) {
	*out = *in
	if in.MapTo != nil {
		in, out := &in.MapTo, &out.MapTo
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLWidgetParameterInitParameters.
func (in *SQLWidgetParameterInitParameters) DeepCopy() *SQLWidgetParameterInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLWidgetParameterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLWidgetParameterObservation) DeepCopyInto(out *SQLWidgetParameterObservation) {
	*out = *in
	if in.MapTo != nil {
		in, out := &in.MapTo, &out.MapTo
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLWidgetParameterObservation.
func (in *SQLWidgetParameterObservation) DeepCopy() *SQLWidgetParameterObservation {
	if in == nil {
		return nil
	}
	out := new(SQLWidgetParameterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLWidgetParameterParameters) DeepCopyInto(out *SQLWidgetParameterParameters) {
	*out = *in
	if in.MapTo != nil {
		in, out := &in.MapTo, &out.MapTo
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLWidgetParameterParameters.
func (in *SQLWidgetParameterParameters) DeepCopy() *SQLWidgetParameterParameters {
	if in == nil {
		return nil
	}
	out := new(SQLWidgetParameterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLWidgetParameters) DeepCopyInto(out *SQLWidgetParameters) {
	*out = *in
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]SQLWidgetParameterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Position != nil {
		in, out := &in.Position, &out.Position
		*out = make([]PositionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Text != nil {
		in, out := &in.Text, &out.Text
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.VisualizationID != nil {
		in, out := &in.VisualizationID, &out.VisualizationID
		*out = new(string)
		**out = **in
	}
	if in.WidgetID != nil {
		in, out := &in.WidgetID, &out.WidgetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLWidgetParameters.
func (in *SQLWidgetParameters) DeepCopy() *SQLWidgetParameters {
	if in == nil {
		return nil
	}
	out := new(SQLWidgetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLWidgetSpec) DeepCopyInto(out *SQLWidgetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLWidgetSpec.
func (in *SQLWidgetSpec) DeepCopy() *SQLWidgetSpec {
	if in == nil {
		return nil
	}
	out := new(SQLWidgetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLWidgetStatus) DeepCopyInto(out *SQLWidgetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLWidgetStatus.
func (in *SQLWidgetStatus) DeepCopy() *SQLWidgetStatus {
	if in == nil {
		return nil
	}
	out := new(SQLWidgetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleContinuousInitParameters) DeepCopyInto(out *ScheduleContinuousInitParameters) {
	*out = *in
	if in.IntervalSeconds != nil {
		in, out := &in.IntervalSeconds, &out.IntervalSeconds
		*out = new(float64)
		**out = **in
	}
	if in.UntilDate != nil {
		in, out := &in.UntilDate, &out.UntilDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleContinuousInitParameters.
func (in *ScheduleContinuousInitParameters) DeepCopy() *ScheduleContinuousInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleContinuousInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleContinuousObservation) DeepCopyInto(out *ScheduleContinuousObservation) {
	*out = *in
	if in.IntervalSeconds != nil {
		in, out := &in.IntervalSeconds, &out.IntervalSeconds
		*out = new(float64)
		**out = **in
	}
	if in.UntilDate != nil {
		in, out := &in.UntilDate, &out.UntilDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleContinuousObservation.
func (in *ScheduleContinuousObservation) DeepCopy() *ScheduleContinuousObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduleContinuousObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleContinuousParameters) DeepCopyInto(out *ScheduleContinuousParameters) {
	*out = *in
	if in.IntervalSeconds != nil {
		in, out := &in.IntervalSeconds, &out.IntervalSeconds
		*out = new(float64)
		**out = **in
	}
	if in.UntilDate != nil {
		in, out := &in.UntilDate, &out.UntilDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleContinuousParameters.
func (in *ScheduleContinuousParameters) DeepCopy() *ScheduleContinuousParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleContinuousParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleInitParameters) DeepCopyInto(out *ScheduleInitParameters) {
	*out = *in
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
	if in.QuartzCronExpression != nil {
		in, out := &in.QuartzCronExpression, &out.QuartzCronExpression
		*out = new(string)
		**out = **in
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleInitParameters.
func (in *ScheduleInitParameters) DeepCopy() *ScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleObservation) DeepCopyInto(out *ScheduleObservation) {
	*out = *in
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
	if in.QuartzCronExpression != nil {
		in, out := &in.QuartzCronExpression, &out.QuartzCronExpression
		*out = new(string)
		**out = **in
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleObservation.
func (in *ScheduleObservation) DeepCopy() *ScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleParameters) DeepCopyInto(out *ScheduleParameters) {
	*out = *in
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
	if in.QuartzCronExpression != nil {
		in, out := &in.QuartzCronExpression, &out.QuartzCronExpression
		*out = new(string)
		**out = **in
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleParameters.
func (in *ScheduleParameters) DeepCopy() *ScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Schema) DeepCopyInto(out *Schema) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Schema.
func (in *Schema) DeepCopy() *Schema {
	if in == nil {
		return nil
	}
	out := new(Schema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Schema) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaInitParameters) DeepCopyInto(out *SchemaInitParameters) {
	*out = *in
	if in.DestinationCatalog != nil {
		in, out := &in.DestinationCatalog, &out.DestinationCatalog
		*out = new(string)
		**out = **in
	}
	if in.DestinationSchema != nil {
		in, out := &in.DestinationSchema, &out.DestinationSchema
		*out = new(string)
		**out = **in
	}
	if in.SourceCatalog != nil {
		in, out := &in.SourceCatalog, &out.SourceCatalog
		*out = new(string)
		**out = **in
	}
	if in.SourceSchema != nil {
		in, out := &in.SourceSchema, &out.SourceSchema
		*out = new(string)
		**out = **in
	}
	if in.TableConfiguration != nil {
		in, out := &in.TableConfiguration, &out.TableConfiguration
		*out = make([]SchemaTableConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaInitParameters.
func (in *SchemaInitParameters) DeepCopy() *SchemaInitParameters {
	if in == nil {
		return nil
	}
	out := new(SchemaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaInitParameters_2) DeepCopyInto(out *SchemaInitParameters_2) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.EnablePredictiveOptimization != nil {
		in, out := &in.EnablePredictiveOptimization, &out.EnablePredictiveOptimization
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaInitParameters_2.
func (in *SchemaInitParameters_2) DeepCopy() *SchemaInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(SchemaInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaList) DeepCopyInto(out *SchemaList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Schema, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaList.
func (in *SchemaList) DeepCopy() *SchemaList {
	if in == nil {
		return nil
	}
	out := new(SchemaList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SchemaList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaObservation) DeepCopyInto(out *SchemaObservation) {
	*out = *in
	if in.DestinationCatalog != nil {
		in, out := &in.DestinationCatalog, &out.DestinationCatalog
		*out = new(string)
		**out = **in
	}
	if in.DestinationSchema != nil {
		in, out := &in.DestinationSchema, &out.DestinationSchema
		*out = new(string)
		**out = **in
	}
	if in.SourceCatalog != nil {
		in, out := &in.SourceCatalog, &out.SourceCatalog
		*out = new(string)
		**out = **in
	}
	if in.SourceSchema != nil {
		in, out := &in.SourceSchema, &out.SourceSchema
		*out = new(string)
		**out = **in
	}
	if in.TableConfiguration != nil {
		in, out := &in.TableConfiguration, &out.TableConfiguration
		*out = make([]SchemaTableConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaObservation.
func (in *SchemaObservation) DeepCopy() *SchemaObservation {
	if in == nil {
		return nil
	}
	out := new(SchemaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaObservation_2) DeepCopyInto(out *SchemaObservation_2) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.EnablePredictiveOptimization != nil {
		in, out := &in.EnablePredictiveOptimization, &out.EnablePredictiveOptimization
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaObservation_2.
func (in *SchemaObservation_2) DeepCopy() *SchemaObservation_2 {
	if in == nil {
		return nil
	}
	out := new(SchemaObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaParameters) DeepCopyInto(out *SchemaParameters) {
	*out = *in
	if in.DestinationCatalog != nil {
		in, out := &in.DestinationCatalog, &out.DestinationCatalog
		*out = new(string)
		**out = **in
	}
	if in.DestinationSchema != nil {
		in, out := &in.DestinationSchema, &out.DestinationSchema
		*out = new(string)
		**out = **in
	}
	if in.SourceCatalog != nil {
		in, out := &in.SourceCatalog, &out.SourceCatalog
		*out = new(string)
		**out = **in
	}
	if in.SourceSchema != nil {
		in, out := &in.SourceSchema, &out.SourceSchema
		*out = new(string)
		**out = **in
	}
	if in.TableConfiguration != nil {
		in, out := &in.TableConfiguration, &out.TableConfiguration
		*out = make([]SchemaTableConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaParameters.
func (in *SchemaParameters) DeepCopy() *SchemaParameters {
	if in == nil {
		return nil
	}
	out := new(SchemaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaParameters_2) DeepCopyInto(out *SchemaParameters_2) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.EnablePredictiveOptimization != nil {
		in, out := &in.EnablePredictiveOptimization, &out.EnablePredictiveOptimization
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaParameters_2.
func (in *SchemaParameters_2) DeepCopy() *SchemaParameters_2 {
	if in == nil {
		return nil
	}
	out := new(SchemaParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaSpec) DeepCopyInto(out *SchemaSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaSpec.
func (in *SchemaSpec) DeepCopy() *SchemaSpec {
	if in == nil {
		return nil
	}
	out := new(SchemaSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaStatus) DeepCopyInto(out *SchemaStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaStatus.
func (in *SchemaStatus) DeepCopy() *SchemaStatus {
	if in == nil {
		return nil
	}
	out := new(SchemaStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaTableConfigurationInitParameters) DeepCopyInto(out *SchemaTableConfigurationInitParameters) {
	*out = *in
	if in.PrimaryKeys != nil {
		in, out := &in.PrimaryKeys, &out.PrimaryKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SalesforceIncludeFormulaFields != nil {
		in, out := &in.SalesforceIncludeFormulaFields, &out.SalesforceIncludeFormulaFields
		*out = new(bool)
		**out = **in
	}
	if in.ScdType != nil {
		in, out := &in.ScdType, &out.ScdType
		*out = new(string)
		**out = **in
	}
	if in.SequenceBy != nil {
		in, out := &in.SequenceBy, &out.SequenceBy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaTableConfigurationInitParameters.
func (in *SchemaTableConfigurationInitParameters) DeepCopy() *SchemaTableConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(SchemaTableConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaTableConfigurationObservation) DeepCopyInto(out *SchemaTableConfigurationObservation) {
	*out = *in
	if in.PrimaryKeys != nil {
		in, out := &in.PrimaryKeys, &out.PrimaryKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SalesforceIncludeFormulaFields != nil {
		in, out := &in.SalesforceIncludeFormulaFields, &out.SalesforceIncludeFormulaFields
		*out = new(bool)
		**out = **in
	}
	if in.ScdType != nil {
		in, out := &in.ScdType, &out.ScdType
		*out = new(string)
		**out = **in
	}
	if in.SequenceBy != nil {
		in, out := &in.SequenceBy, &out.SequenceBy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaTableConfigurationObservation.
func (in *SchemaTableConfigurationObservation) DeepCopy() *SchemaTableConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(SchemaTableConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaTableConfigurationParameters) DeepCopyInto(out *SchemaTableConfigurationParameters) {
	*out = *in
	if in.PrimaryKeys != nil {
		in, out := &in.PrimaryKeys, &out.PrimaryKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SalesforceIncludeFormulaFields != nil {
		in, out := &in.SalesforceIncludeFormulaFields, &out.SalesforceIncludeFormulaFields
		*out = new(bool)
		**out = **in
	}
	if in.ScdType != nil {
		in, out := &in.ScdType, &out.ScdType
		*out = new(string)
		**out = **in
	}
	if in.SequenceBy != nil {
		in, out := &in.SequenceBy, &out.SequenceBy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaTableConfigurationParameters.
func (in *SchemaTableConfigurationParameters) DeepCopy() *SchemaTableConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(SchemaTableConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Secret) DeepCopyInto(out *Secret) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Secret.
func (in *Secret) DeepCopy() *Secret {
	if in == nil {
		return nil
	}
	out := new(Secret)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Secret) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretACL) DeepCopyInto(out *SecretACL) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretACL.
func (in *SecretACL) DeepCopy() *SecretACL {
	if in == nil {
		return nil
	}
	out := new(SecretACL)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecretACL) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretACLInitParameters) DeepCopyInto(out *SecretACLInitParameters) {
	*out = *in
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretACLInitParameters.
func (in *SecretACLInitParameters) DeepCopy() *SecretACLInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecretACLInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretACLList) DeepCopyInto(out *SecretACLList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecretACL, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretACLList.
func (in *SecretACLList) DeepCopy() *SecretACLList {
	if in == nil {
		return nil
	}
	out := new(SecretACLList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecretACLList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretACLObservation) DeepCopyInto(out *SecretACLObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretACLObservation.
func (in *SecretACLObservation) DeepCopy() *SecretACLObservation {
	if in == nil {
		return nil
	}
	out := new(SecretACLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretACLParameters) DeepCopyInto(out *SecretACLParameters) {
	*out = *in
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretACLParameters.
func (in *SecretACLParameters) DeepCopy() *SecretACLParameters {
	if in == nil {
		return nil
	}
	out := new(SecretACLParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretACLSpec) DeepCopyInto(out *SecretACLSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretACLSpec.
func (in *SecretACLSpec) DeepCopy() *SecretACLSpec {
	if in == nil {
		return nil
	}
	out := new(SecretACLSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretACLStatus) DeepCopyInto(out *SecretACLStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretACLStatus.
func (in *SecretACLStatus) DeepCopy() *SecretACLStatus {
	if in == nil {
		return nil
	}
	out := new(SecretACLStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretInitParameters) DeepCopyInto(out *SecretInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	out.StringValueSecretRef = in.StringValueSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretInitParameters.
func (in *SecretInitParameters) DeepCopy() *SecretInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecretInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretList) DeepCopyInto(out *SecretList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Secret, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretList.
func (in *SecretList) DeepCopy() *SecretList {
	if in == nil {
		return nil
	}
	out := new(SecretList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecretList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretObservation) DeepCopyInto(out *SecretObservation) {
	*out = *in
	if in.ConfigReference != nil {
		in, out := &in.ConfigReference, &out.ConfigReference
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.LastUpdatedTimestamp != nil {
		in, out := &in.LastUpdatedTimestamp, &out.LastUpdatedTimestamp
		*out = new(float64)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretObservation.
func (in *SecretObservation) DeepCopy() *SecretObservation {
	if in == nil {
		return nil
	}
	out := new(SecretObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretParameters) DeepCopyInto(out *SecretParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	out.StringValueSecretRef = in.StringValueSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretParameters.
func (in *SecretParameters) DeepCopy() *SecretParameters {
	if in == nil {
		return nil
	}
	out := new(SecretParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScope) DeepCopyInto(out *SecretScope) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScope.
func (in *SecretScope) DeepCopy() *SecretScope {
	if in == nil {
		return nil
	}
	out := new(SecretScope)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecretScope) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScopeInitParameters) DeepCopyInto(out *SecretScopeInitParameters) {
	*out = *in
	if in.BackendType != nil {
		in, out := &in.BackendType, &out.BackendType
		*out = new(string)
		**out = **in
	}
	if in.InitialManagePrincipal != nil {
		in, out := &in.InitialManagePrincipal, &out.InitialManagePrincipal
		*out = new(string)
		**out = **in
	}
	if in.KeyvaultMetadata != nil {
		in, out := &in.KeyvaultMetadata, &out.KeyvaultMetadata
		*out = make([]KeyvaultMetadataInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScopeInitParameters.
func (in *SecretScopeInitParameters) DeepCopy() *SecretScopeInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecretScopeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScopeList) DeepCopyInto(out *SecretScopeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecretScope, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScopeList.
func (in *SecretScopeList) DeepCopy() *SecretScopeList {
	if in == nil {
		return nil
	}
	out := new(SecretScopeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecretScopeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScopeObservation) DeepCopyInto(out *SecretScopeObservation) {
	*out = *in
	if in.BackendType != nil {
		in, out := &in.BackendType, &out.BackendType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InitialManagePrincipal != nil {
		in, out := &in.InitialManagePrincipal, &out.InitialManagePrincipal
		*out = new(string)
		**out = **in
	}
	if in.KeyvaultMetadata != nil {
		in, out := &in.KeyvaultMetadata, &out.KeyvaultMetadata
		*out = make([]KeyvaultMetadataObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScopeObservation.
func (in *SecretScopeObservation) DeepCopy() *SecretScopeObservation {
	if in == nil {
		return nil
	}
	out := new(SecretScopeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScopeParameters) DeepCopyInto(out *SecretScopeParameters) {
	*out = *in
	if in.BackendType != nil {
		in, out := &in.BackendType, &out.BackendType
		*out = new(string)
		**out = **in
	}
	if in.InitialManagePrincipal != nil {
		in, out := &in.InitialManagePrincipal, &out.InitialManagePrincipal
		*out = new(string)
		**out = **in
	}
	if in.KeyvaultMetadata != nil {
		in, out := &in.KeyvaultMetadata, &out.KeyvaultMetadata
		*out = make([]KeyvaultMetadataParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScopeParameters.
func (in *SecretScopeParameters) DeepCopy() *SecretScopeParameters {
	if in == nil {
		return nil
	}
	out := new(SecretScopeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScopeSpec) DeepCopyInto(out *SecretScopeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScopeSpec.
func (in *SecretScopeSpec) DeepCopy() *SecretScopeSpec {
	if in == nil {
		return nil
	}
	out := new(SecretScopeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScopeStatus) DeepCopyInto(out *SecretScopeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScopeStatus.
func (in *SecretScopeStatus) DeepCopy() *SecretScopeStatus {
	if in == nil {
		return nil
	}
	out := new(SecretScopeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretSpec) DeepCopyInto(out *SecretSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretSpec.
func (in *SecretSpec) DeepCopy() *SecretSpec {
	if in == nil {
		return nil
	}
	out := new(SecretSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretStatus) DeepCopyInto(out *SecretStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretStatus.
func (in *SecretStatus) DeepCopy() *SecretStatus {
	if in == nil {
		return nil
	}
	out := new(SecretStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServedEntitiesInitParameters) DeepCopyInto(out *ServedEntitiesInitParameters) {
	*out = *in
	if in.EntityName != nil {
		in, out := &in.EntityName, &out.EntityName
		*out = new(string)
		**out = **in
	}
	if in.EntityVersion != nil {
		in, out := &in.EntityVersion, &out.EntityVersion
		*out = new(string)
		**out = **in
	}
	if in.EnvironmentVars != nil {
		in, out := &in.EnvironmentVars, &out.EnvironmentVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExternalModel != nil {
		in, out := &in.ExternalModel, &out.ExternalModel
		*out = make([]ExternalModelInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.MaxProvisionedThroughput != nil {
		in, out := &in.MaxProvisionedThroughput, &out.MaxProvisionedThroughput
		*out = new(float64)
		**out = **in
	}
	if in.MinProvisionedThroughput != nil {
		in, out := &in.MinProvisionedThroughput, &out.MinProvisionedThroughput
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ScaleToZeroEnabled != nil {
		in, out := &in.ScaleToZeroEnabled, &out.ScaleToZeroEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkloadSize != nil {
		in, out := &in.WorkloadSize, &out.WorkloadSize
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServedEntitiesInitParameters.
func (in *ServedEntitiesInitParameters) DeepCopy() *ServedEntitiesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServedEntitiesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServedEntitiesObservation) DeepCopyInto(out *ServedEntitiesObservation) {
	*out = *in
	if in.EntityName != nil {
		in, out := &in.EntityName, &out.EntityName
		*out = new(string)
		**out = **in
	}
	if in.EntityVersion != nil {
		in, out := &in.EntityVersion, &out.EntityVersion
		*out = new(string)
		**out = **in
	}
	if in.EnvironmentVars != nil {
		in, out := &in.EnvironmentVars, &out.EnvironmentVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExternalModel != nil {
		in, out := &in.ExternalModel, &out.ExternalModel
		*out = make([]ExternalModelObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.MaxProvisionedThroughput != nil {
		in, out := &in.MaxProvisionedThroughput, &out.MaxProvisionedThroughput
		*out = new(float64)
		**out = **in
	}
	if in.MinProvisionedThroughput != nil {
		in, out := &in.MinProvisionedThroughput, &out.MinProvisionedThroughput
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ScaleToZeroEnabled != nil {
		in, out := &in.ScaleToZeroEnabled, &out.ScaleToZeroEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkloadSize != nil {
		in, out := &in.WorkloadSize, &out.WorkloadSize
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServedEntitiesObservation.
func (in *ServedEntitiesObservation) DeepCopy() *ServedEntitiesObservation {
	if in == nil {
		return nil
	}
	out := new(ServedEntitiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServedEntitiesParameters) DeepCopyInto(out *ServedEntitiesParameters) {
	*out = *in
	if in.EntityName != nil {
		in, out := &in.EntityName, &out.EntityName
		*out = new(string)
		**out = **in
	}
	if in.EntityVersion != nil {
		in, out := &in.EntityVersion, &out.EntityVersion
		*out = new(string)
		**out = **in
	}
	if in.EnvironmentVars != nil {
		in, out := &in.EnvironmentVars, &out.EnvironmentVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExternalModel != nil {
		in, out := &in.ExternalModel, &out.ExternalModel
		*out = make([]ExternalModelParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.MaxProvisionedThroughput != nil {
		in, out := &in.MaxProvisionedThroughput, &out.MaxProvisionedThroughput
		*out = new(float64)
		**out = **in
	}
	if in.MinProvisionedThroughput != nil {
		in, out := &in.MinProvisionedThroughput, &out.MinProvisionedThroughput
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ScaleToZeroEnabled != nil {
		in, out := &in.ScaleToZeroEnabled, &out.ScaleToZeroEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkloadSize != nil {
		in, out := &in.WorkloadSize, &out.WorkloadSize
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServedEntitiesParameters.
func (in *ServedEntitiesParameters) DeepCopy() *ServedEntitiesParameters {
	if in == nil {
		return nil
	}
	out := new(ServedEntitiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServedModelsInitParameters) DeepCopyInto(out *ServedModelsInitParameters) {
	*out = *in
	if in.EnvironmentVars != nil {
		in, out := &in.EnvironmentVars, &out.EnvironmentVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.MaxProvisionedThroughput != nil {
		in, out := &in.MaxProvisionedThroughput, &out.MaxProvisionedThroughput
		*out = new(float64)
		**out = **in
	}
	if in.MinProvisionedThroughput != nil {
		in, out := &in.MinProvisionedThroughput, &out.MinProvisionedThroughput
		*out = new(float64)
		**out = **in
	}
	if in.ModelName != nil {
		in, out := &in.ModelName, &out.ModelName
		*out = new(string)
		**out = **in
	}
	if in.ModelVersion != nil {
		in, out := &in.ModelVersion, &out.ModelVersion
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ScaleToZeroEnabled != nil {
		in, out := &in.ScaleToZeroEnabled, &out.ScaleToZeroEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkloadSize != nil {
		in, out := &in.WorkloadSize, &out.WorkloadSize
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServedModelsInitParameters.
func (in *ServedModelsInitParameters) DeepCopy() *ServedModelsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServedModelsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServedModelsObservation) DeepCopyInto(out *ServedModelsObservation) {
	*out = *in
	if in.EnvironmentVars != nil {
		in, out := &in.EnvironmentVars, &out.EnvironmentVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.MaxProvisionedThroughput != nil {
		in, out := &in.MaxProvisionedThroughput, &out.MaxProvisionedThroughput
		*out = new(float64)
		**out = **in
	}
	if in.MinProvisionedThroughput != nil {
		in, out := &in.MinProvisionedThroughput, &out.MinProvisionedThroughput
		*out = new(float64)
		**out = **in
	}
	if in.ModelName != nil {
		in, out := &in.ModelName, &out.ModelName
		*out = new(string)
		**out = **in
	}
	if in.ModelVersion != nil {
		in, out := &in.ModelVersion, &out.ModelVersion
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ScaleToZeroEnabled != nil {
		in, out := &in.ScaleToZeroEnabled, &out.ScaleToZeroEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkloadSize != nil {
		in, out := &in.WorkloadSize, &out.WorkloadSize
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServedModelsObservation.
func (in *ServedModelsObservation) DeepCopy() *ServedModelsObservation {
	if in == nil {
		return nil
	}
	out := new(ServedModelsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServedModelsParameters) DeepCopyInto(out *ServedModelsParameters) {
	*out = *in
	if in.EnvironmentVars != nil {
		in, out := &in.EnvironmentVars, &out.EnvironmentVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.MaxProvisionedThroughput != nil {
		in, out := &in.MaxProvisionedThroughput, &out.MaxProvisionedThroughput
		*out = new(float64)
		**out = **in
	}
	if in.MinProvisionedThroughput != nil {
		in, out := &in.MinProvisionedThroughput, &out.MinProvisionedThroughput
		*out = new(float64)
		**out = **in
	}
	if in.ModelName != nil {
		in, out := &in.ModelName, &out.ModelName
		*out = new(string)
		**out = **in
	}
	if in.ModelVersion != nil {
		in, out := &in.ModelVersion, &out.ModelVersion
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ScaleToZeroEnabled != nil {
		in, out := &in.ScaleToZeroEnabled, &out.ScaleToZeroEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkloadSize != nil {
		in, out := &in.WorkloadSize, &out.WorkloadSize
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServedModelsParameters.
func (in *ServedModelsParameters) DeepCopy() *ServedModelsParameters {
	if in == nil {
		return nil
	}
	out := new(ServedModelsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipal) DeepCopyInto(out *ServicePrincipal) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipal.
func (in *ServicePrincipal) DeepCopy() *ServicePrincipal {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipal)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServicePrincipal) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalInitParameters) DeepCopyInto(out *ServicePrincipalInitParameters) {
	*out = *in
	if in.ACLPrincipalID != nil {
		in, out := &in.ACLPrincipalID, &out.ACLPrincipalID
		*out = new(string)
		**out = **in
	}
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.AllowClusterCreate != nil {
		in, out := &in.AllowClusterCreate, &out.AllowClusterCreate
		*out = new(bool)
		**out = **in
	}
	if in.AllowInstancePoolCreate != nil {
		in, out := &in.AllowInstancePoolCreate, &out.AllowInstancePoolCreate
		*out = new(bool)
		**out = **in
	}
	if in.ApplicationID != nil {
		in, out := &in.ApplicationID, &out.ApplicationID
		*out = new(string)
		**out = **in
	}
	if in.DatabricksSQLAccess != nil {
		in, out := &in.DatabricksSQLAccess, &out.DatabricksSQLAccess
		*out = new(bool)
		**out = **in
	}
	if in.DisableAsUserDeletion != nil {
		in, out := &in.DisableAsUserDeletion, &out.DisableAsUserDeletion
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteHomeDir != nil {
		in, out := &in.ForceDeleteHomeDir, &out.ForceDeleteHomeDir
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteRepos != nil {
		in, out := &in.ForceDeleteRepos, &out.ForceDeleteRepos
		*out = new(bool)
		**out = **in
	}
	if in.Home != nil {
		in, out := &in.Home, &out.Home
		*out = new(string)
		**out = **in
	}
	if in.Repos != nil {
		in, out := &in.Repos, &out.Repos
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceAccess != nil {
		in, out := &in.WorkspaceAccess, &out.WorkspaceAccess
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalInitParameters.
func (in *ServicePrincipalInitParameters) DeepCopy() *ServicePrincipalInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalList) DeepCopyInto(out *ServicePrincipalList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServicePrincipal, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalList.
func (in *ServicePrincipalList) DeepCopy() *ServicePrincipalList {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServicePrincipalList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalObservation) DeepCopyInto(out *ServicePrincipalObservation) {
	*out = *in
	if in.ACLPrincipalID != nil {
		in, out := &in.ACLPrincipalID, &out.ACLPrincipalID
		*out = new(string)
		**out = **in
	}
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.AllowClusterCreate != nil {
		in, out := &in.AllowClusterCreate, &out.AllowClusterCreate
		*out = new(bool)
		**out = **in
	}
	if in.AllowInstancePoolCreate != nil {
		in, out := &in.AllowInstancePoolCreate, &out.AllowInstancePoolCreate
		*out = new(bool)
		**out = **in
	}
	if in.ApplicationID != nil {
		in, out := &in.ApplicationID, &out.ApplicationID
		*out = new(string)
		**out = **in
	}
	if in.DatabricksSQLAccess != nil {
		in, out := &in.DatabricksSQLAccess, &out.DatabricksSQLAccess
		*out = new(bool)
		**out = **in
	}
	if in.DisableAsUserDeletion != nil {
		in, out := &in.DisableAsUserDeletion, &out.DisableAsUserDeletion
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteHomeDir != nil {
		in, out := &in.ForceDeleteHomeDir, &out.ForceDeleteHomeDir
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteRepos != nil {
		in, out := &in.ForceDeleteRepos, &out.ForceDeleteRepos
		*out = new(bool)
		**out = **in
	}
	if in.Home != nil {
		in, out := &in.Home, &out.Home
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Repos != nil {
		in, out := &in.Repos, &out.Repos
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceAccess != nil {
		in, out := &in.WorkspaceAccess, &out.WorkspaceAccess
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalObservation.
func (in *ServicePrincipalObservation) DeepCopy() *ServicePrincipalObservation {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalParameters) DeepCopyInto(out *ServicePrincipalParameters) {
	*out = *in
	if in.ACLPrincipalID != nil {
		in, out := &in.ACLPrincipalID, &out.ACLPrincipalID
		*out = new(string)
		**out = **in
	}
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.AllowClusterCreate != nil {
		in, out := &in.AllowClusterCreate, &out.AllowClusterCreate
		*out = new(bool)
		**out = **in
	}
	if in.AllowInstancePoolCreate != nil {
		in, out := &in.AllowInstancePoolCreate, &out.AllowInstancePoolCreate
		*out = new(bool)
		**out = **in
	}
	if in.ApplicationID != nil {
		in, out := &in.ApplicationID, &out.ApplicationID
		*out = new(string)
		**out = **in
	}
	if in.DatabricksSQLAccess != nil {
		in, out := &in.DatabricksSQLAccess, &out.DatabricksSQLAccess
		*out = new(bool)
		**out = **in
	}
	if in.DisableAsUserDeletion != nil {
		in, out := &in.DisableAsUserDeletion, &out.DisableAsUserDeletion
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteHomeDir != nil {
		in, out := &in.ForceDeleteHomeDir, &out.ForceDeleteHomeDir
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteRepos != nil {
		in, out := &in.ForceDeleteRepos, &out.ForceDeleteRepos
		*out = new(bool)
		**out = **in
	}
	if in.Home != nil {
		in, out := &in.Home, &out.Home
		*out = new(string)
		**out = **in
	}
	if in.Repos != nil {
		in, out := &in.Repos, &out.Repos
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceAccess != nil {
		in, out := &in.WorkspaceAccess, &out.WorkspaceAccess
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalParameters.
func (in *ServicePrincipalParameters) DeepCopy() *ServicePrincipalParameters {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalRole) DeepCopyInto(out *ServicePrincipalRole) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalRole.
func (in *ServicePrincipalRole) DeepCopy() *ServicePrincipalRole {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalRole)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServicePrincipalRole) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalRoleInitParameters) DeepCopyInto(out *ServicePrincipalRoleInitParameters) {
	*out = *in
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalID != nil {
		in, out := &in.ServicePrincipalID, &out.ServicePrincipalID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalRoleInitParameters.
func (in *ServicePrincipalRoleInitParameters) DeepCopy() *ServicePrincipalRoleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalRoleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalRoleList) DeepCopyInto(out *ServicePrincipalRoleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServicePrincipalRole, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalRoleList.
func (in *ServicePrincipalRoleList) DeepCopy() *ServicePrincipalRoleList {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalRoleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServicePrincipalRoleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalRoleObservation) DeepCopyInto(out *ServicePrincipalRoleObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalID != nil {
		in, out := &in.ServicePrincipalID, &out.ServicePrincipalID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalRoleObservation.
func (in *ServicePrincipalRoleObservation) DeepCopy() *ServicePrincipalRoleObservation {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalRoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalRoleParameters) DeepCopyInto(out *ServicePrincipalRoleParameters) {
	*out = *in
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalID != nil {
		in, out := &in.ServicePrincipalID, &out.ServicePrincipalID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalRoleParameters.
func (in *ServicePrincipalRoleParameters) DeepCopy() *ServicePrincipalRoleParameters {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalRoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalRoleSpec) DeepCopyInto(out *ServicePrincipalRoleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalRoleSpec.
func (in *ServicePrincipalRoleSpec) DeepCopy() *ServicePrincipalRoleSpec {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalRoleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalRoleStatus) DeepCopyInto(out *ServicePrincipalRoleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalRoleStatus.
func (in *ServicePrincipalRoleStatus) DeepCopy() *ServicePrincipalRoleStatus {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalRoleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalSecret) DeepCopyInto(out *ServicePrincipalSecret) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalSecret.
func (in *ServicePrincipalSecret) DeepCopy() *ServicePrincipalSecret {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalSecret)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServicePrincipalSecret) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalSecretInitParameters) DeepCopyInto(out *ServicePrincipalSecretInitParameters) {
	*out = *in
	if in.SecretSecretRef != nil {
		in, out := &in.SecretSecretRef, &out.SecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ServicePrincipalID != nil {
		in, out := &in.ServicePrincipalID, &out.ServicePrincipalID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalSecretInitParameters.
func (in *ServicePrincipalSecretInitParameters) DeepCopy() *ServicePrincipalSecretInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalSecretInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalSecretList) DeepCopyInto(out *ServicePrincipalSecretList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServicePrincipalSecret, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalSecretList.
func (in *ServicePrincipalSecretList) DeepCopy() *ServicePrincipalSecretList {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalSecretList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServicePrincipalSecretList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalSecretObservation) DeepCopyInto(out *ServicePrincipalSecretObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalID != nil {
		in, out := &in.ServicePrincipalID, &out.ServicePrincipalID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalSecretObservation.
func (in *ServicePrincipalSecretObservation) DeepCopy() *ServicePrincipalSecretObservation {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalSecretObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalSecretParameters) DeepCopyInto(out *ServicePrincipalSecretParameters) {
	*out = *in
	if in.SecretSecretRef != nil {
		in, out := &in.SecretSecretRef, &out.SecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ServicePrincipalID != nil {
		in, out := &in.ServicePrincipalID, &out.ServicePrincipalID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalSecretParameters.
func (in *ServicePrincipalSecretParameters) DeepCopy() *ServicePrincipalSecretParameters {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalSecretParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalSecretSpec) DeepCopyInto(out *ServicePrincipalSecretSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalSecretSpec.
func (in *ServicePrincipalSecretSpec) DeepCopy() *ServicePrincipalSecretSpec {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalSecretSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalSecretStatus) DeepCopyInto(out *ServicePrincipalSecretStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalSecretStatus.
func (in *ServicePrincipalSecretStatus) DeepCopy() *ServicePrincipalSecretStatus {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalSecretStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalSpec) DeepCopyInto(out *ServicePrincipalSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalSpec.
func (in *ServicePrincipalSpec) DeepCopy() *ServicePrincipalSpec {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalStatus) DeepCopyInto(out *ServicePrincipalStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalStatus.
func (in *ServicePrincipalStatus) DeepCopy() *ServicePrincipalStatus {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Share) DeepCopyInto(out *Share) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Share.
func (in *Share) DeepCopy() *Share {
	if in == nil {
		return nil
	}
	out := new(Share)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Share) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareInitParameters) DeepCopyInto(out *ShareInitParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Object != nil {
		in, out := &in.Object, &out.Object
		*out = make([]ObjectInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedBy != nil {
		in, out := &in.UpdatedBy, &out.UpdatedBy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareInitParameters.
func (in *ShareInitParameters) DeepCopy() *ShareInitParameters {
	if in == nil {
		return nil
	}
	out := new(ShareInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareList) DeepCopyInto(out *ShareList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Share, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareList.
func (in *ShareList) DeepCopy() *ShareList {
	if in == nil {
		return nil
	}
	out := new(ShareList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ShareList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareObservation) DeepCopyInto(out *ShareObservation) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Object != nil {
		in, out := &in.Object, &out.Object
		*out = make([]ObjectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedBy != nil {
		in, out := &in.UpdatedBy, &out.UpdatedBy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareObservation.
func (in *ShareObservation) DeepCopy() *ShareObservation {
	if in == nil {
		return nil
	}
	out := new(ShareObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareParameters) DeepCopyInto(out *ShareParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Object != nil {
		in, out := &in.Object, &out.Object
		*out = make([]ObjectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedBy != nil {
		in, out := &in.UpdatedBy, &out.UpdatedBy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareParameters.
func (in *ShareParameters) DeepCopy() *ShareParameters {
	if in == nil {
		return nil
	}
	out := new(ShareParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharePluginframework) DeepCopyInto(out *SharePluginframework) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharePluginframework.
func (in *SharePluginframework) DeepCopy() *SharePluginframework {
	if in == nil {
		return nil
	}
	out := new(SharePluginframework)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SharePluginframework) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharePluginframeworkInitParameters) DeepCopyInto(out *SharePluginframeworkInitParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.EffectiveOwner != nil {
		in, out := &in.EffectiveOwner, &out.EffectiveOwner
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Object != nil {
		in, out := &in.Object, &out.Object
		*out = make([]SharePluginframeworkObjectInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedBy != nil {
		in, out := &in.UpdatedBy, &out.UpdatedBy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharePluginframeworkInitParameters.
func (in *SharePluginframeworkInitParameters) DeepCopy() *SharePluginframeworkInitParameters {
	if in == nil {
		return nil
	}
	out := new(SharePluginframeworkInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharePluginframeworkList) DeepCopyInto(out *SharePluginframeworkList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SharePluginframework, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharePluginframeworkList.
func (in *SharePluginframeworkList) DeepCopy() *SharePluginframeworkList {
	if in == nil {
		return nil
	}
	out := new(SharePluginframeworkList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SharePluginframeworkList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharePluginframeworkObjectInitParameters) DeepCopyInto(out *SharePluginframeworkObjectInitParameters) {
	*out = *in
	if in.AddedAt != nil {
		in, out := &in.AddedAt, &out.AddedAt
		*out = new(float64)
		**out = **in
	}
	if in.AddedBy != nil {
		in, out := &in.AddedBy, &out.AddedBy
		*out = new(string)
		**out = **in
	}
	if in.CdfEnabled != nil {
		in, out := &in.CdfEnabled, &out.CdfEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.DataObjectType != nil {
		in, out := &in.DataObjectType, &out.DataObjectType
		*out = new(string)
		**out = **in
	}
	if in.EffectiveCdfEnabled != nil {
		in, out := &in.EffectiveCdfEnabled, &out.EffectiveCdfEnabled
		*out = new(bool)
		**out = **in
	}
	if in.EffectiveHistoryDataSharingStatus != nil {
		in, out := &in.EffectiveHistoryDataSharingStatus, &out.EffectiveHistoryDataSharingStatus
		*out = new(string)
		**out = **in
	}
	if in.EffectiveSharedAs != nil {
		in, out := &in.EffectiveSharedAs, &out.EffectiveSharedAs
		*out = new(string)
		**out = **in
	}
	if in.EffectiveStartVersion != nil {
		in, out := &in.EffectiveStartVersion, &out.EffectiveStartVersion
		*out = new(float64)
		**out = **in
	}
	if in.HistoryDataSharingStatus != nil {
		in, out := &in.HistoryDataSharingStatus, &out.HistoryDataSharingStatus
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Partition != nil {
		in, out := &in.Partition, &out.Partition
		*out = make([]ObjectPartitionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SharedAs != nil {
		in, out := &in.SharedAs, &out.SharedAs
		*out = new(string)
		**out = **in
	}
	if in.StartVersion != nil {
		in, out := &in.StartVersion, &out.StartVersion
		*out = new(float64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StringSharedAs != nil {
		in, out := &in.StringSharedAs, &out.StringSharedAs
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharePluginframeworkObjectInitParameters.
func (in *SharePluginframeworkObjectInitParameters) DeepCopy() *SharePluginframeworkObjectInitParameters {
	if in == nil {
		return nil
	}
	out := new(SharePluginframeworkObjectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharePluginframeworkObjectObservation) DeepCopyInto(out *SharePluginframeworkObjectObservation) {
	*out = *in
	if in.AddedAt != nil {
		in, out := &in.AddedAt, &out.AddedAt
		*out = new(float64)
		**out = **in
	}
	if in.AddedBy != nil {
		in, out := &in.AddedBy, &out.AddedBy
		*out = new(string)
		**out = **in
	}
	if in.CdfEnabled != nil {
		in, out := &in.CdfEnabled, &out.CdfEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.DataObjectType != nil {
		in, out := &in.DataObjectType, &out.DataObjectType
		*out = new(string)
		**out = **in
	}
	if in.EffectiveCdfEnabled != nil {
		in, out := &in.EffectiveCdfEnabled, &out.EffectiveCdfEnabled
		*out = new(bool)
		**out = **in
	}
	if in.EffectiveHistoryDataSharingStatus != nil {
		in, out := &in.EffectiveHistoryDataSharingStatus, &out.EffectiveHistoryDataSharingStatus
		*out = new(string)
		**out = **in
	}
	if in.EffectiveSharedAs != nil {
		in, out := &in.EffectiveSharedAs, &out.EffectiveSharedAs
		*out = new(string)
		**out = **in
	}
	if in.EffectiveStartVersion != nil {
		in, out := &in.EffectiveStartVersion, &out.EffectiveStartVersion
		*out = new(float64)
		**out = **in
	}
	if in.HistoryDataSharingStatus != nil {
		in, out := &in.HistoryDataSharingStatus, &out.HistoryDataSharingStatus
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Partition != nil {
		in, out := &in.Partition, &out.Partition
		*out = make([]ObjectPartitionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SharedAs != nil {
		in, out := &in.SharedAs, &out.SharedAs
		*out = new(string)
		**out = **in
	}
	if in.StartVersion != nil {
		in, out := &in.StartVersion, &out.StartVersion
		*out = new(float64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StringSharedAs != nil {
		in, out := &in.StringSharedAs, &out.StringSharedAs
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharePluginframeworkObjectObservation.
func (in *SharePluginframeworkObjectObservation) DeepCopy() *SharePluginframeworkObjectObservation {
	if in == nil {
		return nil
	}
	out := new(SharePluginframeworkObjectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharePluginframeworkObjectParameters) DeepCopyInto(out *SharePluginframeworkObjectParameters) {
	*out = *in
	if in.AddedAt != nil {
		in, out := &in.AddedAt, &out.AddedAt
		*out = new(float64)
		**out = **in
	}
	if in.AddedBy != nil {
		in, out := &in.AddedBy, &out.AddedBy
		*out = new(string)
		**out = **in
	}
	if in.CdfEnabled != nil {
		in, out := &in.CdfEnabled, &out.CdfEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.DataObjectType != nil {
		in, out := &in.DataObjectType, &out.DataObjectType
		*out = new(string)
		**out = **in
	}
	if in.EffectiveCdfEnabled != nil {
		in, out := &in.EffectiveCdfEnabled, &out.EffectiveCdfEnabled
		*out = new(bool)
		**out = **in
	}
	if in.EffectiveHistoryDataSharingStatus != nil {
		in, out := &in.EffectiveHistoryDataSharingStatus, &out.EffectiveHistoryDataSharingStatus
		*out = new(string)
		**out = **in
	}
	if in.EffectiveSharedAs != nil {
		in, out := &in.EffectiveSharedAs, &out.EffectiveSharedAs
		*out = new(string)
		**out = **in
	}
	if in.EffectiveStartVersion != nil {
		in, out := &in.EffectiveStartVersion, &out.EffectiveStartVersion
		*out = new(float64)
		**out = **in
	}
	if in.HistoryDataSharingStatus != nil {
		in, out := &in.HistoryDataSharingStatus, &out.HistoryDataSharingStatus
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Partition != nil {
		in, out := &in.Partition, &out.Partition
		*out = make([]ObjectPartitionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SharedAs != nil {
		in, out := &in.SharedAs, &out.SharedAs
		*out = new(string)
		**out = **in
	}
	if in.StartVersion != nil {
		in, out := &in.StartVersion, &out.StartVersion
		*out = new(float64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StringSharedAs != nil {
		in, out := &in.StringSharedAs, &out.StringSharedAs
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharePluginframeworkObjectParameters.
func (in *SharePluginframeworkObjectParameters) DeepCopy() *SharePluginframeworkObjectParameters {
	if in == nil {
		return nil
	}
	out := new(SharePluginframeworkObjectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharePluginframeworkObservation) DeepCopyInto(out *SharePluginframeworkObservation) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.EffectiveOwner != nil {
		in, out := &in.EffectiveOwner, &out.EffectiveOwner
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Object != nil {
		in, out := &in.Object, &out.Object
		*out = make([]SharePluginframeworkObjectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedBy != nil {
		in, out := &in.UpdatedBy, &out.UpdatedBy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharePluginframeworkObservation.
func (in *SharePluginframeworkObservation) DeepCopy() *SharePluginframeworkObservation {
	if in == nil {
		return nil
	}
	out := new(SharePluginframeworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharePluginframeworkParameters) DeepCopyInto(out *SharePluginframeworkParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.EffectiveOwner != nil {
		in, out := &in.EffectiveOwner, &out.EffectiveOwner
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Object != nil {
		in, out := &in.Object, &out.Object
		*out = make([]SharePluginframeworkObjectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedBy != nil {
		in, out := &in.UpdatedBy, &out.UpdatedBy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharePluginframeworkParameters.
func (in *SharePluginframeworkParameters) DeepCopy() *SharePluginframeworkParameters {
	if in == nil {
		return nil
	}
	out := new(SharePluginframeworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharePluginframeworkSpec) DeepCopyInto(out *SharePluginframeworkSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharePluginframeworkSpec.
func (in *SharePluginframeworkSpec) DeepCopy() *SharePluginframeworkSpec {
	if in == nil {
		return nil
	}
	out := new(SharePluginframeworkSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharePluginframeworkStatus) DeepCopyInto(out *SharePluginframeworkStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharePluginframeworkStatus.
func (in *SharePluginframeworkStatus) DeepCopy() *SharePluginframeworkStatus {
	if in == nil {
		return nil
	}
	out := new(SharePluginframeworkStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareSpec) DeepCopyInto(out *ShareSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareSpec.
func (in *ShareSpec) DeepCopy() *ShareSpec {
	if in == nil {
		return nil
	}
	out := new(ShareSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareStatus) DeepCopyInto(out *ShareStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareStatus.
func (in *ShareStatus) DeepCopy() *ShareStatus {
	if in == nil {
		return nil
	}
	out := new(ShareStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlackInitParameters) DeepCopyInto(out *SlackInitParameters) {
	*out = *in
	if in.URLSecretRef != nil {
		in, out := &in.URLSecretRef, &out.URLSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.URLSet != nil {
		in, out := &in.URLSet, &out.URLSet
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlackInitParameters.
func (in *SlackInitParameters) DeepCopy() *SlackInitParameters {
	if in == nil {
		return nil
	}
	out := new(SlackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlackObservation) DeepCopyInto(out *SlackObservation) {
	*out = *in
	if in.URLSet != nil {
		in, out := &in.URLSet, &out.URLSet
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlackObservation.
func (in *SlackObservation) DeepCopy() *SlackObservation {
	if in == nil {
		return nil
	}
	out := new(SlackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlackParameters) DeepCopyInto(out *SlackParameters) {
	*out = *in
	if in.URLSecretRef != nil {
		in, out := &in.URLSecretRef, &out.URLSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.URLSet != nil {
		in, out := &in.URLSet, &out.URLSet
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlackParameters.
func (in *SlackParameters) DeepCopy() *SlackParameters {
	if in == nil {
		return nil
	}
	out := new(SlackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotInitParameters) DeepCopyInto(out *SnapshotInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotInitParameters.
func (in *SnapshotInitParameters) DeepCopy() *SnapshotInitParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotObservation) DeepCopyInto(out *SnapshotObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotObservation.
func (in *SnapshotObservation) DeepCopy() *SnapshotObservation {
	if in == nil {
		return nil
	}
	out := new(SnapshotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotParameters) DeepCopyInto(out *SnapshotParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotParameters.
func (in *SnapshotParameters) DeepCopy() *SnapshotParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkJarTaskInitParameters) DeepCopyInto(out *SparkJarTaskInitParameters) {
	*out = *in
	if in.JarURI != nil {
		in, out := &in.JarURI, &out.JarURI
		*out = new(string)
		**out = **in
	}
	if in.MainClassName != nil {
		in, out := &in.MainClassName, &out.MainClassName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkJarTaskInitParameters.
func (in *SparkJarTaskInitParameters) DeepCopy() *SparkJarTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkJarTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkJarTaskObservation) DeepCopyInto(out *SparkJarTaskObservation) {
	*out = *in
	if in.JarURI != nil {
		in, out := &in.JarURI, &out.JarURI
		*out = new(string)
		**out = **in
	}
	if in.MainClassName != nil {
		in, out := &in.MainClassName, &out.MainClassName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkJarTaskObservation.
func (in *SparkJarTaskObservation) DeepCopy() *SparkJarTaskObservation {
	if in == nil {
		return nil
	}
	out := new(SparkJarTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkJarTaskParameters) DeepCopyInto(out *SparkJarTaskParameters) {
	*out = *in
	if in.JarURI != nil {
		in, out := &in.JarURI, &out.JarURI
		*out = new(string)
		**out = **in
	}
	if in.MainClassName != nil {
		in, out := &in.MainClassName, &out.MainClassName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkJarTaskParameters.
func (in *SparkJarTaskParameters) DeepCopy() *SparkJarTaskParameters {
	if in == nil {
		return nil
	}
	out := new(SparkJarTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkPythonTaskInitParameters) DeepCopyInto(out *SparkPythonTaskInitParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PythonFile != nil {
		in, out := &in.PythonFile, &out.PythonFile
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkPythonTaskInitParameters.
func (in *SparkPythonTaskInitParameters) DeepCopy() *SparkPythonTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkPythonTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkPythonTaskObservation) DeepCopyInto(out *SparkPythonTaskObservation) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PythonFile != nil {
		in, out := &in.PythonFile, &out.PythonFile
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkPythonTaskObservation.
func (in *SparkPythonTaskObservation) DeepCopy() *SparkPythonTaskObservation {
	if in == nil {
		return nil
	}
	out := new(SparkPythonTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkPythonTaskParameters) DeepCopyInto(out *SparkPythonTaskParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PythonFile != nil {
		in, out := &in.PythonFile, &out.PythonFile
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkPythonTaskParameters.
func (in *SparkPythonTaskParameters) DeepCopy() *SparkPythonTaskParameters {
	if in == nil {
		return nil
	}
	out := new(SparkPythonTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkSubmitTaskInitParameters) DeepCopyInto(out *SparkSubmitTaskInitParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkSubmitTaskInitParameters.
func (in *SparkSubmitTaskInitParameters) DeepCopy() *SparkSubmitTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkSubmitTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkSubmitTaskObservation) DeepCopyInto(out *SparkSubmitTaskObservation) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkSubmitTaskObservation.
func (in *SparkSubmitTaskObservation) DeepCopy() *SparkSubmitTaskObservation {
	if in == nil {
		return nil
	}
	out := new(SparkSubmitTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkSubmitTaskParameters) DeepCopyInto(out *SparkSubmitTaskParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkSubmitTaskParameters.
func (in *SparkSubmitTaskParameters) DeepCopy() *SparkSubmitTaskParameters {
	if in == nil {
		return nil
	}
	out := new(SparkSubmitTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparseCheckoutInitParameters) DeepCopyInto(out *SparseCheckoutInitParameters) {
	*out = *in
	if in.Patterns != nil {
		in, out := &in.Patterns, &out.Patterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparseCheckoutInitParameters.
func (in *SparseCheckoutInitParameters) DeepCopy() *SparseCheckoutInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparseCheckoutInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparseCheckoutObservation) DeepCopyInto(out *SparseCheckoutObservation) {
	*out = *in
	if in.Patterns != nil {
		in, out := &in.Patterns, &out.Patterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparseCheckoutObservation.
func (in *SparseCheckoutObservation) DeepCopy() *SparseCheckoutObservation {
	if in == nil {
		return nil
	}
	out := new(SparseCheckoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparseCheckoutParameters) DeepCopyInto(out *SparseCheckoutParameters) {
	*out = *in
	if in.Patterns != nil {
		in, out := &in.Patterns, &out.Patterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparseCheckoutParameters.
func (in *SparseCheckoutParameters) DeepCopy() *SparseCheckoutParameters {
	if in == nil {
		return nil
	}
	out := new(SparseCheckoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecInitParameters) DeepCopyInto(out *SpecInitParameters) {
	*out = *in
	if in.Client != nil {
		in, out := &in.Client, &out.Client
		*out = new(string)
		**out = **in
	}
	if in.Dependencies != nil {
		in, out := &in.Dependencies, &out.Dependencies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecInitParameters.
func (in *SpecInitParameters) DeepCopy() *SpecInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpecInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecObservation) DeepCopyInto(out *SpecObservation) {
	*out = *in
	if in.Client != nil {
		in, out := &in.Client, &out.Client
		*out = new(string)
		**out = **in
	}
	if in.Dependencies != nil {
		in, out := &in.Dependencies, &out.Dependencies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecObservation.
func (in *SpecObservation) DeepCopy() *SpecObservation {
	if in == nil {
		return nil
	}
	out := new(SpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecParameters) DeepCopyInto(out *SpecParameters) {
	*out = *in
	if in.Client != nil {
		in, out := &in.Client, &out.Client
		*out = new(string)
		**out = **in
	}
	if in.Dependencies != nil {
		in, out := &in.Dependencies, &out.Dependencies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecParameters.
func (in *SpecParameters) DeepCopy() *SpecParameters {
	if in == nil {
		return nil
	}
	out := new(SpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SseEncryptionDetailsInitParameters) DeepCopyInto(out *SseEncryptionDetailsInitParameters) {
	*out = *in
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(string)
		**out = **in
	}
	if in.AwsKMSKeyArn != nil {
		in, out := &in.AwsKMSKeyArn, &out.AwsKMSKeyArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SseEncryptionDetailsInitParameters.
func (in *SseEncryptionDetailsInitParameters) DeepCopy() *SseEncryptionDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SseEncryptionDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SseEncryptionDetailsObservation) DeepCopyInto(out *SseEncryptionDetailsObservation) {
	*out = *in
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(string)
		**out = **in
	}
	if in.AwsKMSKeyArn != nil {
		in, out := &in.AwsKMSKeyArn, &out.AwsKMSKeyArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SseEncryptionDetailsObservation.
func (in *SseEncryptionDetailsObservation) DeepCopy() *SseEncryptionDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(SseEncryptionDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SseEncryptionDetailsParameters) DeepCopyInto(out *SseEncryptionDetailsParameters) {
	*out = *in
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(string)
		**out = **in
	}
	if in.AwsKMSKeyArn != nil {
		in, out := &in.AwsKMSKeyArn, &out.AwsKMSKeyArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SseEncryptionDetailsParameters.
func (in *SseEncryptionDetailsParameters) DeepCopy() *SseEncryptionDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(SseEncryptionDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusInitParameters) DeepCopyInto(out *StatusInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusInitParameters.
func (in *StatusInitParameters) DeepCopy() *StatusInitParameters {
	if in == nil {
		return nil
	}
	out := new(StatusInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusObservation) DeepCopyInto(out *StatusObservation) {
	*out = *in
	if in.ContinuousUpdateStatus != nil {
		in, out := &in.ContinuousUpdateStatus, &out.ContinuousUpdateStatus
		*out = make([]ContinuousUpdateStatusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DetailedState != nil {
		in, out := &in.DetailedState, &out.DetailedState
		*out = new(string)
		**out = **in
	}
	if in.FailedStatus != nil {
		in, out := &in.FailedStatus, &out.FailedStatus
		*out = make([]FailedStatusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.ProvisioningStatus != nil {
		in, out := &in.ProvisioningStatus, &out.ProvisioningStatus
		*out = make([]ProvisioningStatusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TriggeredUpdateStatus != nil {
		in, out := &in.TriggeredUpdateStatus, &out.TriggeredUpdateStatus
		*out = make([]TriggeredUpdateStatusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusObservation.
func (in *StatusObservation) DeepCopy() *StatusObservation {
	if in == nil {
		return nil
	}
	out := new(StatusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusParameters) DeepCopyInto(out *StatusParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusParameters.
func (in *StatusParameters) DeepCopy() *StatusParameters {
	if in == nil {
		return nil
	}
	out := new(StatusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredential) DeepCopyInto(out *StorageCredential) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredential.
func (in *StorageCredential) DeepCopy() *StorageCredential {
	if in == nil {
		return nil
	}
	out := new(StorageCredential)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StorageCredential) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialAwsIAMRoleInitParameters) DeepCopyInto(out *StorageCredentialAwsIAMRoleInitParameters) {
	*out = *in
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.UnityCatalogIAMArn != nil {
		in, out := &in.UnityCatalogIAMArn, &out.UnityCatalogIAMArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialAwsIAMRoleInitParameters.
func (in *StorageCredentialAwsIAMRoleInitParameters) DeepCopy() *StorageCredentialAwsIAMRoleInitParameters {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialAwsIAMRoleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialAwsIAMRoleObservation) DeepCopyInto(out *StorageCredentialAwsIAMRoleObservation) {
	*out = *in
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.UnityCatalogIAMArn != nil {
		in, out := &in.UnityCatalogIAMArn, &out.UnityCatalogIAMArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialAwsIAMRoleObservation.
func (in *StorageCredentialAwsIAMRoleObservation) DeepCopy() *StorageCredentialAwsIAMRoleObservation {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialAwsIAMRoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialAwsIAMRoleParameters) DeepCopyInto(out *StorageCredentialAwsIAMRoleParameters) {
	*out = *in
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.UnityCatalogIAMArn != nil {
		in, out := &in.UnityCatalogIAMArn, &out.UnityCatalogIAMArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialAwsIAMRoleParameters.
func (in *StorageCredentialAwsIAMRoleParameters) DeepCopy() *StorageCredentialAwsIAMRoleParameters {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialAwsIAMRoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialAzureManagedIdentityInitParameters) DeepCopyInto(out *StorageCredentialAzureManagedIdentityInitParameters) {
	*out = *in
	if in.AccessConnectorID != nil {
		in, out := &in.AccessConnectorID, &out.AccessConnectorID
		*out = new(string)
		**out = **in
	}
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.ManagedIdentityID != nil {
		in, out := &in.ManagedIdentityID, &out.ManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialAzureManagedIdentityInitParameters.
func (in *StorageCredentialAzureManagedIdentityInitParameters) DeepCopy() *StorageCredentialAzureManagedIdentityInitParameters {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialAzureManagedIdentityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialAzureManagedIdentityObservation) DeepCopyInto(out *StorageCredentialAzureManagedIdentityObservation) {
	*out = *in
	if in.AccessConnectorID != nil {
		in, out := &in.AccessConnectorID, &out.AccessConnectorID
		*out = new(string)
		**out = **in
	}
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.ManagedIdentityID != nil {
		in, out := &in.ManagedIdentityID, &out.ManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialAzureManagedIdentityObservation.
func (in *StorageCredentialAzureManagedIdentityObservation) DeepCopy() *StorageCredentialAzureManagedIdentityObservation {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialAzureManagedIdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialAzureManagedIdentityParameters) DeepCopyInto(out *StorageCredentialAzureManagedIdentityParameters) {
	*out = *in
	if in.AccessConnectorID != nil {
		in, out := &in.AccessConnectorID, &out.AccessConnectorID
		*out = new(string)
		**out = **in
	}
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.ManagedIdentityID != nil {
		in, out := &in.ManagedIdentityID, &out.ManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialAzureManagedIdentityParameters.
func (in *StorageCredentialAzureManagedIdentityParameters) DeepCopy() *StorageCredentialAzureManagedIdentityParameters {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialAzureManagedIdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialAzureServicePrincipalInitParameters) DeepCopyInto(out *StorageCredentialAzureServicePrincipalInitParameters) {
	*out = *in
	if in.ApplicationID != nil {
		in, out := &in.ApplicationID, &out.ApplicationID
		*out = new(string)
		**out = **in
	}
	out.ClientSecretSecretRef = in.ClientSecretSecretRef
	if in.DirectoryID != nil {
		in, out := &in.DirectoryID, &out.DirectoryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialAzureServicePrincipalInitParameters.
func (in *StorageCredentialAzureServicePrincipalInitParameters) DeepCopy() *StorageCredentialAzureServicePrincipalInitParameters {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialAzureServicePrincipalInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialAzureServicePrincipalObservation) DeepCopyInto(out *StorageCredentialAzureServicePrincipalObservation) {
	*out = *in
	if in.ApplicationID != nil {
		in, out := &in.ApplicationID, &out.ApplicationID
		*out = new(string)
		**out = **in
	}
	if in.DirectoryID != nil {
		in, out := &in.DirectoryID, &out.DirectoryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialAzureServicePrincipalObservation.
func (in *StorageCredentialAzureServicePrincipalObservation) DeepCopy() *StorageCredentialAzureServicePrincipalObservation {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialAzureServicePrincipalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialAzureServicePrincipalParameters) DeepCopyInto(out *StorageCredentialAzureServicePrincipalParameters) {
	*out = *in
	if in.ApplicationID != nil {
		in, out := &in.ApplicationID, &out.ApplicationID
		*out = new(string)
		**out = **in
	}
	out.ClientSecretSecretRef = in.ClientSecretSecretRef
	if in.DirectoryID != nil {
		in, out := &in.DirectoryID, &out.DirectoryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialAzureServicePrincipalParameters.
func (in *StorageCredentialAzureServicePrincipalParameters) DeepCopy() *StorageCredentialAzureServicePrincipalParameters {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialAzureServicePrincipalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialCloudflareAPITokenInitParameters) DeepCopyInto(out *StorageCredentialCloudflareAPITokenInitParameters) {
	*out = *in
	if in.AccessKeyID != nil {
		in, out := &in.AccessKeyID, &out.AccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	out.SecretAccessKeySecretRef = in.SecretAccessKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialCloudflareAPITokenInitParameters.
func (in *StorageCredentialCloudflareAPITokenInitParameters) DeepCopy() *StorageCredentialCloudflareAPITokenInitParameters {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialCloudflareAPITokenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialCloudflareAPITokenObservation) DeepCopyInto(out *StorageCredentialCloudflareAPITokenObservation) {
	*out = *in
	if in.AccessKeyID != nil {
		in, out := &in.AccessKeyID, &out.AccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialCloudflareAPITokenObservation.
func (in *StorageCredentialCloudflareAPITokenObservation) DeepCopy() *StorageCredentialCloudflareAPITokenObservation {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialCloudflareAPITokenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialCloudflareAPITokenParameters) DeepCopyInto(out *StorageCredentialCloudflareAPITokenParameters) {
	*out = *in
	if in.AccessKeyID != nil {
		in, out := &in.AccessKeyID, &out.AccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	out.SecretAccessKeySecretRef = in.SecretAccessKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialCloudflareAPITokenParameters.
func (in *StorageCredentialCloudflareAPITokenParameters) DeepCopy() *StorageCredentialCloudflareAPITokenParameters {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialCloudflareAPITokenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialDatabricksGCPServiceAccountInitParameters) DeepCopyInto(out *StorageCredentialDatabricksGCPServiceAccountInitParameters) {
	*out = *in
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialDatabricksGCPServiceAccountInitParameters.
func (in *StorageCredentialDatabricksGCPServiceAccountInitParameters) DeepCopy() *StorageCredentialDatabricksGCPServiceAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialDatabricksGCPServiceAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialDatabricksGCPServiceAccountObservation) DeepCopyInto(out *StorageCredentialDatabricksGCPServiceAccountObservation) {
	*out = *in
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialDatabricksGCPServiceAccountObservation.
func (in *StorageCredentialDatabricksGCPServiceAccountObservation) DeepCopy() *StorageCredentialDatabricksGCPServiceAccountObservation {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialDatabricksGCPServiceAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialDatabricksGCPServiceAccountParameters) DeepCopyInto(out *StorageCredentialDatabricksGCPServiceAccountParameters) {
	*out = *in
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialDatabricksGCPServiceAccountParameters.
func (in *StorageCredentialDatabricksGCPServiceAccountParameters) DeepCopy() *StorageCredentialDatabricksGCPServiceAccountParameters {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialDatabricksGCPServiceAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialGCPServiceAccountKeyInitParameters) DeepCopyInto(out *StorageCredentialGCPServiceAccountKeyInitParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.PrivateKeyID != nil {
		in, out := &in.PrivateKeyID, &out.PrivateKeyID
		*out = new(string)
		**out = **in
	}
	out.PrivateKeySecretRef = in.PrivateKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialGCPServiceAccountKeyInitParameters.
func (in *StorageCredentialGCPServiceAccountKeyInitParameters) DeepCopy() *StorageCredentialGCPServiceAccountKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialGCPServiceAccountKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialGCPServiceAccountKeyObservation) DeepCopyInto(out *StorageCredentialGCPServiceAccountKeyObservation) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.PrivateKeyID != nil {
		in, out := &in.PrivateKeyID, &out.PrivateKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialGCPServiceAccountKeyObservation.
func (in *StorageCredentialGCPServiceAccountKeyObservation) DeepCopy() *StorageCredentialGCPServiceAccountKeyObservation {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialGCPServiceAccountKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialGCPServiceAccountKeyParameters) DeepCopyInto(out *StorageCredentialGCPServiceAccountKeyParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.PrivateKeyID != nil {
		in, out := &in.PrivateKeyID, &out.PrivateKeyID
		*out = new(string)
		**out = **in
	}
	out.PrivateKeySecretRef = in.PrivateKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialGCPServiceAccountKeyParameters.
func (in *StorageCredentialGCPServiceAccountKeyParameters) DeepCopy() *StorageCredentialGCPServiceAccountKeyParameters {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialGCPServiceAccountKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialInitParameters) DeepCopyInto(out *StorageCredentialInitParameters) {
	*out = *in
	if in.AwsIAMRole != nil {
		in, out := &in.AwsIAMRole, &out.AwsIAMRole
		*out = make([]StorageCredentialAwsIAMRoleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureManagedIdentity != nil {
		in, out := &in.AzureManagedIdentity, &out.AzureManagedIdentity
		*out = make([]StorageCredentialAzureManagedIdentityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureServicePrincipal != nil {
		in, out := &in.AzureServicePrincipal, &out.AzureServicePrincipal
		*out = make([]StorageCredentialAzureServicePrincipalInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudflareAPIToken != nil {
		in, out := &in.CloudflareAPIToken, &out.CloudflareAPIToken
		*out = make([]StorageCredentialCloudflareAPITokenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DatabricksGCPServiceAccount != nil {
		in, out := &in.DatabricksGCPServiceAccount, &out.DatabricksGCPServiceAccount
		*out = make([]StorageCredentialDatabricksGCPServiceAccountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ForceUpdate != nil {
		in, out := &in.ForceUpdate, &out.ForceUpdate
		*out = new(bool)
		**out = **in
	}
	if in.GCPServiceAccountKey != nil {
		in, out := &in.GCPServiceAccountKey, &out.GCPServiceAccountKey
		*out = make([]StorageCredentialGCPServiceAccountKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SkipValidation != nil {
		in, out := &in.SkipValidation, &out.SkipValidation
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialInitParameters.
func (in *StorageCredentialInitParameters) DeepCopy() *StorageCredentialInitParameters {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialList) DeepCopyInto(out *StorageCredentialList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StorageCredential, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialList.
func (in *StorageCredentialList) DeepCopy() *StorageCredentialList {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StorageCredentialList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialObservation) DeepCopyInto(out *StorageCredentialObservation) {
	*out = *in
	if in.AwsIAMRole != nil {
		in, out := &in.AwsIAMRole, &out.AwsIAMRole
		*out = make([]StorageCredentialAwsIAMRoleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureManagedIdentity != nil {
		in, out := &in.AzureManagedIdentity, &out.AzureManagedIdentity
		*out = make([]StorageCredentialAzureManagedIdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureServicePrincipal != nil {
		in, out := &in.AzureServicePrincipal, &out.AzureServicePrincipal
		*out = make([]StorageCredentialAzureServicePrincipalObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudflareAPIToken != nil {
		in, out := &in.CloudflareAPIToken, &out.CloudflareAPIToken
		*out = make([]StorageCredentialCloudflareAPITokenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DatabricksGCPServiceAccount != nil {
		in, out := &in.DatabricksGCPServiceAccount, &out.DatabricksGCPServiceAccount
		*out = make([]StorageCredentialDatabricksGCPServiceAccountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ForceUpdate != nil {
		in, out := &in.ForceUpdate, &out.ForceUpdate
		*out = new(bool)
		**out = **in
	}
	if in.GCPServiceAccountKey != nil {
		in, out := &in.GCPServiceAccountKey, &out.GCPServiceAccountKey
		*out = make([]StorageCredentialGCPServiceAccountKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SkipValidation != nil {
		in, out := &in.SkipValidation, &out.SkipValidation
		*out = new(bool)
		**out = **in
	}
	if in.StorageCredentialID != nil {
		in, out := &in.StorageCredentialID, &out.StorageCredentialID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialObservation.
func (in *StorageCredentialObservation) DeepCopy() *StorageCredentialObservation {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialParameters) DeepCopyInto(out *StorageCredentialParameters) {
	*out = *in
	if in.AwsIAMRole != nil {
		in, out := &in.AwsIAMRole, &out.AwsIAMRole
		*out = make([]StorageCredentialAwsIAMRoleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureManagedIdentity != nil {
		in, out := &in.AzureManagedIdentity, &out.AzureManagedIdentity
		*out = make([]StorageCredentialAzureManagedIdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureServicePrincipal != nil {
		in, out := &in.AzureServicePrincipal, &out.AzureServicePrincipal
		*out = make([]StorageCredentialAzureServicePrincipalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudflareAPIToken != nil {
		in, out := &in.CloudflareAPIToken, &out.CloudflareAPIToken
		*out = make([]StorageCredentialCloudflareAPITokenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DatabricksGCPServiceAccount != nil {
		in, out := &in.DatabricksGCPServiceAccount, &out.DatabricksGCPServiceAccount
		*out = make([]StorageCredentialDatabricksGCPServiceAccountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ForceUpdate != nil {
		in, out := &in.ForceUpdate, &out.ForceUpdate
		*out = new(bool)
		**out = **in
	}
	if in.GCPServiceAccountKey != nil {
		in, out := &in.GCPServiceAccountKey, &out.GCPServiceAccountKey
		*out = make([]StorageCredentialGCPServiceAccountKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SkipValidation != nil {
		in, out := &in.SkipValidation, &out.SkipValidation
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialParameters.
func (in *StorageCredentialParameters) DeepCopy() *StorageCredentialParameters {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialSpec) DeepCopyInto(out *StorageCredentialSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialSpec.
func (in *StorageCredentialSpec) DeepCopy() *StorageCredentialSpec {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialStatus) DeepCopyInto(out *StorageCredentialStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialStatus.
func (in *StorageCredentialStatus) DeepCopy() *StorageCredentialStatus {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionsInitParameters) DeepCopyInto(out *SubscriptionsInitParameters) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionsInitParameters.
func (in *SubscriptionsInitParameters) DeepCopy() *SubscriptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubscriptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionsObservation) DeepCopyInto(out *SubscriptionsObservation) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionsObservation.
func (in *SubscriptionsObservation) DeepCopy() *SubscriptionsObservation {
	if in == nil {
		return nil
	}
	out := new(SubscriptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionsParameters) DeepCopyInto(out *SubscriptionsParameters) {
	*out = *in
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionsParameters.
func (in *SubscriptionsParameters) DeepCopy() *SubscriptionsParameters {
	if in == nil {
		return nil
	}
	out := new(SubscriptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemSchema) DeepCopyInto(out *SystemSchema) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemSchema.
func (in *SystemSchema) DeepCopy() *SystemSchema {
	if in == nil {
		return nil
	}
	out := new(SystemSchema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SystemSchema) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemSchemaInitParameters) DeepCopyInto(out *SystemSchemaInitParameters) {
	*out = *in
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemSchemaInitParameters.
func (in *SystemSchemaInitParameters) DeepCopy() *SystemSchemaInitParameters {
	if in == nil {
		return nil
	}
	out := new(SystemSchemaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemSchemaList) DeepCopyInto(out *SystemSchemaList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SystemSchema, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemSchemaList.
func (in *SystemSchemaList) DeepCopy() *SystemSchemaList {
	if in == nil {
		return nil
	}
	out := new(SystemSchemaList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SystemSchemaList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemSchemaObservation) DeepCopyInto(out *SystemSchemaObservation) {
	*out = *in
	if in.FullName != nil {
		in, out := &in.FullName, &out.FullName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemSchemaObservation.
func (in *SystemSchemaObservation) DeepCopy() *SystemSchemaObservation {
	if in == nil {
		return nil
	}
	out := new(SystemSchemaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemSchemaParameters) DeepCopyInto(out *SystemSchemaParameters) {
	*out = *in
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemSchemaParameters.
func (in *SystemSchemaParameters) DeepCopy() *SystemSchemaParameters {
	if in == nil {
		return nil
	}
	out := new(SystemSchemaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemSchemaSpec) DeepCopyInto(out *SystemSchemaSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemSchemaSpec.
func (in *SystemSchemaSpec) DeepCopy() *SystemSchemaSpec {
	if in == nil {
		return nil
	}
	out := new(SystemSchemaSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemSchemaStatus) DeepCopyInto(out *SystemSchemaStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemSchemaStatus.
func (in *SystemSchemaStatus) DeepCopy() *SystemSchemaStatus {
	if in == nil {
		return nil
	}
	out := new(SystemSchemaStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Table) DeepCopyInto(out *Table) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Table.
func (in *Table) DeepCopy() *Table {
	if in == nil {
		return nil
	}
	out := new(Table)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Table) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableColumnInitParameters) DeepCopyInto(out *TableColumnInitParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.PartitionIndex != nil {
		in, out := &in.PartitionIndex, &out.PartitionIndex
		*out = new(float64)
		**out = **in
	}
	if in.Position != nil {
		in, out := &in.Position, &out.Position
		*out = new(float64)
		**out = **in
	}
	if in.TypeIntervalType != nil {
		in, out := &in.TypeIntervalType, &out.TypeIntervalType
		*out = new(string)
		**out = **in
	}
	if in.TypeJSON != nil {
		in, out := &in.TypeJSON, &out.TypeJSON
		*out = new(string)
		**out = **in
	}
	if in.TypeName != nil {
		in, out := &in.TypeName, &out.TypeName
		*out = new(string)
		**out = **in
	}
	if in.TypePrecision != nil {
		in, out := &in.TypePrecision, &out.TypePrecision
		*out = new(float64)
		**out = **in
	}
	if in.TypeScale != nil {
		in, out := &in.TypeScale, &out.TypeScale
		*out = new(float64)
		**out = **in
	}
	if in.TypeText != nil {
		in, out := &in.TypeText, &out.TypeText
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableColumnInitParameters.
func (in *TableColumnInitParameters) DeepCopy() *TableColumnInitParameters {
	if in == nil {
		return nil
	}
	out := new(TableColumnInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableColumnObservation) DeepCopyInto(out *TableColumnObservation) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.PartitionIndex != nil {
		in, out := &in.PartitionIndex, &out.PartitionIndex
		*out = new(float64)
		**out = **in
	}
	if in.Position != nil {
		in, out := &in.Position, &out.Position
		*out = new(float64)
		**out = **in
	}
	if in.TypeIntervalType != nil {
		in, out := &in.TypeIntervalType, &out.TypeIntervalType
		*out = new(string)
		**out = **in
	}
	if in.TypeJSON != nil {
		in, out := &in.TypeJSON, &out.TypeJSON
		*out = new(string)
		**out = **in
	}
	if in.TypeName != nil {
		in, out := &in.TypeName, &out.TypeName
		*out = new(string)
		**out = **in
	}
	if in.TypePrecision != nil {
		in, out := &in.TypePrecision, &out.TypePrecision
		*out = new(float64)
		**out = **in
	}
	if in.TypeScale != nil {
		in, out := &in.TypeScale, &out.TypeScale
		*out = new(float64)
		**out = **in
	}
	if in.TypeText != nil {
		in, out := &in.TypeText, &out.TypeText
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableColumnObservation.
func (in *TableColumnObservation) DeepCopy() *TableColumnObservation {
	if in == nil {
		return nil
	}
	out := new(TableColumnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableColumnParameters) DeepCopyInto(out *TableColumnParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.PartitionIndex != nil {
		in, out := &in.PartitionIndex, &out.PartitionIndex
		*out = new(float64)
		**out = **in
	}
	if in.Position != nil {
		in, out := &in.Position, &out.Position
		*out = new(float64)
		**out = **in
	}
	if in.TypeIntervalType != nil {
		in, out := &in.TypeIntervalType, &out.TypeIntervalType
		*out = new(string)
		**out = **in
	}
	if in.TypeJSON != nil {
		in, out := &in.TypeJSON, &out.TypeJSON
		*out = new(string)
		**out = **in
	}
	if in.TypeName != nil {
		in, out := &in.TypeName, &out.TypeName
		*out = new(string)
		**out = **in
	}
	if in.TypePrecision != nil {
		in, out := &in.TypePrecision, &out.TypePrecision
		*out = new(float64)
		**out = **in
	}
	if in.TypeScale != nil {
		in, out := &in.TypeScale, &out.TypeScale
		*out = new(float64)
		**out = **in
	}
	if in.TypeText != nil {
		in, out := &in.TypeText, &out.TypeText
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableColumnParameters.
func (in *TableColumnParameters) DeepCopy() *TableColumnParameters {
	if in == nil {
		return nil
	}
	out := new(TableColumnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableConfigurationInitParameters) DeepCopyInto(out *TableConfigurationInitParameters) {
	*out = *in
	if in.PrimaryKeys != nil {
		in, out := &in.PrimaryKeys, &out.PrimaryKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SalesforceIncludeFormulaFields != nil {
		in, out := &in.SalesforceIncludeFormulaFields, &out.SalesforceIncludeFormulaFields
		*out = new(bool)
		**out = **in
	}
	if in.ScdType != nil {
		in, out := &in.ScdType, &out.ScdType
		*out = new(string)
		**out = **in
	}
	if in.SequenceBy != nil {
		in, out := &in.SequenceBy, &out.SequenceBy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableConfigurationInitParameters.
func (in *TableConfigurationInitParameters) DeepCopy() *TableConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(TableConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableConfigurationObservation) DeepCopyInto(out *TableConfigurationObservation) {
	*out = *in
	if in.PrimaryKeys != nil {
		in, out := &in.PrimaryKeys, &out.PrimaryKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SalesforceIncludeFormulaFields != nil {
		in, out := &in.SalesforceIncludeFormulaFields, &out.SalesforceIncludeFormulaFields
		*out = new(bool)
		**out = **in
	}
	if in.ScdType != nil {
		in, out := &in.ScdType, &out.ScdType
		*out = new(string)
		**out = **in
	}
	if in.SequenceBy != nil {
		in, out := &in.SequenceBy, &out.SequenceBy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableConfigurationObservation.
func (in *TableConfigurationObservation) DeepCopy() *TableConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(TableConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableConfigurationParameters) DeepCopyInto(out *TableConfigurationParameters) {
	*out = *in
	if in.PrimaryKeys != nil {
		in, out := &in.PrimaryKeys, &out.PrimaryKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SalesforceIncludeFormulaFields != nil {
		in, out := &in.SalesforceIncludeFormulaFields, &out.SalesforceIncludeFormulaFields
		*out = new(bool)
		**out = **in
	}
	if in.ScdType != nil {
		in, out := &in.ScdType, &out.ScdType
		*out = new(string)
		**out = **in
	}
	if in.SequenceBy != nil {
		in, out := &in.SequenceBy, &out.SequenceBy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableConfigurationParameters.
func (in *TableConfigurationParameters) DeepCopy() *TableConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(TableConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableInitParameters) DeepCopyInto(out *TableInitParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.MinTimeBetweenTriggersSeconds != nil {
		in, out := &in.MinTimeBetweenTriggersSeconds, &out.MinTimeBetweenTriggersSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TableNames != nil {
		in, out := &in.TableNames, &out.TableNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WaitAfterLastChangeSeconds != nil {
		in, out := &in.WaitAfterLastChangeSeconds, &out.WaitAfterLastChangeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableInitParameters.
func (in *TableInitParameters) DeepCopy() *TableInitParameters {
	if in == nil {
		return nil
	}
	out := new(TableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableInitParameters_2) DeepCopyInto(out *TableInitParameters_2) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = make([]TableColumnInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DataSourceFormat != nil {
		in, out := &in.DataSourceFormat, &out.DataSourceFormat
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.StorageCredentialName != nil {
		in, out := &in.StorageCredentialName, &out.StorageCredentialName
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
	if in.TableType != nil {
		in, out := &in.TableType, &out.TableType
		*out = new(string)
		**out = **in
	}
	if in.ViewDefinition != nil {
		in, out := &in.ViewDefinition, &out.ViewDefinition
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableInitParameters_2.
func (in *TableInitParameters_2) DeepCopy() *TableInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(TableInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableList) DeepCopyInto(out *TableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Table, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableList.
func (in *TableList) DeepCopy() *TableList {
	if in == nil {
		return nil
	}
	out := new(TableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableObservation) DeepCopyInto(out *TableObservation) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.MinTimeBetweenTriggersSeconds != nil {
		in, out := &in.MinTimeBetweenTriggersSeconds, &out.MinTimeBetweenTriggersSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TableNames != nil {
		in, out := &in.TableNames, &out.TableNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WaitAfterLastChangeSeconds != nil {
		in, out := &in.WaitAfterLastChangeSeconds, &out.WaitAfterLastChangeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableObservation.
func (in *TableObservation) DeepCopy() *TableObservation {
	if in == nil {
		return nil
	}
	out := new(TableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableObservation_2) DeepCopyInto(out *TableObservation_2) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = make([]TableColumnObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DataSourceFormat != nil {
		in, out := &in.DataSourceFormat, &out.DataSourceFormat
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.StorageCredentialName != nil {
		in, out := &in.StorageCredentialName, &out.StorageCredentialName
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
	if in.TableType != nil {
		in, out := &in.TableType, &out.TableType
		*out = new(string)
		**out = **in
	}
	if in.ViewDefinition != nil {
		in, out := &in.ViewDefinition, &out.ViewDefinition
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableObservation_2.
func (in *TableObservation_2) DeepCopy() *TableObservation_2 {
	if in == nil {
		return nil
	}
	out := new(TableObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableParameters) DeepCopyInto(out *TableParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.MinTimeBetweenTriggersSeconds != nil {
		in, out := &in.MinTimeBetweenTriggersSeconds, &out.MinTimeBetweenTriggersSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TableNames != nil {
		in, out := &in.TableNames, &out.TableNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WaitAfterLastChangeSeconds != nil {
		in, out := &in.WaitAfterLastChangeSeconds, &out.WaitAfterLastChangeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableParameters.
func (in *TableParameters) DeepCopy() *TableParameters {
	if in == nil {
		return nil
	}
	out := new(TableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableParameters_2) DeepCopyInto(out *TableParameters_2) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = make([]TableColumnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DataSourceFormat != nil {
		in, out := &in.DataSourceFormat, &out.DataSourceFormat
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.StorageCredentialName != nil {
		in, out := &in.StorageCredentialName, &out.StorageCredentialName
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
	if in.TableType != nil {
		in, out := &in.TableType, &out.TableType
		*out = new(string)
		**out = **in
	}
	if in.ViewDefinition != nil {
		in, out := &in.ViewDefinition, &out.ViewDefinition
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableParameters_2.
func (in *TableParameters_2) DeepCopy() *TableParameters_2 {
	if in == nil {
		return nil
	}
	out := new(TableParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableSpec) DeepCopyInto(out *TableSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableSpec.
func (in *TableSpec) DeepCopy() *TableSpec {
	if in == nil {
		return nil
	}
	out := new(TableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableStatus) DeepCopyInto(out *TableStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableStatus.
func (in *TableStatus) DeepCopy() *TableStatus {
	if in == nil {
		return nil
	}
	out := new(TableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableTableConfigurationInitParameters) DeepCopyInto(out *TableTableConfigurationInitParameters) {
	*out = *in
	if in.PrimaryKeys != nil {
		in, out := &in.PrimaryKeys, &out.PrimaryKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SalesforceIncludeFormulaFields != nil {
		in, out := &in.SalesforceIncludeFormulaFields, &out.SalesforceIncludeFormulaFields
		*out = new(bool)
		**out = **in
	}
	if in.ScdType != nil {
		in, out := &in.ScdType, &out.ScdType
		*out = new(string)
		**out = **in
	}
	if in.SequenceBy != nil {
		in, out := &in.SequenceBy, &out.SequenceBy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableTableConfigurationInitParameters.
func (in *TableTableConfigurationInitParameters) DeepCopy() *TableTableConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(TableTableConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableTableConfigurationObservation) DeepCopyInto(out *TableTableConfigurationObservation) {
	*out = *in
	if in.PrimaryKeys != nil {
		in, out := &in.PrimaryKeys, &out.PrimaryKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SalesforceIncludeFormulaFields != nil {
		in, out := &in.SalesforceIncludeFormulaFields, &out.SalesforceIncludeFormulaFields
		*out = new(bool)
		**out = **in
	}
	if in.ScdType != nil {
		in, out := &in.ScdType, &out.ScdType
		*out = new(string)
		**out = **in
	}
	if in.SequenceBy != nil {
		in, out := &in.SequenceBy, &out.SequenceBy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableTableConfigurationObservation.
func (in *TableTableConfigurationObservation) DeepCopy() *TableTableConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(TableTableConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableTableConfigurationParameters) DeepCopyInto(out *TableTableConfigurationParameters) {
	*out = *in
	if in.PrimaryKeys != nil {
		in, out := &in.PrimaryKeys, &out.PrimaryKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SalesforceIncludeFormulaFields != nil {
		in, out := &in.SalesforceIncludeFormulaFields, &out.SalesforceIncludeFormulaFields
		*out = new(bool)
		**out = **in
	}
	if in.ScdType != nil {
		in, out := &in.ScdType, &out.ScdType
		*out = new(string)
		**out = **in
	}
	if in.SequenceBy != nil {
		in, out := &in.SequenceBy, &out.SequenceBy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableTableConfigurationParameters.
func (in *TableTableConfigurationParameters) DeepCopy() *TableTableConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(TableTableConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableUpdateInitParameters) DeepCopyInto(out *TableUpdateInitParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.MinTimeBetweenTriggersSeconds != nil {
		in, out := &in.MinTimeBetweenTriggersSeconds, &out.MinTimeBetweenTriggersSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TableNames != nil {
		in, out := &in.TableNames, &out.TableNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WaitAfterLastChangeSeconds != nil {
		in, out := &in.WaitAfterLastChangeSeconds, &out.WaitAfterLastChangeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableUpdateInitParameters.
func (in *TableUpdateInitParameters) DeepCopy() *TableUpdateInitParameters {
	if in == nil {
		return nil
	}
	out := new(TableUpdateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableUpdateObservation) DeepCopyInto(out *TableUpdateObservation) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.MinTimeBetweenTriggersSeconds != nil {
		in, out := &in.MinTimeBetweenTriggersSeconds, &out.MinTimeBetweenTriggersSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TableNames != nil {
		in, out := &in.TableNames, &out.TableNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WaitAfterLastChangeSeconds != nil {
		in, out := &in.WaitAfterLastChangeSeconds, &out.WaitAfterLastChangeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableUpdateObservation.
func (in *TableUpdateObservation) DeepCopy() *TableUpdateObservation {
	if in == nil {
		return nil
	}
	out := new(TableUpdateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableUpdateParameters) DeepCopyInto(out *TableUpdateParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.MinTimeBetweenTriggersSeconds != nil {
		in, out := &in.MinTimeBetweenTriggersSeconds, &out.MinTimeBetweenTriggersSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TableNames != nil {
		in, out := &in.TableNames, &out.TableNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WaitAfterLastChangeSeconds != nil {
		in, out := &in.WaitAfterLastChangeSeconds, &out.WaitAfterLastChangeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableUpdateParameters.
func (in *TableUpdateParameters) DeepCopy() *TableUpdateParameters {
	if in == nil {
		return nil
	}
	out := new(TableUpdateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagsInitParameters) DeepCopyInto(out *TagsInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]TagsValueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagsInitParameters.
func (in *TagsInitParameters) DeepCopy() *TagsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TagsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagsObservation) DeepCopyInto(out *TagsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]TagsValueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagsObservation.
func (in *TagsObservation) DeepCopy() *TagsObservation {
	if in == nil {
		return nil
	}
	out := new(TagsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagsParameters) DeepCopyInto(out *TagsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]TagsValueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagsParameters.
func (in *TagsParameters) DeepCopy() *TagsParameters {
	if in == nil {
		return nil
	}
	out := new(TagsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagsValueInitParameters) DeepCopyInto(out *TagsValueInitParameters) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagsValueInitParameters.
func (in *TagsValueInitParameters) DeepCopy() *TagsValueInitParameters {
	if in == nil {
		return nil
	}
	out := new(TagsValueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagsValueObservation) DeepCopyInto(out *TagsValueObservation) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagsValueObservation.
func (in *TagsValueObservation) DeepCopy() *TagsValueObservation {
	if in == nil {
		return nil
	}
	out := new(TagsValueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagsValueParameters) DeepCopyInto(out *TagsValueParameters) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagsValueParameters.
func (in *TagsValueParameters) DeepCopy() *TagsValueParameters {
	if in == nil {
		return nil
	}
	out := new(TagsValueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetRulesInitParameters) DeepCopyInto(out *TargetRulesInitParameters) {
	*out = *in
	if in.AzurePrivateEndpointRules != nil {
		in, out := &in.AzurePrivateEndpointRules, &out.AzurePrivateEndpointRules
		*out = make([]AzurePrivateEndpointRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetRulesInitParameters.
func (in *TargetRulesInitParameters) DeepCopy() *TargetRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(TargetRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetRulesObservation) DeepCopyInto(out *TargetRulesObservation) {
	*out = *in
	if in.AzurePrivateEndpointRules != nil {
		in, out := &in.AzurePrivateEndpointRules, &out.AzurePrivateEndpointRules
		*out = make([]AzurePrivateEndpointRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetRulesObservation.
func (in *TargetRulesObservation) DeepCopy() *TargetRulesObservation {
	if in == nil {
		return nil
	}
	out := new(TargetRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetRulesParameters) DeepCopyInto(out *TargetRulesParameters) {
	*out = *in
	if in.AzurePrivateEndpointRules != nil {
		in, out := &in.AzurePrivateEndpointRules, &out.AzurePrivateEndpointRules
		*out = make([]AzurePrivateEndpointRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetRulesParameters.
func (in *TargetRulesParameters) DeepCopy() *TargetRulesParameters {
	if in == nil {
		return nil
	}
	out := new(TargetRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskConditionTaskInitParameters) DeepCopyInto(out *TaskConditionTaskInitParameters) {
	*out = *in
	if in.Left != nil {
		in, out := &in.Left, &out.Left
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Right != nil {
		in, out := &in.Right, &out.Right
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskConditionTaskInitParameters.
func (in *TaskConditionTaskInitParameters) DeepCopy() *TaskConditionTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskConditionTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskConditionTaskObservation) DeepCopyInto(out *TaskConditionTaskObservation) {
	*out = *in
	if in.Left != nil {
		in, out := &in.Left, &out.Left
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Right != nil {
		in, out := &in.Right, &out.Right
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskConditionTaskObservation.
func (in *TaskConditionTaskObservation) DeepCopy() *TaskConditionTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskConditionTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskConditionTaskParameters) DeepCopyInto(out *TaskConditionTaskParameters) {
	*out = *in
	if in.Left != nil {
		in, out := &in.Left, &out.Left
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Right != nil {
		in, out := &in.Right, &out.Right
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskConditionTaskParameters.
func (in *TaskConditionTaskParameters) DeepCopy() *TaskConditionTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskConditionTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDbtTaskInitParameters) DeepCopyInto(out *TaskDbtTaskInitParameters) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProfilesDirectory != nil {
		in, out := &in.ProfilesDirectory, &out.ProfilesDirectory
		*out = new(string)
		**out = **in
	}
	if in.ProjectDirectory != nil {
		in, out := &in.ProjectDirectory, &out.ProjectDirectory
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDbtTaskInitParameters.
func (in *TaskDbtTaskInitParameters) DeepCopy() *TaskDbtTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskDbtTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDbtTaskObservation) DeepCopyInto(out *TaskDbtTaskObservation) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProfilesDirectory != nil {
		in, out := &in.ProfilesDirectory, &out.ProfilesDirectory
		*out = new(string)
		**out = **in
	}
	if in.ProjectDirectory != nil {
		in, out := &in.ProjectDirectory, &out.ProjectDirectory
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDbtTaskObservation.
func (in *TaskDbtTaskObservation) DeepCopy() *TaskDbtTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskDbtTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDbtTaskParameters) DeepCopyInto(out *TaskDbtTaskParameters) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProfilesDirectory != nil {
		in, out := &in.ProfilesDirectory, &out.ProfilesDirectory
		*out = new(string)
		**out = **in
	}
	if in.ProjectDirectory != nil {
		in, out := &in.ProjectDirectory, &out.ProjectDirectory
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDbtTaskParameters.
func (in *TaskDbtTaskParameters) DeepCopy() *TaskDbtTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskDbtTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDependsOnInitParameters) DeepCopyInto(out *TaskDependsOnInitParameters) {
	*out = *in
	if in.Outcome != nil {
		in, out := &in.Outcome, &out.Outcome
		*out = new(string)
		**out = **in
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDependsOnInitParameters.
func (in *TaskDependsOnInitParameters) DeepCopy() *TaskDependsOnInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskDependsOnInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDependsOnObservation) DeepCopyInto(out *TaskDependsOnObservation) {
	*out = *in
	if in.Outcome != nil {
		in, out := &in.Outcome, &out.Outcome
		*out = new(string)
		**out = **in
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDependsOnObservation.
func (in *TaskDependsOnObservation) DeepCopy() *TaskDependsOnObservation {
	if in == nil {
		return nil
	}
	out := new(TaskDependsOnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDependsOnParameters) DeepCopyInto(out *TaskDependsOnParameters) {
	*out = *in
	if in.Outcome != nil {
		in, out := &in.Outcome, &out.Outcome
		*out = new(string)
		**out = **in
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDependsOnParameters.
func (in *TaskDependsOnParameters) DeepCopy() *TaskDependsOnParameters {
	if in == nil {
		return nil
	}
	out := new(TaskDependsOnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskEmailNotificationsInitParameters) DeepCopyInto(out *TaskEmailNotificationsInitParameters) {
	*out = *in
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskEmailNotificationsInitParameters.
func (in *TaskEmailNotificationsInitParameters) DeepCopy() *TaskEmailNotificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskEmailNotificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskEmailNotificationsObservation) DeepCopyInto(out *TaskEmailNotificationsObservation) {
	*out = *in
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskEmailNotificationsObservation.
func (in *TaskEmailNotificationsObservation) DeepCopy() *TaskEmailNotificationsObservation {
	if in == nil {
		return nil
	}
	out := new(TaskEmailNotificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskEmailNotificationsParameters) DeepCopyInto(out *TaskEmailNotificationsParameters) {
	*out = *in
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskEmailNotificationsParameters.
func (in *TaskEmailNotificationsParameters) DeepCopy() *TaskEmailNotificationsParameters {
	if in == nil {
		return nil
	}
	out := new(TaskEmailNotificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskHealthInitParameters) DeepCopyInto(out *TaskHealthInitParameters) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]HealthRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskHealthInitParameters.
func (in *TaskHealthInitParameters) DeepCopy() *TaskHealthInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskHealthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskHealthObservation) DeepCopyInto(out *TaskHealthObservation) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]HealthRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskHealthObservation.
func (in *TaskHealthObservation) DeepCopy() *TaskHealthObservation {
	if in == nil {
		return nil
	}
	out := new(TaskHealthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskHealthParameters) DeepCopyInto(out *TaskHealthParameters) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]HealthRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskHealthParameters.
func (in *TaskHealthParameters) DeepCopy() *TaskHealthParameters {
	if in == nil {
		return nil
	}
	out := new(TaskHealthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskHealthRulesInitParameters) DeepCopyInto(out *TaskHealthRulesInitParameters) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskHealthRulesInitParameters.
func (in *TaskHealthRulesInitParameters) DeepCopy() *TaskHealthRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskHealthRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskHealthRulesObservation) DeepCopyInto(out *TaskHealthRulesObservation) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskHealthRulesObservation.
func (in *TaskHealthRulesObservation) DeepCopy() *TaskHealthRulesObservation {
	if in == nil {
		return nil
	}
	out := new(TaskHealthRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskHealthRulesParameters) DeepCopyInto(out *TaskHealthRulesParameters) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskHealthRulesParameters.
func (in *TaskHealthRulesParameters) DeepCopy() *TaskHealthRulesParameters {
	if in == nil {
		return nil
	}
	out := new(TaskHealthRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskInitParameters) DeepCopyInto(out *TaskInitParameters) {
	*out = *in
	if in.ConditionTask != nil {
		in, out := &in.ConditionTask, &out.ConditionTask
		*out = make([]ConditionTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DbtTask != nil {
		in, out := &in.DbtTask, &out.DbtTask
		*out = make([]TaskDbtTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DependsOn != nil {
		in, out := &in.DependsOn, &out.DependsOn
		*out = make([]DependsOnInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableAutoOptimization != nil {
		in, out := &in.DisableAutoOptimization, &out.DisableAutoOptimization
		*out = new(bool)
		**out = **in
	}
	if in.EmailNotifications != nil {
		in, out := &in.EmailNotifications, &out.EmailNotifications
		*out = make([]TaskEmailNotificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvironmentKey != nil {
		in, out := &in.EnvironmentKey, &out.EnvironmentKey
		*out = new(string)
		**out = **in
	}
	if in.ExistingClusterID != nil {
		in, out := &in.ExistingClusterID, &out.ExistingClusterID
		*out = new(string)
		**out = **in
	}
	if in.ForEachTask != nil {
		in, out := &in.ForEachTask, &out.ForEachTask
		*out = make([]ForEachTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]JobTaskHealthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobClusterKey != nil {
		in, out := &in.JobClusterKey, &out.JobClusterKey
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]JobTaskLibraryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MinRetryIntervalMillis != nil {
		in, out := &in.MinRetryIntervalMillis, &out.MinRetryIntervalMillis
		*out = new(float64)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]JobTaskNewClusterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotebookTask != nil {
		in, out := &in.NotebookTask, &out.NotebookTask
		*out = make([]JobTaskNotebookTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]JobTaskNotificationSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PipelineTask != nil {
		in, out := &in.PipelineTask, &out.PipelineTask
		*out = make([]JobTaskPipelineTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonWheelTask != nil {
		in, out := &in.PythonWheelTask, &out.PythonWheelTask
		*out = make([]JobTaskPythonWheelTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryOnTimeout != nil {
		in, out := &in.RetryOnTimeout, &out.RetryOnTimeout
		*out = new(bool)
		**out = **in
	}
	if in.RunIf != nil {
		in, out := &in.RunIf, &out.RunIf
		*out = new(string)
		**out = **in
	}
	if in.RunJobTask != nil {
		in, out := &in.RunJobTask, &out.RunJobTask
		*out = make([]JobTaskRunJobTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SQLTask != nil {
		in, out := &in.SQLTask, &out.SQLTask
		*out = make([]TaskSQLTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJarTask != nil {
		in, out := &in.SparkJarTask, &out.SparkJarTask
		*out = make([]JobTaskSparkJarTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkPythonTask != nil {
		in, out := &in.SparkPythonTask, &out.SparkPythonTask
		*out = make([]JobTaskSparkPythonTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSubmitTask != nil {
		in, out := &in.SparkSubmitTask, &out.SparkSubmitTask
		*out = make([]JobTaskSparkSubmitTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.WebhookNotifications != nil {
		in, out := &in.WebhookNotifications, &out.WebhookNotifications
		*out = make([]TaskWebhookNotificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskInitParameters.
func (in *TaskInitParameters) DeepCopy() *TaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryCranInitParameters) DeepCopyInto(out *TaskLibraryCranInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryCranInitParameters.
func (in *TaskLibraryCranInitParameters) DeepCopy() *TaskLibraryCranInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryCranInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryCranObservation) DeepCopyInto(out *TaskLibraryCranObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryCranObservation.
func (in *TaskLibraryCranObservation) DeepCopy() *TaskLibraryCranObservation {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryCranObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryCranParameters) DeepCopyInto(out *TaskLibraryCranParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryCranParameters.
func (in *TaskLibraryCranParameters) DeepCopy() *TaskLibraryCranParameters {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryCranParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryInitParameters) DeepCopyInto(out *TaskLibraryInitParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]TaskLibraryCranInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]TaskLibraryMavenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]TaskLibraryPypiInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryInitParameters.
func (in *TaskLibraryInitParameters) DeepCopy() *TaskLibraryInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryMavenInitParameters) DeepCopyInto(out *TaskLibraryMavenInitParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryMavenInitParameters.
func (in *TaskLibraryMavenInitParameters) DeepCopy() *TaskLibraryMavenInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryMavenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryMavenObservation) DeepCopyInto(out *TaskLibraryMavenObservation) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryMavenObservation.
func (in *TaskLibraryMavenObservation) DeepCopy() *TaskLibraryMavenObservation {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryMavenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryMavenParameters) DeepCopyInto(out *TaskLibraryMavenParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryMavenParameters.
func (in *TaskLibraryMavenParameters) DeepCopy() *TaskLibraryMavenParameters {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryMavenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryObservation) DeepCopyInto(out *TaskLibraryObservation) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]TaskLibraryCranObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]TaskLibraryMavenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]TaskLibraryPypiObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryObservation.
func (in *TaskLibraryObservation) DeepCopy() *TaskLibraryObservation {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryParameters) DeepCopyInto(out *TaskLibraryParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]TaskLibraryCranParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]TaskLibraryMavenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]TaskLibraryPypiParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryParameters.
func (in *TaskLibraryParameters) DeepCopy() *TaskLibraryParameters {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryPypiInitParameters) DeepCopyInto(out *TaskLibraryPypiInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryPypiInitParameters.
func (in *TaskLibraryPypiInitParameters) DeepCopy() *TaskLibraryPypiInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryPypiInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryPypiObservation) DeepCopyInto(out *TaskLibraryPypiObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryPypiObservation.
func (in *TaskLibraryPypiObservation) DeepCopy() *TaskLibraryPypiObservation {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryPypiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLibraryPypiParameters) DeepCopyInto(out *TaskLibraryPypiParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLibraryPypiParameters.
func (in *TaskLibraryPypiParameters) DeepCopy() *TaskLibraryPypiParameters {
	if in == nil {
		return nil
	}
	out := new(TaskLibraryPypiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAutoscaleInitParameters) DeepCopyInto(out *TaskNewClusterAutoscaleInitParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAutoscaleInitParameters.
func (in *TaskNewClusterAutoscaleInitParameters) DeepCopy() *TaskNewClusterAutoscaleInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAutoscaleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAutoscaleObservation) DeepCopyInto(out *TaskNewClusterAutoscaleObservation) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAutoscaleObservation.
func (in *TaskNewClusterAutoscaleObservation) DeepCopy() *TaskNewClusterAutoscaleObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAutoscaleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAutoscaleParameters) DeepCopyInto(out *TaskNewClusterAutoscaleParameters) {
	*out = *in
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAutoscaleParameters.
func (in *TaskNewClusterAutoscaleParameters) DeepCopy() *TaskNewClusterAutoscaleParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAutoscaleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAwsAttributesInitParameters) DeepCopyInto(out *TaskNewClusterAwsAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAwsAttributesInitParameters.
func (in *TaskNewClusterAwsAttributesInitParameters) DeepCopy() *TaskNewClusterAwsAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAwsAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAwsAttributesObservation) DeepCopyInto(out *TaskNewClusterAwsAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAwsAttributesObservation.
func (in *TaskNewClusterAwsAttributesObservation) DeepCopy() *TaskNewClusterAwsAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAwsAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAwsAttributesParameters) DeepCopyInto(out *TaskNewClusterAwsAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.EBSVolumeCount != nil {
		in, out := &in.EBSVolumeCount, &out.EBSVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeIops != nil {
		in, out := &in.EBSVolumeIops, &out.EBSVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeSize != nil {
		in, out := &in.EBSVolumeSize, &out.EBSVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeThroughput != nil {
		in, out := &in.EBSVolumeThroughput, &out.EBSVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.SpotBidPricePercent != nil {
		in, out := &in.SpotBidPricePercent, &out.SpotBidPricePercent
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAwsAttributesParameters.
func (in *TaskNewClusterAwsAttributesParameters) DeepCopy() *TaskNewClusterAwsAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAwsAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAzureAttributesInitParameters) DeepCopyInto(out *TaskNewClusterAzureAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]TaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAzureAttributesInitParameters.
func (in *TaskNewClusterAzureAttributesInitParameters) DeepCopy() *TaskNewClusterAzureAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAzureAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters) DeepCopyInto(out *TaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters.
func (in *TaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters) DeepCopy() *TaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAzureAttributesLogAnalyticsInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAzureAttributesLogAnalyticsInfoObservation) DeepCopyInto(out *TaskNewClusterAzureAttributesLogAnalyticsInfoObservation) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAzureAttributesLogAnalyticsInfoObservation.
func (in *TaskNewClusterAzureAttributesLogAnalyticsInfoObservation) DeepCopy() *TaskNewClusterAzureAttributesLogAnalyticsInfoObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAzureAttributesLogAnalyticsInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAzureAttributesLogAnalyticsInfoParameters) DeepCopyInto(out *TaskNewClusterAzureAttributesLogAnalyticsInfoParameters) {
	*out = *in
	if in.LogAnalyticsPrimaryKey != nil {
		in, out := &in.LogAnalyticsPrimaryKey, &out.LogAnalyticsPrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAzureAttributesLogAnalyticsInfoParameters.
func (in *TaskNewClusterAzureAttributesLogAnalyticsInfoParameters) DeepCopy() *TaskNewClusterAzureAttributesLogAnalyticsInfoParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAzureAttributesLogAnalyticsInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAzureAttributesObservation) DeepCopyInto(out *TaskNewClusterAzureAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]TaskNewClusterAzureAttributesLogAnalyticsInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAzureAttributesObservation.
func (in *TaskNewClusterAzureAttributesObservation) DeepCopy() *TaskNewClusterAzureAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAzureAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterAzureAttributesParameters) DeepCopyInto(out *TaskNewClusterAzureAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.FirstOnDemand != nil {
		in, out := &in.FirstOnDemand, &out.FirstOnDemand
		*out = new(float64)
		**out = **in
	}
	if in.LogAnalyticsInfo != nil {
		in, out := &in.LogAnalyticsInfo, &out.LogAnalyticsInfo
		*out = make([]TaskNewClusterAzureAttributesLogAnalyticsInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotBidMaxPrice != nil {
		in, out := &in.SpotBidMaxPrice, &out.SpotBidMaxPrice
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterAzureAttributesParameters.
func (in *TaskNewClusterAzureAttributesParameters) DeepCopy() *TaskNewClusterAzureAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterAzureAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterLogConfDbfsInitParameters) DeepCopyInto(out *TaskNewClusterClusterLogConfDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterLogConfDbfsInitParameters.
func (in *TaskNewClusterClusterLogConfDbfsInitParameters) DeepCopy() *TaskNewClusterClusterLogConfDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterLogConfDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterLogConfDbfsObservation) DeepCopyInto(out *TaskNewClusterClusterLogConfDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterLogConfDbfsObservation.
func (in *TaskNewClusterClusterLogConfDbfsObservation) DeepCopy() *TaskNewClusterClusterLogConfDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterLogConfDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterLogConfDbfsParameters) DeepCopyInto(out *TaskNewClusterClusterLogConfDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterLogConfDbfsParameters.
func (in *TaskNewClusterClusterLogConfDbfsParameters) DeepCopy() *TaskNewClusterClusterLogConfDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterLogConfDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterLogConfInitParameters) DeepCopyInto(out *TaskNewClusterClusterLogConfInitParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]TaskNewClusterClusterLogConfDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]TaskNewClusterClusterLogConfS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterLogConfInitParameters.
func (in *TaskNewClusterClusterLogConfInitParameters) DeepCopy() *TaskNewClusterClusterLogConfInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterLogConfInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterLogConfObservation) DeepCopyInto(out *TaskNewClusterClusterLogConfObservation) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]TaskNewClusterClusterLogConfDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]TaskNewClusterClusterLogConfS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterLogConfObservation.
func (in *TaskNewClusterClusterLogConfObservation) DeepCopy() *TaskNewClusterClusterLogConfObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterLogConfObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterLogConfParameters) DeepCopyInto(out *TaskNewClusterClusterLogConfParameters) {
	*out = *in
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]TaskNewClusterClusterLogConfDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]TaskNewClusterClusterLogConfS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterLogConfParameters.
func (in *TaskNewClusterClusterLogConfParameters) DeepCopy() *TaskNewClusterClusterLogConfParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterLogConfParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterLogConfS3InitParameters) DeepCopyInto(out *TaskNewClusterClusterLogConfS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterLogConfS3InitParameters.
func (in *TaskNewClusterClusterLogConfS3InitParameters) DeepCopy() *TaskNewClusterClusterLogConfS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterLogConfS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterLogConfS3Observation) DeepCopyInto(out *TaskNewClusterClusterLogConfS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterLogConfS3Observation.
func (in *TaskNewClusterClusterLogConfS3Observation) DeepCopy() *TaskNewClusterClusterLogConfS3Observation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterLogConfS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterLogConfS3Parameters) DeepCopyInto(out *TaskNewClusterClusterLogConfS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterLogConfS3Parameters.
func (in *TaskNewClusterClusterLogConfS3Parameters) DeepCopy() *TaskNewClusterClusterLogConfS3Parameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterLogConfS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterMountInfoInitParameters) DeepCopyInto(out *TaskNewClusterClusterMountInfoInitParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]TaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterMountInfoInitParameters.
func (in *TaskNewClusterClusterMountInfoInitParameters) DeepCopy() *TaskNewClusterClusterMountInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterMountInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters) DeepCopyInto(out *TaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters.
func (in *TaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters) DeepCopy() *TaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterMountInfoNetworkFilesystemInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation) DeepCopyInto(out *TaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation.
func (in *TaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation) DeepCopy() *TaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters) DeepCopyInto(out *TaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = new(string)
		**out = **in
	}
	if in.ServerAddress != nil {
		in, out := &in.ServerAddress, &out.ServerAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters.
func (in *TaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters) DeepCopy() *TaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterMountInfoObservation) DeepCopyInto(out *TaskNewClusterClusterMountInfoObservation) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]TaskNewClusterClusterMountInfoNetworkFilesystemInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterMountInfoObservation.
func (in *TaskNewClusterClusterMountInfoObservation) DeepCopy() *TaskNewClusterClusterMountInfoObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterMountInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterClusterMountInfoParameters) DeepCopyInto(out *TaskNewClusterClusterMountInfoParameters) {
	*out = *in
	if in.LocalMountDirPath != nil {
		in, out := &in.LocalMountDirPath, &out.LocalMountDirPath
		*out = new(string)
		**out = **in
	}
	if in.NetworkFilesystemInfo != nil {
		in, out := &in.NetworkFilesystemInfo, &out.NetworkFilesystemInfo
		*out = make([]TaskNewClusterClusterMountInfoNetworkFilesystemInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteMountDirPath != nil {
		in, out := &in.RemoteMountDirPath, &out.RemoteMountDirPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterClusterMountInfoParameters.
func (in *TaskNewClusterClusterMountInfoParameters) DeepCopy() *TaskNewClusterClusterMountInfoParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterClusterMountInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterDockerImageBasicAuthInitParameters) DeepCopyInto(out *TaskNewClusterDockerImageBasicAuthInitParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterDockerImageBasicAuthInitParameters.
func (in *TaskNewClusterDockerImageBasicAuthInitParameters) DeepCopy() *TaskNewClusterDockerImageBasicAuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterDockerImageBasicAuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterDockerImageBasicAuthObservation) DeepCopyInto(out *TaskNewClusterDockerImageBasicAuthObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterDockerImageBasicAuthObservation.
func (in *TaskNewClusterDockerImageBasicAuthObservation) DeepCopy() *TaskNewClusterDockerImageBasicAuthObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterDockerImageBasicAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterDockerImageBasicAuthParameters) DeepCopyInto(out *TaskNewClusterDockerImageBasicAuthParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterDockerImageBasicAuthParameters.
func (in *TaskNewClusterDockerImageBasicAuthParameters) DeepCopy() *TaskNewClusterDockerImageBasicAuthParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterDockerImageBasicAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterDockerImageInitParameters) DeepCopyInto(out *TaskNewClusterDockerImageInitParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]TaskNewClusterDockerImageBasicAuthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterDockerImageInitParameters.
func (in *TaskNewClusterDockerImageInitParameters) DeepCopy() *TaskNewClusterDockerImageInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterDockerImageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterDockerImageObservation) DeepCopyInto(out *TaskNewClusterDockerImageObservation) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]TaskNewClusterDockerImageBasicAuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterDockerImageObservation.
func (in *TaskNewClusterDockerImageObservation) DeepCopy() *TaskNewClusterDockerImageObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterDockerImageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterDockerImageParameters) DeepCopyInto(out *TaskNewClusterDockerImageParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]TaskNewClusterDockerImageBasicAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterDockerImageParameters.
func (in *TaskNewClusterDockerImageParameters) DeepCopy() *TaskNewClusterDockerImageParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterDockerImageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterGCPAttributesInitParameters) DeepCopyInto(out *TaskNewClusterGCPAttributesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterGCPAttributesInitParameters.
func (in *TaskNewClusterGCPAttributesInitParameters) DeepCopy() *TaskNewClusterGCPAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterGCPAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterGCPAttributesObservation) DeepCopyInto(out *TaskNewClusterGCPAttributesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterGCPAttributesObservation.
func (in *TaskNewClusterGCPAttributesObservation) DeepCopy() *TaskNewClusterGCPAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterGCPAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterGCPAttributesParameters) DeepCopyInto(out *TaskNewClusterGCPAttributesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSize != nil {
		in, out := &in.BootDiskSize, &out.BootDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.GoogleServiceAccount != nil {
		in, out := &in.GoogleServiceAccount, &out.GoogleServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.UsePreemptibleExecutors != nil {
		in, out := &in.UsePreemptibleExecutors, &out.UsePreemptibleExecutors
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterGCPAttributesParameters.
func (in *TaskNewClusterGCPAttributesParameters) DeepCopy() *TaskNewClusterGCPAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterGCPAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitParameters) DeepCopyInto(out *TaskNewClusterInitParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]TaskNewClusterAutoscaleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]TaskNewClusterAwsAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]TaskNewClusterAzureAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]TaskNewClusterClusterLogConfInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]TaskNewClusterClusterMountInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]TaskNewClusterDockerImageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]TaskNewClusterGCPAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]TaskNewClusterInitScriptsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]TaskNewClusterLibraryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]TaskNewClusterWorkloadTypeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitParameters.
func (in *TaskNewClusterInitParameters) DeepCopy() *TaskNewClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsAbfssInitParameters) DeepCopyInto(out *TaskNewClusterInitScriptsAbfssInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsAbfssInitParameters.
func (in *TaskNewClusterInitScriptsAbfssInitParameters) DeepCopy() *TaskNewClusterInitScriptsAbfssInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsAbfssInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsAbfssObservation) DeepCopyInto(out *TaskNewClusterInitScriptsAbfssObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsAbfssObservation.
func (in *TaskNewClusterInitScriptsAbfssObservation) DeepCopy() *TaskNewClusterInitScriptsAbfssObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsAbfssObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsAbfssParameters) DeepCopyInto(out *TaskNewClusterInitScriptsAbfssParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsAbfssParameters.
func (in *TaskNewClusterInitScriptsAbfssParameters) DeepCopy() *TaskNewClusterInitScriptsAbfssParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsAbfssParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsDbfsInitParameters) DeepCopyInto(out *TaskNewClusterInitScriptsDbfsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsDbfsInitParameters.
func (in *TaskNewClusterInitScriptsDbfsInitParameters) DeepCopy() *TaskNewClusterInitScriptsDbfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsDbfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsDbfsObservation) DeepCopyInto(out *TaskNewClusterInitScriptsDbfsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsDbfsObservation.
func (in *TaskNewClusterInitScriptsDbfsObservation) DeepCopy() *TaskNewClusterInitScriptsDbfsObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsDbfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsDbfsParameters) DeepCopyInto(out *TaskNewClusterInitScriptsDbfsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsDbfsParameters.
func (in *TaskNewClusterInitScriptsDbfsParameters) DeepCopy() *TaskNewClusterInitScriptsDbfsParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsDbfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsFileInitParameters) DeepCopyInto(out *TaskNewClusterInitScriptsFileInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsFileInitParameters.
func (in *TaskNewClusterInitScriptsFileInitParameters) DeepCopy() *TaskNewClusterInitScriptsFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsFileObservation) DeepCopyInto(out *TaskNewClusterInitScriptsFileObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsFileObservation.
func (in *TaskNewClusterInitScriptsFileObservation) DeepCopy() *TaskNewClusterInitScriptsFileObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsFileParameters) DeepCopyInto(out *TaskNewClusterInitScriptsFileParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsFileParameters.
func (in *TaskNewClusterInitScriptsFileParameters) DeepCopy() *TaskNewClusterInitScriptsFileParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsGcsInitParameters) DeepCopyInto(out *TaskNewClusterInitScriptsGcsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsGcsInitParameters.
func (in *TaskNewClusterInitScriptsGcsInitParameters) DeepCopy() *TaskNewClusterInitScriptsGcsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsGcsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsGcsObservation) DeepCopyInto(out *TaskNewClusterInitScriptsGcsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsGcsObservation.
func (in *TaskNewClusterInitScriptsGcsObservation) DeepCopy() *TaskNewClusterInitScriptsGcsObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsGcsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsGcsParameters) DeepCopyInto(out *TaskNewClusterInitScriptsGcsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsGcsParameters.
func (in *TaskNewClusterInitScriptsGcsParameters) DeepCopy() *TaskNewClusterInitScriptsGcsParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsGcsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsInitParameters) DeepCopyInto(out *TaskNewClusterInitScriptsInitParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]TaskNewClusterInitScriptsAbfssInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]TaskNewClusterInitScriptsDbfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]TaskNewClusterInitScriptsFileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]TaskNewClusterInitScriptsGcsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]TaskNewClusterInitScriptsS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]TaskNewClusterInitScriptsVolumesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]TaskNewClusterInitScriptsWorkspaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsInitParameters.
func (in *TaskNewClusterInitScriptsInitParameters) DeepCopy() *TaskNewClusterInitScriptsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsObservation) DeepCopyInto(out *TaskNewClusterInitScriptsObservation) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]TaskNewClusterInitScriptsAbfssObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]TaskNewClusterInitScriptsDbfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]TaskNewClusterInitScriptsFileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]TaskNewClusterInitScriptsGcsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]TaskNewClusterInitScriptsS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]TaskNewClusterInitScriptsVolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]TaskNewClusterInitScriptsWorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsObservation.
func (in *TaskNewClusterInitScriptsObservation) DeepCopy() *TaskNewClusterInitScriptsObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsParameters) DeepCopyInto(out *TaskNewClusterInitScriptsParameters) {
	*out = *in
	if in.Abfss != nil {
		in, out := &in.Abfss, &out.Abfss
		*out = make([]TaskNewClusterInitScriptsAbfssParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dbfs != nil {
		in, out := &in.Dbfs, &out.Dbfs
		*out = make([]TaskNewClusterInitScriptsDbfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]TaskNewClusterInitScriptsFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]TaskNewClusterInitScriptsGcsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]TaskNewClusterInitScriptsS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]TaskNewClusterInitScriptsVolumesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]TaskNewClusterInitScriptsWorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsParameters.
func (in *TaskNewClusterInitScriptsParameters) DeepCopy() *TaskNewClusterInitScriptsParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsS3InitParameters) DeepCopyInto(out *TaskNewClusterInitScriptsS3InitParameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsS3InitParameters.
func (in *TaskNewClusterInitScriptsS3InitParameters) DeepCopy() *TaskNewClusterInitScriptsS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsS3Observation) DeepCopyInto(out *TaskNewClusterInitScriptsS3Observation) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsS3Observation.
func (in *TaskNewClusterInitScriptsS3Observation) DeepCopy() *TaskNewClusterInitScriptsS3Observation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsS3Parameters) DeepCopyInto(out *TaskNewClusterInitScriptsS3Parameters) {
	*out = *in
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.EnableEncryption != nil {
		in, out := &in.EnableEncryption, &out.EnableEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsS3Parameters.
func (in *TaskNewClusterInitScriptsS3Parameters) DeepCopy() *TaskNewClusterInitScriptsS3Parameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsVolumesInitParameters) DeepCopyInto(out *TaskNewClusterInitScriptsVolumesInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsVolumesInitParameters.
func (in *TaskNewClusterInitScriptsVolumesInitParameters) DeepCopy() *TaskNewClusterInitScriptsVolumesInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsVolumesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsVolumesObservation) DeepCopyInto(out *TaskNewClusterInitScriptsVolumesObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsVolumesObservation.
func (in *TaskNewClusterInitScriptsVolumesObservation) DeepCopy() *TaskNewClusterInitScriptsVolumesObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsVolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsVolumesParameters) DeepCopyInto(out *TaskNewClusterInitScriptsVolumesParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsVolumesParameters.
func (in *TaskNewClusterInitScriptsVolumesParameters) DeepCopy() *TaskNewClusterInitScriptsVolumesParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsVolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsWorkspaceInitParameters) DeepCopyInto(out *TaskNewClusterInitScriptsWorkspaceInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsWorkspaceInitParameters.
func (in *TaskNewClusterInitScriptsWorkspaceInitParameters) DeepCopy() *TaskNewClusterInitScriptsWorkspaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsWorkspaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsWorkspaceObservation) DeepCopyInto(out *TaskNewClusterInitScriptsWorkspaceObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsWorkspaceObservation.
func (in *TaskNewClusterInitScriptsWorkspaceObservation) DeepCopy() *TaskNewClusterInitScriptsWorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsWorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterInitScriptsWorkspaceParameters) DeepCopyInto(out *TaskNewClusterInitScriptsWorkspaceParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterInitScriptsWorkspaceParameters.
func (in *TaskNewClusterInitScriptsWorkspaceParameters) DeepCopy() *TaskNewClusterInitScriptsWorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterInitScriptsWorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterLibraryCranInitParameters) DeepCopyInto(out *TaskNewClusterLibraryCranInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterLibraryCranInitParameters.
func (in *TaskNewClusterLibraryCranInitParameters) DeepCopy() *TaskNewClusterLibraryCranInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterLibraryCranInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterLibraryCranObservation) DeepCopyInto(out *TaskNewClusterLibraryCranObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterLibraryCranObservation.
func (in *TaskNewClusterLibraryCranObservation) DeepCopy() *TaskNewClusterLibraryCranObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterLibraryCranObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterLibraryCranParameters) DeepCopyInto(out *TaskNewClusterLibraryCranParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterLibraryCranParameters.
func (in *TaskNewClusterLibraryCranParameters) DeepCopy() *TaskNewClusterLibraryCranParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterLibraryCranParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterLibraryInitParameters) DeepCopyInto(out *TaskNewClusterLibraryInitParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]TaskNewClusterLibraryCranInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]TaskNewClusterLibraryMavenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]TaskNewClusterLibraryPypiInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterLibraryInitParameters.
func (in *TaskNewClusterLibraryInitParameters) DeepCopy() *TaskNewClusterLibraryInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterLibraryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterLibraryMavenInitParameters) DeepCopyInto(out *TaskNewClusterLibraryMavenInitParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterLibraryMavenInitParameters.
func (in *TaskNewClusterLibraryMavenInitParameters) DeepCopy() *TaskNewClusterLibraryMavenInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterLibraryMavenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterLibraryMavenObservation) DeepCopyInto(out *TaskNewClusterLibraryMavenObservation) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterLibraryMavenObservation.
func (in *TaskNewClusterLibraryMavenObservation) DeepCopy() *TaskNewClusterLibraryMavenObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterLibraryMavenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterLibraryMavenParameters) DeepCopyInto(out *TaskNewClusterLibraryMavenParameters) {
	*out = *in
	if in.Coordinates != nil {
		in, out := &in.Coordinates, &out.Coordinates
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterLibraryMavenParameters.
func (in *TaskNewClusterLibraryMavenParameters) DeepCopy() *TaskNewClusterLibraryMavenParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterLibraryMavenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterLibraryObservation) DeepCopyInto(out *TaskNewClusterLibraryObservation) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]TaskNewClusterLibraryCranObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]TaskNewClusterLibraryMavenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]TaskNewClusterLibraryPypiObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterLibraryObservation.
func (in *TaskNewClusterLibraryObservation) DeepCopy() *TaskNewClusterLibraryObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterLibraryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterLibraryParameters) DeepCopyInto(out *TaskNewClusterLibraryParameters) {
	*out = *in
	if in.Cran != nil {
		in, out := &in.Cran, &out.Cran
		*out = make([]TaskNewClusterLibraryCranParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egg != nil {
		in, out := &in.Egg, &out.Egg
		*out = new(string)
		**out = **in
	}
	if in.Jar != nil {
		in, out := &in.Jar, &out.Jar
		*out = new(string)
		**out = **in
	}
	if in.Maven != nil {
		in, out := &in.Maven, &out.Maven
		*out = make([]TaskNewClusterLibraryMavenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pypi != nil {
		in, out := &in.Pypi, &out.Pypi
		*out = make([]TaskNewClusterLibraryPypiParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.Whl != nil {
		in, out := &in.Whl, &out.Whl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterLibraryParameters.
func (in *TaskNewClusterLibraryParameters) DeepCopy() *TaskNewClusterLibraryParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterLibraryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterLibraryPypiInitParameters) DeepCopyInto(out *TaskNewClusterLibraryPypiInitParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterLibraryPypiInitParameters.
func (in *TaskNewClusterLibraryPypiInitParameters) DeepCopy() *TaskNewClusterLibraryPypiInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterLibraryPypiInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterLibraryPypiObservation) DeepCopyInto(out *TaskNewClusterLibraryPypiObservation) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterLibraryPypiObservation.
func (in *TaskNewClusterLibraryPypiObservation) DeepCopy() *TaskNewClusterLibraryPypiObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterLibraryPypiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterLibraryPypiParameters) DeepCopyInto(out *TaskNewClusterLibraryPypiParameters) {
	*out = *in
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(string)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterLibraryPypiParameters.
func (in *TaskNewClusterLibraryPypiParameters) DeepCopy() *TaskNewClusterLibraryPypiParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterLibraryPypiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterObservation) DeepCopyInto(out *TaskNewClusterObservation) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]TaskNewClusterAutoscaleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]TaskNewClusterAwsAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]TaskNewClusterAzureAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]TaskNewClusterClusterLogConfObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]TaskNewClusterClusterMountInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]TaskNewClusterDockerImageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]TaskNewClusterGCPAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]TaskNewClusterInitScriptsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]TaskNewClusterLibraryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]TaskNewClusterWorkloadTypeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterObservation.
func (in *TaskNewClusterObservation) DeepCopy() *TaskNewClusterObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterParameters) DeepCopyInto(out *TaskNewClusterParameters) {
	*out = *in
	if in.ApplyPolicyDefaultValues != nil {
		in, out := &in.ApplyPolicyDefaultValues, &out.ApplyPolicyDefaultValues
		*out = new(bool)
		**out = **in
	}
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]TaskNewClusterAutoscaleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsAttributes != nil {
		in, out := &in.AwsAttributes, &out.AwsAttributes
		*out = make([]TaskNewClusterAwsAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAttributes != nil {
		in, out := &in.AzureAttributes, &out.AzureAttributes
		*out = make([]TaskNewClusterAzureAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterLogConf != nil {
		in, out := &in.ClusterLogConf, &out.ClusterLogConf
		*out = make([]TaskNewClusterClusterLogConfParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMountInfo != nil {
		in, out := &in.ClusterMountInfo, &out.ClusterMountInfo
		*out = make([]TaskNewClusterClusterMountInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataSecurityMode != nil {
		in, out := &in.DataSecurityMode, &out.DataSecurityMode
		*out = new(string)
		**out = **in
	}
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = make([]TaskNewClusterDockerImageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverInstancePoolID != nil {
		in, out := &in.DriverInstancePoolID, &out.DriverInstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.DriverNodeTypeID != nil {
		in, out := &in.DriverNodeTypeID, &out.DriverNodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.EnableElasticDisk != nil {
		in, out := &in.EnableElasticDisk, &out.EnableElasticDisk
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalDiskEncryption != nil {
		in, out := &in.EnableLocalDiskEncryption, &out.EnableLocalDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.GCPAttributes != nil {
		in, out := &in.GCPAttributes, &out.GCPAttributes
		*out = make([]TaskNewClusterGCPAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdempotencyToken != nil {
		in, out := &in.IdempotencyToken, &out.IdempotencyToken
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]TaskNewClusterInitScriptsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]TaskNewClusterLibraryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTypeID != nil {
		in, out := &in.NodeTypeID, &out.NodeTypeID
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuntimeEngine != nil {
		in, out := &in.RuntimeEngine, &out.RuntimeEngine
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeys != nil {
		in, out := &in.SSHPublicKeys, &out.SSHPublicKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SingleUserName != nil {
		in, out := &in.SingleUserName, &out.SingleUserName
		*out = new(string)
		**out = **in
	}
	if in.SparkConf != nil {
		in, out := &in.SparkConf, &out.SparkConf
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkEnvVars != nil {
		in, out := &in.SparkEnvVars, &out.SparkEnvVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkVersion != nil {
		in, out := &in.SparkVersion, &out.SparkVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = make([]TaskNewClusterWorkloadTypeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterParameters.
func (in *TaskNewClusterParameters) DeepCopy() *TaskNewClusterParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterWorkloadTypeClientsInitParameters) DeepCopyInto(out *TaskNewClusterWorkloadTypeClientsInitParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterWorkloadTypeClientsInitParameters.
func (in *TaskNewClusterWorkloadTypeClientsInitParameters) DeepCopy() *TaskNewClusterWorkloadTypeClientsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterWorkloadTypeClientsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterWorkloadTypeClientsObservation) DeepCopyInto(out *TaskNewClusterWorkloadTypeClientsObservation) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterWorkloadTypeClientsObservation.
func (in *TaskNewClusterWorkloadTypeClientsObservation) DeepCopy() *TaskNewClusterWorkloadTypeClientsObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterWorkloadTypeClientsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterWorkloadTypeClientsParameters) DeepCopyInto(out *TaskNewClusterWorkloadTypeClientsParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterWorkloadTypeClientsParameters.
func (in *TaskNewClusterWorkloadTypeClientsParameters) DeepCopy() *TaskNewClusterWorkloadTypeClientsParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterWorkloadTypeClientsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterWorkloadTypeInitParameters) DeepCopyInto(out *TaskNewClusterWorkloadTypeInitParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]TaskNewClusterWorkloadTypeClientsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterWorkloadTypeInitParameters.
func (in *TaskNewClusterWorkloadTypeInitParameters) DeepCopy() *TaskNewClusterWorkloadTypeInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterWorkloadTypeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterWorkloadTypeObservation) DeepCopyInto(out *TaskNewClusterWorkloadTypeObservation) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]TaskNewClusterWorkloadTypeClientsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterWorkloadTypeObservation.
func (in *TaskNewClusterWorkloadTypeObservation) DeepCopy() *TaskNewClusterWorkloadTypeObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterWorkloadTypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNewClusterWorkloadTypeParameters) DeepCopyInto(out *TaskNewClusterWorkloadTypeParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]TaskNewClusterWorkloadTypeClientsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNewClusterWorkloadTypeParameters.
func (in *TaskNewClusterWorkloadTypeParameters) DeepCopy() *TaskNewClusterWorkloadTypeParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNewClusterWorkloadTypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNotebookTaskInitParameters) DeepCopyInto(out *TaskNotebookTaskInitParameters) {
	*out = *in
	if in.BaseParameters != nil {
		in, out := &in.BaseParameters, &out.BaseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNotebookTaskInitParameters.
func (in *TaskNotebookTaskInitParameters) DeepCopy() *TaskNotebookTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNotebookTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNotebookTaskObservation) DeepCopyInto(out *TaskNotebookTaskObservation) {
	*out = *in
	if in.BaseParameters != nil {
		in, out := &in.BaseParameters, &out.BaseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNotebookTaskObservation.
func (in *TaskNotebookTaskObservation) DeepCopy() *TaskNotebookTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNotebookTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNotebookTaskParameters) DeepCopyInto(out *TaskNotebookTaskParameters) {
	*out = *in
	if in.BaseParameters != nil {
		in, out := &in.BaseParameters, &out.BaseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookPath != nil {
		in, out := &in.NotebookPath, &out.NotebookPath
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNotebookTaskParameters.
func (in *TaskNotebookTaskParameters) DeepCopy() *TaskNotebookTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNotebookTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNotificationSettingsInitParameters) DeepCopyInto(out *TaskNotificationSettingsInitParameters) {
	*out = *in
	if in.AlertOnLastAttempt != nil {
		in, out := &in.AlertOnLastAttempt, &out.AlertOnLastAttempt
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForCanceledRuns != nil {
		in, out := &in.NoAlertForCanceledRuns, &out.NoAlertForCanceledRuns
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNotificationSettingsInitParameters.
func (in *TaskNotificationSettingsInitParameters) DeepCopy() *TaskNotificationSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNotificationSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNotificationSettingsObservation) DeepCopyInto(out *TaskNotificationSettingsObservation) {
	*out = *in
	if in.AlertOnLastAttempt != nil {
		in, out := &in.AlertOnLastAttempt, &out.AlertOnLastAttempt
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForCanceledRuns != nil {
		in, out := &in.NoAlertForCanceledRuns, &out.NoAlertForCanceledRuns
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNotificationSettingsObservation.
func (in *TaskNotificationSettingsObservation) DeepCopy() *TaskNotificationSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(TaskNotificationSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskNotificationSettingsParameters) DeepCopyInto(out *TaskNotificationSettingsParameters) {
	*out = *in
	if in.AlertOnLastAttempt != nil {
		in, out := &in.AlertOnLastAttempt, &out.AlertOnLastAttempt
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForCanceledRuns != nil {
		in, out := &in.NoAlertForCanceledRuns, &out.NoAlertForCanceledRuns
		*out = new(bool)
		**out = **in
	}
	if in.NoAlertForSkippedRuns != nil {
		in, out := &in.NoAlertForSkippedRuns, &out.NoAlertForSkippedRuns
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskNotificationSettingsParameters.
func (in *TaskNotificationSettingsParameters) DeepCopy() *TaskNotificationSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(TaskNotificationSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskObservation) DeepCopyInto(out *TaskObservation) {
	*out = *in
	if in.ConditionTask != nil {
		in, out := &in.ConditionTask, &out.ConditionTask
		*out = make([]ConditionTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DbtTask != nil {
		in, out := &in.DbtTask, &out.DbtTask
		*out = make([]TaskDbtTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DependsOn != nil {
		in, out := &in.DependsOn, &out.DependsOn
		*out = make([]DependsOnObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableAutoOptimization != nil {
		in, out := &in.DisableAutoOptimization, &out.DisableAutoOptimization
		*out = new(bool)
		**out = **in
	}
	if in.EmailNotifications != nil {
		in, out := &in.EmailNotifications, &out.EmailNotifications
		*out = make([]TaskEmailNotificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvironmentKey != nil {
		in, out := &in.EnvironmentKey, &out.EnvironmentKey
		*out = new(string)
		**out = **in
	}
	if in.ExistingClusterID != nil {
		in, out := &in.ExistingClusterID, &out.ExistingClusterID
		*out = new(string)
		**out = **in
	}
	if in.ForEachTask != nil {
		in, out := &in.ForEachTask, &out.ForEachTask
		*out = make([]ForEachTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]JobTaskHealthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobClusterKey != nil {
		in, out := &in.JobClusterKey, &out.JobClusterKey
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]JobTaskLibraryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MinRetryIntervalMillis != nil {
		in, out := &in.MinRetryIntervalMillis, &out.MinRetryIntervalMillis
		*out = new(float64)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]JobTaskNewClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotebookTask != nil {
		in, out := &in.NotebookTask, &out.NotebookTask
		*out = make([]JobTaskNotebookTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]JobTaskNotificationSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PipelineTask != nil {
		in, out := &in.PipelineTask, &out.PipelineTask
		*out = make([]JobTaskPipelineTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonWheelTask != nil {
		in, out := &in.PythonWheelTask, &out.PythonWheelTask
		*out = make([]JobTaskPythonWheelTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryOnTimeout != nil {
		in, out := &in.RetryOnTimeout, &out.RetryOnTimeout
		*out = new(bool)
		**out = **in
	}
	if in.RunIf != nil {
		in, out := &in.RunIf, &out.RunIf
		*out = new(string)
		**out = **in
	}
	if in.RunJobTask != nil {
		in, out := &in.RunJobTask, &out.RunJobTask
		*out = make([]JobTaskRunJobTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SQLTask != nil {
		in, out := &in.SQLTask, &out.SQLTask
		*out = make([]TaskSQLTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJarTask != nil {
		in, out := &in.SparkJarTask, &out.SparkJarTask
		*out = make([]JobTaskSparkJarTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkPythonTask != nil {
		in, out := &in.SparkPythonTask, &out.SparkPythonTask
		*out = make([]JobTaskSparkPythonTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSubmitTask != nil {
		in, out := &in.SparkSubmitTask, &out.SparkSubmitTask
		*out = make([]JobTaskSparkSubmitTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.WebhookNotifications != nil {
		in, out := &in.WebhookNotifications, &out.WebhookNotifications
		*out = make([]TaskWebhookNotificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskObservation.
func (in *TaskObservation) DeepCopy() *TaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskParameters) DeepCopyInto(out *TaskParameters) {
	*out = *in
	if in.ConditionTask != nil {
		in, out := &in.ConditionTask, &out.ConditionTask
		*out = make([]ConditionTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DbtTask != nil {
		in, out := &in.DbtTask, &out.DbtTask
		*out = make([]TaskDbtTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DependsOn != nil {
		in, out := &in.DependsOn, &out.DependsOn
		*out = make([]DependsOnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableAutoOptimization != nil {
		in, out := &in.DisableAutoOptimization, &out.DisableAutoOptimization
		*out = new(bool)
		**out = **in
	}
	if in.EmailNotifications != nil {
		in, out := &in.EmailNotifications, &out.EmailNotifications
		*out = make([]TaskEmailNotificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvironmentKey != nil {
		in, out := &in.EnvironmentKey, &out.EnvironmentKey
		*out = new(string)
		**out = **in
	}
	if in.ExistingClusterID != nil {
		in, out := &in.ExistingClusterID, &out.ExistingClusterID
		*out = new(string)
		**out = **in
	}
	if in.ForEachTask != nil {
		in, out := &in.ForEachTask, &out.ForEachTask
		*out = make([]ForEachTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]JobTaskHealthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobClusterKey != nil {
		in, out := &in.JobClusterKey, &out.JobClusterKey
		*out = new(string)
		**out = **in
	}
	if in.Library != nil {
		in, out := &in.Library, &out.Library
		*out = make([]JobTaskLibraryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MinRetryIntervalMillis != nil {
		in, out := &in.MinRetryIntervalMillis, &out.MinRetryIntervalMillis
		*out = new(float64)
		**out = **in
	}
	if in.NewCluster != nil {
		in, out := &in.NewCluster, &out.NewCluster
		*out = make([]JobTaskNewClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotebookTask != nil {
		in, out := &in.NotebookTask, &out.NotebookTask
		*out = make([]JobTaskNotebookTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]JobTaskNotificationSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PipelineTask != nil {
		in, out := &in.PipelineTask, &out.PipelineTask
		*out = make([]JobTaskPipelineTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonWheelTask != nil {
		in, out := &in.PythonWheelTask, &out.PythonWheelTask
		*out = make([]JobTaskPythonWheelTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryOnTimeout != nil {
		in, out := &in.RetryOnTimeout, &out.RetryOnTimeout
		*out = new(bool)
		**out = **in
	}
	if in.RunIf != nil {
		in, out := &in.RunIf, &out.RunIf
		*out = new(string)
		**out = **in
	}
	if in.RunJobTask != nil {
		in, out := &in.RunJobTask, &out.RunJobTask
		*out = make([]JobTaskRunJobTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SQLTask != nil {
		in, out := &in.SQLTask, &out.SQLTask
		*out = make([]TaskSQLTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJarTask != nil {
		in, out := &in.SparkJarTask, &out.SparkJarTask
		*out = make([]JobTaskSparkJarTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkPythonTask != nil {
		in, out := &in.SparkPythonTask, &out.SparkPythonTask
		*out = make([]JobTaskSparkPythonTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSubmitTask != nil {
		in, out := &in.SparkSubmitTask, &out.SparkSubmitTask
		*out = make([]JobTaskSparkSubmitTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskKey != nil {
		in, out := &in.TaskKey, &out.TaskKey
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.WebhookNotifications != nil {
		in, out := &in.WebhookNotifications, &out.WebhookNotifications
		*out = make([]TaskWebhookNotificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskParameters.
func (in *TaskParameters) DeepCopy() *TaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskPipelineTaskInitParameters) DeepCopyInto(out *TaskPipelineTaskInitParameters) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskPipelineTaskInitParameters.
func (in *TaskPipelineTaskInitParameters) DeepCopy() *TaskPipelineTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskPipelineTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskPipelineTaskObservation) DeepCopyInto(out *TaskPipelineTaskObservation) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskPipelineTaskObservation.
func (in *TaskPipelineTaskObservation) DeepCopy() *TaskPipelineTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskPipelineTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskPipelineTaskParameters) DeepCopyInto(out *TaskPipelineTaskParameters) {
	*out = *in
	if in.FullRefresh != nil {
		in, out := &in.FullRefresh, &out.FullRefresh
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskPipelineTaskParameters.
func (in *TaskPipelineTaskParameters) DeepCopy() *TaskPipelineTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskPipelineTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskPythonWheelTaskInitParameters) DeepCopyInto(out *TaskPythonWheelTaskInitParameters) {
	*out = *in
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = new(string)
		**out = **in
	}
	if in.NamedParameters != nil {
		in, out := &in.NamedParameters, &out.NamedParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PackageName != nil {
		in, out := &in.PackageName, &out.PackageName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskPythonWheelTaskInitParameters.
func (in *TaskPythonWheelTaskInitParameters) DeepCopy() *TaskPythonWheelTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskPythonWheelTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskPythonWheelTaskObservation) DeepCopyInto(out *TaskPythonWheelTaskObservation) {
	*out = *in
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = new(string)
		**out = **in
	}
	if in.NamedParameters != nil {
		in, out := &in.NamedParameters, &out.NamedParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PackageName != nil {
		in, out := &in.PackageName, &out.PackageName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskPythonWheelTaskObservation.
func (in *TaskPythonWheelTaskObservation) DeepCopy() *TaskPythonWheelTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskPythonWheelTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskPythonWheelTaskParameters) DeepCopyInto(out *TaskPythonWheelTaskParameters) {
	*out = *in
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = new(string)
		**out = **in
	}
	if in.NamedParameters != nil {
		in, out := &in.NamedParameters, &out.NamedParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PackageName != nil {
		in, out := &in.PackageName, &out.PackageName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskPythonWheelTaskParameters.
func (in *TaskPythonWheelTaskParameters) DeepCopy() *TaskPythonWheelTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskPythonWheelTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskRunJobTaskInitParameters) DeepCopyInto(out *TaskRunJobTaskInitParameters) {
	*out = *in
	if in.DbtCommands != nil {
		in, out := &in.DbtCommands, &out.DbtCommands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarParams != nil {
		in, out := &in.JarParams, &out.JarParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(float64)
		**out = **in
	}
	if in.JobParameters != nil {
		in, out := &in.JobParameters, &out.JobParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookParams != nil {
		in, out := &in.NotebookParams, &out.NotebookParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PipelineParams != nil {
		in, out := &in.PipelineParams, &out.PipelineParams
		*out = make([]PipelineParamsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonNamedParams != nil {
		in, out := &in.PythonNamedParams, &out.PythonNamedParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PythonParams != nil {
		in, out := &in.PythonParams, &out.PythonParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SQLParams != nil {
		in, out := &in.SQLParams, &out.SQLParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkSubmitParams != nil {
		in, out := &in.SparkSubmitParams, &out.SparkSubmitParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskRunJobTaskInitParameters.
func (in *TaskRunJobTaskInitParameters) DeepCopy() *TaskRunJobTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskRunJobTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskRunJobTaskObservation) DeepCopyInto(out *TaskRunJobTaskObservation) {
	*out = *in
	if in.DbtCommands != nil {
		in, out := &in.DbtCommands, &out.DbtCommands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarParams != nil {
		in, out := &in.JarParams, &out.JarParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(float64)
		**out = **in
	}
	if in.JobParameters != nil {
		in, out := &in.JobParameters, &out.JobParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookParams != nil {
		in, out := &in.NotebookParams, &out.NotebookParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PipelineParams != nil {
		in, out := &in.PipelineParams, &out.PipelineParams
		*out = make([]PipelineParamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonNamedParams != nil {
		in, out := &in.PythonNamedParams, &out.PythonNamedParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PythonParams != nil {
		in, out := &in.PythonParams, &out.PythonParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SQLParams != nil {
		in, out := &in.SQLParams, &out.SQLParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkSubmitParams != nil {
		in, out := &in.SparkSubmitParams, &out.SparkSubmitParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskRunJobTaskObservation.
func (in *TaskRunJobTaskObservation) DeepCopy() *TaskRunJobTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskRunJobTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskRunJobTaskParameters) DeepCopyInto(out *TaskRunJobTaskParameters) {
	*out = *in
	if in.DbtCommands != nil {
		in, out := &in.DbtCommands, &out.DbtCommands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarParams != nil {
		in, out := &in.JarParams, &out.JarParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(float64)
		**out = **in
	}
	if in.JobParameters != nil {
		in, out := &in.JobParameters, &out.JobParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotebookParams != nil {
		in, out := &in.NotebookParams, &out.NotebookParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PipelineParams != nil {
		in, out := &in.PipelineParams, &out.PipelineParams
		*out = make([]PipelineParamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonNamedParams != nil {
		in, out := &in.PythonNamedParams, &out.PythonNamedParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PythonParams != nil {
		in, out := &in.PythonParams, &out.PythonParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SQLParams != nil {
		in, out := &in.SQLParams, &out.SQLParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SparkSubmitParams != nil {
		in, out := &in.SparkSubmitParams, &out.SparkSubmitParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskRunJobTaskParameters.
func (in *TaskRunJobTaskParameters) DeepCopy() *TaskRunJobTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskRunJobTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSQLTaskAlertInitParameters) DeepCopyInto(out *TaskSQLTaskAlertInitParameters) {
	*out = *in
	if in.AlertID != nil {
		in, out := &in.AlertID, &out.AlertID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]AlertSubscriptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSQLTaskAlertInitParameters.
func (in *TaskSQLTaskAlertInitParameters) DeepCopy() *TaskSQLTaskAlertInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSQLTaskAlertInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSQLTaskAlertObservation) DeepCopyInto(out *TaskSQLTaskAlertObservation) {
	*out = *in
	if in.AlertID != nil {
		in, out := &in.AlertID, &out.AlertID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]AlertSubscriptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSQLTaskAlertObservation.
func (in *TaskSQLTaskAlertObservation) DeepCopy() *TaskSQLTaskAlertObservation {
	if in == nil {
		return nil
	}
	out := new(TaskSQLTaskAlertObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSQLTaskAlertParameters) DeepCopyInto(out *TaskSQLTaskAlertParameters) {
	*out = *in
	if in.AlertID != nil {
		in, out := &in.AlertID, &out.AlertID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]AlertSubscriptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSQLTaskAlertParameters.
func (in *TaskSQLTaskAlertParameters) DeepCopy() *TaskSQLTaskAlertParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSQLTaskAlertParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSQLTaskDashboardInitParameters) DeepCopyInto(out *TaskSQLTaskDashboardInitParameters) {
	*out = *in
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]SQLTaskDashboardSubscriptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSQLTaskDashboardInitParameters.
func (in *TaskSQLTaskDashboardInitParameters) DeepCopy() *TaskSQLTaskDashboardInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSQLTaskDashboardInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSQLTaskDashboardObservation) DeepCopyInto(out *TaskSQLTaskDashboardObservation) {
	*out = *in
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]SQLTaskDashboardSubscriptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSQLTaskDashboardObservation.
func (in *TaskSQLTaskDashboardObservation) DeepCopy() *TaskSQLTaskDashboardObservation {
	if in == nil {
		return nil
	}
	out := new(TaskSQLTaskDashboardObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSQLTaskDashboardParameters) DeepCopyInto(out *TaskSQLTaskDashboardParameters) {
	*out = *in
	if in.CustomSubject != nil {
		in, out := &in.CustomSubject, &out.CustomSubject
		*out = new(string)
		**out = **in
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.PauseSubscriptions != nil {
		in, out := &in.PauseSubscriptions, &out.PauseSubscriptions
		*out = new(bool)
		**out = **in
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]SQLTaskDashboardSubscriptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSQLTaskDashboardParameters.
func (in *TaskSQLTaskDashboardParameters) DeepCopy() *TaskSQLTaskDashboardParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSQLTaskDashboardParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSQLTaskFileInitParameters) DeepCopyInto(out *TaskSQLTaskFileInitParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSQLTaskFileInitParameters.
func (in *TaskSQLTaskFileInitParameters) DeepCopy() *TaskSQLTaskFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSQLTaskFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSQLTaskFileObservation) DeepCopyInto(out *TaskSQLTaskFileObservation) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSQLTaskFileObservation.
func (in *TaskSQLTaskFileObservation) DeepCopy() *TaskSQLTaskFileObservation {
	if in == nil {
		return nil
	}
	out := new(TaskSQLTaskFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSQLTaskFileParameters) DeepCopyInto(out *TaskSQLTaskFileParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSQLTaskFileParameters.
func (in *TaskSQLTaskFileParameters) DeepCopy() *TaskSQLTaskFileParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSQLTaskFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSQLTaskInitParameters) DeepCopyInto(out *TaskSQLTaskInitParameters) {
	*out = *in
	if in.Alert != nil {
		in, out := &in.Alert, &out.Alert
		*out = make([]TaskSQLTaskAlertInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dashboard != nil {
		in, out := &in.Dashboard, &out.Dashboard
		*out = make([]TaskSQLTaskDashboardInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]TaskSQLTaskFileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]SQLTaskQueryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSQLTaskInitParameters.
func (in *TaskSQLTaskInitParameters) DeepCopy() *TaskSQLTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSQLTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSQLTaskObservation) DeepCopyInto(out *TaskSQLTaskObservation) {
	*out = *in
	if in.Alert != nil {
		in, out := &in.Alert, &out.Alert
		*out = make([]TaskSQLTaskAlertObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dashboard != nil {
		in, out := &in.Dashboard, &out.Dashboard
		*out = make([]TaskSQLTaskDashboardObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]TaskSQLTaskFileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]SQLTaskQueryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSQLTaskObservation.
func (in *TaskSQLTaskObservation) DeepCopy() *TaskSQLTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskSQLTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSQLTaskParameters) DeepCopyInto(out *TaskSQLTaskParameters) {
	*out = *in
	if in.Alert != nil {
		in, out := &in.Alert, &out.Alert
		*out = make([]TaskSQLTaskAlertParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dashboard != nil {
		in, out := &in.Dashboard, &out.Dashboard
		*out = make([]TaskSQLTaskDashboardParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]TaskSQLTaskFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]SQLTaskQueryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSQLTaskParameters.
func (in *TaskSQLTaskParameters) DeepCopy() *TaskSQLTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSQLTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSparkJarTaskInitParameters) DeepCopyInto(out *TaskSparkJarTaskInitParameters) {
	*out = *in
	if in.JarURI != nil {
		in, out := &in.JarURI, &out.JarURI
		*out = new(string)
		**out = **in
	}
	if in.MainClassName != nil {
		in, out := &in.MainClassName, &out.MainClassName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSparkJarTaskInitParameters.
func (in *TaskSparkJarTaskInitParameters) DeepCopy() *TaskSparkJarTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSparkJarTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSparkJarTaskObservation) DeepCopyInto(out *TaskSparkJarTaskObservation) {
	*out = *in
	if in.JarURI != nil {
		in, out := &in.JarURI, &out.JarURI
		*out = new(string)
		**out = **in
	}
	if in.MainClassName != nil {
		in, out := &in.MainClassName, &out.MainClassName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSparkJarTaskObservation.
func (in *TaskSparkJarTaskObservation) DeepCopy() *TaskSparkJarTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskSparkJarTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSparkJarTaskParameters) DeepCopyInto(out *TaskSparkJarTaskParameters) {
	*out = *in
	if in.JarURI != nil {
		in, out := &in.JarURI, &out.JarURI
		*out = new(string)
		**out = **in
	}
	if in.MainClassName != nil {
		in, out := &in.MainClassName, &out.MainClassName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSparkJarTaskParameters.
func (in *TaskSparkJarTaskParameters) DeepCopy() *TaskSparkJarTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSparkJarTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSparkPythonTaskInitParameters) DeepCopyInto(out *TaskSparkPythonTaskInitParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PythonFile != nil {
		in, out := &in.PythonFile, &out.PythonFile
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSparkPythonTaskInitParameters.
func (in *TaskSparkPythonTaskInitParameters) DeepCopy() *TaskSparkPythonTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSparkPythonTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSparkPythonTaskObservation) DeepCopyInto(out *TaskSparkPythonTaskObservation) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PythonFile != nil {
		in, out := &in.PythonFile, &out.PythonFile
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSparkPythonTaskObservation.
func (in *TaskSparkPythonTaskObservation) DeepCopy() *TaskSparkPythonTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskSparkPythonTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSparkPythonTaskParameters) DeepCopyInto(out *TaskSparkPythonTaskParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PythonFile != nil {
		in, out := &in.PythonFile, &out.PythonFile
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSparkPythonTaskParameters.
func (in *TaskSparkPythonTaskParameters) DeepCopy() *TaskSparkPythonTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSparkPythonTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSparkSubmitTaskInitParameters) DeepCopyInto(out *TaskSparkSubmitTaskInitParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSparkSubmitTaskInitParameters.
func (in *TaskSparkSubmitTaskInitParameters) DeepCopy() *TaskSparkSubmitTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSparkSubmitTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSparkSubmitTaskObservation) DeepCopyInto(out *TaskSparkSubmitTaskObservation) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSparkSubmitTaskObservation.
func (in *TaskSparkSubmitTaskObservation) DeepCopy() *TaskSparkSubmitTaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskSparkSubmitTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSparkSubmitTaskParameters) DeepCopyInto(out *TaskSparkSubmitTaskParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSparkSubmitTaskParameters.
func (in *TaskSparkSubmitTaskParameters) DeepCopy() *TaskSparkSubmitTaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskSparkSubmitTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskWebhookNotificationsInitParameters) DeepCopyInto(out *TaskWebhookNotificationsInitParameters) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]WebhookNotificationsOnDurationWarningThresholdExceededInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]WebhookNotificationsOnFailureInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]WebhookNotificationsOnStartInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]WebhookNotificationsOnStreamingBacklogExceededInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]WebhookNotificationsOnSuccessInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskWebhookNotificationsInitParameters.
func (in *TaskWebhookNotificationsInitParameters) DeepCopy() *TaskWebhookNotificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskWebhookNotificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskWebhookNotificationsObservation) DeepCopyInto(out *TaskWebhookNotificationsObservation) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]WebhookNotificationsOnDurationWarningThresholdExceededObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]WebhookNotificationsOnFailureObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]WebhookNotificationsOnStartObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]WebhookNotificationsOnStreamingBacklogExceededObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]WebhookNotificationsOnSuccessObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskWebhookNotificationsObservation.
func (in *TaskWebhookNotificationsObservation) DeepCopy() *TaskWebhookNotificationsObservation {
	if in == nil {
		return nil
	}
	out := new(TaskWebhookNotificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskWebhookNotificationsParameters) DeepCopyInto(out *TaskWebhookNotificationsParameters) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]WebhookNotificationsOnDurationWarningThresholdExceededParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]WebhookNotificationsOnFailureParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]WebhookNotificationsOnStartParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]WebhookNotificationsOnStreamingBacklogExceededParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]WebhookNotificationsOnSuccessParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskWebhookNotificationsParameters.
func (in *TaskWebhookNotificationsParameters) DeepCopy() *TaskWebhookNotificationsParameters {
	if in == nil {
		return nil
	}
	out := new(TaskWebhookNotificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TextInitParameters) DeepCopyInto(out *TextInitParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TextInitParameters.
func (in *TextInitParameters) DeepCopy() *TextInitParameters {
	if in == nil {
		return nil
	}
	out := new(TextInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TextObservation) DeepCopyInto(out *TextObservation) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TextObservation.
func (in *TextObservation) DeepCopy() *TextObservation {
	if in == nil {
		return nil
	}
	out := new(TextObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TextParameters) DeepCopyInto(out *TextParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TextParameters.
func (in *TextParameters) DeepCopy() *TextParameters {
	if in == nil {
		return nil
	}
	out := new(TextParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TextValueInitParameters) DeepCopyInto(out *TextValueInitParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TextValueInitParameters.
func (in *TextValueInitParameters) DeepCopy() *TextValueInitParameters {
	if in == nil {
		return nil
	}
	out := new(TextValueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TextValueObservation) DeepCopyInto(out *TextValueObservation) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TextValueObservation.
func (in *TextValueObservation) DeepCopy() *TextValueObservation {
	if in == nil {
		return nil
	}
	out := new(TextValueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TextValueParameters) DeepCopyInto(out *TextValueParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TextValueParameters.
func (in *TextValueParameters) DeepCopy() *TextValueParameters {
	if in == nil {
		return nil
	}
	out := new(TextValueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThresholdInitParameters) DeepCopyInto(out *ThresholdInitParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]ValueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThresholdInitParameters.
func (in *ThresholdInitParameters) DeepCopy() *ThresholdInitParameters {
	if in == nil {
		return nil
	}
	out := new(ThresholdInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThresholdObservation) DeepCopyInto(out *ThresholdObservation) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]ValueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThresholdObservation.
func (in *ThresholdObservation) DeepCopy() *ThresholdObservation {
	if in == nil {
		return nil
	}
	out := new(ThresholdObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThresholdParameters) DeepCopyInto(out *ThresholdParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]ValueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThresholdParameters.
func (in *ThresholdParameters) DeepCopy() *ThresholdParameters {
	if in == nil {
		return nil
	}
	out := new(ThresholdParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeSeriesInitParameters) DeepCopyInto(out *TimeSeriesInitParameters) {
	*out = *in
	if in.Granularities != nil {
		in, out := &in.Granularities, &out.Granularities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TimestampCol != nil {
		in, out := &in.TimestampCol, &out.TimestampCol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeSeriesInitParameters.
func (in *TimeSeriesInitParameters) DeepCopy() *TimeSeriesInitParameters {
	if in == nil {
		return nil
	}
	out := new(TimeSeriesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeSeriesObservation) DeepCopyInto(out *TimeSeriesObservation) {
	*out = *in
	if in.Granularities != nil {
		in, out := &in.Granularities, &out.Granularities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TimestampCol != nil {
		in, out := &in.TimestampCol, &out.TimestampCol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeSeriesObservation.
func (in *TimeSeriesObservation) DeepCopy() *TimeSeriesObservation {
	if in == nil {
		return nil
	}
	out := new(TimeSeriesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeSeriesParameters) DeepCopyInto(out *TimeSeriesParameters) {
	*out = *in
	if in.Granularities != nil {
		in, out := &in.Granularities, &out.Granularities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TimestampCol != nil {
		in, out := &in.TimestampCol, &out.TimestampCol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeSeriesParameters.
func (in *TimeSeriesParameters) DeepCopy() *TimeSeriesParameters {
	if in == nil {
		return nil
	}
	out := new(TimeSeriesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Token) DeepCopyInto(out *Token) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Token.
func (in *Token) DeepCopy() *Token {
	if in == nil {
		return nil
	}
	out := new(Token)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Token) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenAccessPolicyInitParameters) DeepCopyInto(out *TokenAccessPolicyInitParameters) {
	*out = *in
	if in.AccessTokenTTLInMinutes != nil {
		in, out := &in.AccessTokenTTLInMinutes, &out.AccessTokenTTLInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.RefreshTokenTTLInMinutes != nil {
		in, out := &in.RefreshTokenTTLInMinutes, &out.RefreshTokenTTLInMinutes
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenAccessPolicyInitParameters.
func (in *TokenAccessPolicyInitParameters) DeepCopy() *TokenAccessPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(TokenAccessPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenAccessPolicyObservation) DeepCopyInto(out *TokenAccessPolicyObservation) {
	*out = *in
	if in.AccessTokenTTLInMinutes != nil {
		in, out := &in.AccessTokenTTLInMinutes, &out.AccessTokenTTLInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.RefreshTokenTTLInMinutes != nil {
		in, out := &in.RefreshTokenTTLInMinutes, &out.RefreshTokenTTLInMinutes
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenAccessPolicyObservation.
func (in *TokenAccessPolicyObservation) DeepCopy() *TokenAccessPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(TokenAccessPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenAccessPolicyParameters) DeepCopyInto(out *TokenAccessPolicyParameters) {
	*out = *in
	if in.AccessTokenTTLInMinutes != nil {
		in, out := &in.AccessTokenTTLInMinutes, &out.AccessTokenTTLInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.RefreshTokenTTLInMinutes != nil {
		in, out := &in.RefreshTokenTTLInMinutes, &out.RefreshTokenTTLInMinutes
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenAccessPolicyParameters.
func (in *TokenAccessPolicyParameters) DeepCopy() *TokenAccessPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(TokenAccessPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenInitParameters) DeepCopyInto(out *TokenInitParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.LifetimeSeconds != nil {
		in, out := &in.LifetimeSeconds, &out.LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TokenID != nil {
		in, out := &in.TokenID, &out.TokenID
		*out = new(string)
		**out = **in
	}
	if in.TokenValueSecretRef != nil {
		in, out := &in.TokenValueSecretRef, &out.TokenValueSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenInitParameters.
func (in *TokenInitParameters) DeepCopy() *TokenInitParameters {
	if in == nil {
		return nil
	}
	out := new(TokenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenInitParameters_2) DeepCopyInto(out *TokenInitParameters_2) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.ExpiryTime != nil {
		in, out := &in.ExpiryTime, &out.ExpiryTime
		*out = new(float64)
		**out = **in
	}
	if in.LifetimeSeconds != nil {
		in, out := &in.LifetimeSeconds, &out.LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TokenID != nil {
		in, out := &in.TokenID, &out.TokenID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenInitParameters_2.
func (in *TokenInitParameters_2) DeepCopy() *TokenInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(TokenInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenList) DeepCopyInto(out *TokenList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Token, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenList.
func (in *TokenList) DeepCopy() *TokenList {
	if in == nil {
		return nil
	}
	out := new(TokenList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TokenList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenObservation) DeepCopyInto(out *TokenObservation) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.LifetimeSeconds != nil {
		in, out := &in.LifetimeSeconds, &out.LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TokenID != nil {
		in, out := &in.TokenID, &out.TokenID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenObservation.
func (in *TokenObservation) DeepCopy() *TokenObservation {
	if in == nil {
		return nil
	}
	out := new(TokenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenObservation_2) DeepCopyInto(out *TokenObservation_2) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.ExpiryTime != nil {
		in, out := &in.ExpiryTime, &out.ExpiryTime
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LifetimeSeconds != nil {
		in, out := &in.LifetimeSeconds, &out.LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TokenID != nil {
		in, out := &in.TokenID, &out.TokenID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenObservation_2.
func (in *TokenObservation_2) DeepCopy() *TokenObservation_2 {
	if in == nil {
		return nil
	}
	out := new(TokenObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenParameters) DeepCopyInto(out *TokenParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.LifetimeSeconds != nil {
		in, out := &in.LifetimeSeconds, &out.LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TokenID != nil {
		in, out := &in.TokenID, &out.TokenID
		*out = new(string)
		**out = **in
	}
	if in.TokenValueSecretRef != nil {
		in, out := &in.TokenValueSecretRef, &out.TokenValueSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenParameters.
func (in *TokenParameters) DeepCopy() *TokenParameters {
	if in == nil {
		return nil
	}
	out := new(TokenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenParameters_2) DeepCopyInto(out *TokenParameters_2) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.ExpiryTime != nil {
		in, out := &in.ExpiryTime, &out.ExpiryTime
		*out = new(float64)
		**out = **in
	}
	if in.LifetimeSeconds != nil {
		in, out := &in.LifetimeSeconds, &out.LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TokenID != nil {
		in, out := &in.TokenID, &out.TokenID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenParameters_2.
func (in *TokenParameters_2) DeepCopy() *TokenParameters_2 {
	if in == nil {
		return nil
	}
	out := new(TokenParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenSpec) DeepCopyInto(out *TokenSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenSpec.
func (in *TokenSpec) DeepCopy() *TokenSpec {
	if in == nil {
		return nil
	}
	out := new(TokenSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenStatus) DeepCopyInto(out *TokenStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenStatus.
func (in *TokenStatus) DeepCopy() *TokenStatus {
	if in == nil {
		return nil
	}
	out := new(TokenStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokensInitParameters) DeepCopyInto(out *TokensInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokensInitParameters.
func (in *TokensInitParameters) DeepCopy() *TokensInitParameters {
	if in == nil {
		return nil
	}
	out := new(TokensInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokensObservation) DeepCopyInto(out *TokensObservation) {
	*out = *in
	if in.ActivationURL != nil {
		in, out := &in.ActivationURL, &out.ActivationURL
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedBy != nil {
		in, out := &in.UpdatedBy, &out.UpdatedBy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokensObservation.
func (in *TokensObservation) DeepCopy() *TokensObservation {
	if in == nil {
		return nil
	}
	out := new(TokensObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokensParameters) DeepCopyInto(out *TokensParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokensParameters.
func (in *TokensParameters) DeepCopy() *TokensParameters {
	if in == nil {
		return nil
	}
	out := new(TokensParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficConfigInitParameters) DeepCopyInto(out *TrafficConfigInitParameters) {
	*out = *in
	if in.Routes != nil {
		in, out := &in.Routes, &out.Routes
		*out = make([]RoutesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficConfigInitParameters.
func (in *TrafficConfigInitParameters) DeepCopy() *TrafficConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(TrafficConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficConfigObservation) DeepCopyInto(out *TrafficConfigObservation) {
	*out = *in
	if in.Routes != nil {
		in, out := &in.Routes, &out.Routes
		*out = make([]RoutesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficConfigObservation.
func (in *TrafficConfigObservation) DeepCopy() *TrafficConfigObservation {
	if in == nil {
		return nil
	}
	out := new(TrafficConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficConfigParameters) DeepCopyInto(out *TrafficConfigParameters) {
	*out = *in
	if in.Routes != nil {
		in, out := &in.Routes, &out.Routes
		*out = make([]RoutesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficConfigParameters.
func (in *TrafficConfigParameters) DeepCopy() *TrafficConfigParameters {
	if in == nil {
		return nil
	}
	out := new(TrafficConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerInitParameters) DeepCopyInto(out *TriggerInitParameters) {
	*out = *in
	if in.FileArrival != nil {
		in, out := &in.FileArrival, &out.FileArrival
		*out = make([]FileArrivalInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
	if in.Periodic != nil {
		in, out := &in.Periodic, &out.Periodic
		*out = make([]PeriodicInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = make([]TableInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableUpdate != nil {
		in, out := &in.TableUpdate, &out.TableUpdate
		*out = make([]TableUpdateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerInitParameters.
func (in *TriggerInitParameters) DeepCopy() *TriggerInitParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerObservation) DeepCopyInto(out *TriggerObservation) {
	*out = *in
	if in.FileArrival != nil {
		in, out := &in.FileArrival, &out.FileArrival
		*out = make([]FileArrivalObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
	if in.Periodic != nil {
		in, out := &in.Periodic, &out.Periodic
		*out = make([]PeriodicObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = make([]TableObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableUpdate != nil {
		in, out := &in.TableUpdate, &out.TableUpdate
		*out = make([]TableUpdateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerObservation.
func (in *TriggerObservation) DeepCopy() *TriggerObservation {
	if in == nil {
		return nil
	}
	out := new(TriggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerParameters) DeepCopyInto(out *TriggerParameters) {
	*out = *in
	if in.FileArrival != nil {
		in, out := &in.FileArrival, &out.FileArrival
		*out = make([]FileArrivalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
	if in.Periodic != nil {
		in, out := &in.Periodic, &out.Periodic
		*out = make([]PeriodicParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = make([]TableParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableUpdate != nil {
		in, out := &in.TableUpdate, &out.TableUpdate
		*out = make([]TableUpdateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerParameters.
func (in *TriggerParameters) DeepCopy() *TriggerParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggeredUpdateProgressInitParameters) DeepCopyInto(out *TriggeredUpdateProgressInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggeredUpdateProgressInitParameters.
func (in *TriggeredUpdateProgressInitParameters) DeepCopy() *TriggeredUpdateProgressInitParameters {
	if in == nil {
		return nil
	}
	out := new(TriggeredUpdateProgressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggeredUpdateProgressObservation) DeepCopyInto(out *TriggeredUpdateProgressObservation) {
	*out = *in
	if in.EstimatedCompletionTimeSeconds != nil {
		in, out := &in.EstimatedCompletionTimeSeconds, &out.EstimatedCompletionTimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.LatestVersionCurrentlyProcessing != nil {
		in, out := &in.LatestVersionCurrentlyProcessing, &out.LatestVersionCurrentlyProcessing
		*out = new(float64)
		**out = **in
	}
	if in.SyncProgressCompletion != nil {
		in, out := &in.SyncProgressCompletion, &out.SyncProgressCompletion
		*out = new(float64)
		**out = **in
	}
	if in.SyncedRowCount != nil {
		in, out := &in.SyncedRowCount, &out.SyncedRowCount
		*out = new(float64)
		**out = **in
	}
	if in.TotalRowCount != nil {
		in, out := &in.TotalRowCount, &out.TotalRowCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggeredUpdateProgressObservation.
func (in *TriggeredUpdateProgressObservation) DeepCopy() *TriggeredUpdateProgressObservation {
	if in == nil {
		return nil
	}
	out := new(TriggeredUpdateProgressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggeredUpdateProgressParameters) DeepCopyInto(out *TriggeredUpdateProgressParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggeredUpdateProgressParameters.
func (in *TriggeredUpdateProgressParameters) DeepCopy() *TriggeredUpdateProgressParameters {
	if in == nil {
		return nil
	}
	out := new(TriggeredUpdateProgressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggeredUpdateStatusInitParameters) DeepCopyInto(out *TriggeredUpdateStatusInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggeredUpdateStatusInitParameters.
func (in *TriggeredUpdateStatusInitParameters) DeepCopy() *TriggeredUpdateStatusInitParameters {
	if in == nil {
		return nil
	}
	out := new(TriggeredUpdateStatusInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggeredUpdateStatusObservation) DeepCopyInto(out *TriggeredUpdateStatusObservation) {
	*out = *in
	if in.LastProcessedCommitVersion != nil {
		in, out := &in.LastProcessedCommitVersion, &out.LastProcessedCommitVersion
		*out = new(float64)
		**out = **in
	}
	if in.Timestamp != nil {
		in, out := &in.Timestamp, &out.Timestamp
		*out = new(string)
		**out = **in
	}
	if in.TriggeredUpdateProgress != nil {
		in, out := &in.TriggeredUpdateProgress, &out.TriggeredUpdateProgress
		*out = make([]TriggeredUpdateProgressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggeredUpdateStatusObservation.
func (in *TriggeredUpdateStatusObservation) DeepCopy() *TriggeredUpdateStatusObservation {
	if in == nil {
		return nil
	}
	out := new(TriggeredUpdateStatusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggeredUpdateStatusParameters) DeepCopyInto(out *TriggeredUpdateStatusParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggeredUpdateStatusParameters.
func (in *TriggeredUpdateStatusParameters) DeepCopy() *TriggeredUpdateStatusParameters {
	if in == nil {
		return nil
	}
	out := new(TriggeredUpdateStatusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsageTrackingConfigInitParameters) DeepCopyInto(out *UsageTrackingConfigInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsageTrackingConfigInitParameters.
func (in *UsageTrackingConfigInitParameters) DeepCopy() *UsageTrackingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(UsageTrackingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsageTrackingConfigObservation) DeepCopyInto(out *UsageTrackingConfigObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsageTrackingConfigObservation.
func (in *UsageTrackingConfigObservation) DeepCopy() *UsageTrackingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(UsageTrackingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsageTrackingConfigParameters) DeepCopyInto(out *UsageTrackingConfigParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsageTrackingConfigParameters.
func (in *UsageTrackingConfigParameters) DeepCopy() *UsageTrackingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(UsageTrackingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *User) DeepCopyInto(out *User) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new User.
func (in *User) DeepCopy() *User {
	if in == nil {
		return nil
	}
	out := new(User)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *User) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserInitParameters) DeepCopyInto(out *UserInitParameters) {
	*out = *in
	if in.ACLPrincipalID != nil {
		in, out := &in.ACLPrincipalID, &out.ACLPrincipalID
		*out = new(string)
		**out = **in
	}
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.AllowClusterCreate != nil {
		in, out := &in.AllowClusterCreate, &out.AllowClusterCreate
		*out = new(bool)
		**out = **in
	}
	if in.AllowInstancePoolCreate != nil {
		in, out := &in.AllowInstancePoolCreate, &out.AllowInstancePoolCreate
		*out = new(bool)
		**out = **in
	}
	if in.DatabricksSQLAccess != nil {
		in, out := &in.DatabricksSQLAccess, &out.DatabricksSQLAccess
		*out = new(bool)
		**out = **in
	}
	if in.DisableAsUserDeletion != nil {
		in, out := &in.DisableAsUserDeletion, &out.DisableAsUserDeletion
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteHomeDir != nil {
		in, out := &in.ForceDeleteHomeDir, &out.ForceDeleteHomeDir
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteRepos != nil {
		in, out := &in.ForceDeleteRepos, &out.ForceDeleteRepos
		*out = new(bool)
		**out = **in
	}
	if in.Home != nil {
		in, out := &in.Home, &out.Home
		*out = new(string)
		**out = **in
	}
	if in.Repos != nil {
		in, out := &in.Repos, &out.Repos
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceAccess != nil {
		in, out := &in.WorkspaceAccess, &out.WorkspaceAccess
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserInitParameters.
func (in *UserInitParameters) DeepCopy() *UserInitParameters {
	if in == nil {
		return nil
	}
	out := new(UserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserInstanceProfile) DeepCopyInto(out *UserInstanceProfile) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserInstanceProfile.
func (in *UserInstanceProfile) DeepCopy() *UserInstanceProfile {
	if in == nil {
		return nil
	}
	out := new(UserInstanceProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserInstanceProfile) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserInstanceProfileInitParameters) DeepCopyInto(out *UserInstanceProfileInitParameters) {
	*out = *in
	if in.InstanceProfileID != nil {
		in, out := &in.InstanceProfileID, &out.InstanceProfileID
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserInstanceProfileInitParameters.
func (in *UserInstanceProfileInitParameters) DeepCopy() *UserInstanceProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(UserInstanceProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserInstanceProfileList) DeepCopyInto(out *UserInstanceProfileList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]UserInstanceProfile, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserInstanceProfileList.
func (in *UserInstanceProfileList) DeepCopy() *UserInstanceProfileList {
	if in == nil {
		return nil
	}
	out := new(UserInstanceProfileList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserInstanceProfileList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserInstanceProfileObservation) DeepCopyInto(out *UserInstanceProfileObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceProfileID != nil {
		in, out := &in.InstanceProfileID, &out.InstanceProfileID
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserInstanceProfileObservation.
func (in *UserInstanceProfileObservation) DeepCopy() *UserInstanceProfileObservation {
	if in == nil {
		return nil
	}
	out := new(UserInstanceProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserInstanceProfileParameters) DeepCopyInto(out *UserInstanceProfileParameters) {
	*out = *in
	if in.InstanceProfileID != nil {
		in, out := &in.InstanceProfileID, &out.InstanceProfileID
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserInstanceProfileParameters.
func (in *UserInstanceProfileParameters) DeepCopy() *UserInstanceProfileParameters {
	if in == nil {
		return nil
	}
	out := new(UserInstanceProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserInstanceProfileSpec) DeepCopyInto(out *UserInstanceProfileSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserInstanceProfileSpec.
func (in *UserInstanceProfileSpec) DeepCopy() *UserInstanceProfileSpec {
	if in == nil {
		return nil
	}
	out := new(UserInstanceProfileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserInstanceProfileStatus) DeepCopyInto(out *UserInstanceProfileStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserInstanceProfileStatus.
func (in *UserInstanceProfileStatus) DeepCopy() *UserInstanceProfileStatus {
	if in == nil {
		return nil
	}
	out := new(UserInstanceProfileStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserList) DeepCopyInto(out *UserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]User, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserList.
func (in *UserList) DeepCopy() *UserList {
	if in == nil {
		return nil
	}
	out := new(UserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserObservation) DeepCopyInto(out *UserObservation) {
	*out = *in
	if in.ACLPrincipalID != nil {
		in, out := &in.ACLPrincipalID, &out.ACLPrincipalID
		*out = new(string)
		**out = **in
	}
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.AllowClusterCreate != nil {
		in, out := &in.AllowClusterCreate, &out.AllowClusterCreate
		*out = new(bool)
		**out = **in
	}
	if in.AllowInstancePoolCreate != nil {
		in, out := &in.AllowInstancePoolCreate, &out.AllowInstancePoolCreate
		*out = new(bool)
		**out = **in
	}
	if in.DatabricksSQLAccess != nil {
		in, out := &in.DatabricksSQLAccess, &out.DatabricksSQLAccess
		*out = new(bool)
		**out = **in
	}
	if in.DisableAsUserDeletion != nil {
		in, out := &in.DisableAsUserDeletion, &out.DisableAsUserDeletion
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteHomeDir != nil {
		in, out := &in.ForceDeleteHomeDir, &out.ForceDeleteHomeDir
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteRepos != nil {
		in, out := &in.ForceDeleteRepos, &out.ForceDeleteRepos
		*out = new(bool)
		**out = **in
	}
	if in.Home != nil {
		in, out := &in.Home, &out.Home
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Repos != nil {
		in, out := &in.Repos, &out.Repos
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceAccess != nil {
		in, out := &in.WorkspaceAccess, &out.WorkspaceAccess
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserObservation.
func (in *UserObservation) DeepCopy() *UserObservation {
	if in == nil {
		return nil
	}
	out := new(UserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserParameters) DeepCopyInto(out *UserParameters) {
	*out = *in
	if in.ACLPrincipalID != nil {
		in, out := &in.ACLPrincipalID, &out.ACLPrincipalID
		*out = new(string)
		**out = **in
	}
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.AllowClusterCreate != nil {
		in, out := &in.AllowClusterCreate, &out.AllowClusterCreate
		*out = new(bool)
		**out = **in
	}
	if in.AllowInstancePoolCreate != nil {
		in, out := &in.AllowInstancePoolCreate, &out.AllowInstancePoolCreate
		*out = new(bool)
		**out = **in
	}
	if in.DatabricksSQLAccess != nil {
		in, out := &in.DatabricksSQLAccess, &out.DatabricksSQLAccess
		*out = new(bool)
		**out = **in
	}
	if in.DisableAsUserDeletion != nil {
		in, out := &in.DisableAsUserDeletion, &out.DisableAsUserDeletion
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteHomeDir != nil {
		in, out := &in.ForceDeleteHomeDir, &out.ForceDeleteHomeDir
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteRepos != nil {
		in, out := &in.ForceDeleteRepos, &out.ForceDeleteRepos
		*out = new(bool)
		**out = **in
	}
	if in.Home != nil {
		in, out := &in.Home, &out.Home
		*out = new(string)
		**out = **in
	}
	if in.Repos != nil {
		in, out := &in.Repos, &out.Repos
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceAccess != nil {
		in, out := &in.WorkspaceAccess, &out.WorkspaceAccess
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserParameters.
func (in *UserParameters) DeepCopy() *UserParameters {
	if in == nil {
		return nil
	}
	out := new(UserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserRole) DeepCopyInto(out *UserRole) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserRole.
func (in *UserRole) DeepCopy() *UserRole {
	if in == nil {
		return nil
	}
	out := new(UserRole)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserRole) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserRoleInitParameters) DeepCopyInto(out *UserRoleInitParameters) {
	*out = *in
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserRoleInitParameters.
func (in *UserRoleInitParameters) DeepCopy() *UserRoleInitParameters {
	if in == nil {
		return nil
	}
	out := new(UserRoleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserRoleList) DeepCopyInto(out *UserRoleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]UserRole, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserRoleList.
func (in *UserRoleList) DeepCopy() *UserRoleList {
	if in == nil {
		return nil
	}
	out := new(UserRoleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserRoleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserRoleObservation) DeepCopyInto(out *UserRoleObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserRoleObservation.
func (in *UserRoleObservation) DeepCopy() *UserRoleObservation {
	if in == nil {
		return nil
	}
	out := new(UserRoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserRoleParameters) DeepCopyInto(out *UserRoleParameters) {
	*out = *in
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserRoleParameters.
func (in *UserRoleParameters) DeepCopy() *UserRoleParameters {
	if in == nil {
		return nil
	}
	out := new(UserRoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserRoleSpec) DeepCopyInto(out *UserRoleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserRoleSpec.
func (in *UserRoleSpec) DeepCopy() *UserRoleSpec {
	if in == nil {
		return nil
	}
	out := new(UserRoleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserRoleStatus) DeepCopyInto(out *UserRoleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserRoleStatus.
func (in *UserRoleStatus) DeepCopy() *UserRoleStatus {
	if in == nil {
		return nil
	}
	out := new(UserRoleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserSpec) DeepCopyInto(out *UserSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserSpec.
func (in *UserSpec) DeepCopy() *UserSpec {
	if in == nil {
		return nil
	}
	out := new(UserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserStatus) DeepCopyInto(out *UserStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserStatus.
func (in *UserStatus) DeepCopy() *UserStatus {
	if in == nil {
		return nil
	}
	out := new(UserStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointsInitParameters) DeepCopyInto(out *VPCEndpointsInitParameters) {
	*out = *in
	if in.DataplaneRelay != nil {
		in, out := &in.DataplaneRelay, &out.DataplaneRelay
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RestAPI != nil {
		in, out := &in.RestAPI, &out.RestAPI
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointsInitParameters.
func (in *VPCEndpointsInitParameters) DeepCopy() *VPCEndpointsInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointsObservation) DeepCopyInto(out *VPCEndpointsObservation) {
	*out = *in
	if in.DataplaneRelay != nil {
		in, out := &in.DataplaneRelay, &out.DataplaneRelay
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RestAPI != nil {
		in, out := &in.RestAPI, &out.RestAPI
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointsObservation.
func (in *VPCEndpointsObservation) DeepCopy() *VPCEndpointsObservation {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointsParameters) DeepCopyInto(out *VPCEndpointsParameters) {
	*out = *in
	if in.DataplaneRelay != nil {
		in, out := &in.DataplaneRelay, &out.DataplaneRelay
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RestAPI != nil {
		in, out := &in.RestAPI, &out.RestAPI
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointsParameters.
func (in *VPCEndpointsParameters) DeepCopy() *VPCEndpointsParameters {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValueInitParameters) DeepCopyInto(out *ValueInitParameters) {
	*out = *in
	if in.BoolValue != nil {
		in, out := &in.BoolValue, &out.BoolValue
		*out = new(bool)
		**out = **in
	}
	if in.DoubleValue != nil {
		in, out := &in.DoubleValue, &out.DoubleValue
		*out = new(float64)
		**out = **in
	}
	if in.StringValue != nil {
		in, out := &in.StringValue, &out.StringValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValueInitParameters.
func (in *ValueInitParameters) DeepCopy() *ValueInitParameters {
	if in == nil {
		return nil
	}
	out := new(ValueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValueObservation) DeepCopyInto(out *ValueObservation) {
	*out = *in
	if in.BoolValue != nil {
		in, out := &in.BoolValue, &out.BoolValue
		*out = new(bool)
		**out = **in
	}
	if in.DoubleValue != nil {
		in, out := &in.DoubleValue, &out.DoubleValue
		*out = new(float64)
		**out = **in
	}
	if in.StringValue != nil {
		in, out := &in.StringValue, &out.StringValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValueObservation.
func (in *ValueObservation) DeepCopy() *ValueObservation {
	if in == nil {
		return nil
	}
	out := new(ValueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValueParameters) DeepCopyInto(out *ValueParameters) {
	*out = *in
	if in.BoolValue != nil {
		in, out := &in.BoolValue, &out.BoolValue
		*out = new(bool)
		**out = **in
	}
	if in.DoubleValue != nil {
		in, out := &in.DoubleValue, &out.DoubleValue
		*out = new(float64)
		**out = **in
	}
	if in.StringValue != nil {
		in, out := &in.StringValue, &out.StringValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValueParameters.
func (in *ValueParameters) DeepCopy() *ValueParameters {
	if in == nil {
		return nil
	}
	out := new(ValueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorSearchEndpoint) DeepCopyInto(out *VectorSearchEndpoint) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorSearchEndpoint.
func (in *VectorSearchEndpoint) DeepCopy() *VectorSearchEndpoint {
	if in == nil {
		return nil
	}
	out := new(VectorSearchEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VectorSearchEndpoint) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorSearchEndpointInitParameters) DeepCopyInto(out *VectorSearchEndpointInitParameters) {
	*out = *in
	if in.EndpointType != nil {
		in, out := &in.EndpointType, &out.EndpointType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorSearchEndpointInitParameters.
func (in *VectorSearchEndpointInitParameters) DeepCopy() *VectorSearchEndpointInitParameters {
	if in == nil {
		return nil
	}
	out := new(VectorSearchEndpointInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorSearchEndpointList) DeepCopyInto(out *VectorSearchEndpointList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VectorSearchEndpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorSearchEndpointList.
func (in *VectorSearchEndpointList) DeepCopy() *VectorSearchEndpointList {
	if in == nil {
		return nil
	}
	out := new(VectorSearchEndpointList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VectorSearchEndpointList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorSearchEndpointObservation) DeepCopyInto(out *VectorSearchEndpointObservation) {
	*out = *in
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(float64)
		**out = **in
	}
	if in.Creator != nil {
		in, out := &in.Creator, &out.Creator
		*out = new(string)
		**out = **in
	}
	if in.EndpointID != nil {
		in, out := &in.EndpointID, &out.EndpointID
		*out = new(string)
		**out = **in
	}
	if in.EndpointStatus != nil {
		in, out := &in.EndpointStatus, &out.EndpointStatus
		*out = make([]EndpointStatusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EndpointType != nil {
		in, out := &in.EndpointType, &out.EndpointType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LastUpdatedTimestamp != nil {
		in, out := &in.LastUpdatedTimestamp, &out.LastUpdatedTimestamp
		*out = new(float64)
		**out = **in
	}
	if in.LastUpdatedUser != nil {
		in, out := &in.LastUpdatedUser, &out.LastUpdatedUser
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NumIndexes != nil {
		in, out := &in.NumIndexes, &out.NumIndexes
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorSearchEndpointObservation.
func (in *VectorSearchEndpointObservation) DeepCopy() *VectorSearchEndpointObservation {
	if in == nil {
		return nil
	}
	out := new(VectorSearchEndpointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorSearchEndpointParameters) DeepCopyInto(out *VectorSearchEndpointParameters) {
	*out = *in
	if in.EndpointType != nil {
		in, out := &in.EndpointType, &out.EndpointType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorSearchEndpointParameters.
func (in *VectorSearchEndpointParameters) DeepCopy() *VectorSearchEndpointParameters {
	if in == nil {
		return nil
	}
	out := new(VectorSearchEndpointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorSearchEndpointSpec) DeepCopyInto(out *VectorSearchEndpointSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorSearchEndpointSpec.
func (in *VectorSearchEndpointSpec) DeepCopy() *VectorSearchEndpointSpec {
	if in == nil {
		return nil
	}
	out := new(VectorSearchEndpointSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorSearchEndpointStatus) DeepCopyInto(out *VectorSearchEndpointStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorSearchEndpointStatus.
func (in *VectorSearchEndpointStatus) DeepCopy() *VectorSearchEndpointStatus {
	if in == nil {
		return nil
	}
	out := new(VectorSearchEndpointStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorSearchIndex) DeepCopyInto(out *VectorSearchIndex) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorSearchIndex.
func (in *VectorSearchIndex) DeepCopy() *VectorSearchIndex {
	if in == nil {
		return nil
	}
	out := new(VectorSearchIndex)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VectorSearchIndex) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorSearchIndexInitParameters) DeepCopyInto(out *VectorSearchIndexInitParameters) {
	*out = *in
	if in.DeltaSyncIndexSpec != nil {
		in, out := &in.DeltaSyncIndexSpec, &out.DeltaSyncIndexSpec
		*out = make([]DeltaSyncIndexSpecInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DirectAccessIndexSpec != nil {
		in, out := &in.DirectAccessIndexSpec, &out.DirectAccessIndexSpec
		*out = make([]DirectAccessIndexSpecInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EndpointName != nil {
		in, out := &in.EndpointName, &out.EndpointName
		*out = new(string)
		**out = **in
	}
	if in.IndexType != nil {
		in, out := &in.IndexType, &out.IndexType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorSearchIndexInitParameters.
func (in *VectorSearchIndexInitParameters) DeepCopy() *VectorSearchIndexInitParameters {
	if in == nil {
		return nil
	}
	out := new(VectorSearchIndexInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorSearchIndexList) DeepCopyInto(out *VectorSearchIndexList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VectorSearchIndex, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorSearchIndexList.
func (in *VectorSearchIndexList) DeepCopy() *VectorSearchIndexList {
	if in == nil {
		return nil
	}
	out := new(VectorSearchIndexList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VectorSearchIndexList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorSearchIndexObservation) DeepCopyInto(out *VectorSearchIndexObservation) {
	*out = *in
	if in.Creator != nil {
		in, out := &in.Creator, &out.Creator
		*out = new(string)
		**out = **in
	}
	if in.DeltaSyncIndexSpec != nil {
		in, out := &in.DeltaSyncIndexSpec, &out.DeltaSyncIndexSpec
		*out = make([]DeltaSyncIndexSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DirectAccessIndexSpec != nil {
		in, out := &in.DirectAccessIndexSpec, &out.DirectAccessIndexSpec
		*out = make([]DirectAccessIndexSpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EndpointName != nil {
		in, out := &in.EndpointName, &out.EndpointName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IndexType != nil {
		in, out := &in.IndexType, &out.IndexType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = make([]VectorSearchIndexStatusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorSearchIndexObservation.
func (in *VectorSearchIndexObservation) DeepCopy() *VectorSearchIndexObservation {
	if in == nil {
		return nil
	}
	out := new(VectorSearchIndexObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorSearchIndexParameters) DeepCopyInto(out *VectorSearchIndexParameters) {
	*out = *in
	if in.DeltaSyncIndexSpec != nil {
		in, out := &in.DeltaSyncIndexSpec, &out.DeltaSyncIndexSpec
		*out = make([]DeltaSyncIndexSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DirectAccessIndexSpec != nil {
		in, out := &in.DirectAccessIndexSpec, &out.DirectAccessIndexSpec
		*out = make([]DirectAccessIndexSpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EndpointName != nil {
		in, out := &in.EndpointName, &out.EndpointName
		*out = new(string)
		**out = **in
	}
	if in.IndexType != nil {
		in, out := &in.IndexType, &out.IndexType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorSearchIndexParameters.
func (in *VectorSearchIndexParameters) DeepCopy() *VectorSearchIndexParameters {
	if in == nil {
		return nil
	}
	out := new(VectorSearchIndexParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorSearchIndexSpec) DeepCopyInto(out *VectorSearchIndexSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorSearchIndexSpec.
func (in *VectorSearchIndexSpec) DeepCopy() *VectorSearchIndexSpec {
	if in == nil {
		return nil
	}
	out := new(VectorSearchIndexSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorSearchIndexStatus) DeepCopyInto(out *VectorSearchIndexStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorSearchIndexStatus.
func (in *VectorSearchIndexStatus) DeepCopy() *VectorSearchIndexStatus {
	if in == nil {
		return nil
	}
	out := new(VectorSearchIndexStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorSearchIndexStatusInitParameters) DeepCopyInto(out *VectorSearchIndexStatusInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorSearchIndexStatusInitParameters.
func (in *VectorSearchIndexStatusInitParameters) DeepCopy() *VectorSearchIndexStatusInitParameters {
	if in == nil {
		return nil
	}
	out := new(VectorSearchIndexStatusInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorSearchIndexStatusObservation) DeepCopyInto(out *VectorSearchIndexStatusObservation) {
	*out = *in
	if in.IndexURL != nil {
		in, out := &in.IndexURL, &out.IndexURL
		*out = new(string)
		**out = **in
	}
	if in.IndexedRowCount != nil {
		in, out := &in.IndexedRowCount, &out.IndexedRowCount
		*out = new(float64)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Ready != nil {
		in, out := &in.Ready, &out.Ready
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorSearchIndexStatusObservation.
func (in *VectorSearchIndexStatusObservation) DeepCopy() *VectorSearchIndexStatusObservation {
	if in == nil {
		return nil
	}
	out := new(VectorSearchIndexStatusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorSearchIndexStatusParameters) DeepCopyInto(out *VectorSearchIndexStatusParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorSearchIndexStatusParameters.
func (in *VectorSearchIndexStatusParameters) DeepCopy() *VectorSearchIndexStatusParameters {
	if in == nil {
		return nil
	}
	out := new(VectorSearchIndexStatusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Volume) DeepCopyInto(out *Volume) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Volume.
func (in *Volume) DeepCopy() *Volume {
	if in == nil {
		return nil
	}
	out := new(Volume)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Volume) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeInitParameters) DeepCopyInto(out *VolumeInitParameters) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeInitParameters.
func (in *VolumeInitParameters) DeepCopy() *VolumeInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeList) DeepCopyInto(out *VolumeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Volume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeList.
func (in *VolumeList) DeepCopy() *VolumeList {
	if in == nil {
		return nil
	}
	out := new(VolumeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeObservation) DeepCopyInto(out *VolumeObservation) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
	if in.VolumePath != nil {
		in, out := &in.VolumePath, &out.VolumePath
		*out = new(string)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeObservation.
func (in *VolumeObservation) DeepCopy() *VolumeObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeParameters) DeepCopyInto(out *VolumeParameters) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeParameters.
func (in *VolumeParameters) DeepCopy() *VolumeParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeSpec) DeepCopyInto(out *VolumeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeSpec.
func (in *VolumeSpec) DeepCopy() *VolumeSpec {
	if in == nil {
		return nil
	}
	out := new(VolumeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeStatus) DeepCopyInto(out *VolumeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeStatus.
func (in *VolumeStatus) DeepCopy() *VolumeStatus {
	if in == nil {
		return nil
	}
	out := new(VolumeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumesInitParameters) DeepCopyInto(out *VolumesInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumesInitParameters.
func (in *VolumesInitParameters) DeepCopy() *VolumesInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumesObservation) DeepCopyInto(out *VolumesObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumesObservation.
func (in *VolumesObservation) DeepCopy() *VolumesObservation {
	if in == nil {
		return nil
	}
	out := new(VolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumesParameters) DeepCopyInto(out *VolumesParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumesParameters.
func (in *VolumesParameters) DeepCopy() *VolumesParameters {
	if in == nil {
		return nil
	}
	out := new(VolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WasbInitParameters) DeepCopyInto(out *WasbInitParameters) {
	*out = *in
	if in.AuthType != nil {
		in, out := &in.AuthType, &out.AuthType
		*out = new(string)
		**out = **in
	}
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.Directory != nil {
		in, out := &in.Directory, &out.Directory
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.TokenSecretKey != nil {
		in, out := &in.TokenSecretKey, &out.TokenSecretKey
		*out = new(string)
		**out = **in
	}
	if in.TokenSecretScope != nil {
		in, out := &in.TokenSecretScope, &out.TokenSecretScope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WasbInitParameters.
func (in *WasbInitParameters) DeepCopy() *WasbInitParameters {
	if in == nil {
		return nil
	}
	out := new(WasbInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WasbObservation) DeepCopyInto(out *WasbObservation) {
	*out = *in
	if in.AuthType != nil {
		in, out := &in.AuthType, &out.AuthType
		*out = new(string)
		**out = **in
	}
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.Directory != nil {
		in, out := &in.Directory, &out.Directory
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.TokenSecretKey != nil {
		in, out := &in.TokenSecretKey, &out.TokenSecretKey
		*out = new(string)
		**out = **in
	}
	if in.TokenSecretScope != nil {
		in, out := &in.TokenSecretScope, &out.TokenSecretScope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WasbObservation.
func (in *WasbObservation) DeepCopy() *WasbObservation {
	if in == nil {
		return nil
	}
	out := new(WasbObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WasbParameters) DeepCopyInto(out *WasbParameters) {
	*out = *in
	if in.AuthType != nil {
		in, out := &in.AuthType, &out.AuthType
		*out = new(string)
		**out = **in
	}
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.Directory != nil {
		in, out := &in.Directory, &out.Directory
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.TokenSecretKey != nil {
		in, out := &in.TokenSecretKey, &out.TokenSecretKey
		*out = new(string)
		**out = **in
	}
	if in.TokenSecretScope != nil {
		in, out := &in.TokenSecretScope, &out.TokenSecretScope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WasbParameters.
func (in *WasbParameters) DeepCopy() *WasbParameters {
	if in == nil {
		return nil
	}
	out := new(WasbParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsInitParameters) DeepCopyInto(out *WebhookNotificationsInitParameters) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]OnDurationWarningThresholdExceededInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]OnFailureInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]OnStartInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]OnStreamingBacklogExceededInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]OnSuccessInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsInitParameters.
func (in *WebhookNotificationsInitParameters) DeepCopy() *WebhookNotificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsObservation) DeepCopyInto(out *WebhookNotificationsObservation) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]OnDurationWarningThresholdExceededObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]OnFailureObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]OnStartObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]OnStreamingBacklogExceededObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]OnSuccessObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsObservation.
func (in *WebhookNotificationsObservation) DeepCopy() *WebhookNotificationsObservation {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnDurationWarningThresholdExceededInitParameters) DeepCopyInto(out *WebhookNotificationsOnDurationWarningThresholdExceededInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnDurationWarningThresholdExceededInitParameters.
func (in *WebhookNotificationsOnDurationWarningThresholdExceededInitParameters) DeepCopy() *WebhookNotificationsOnDurationWarningThresholdExceededInitParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnDurationWarningThresholdExceededInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnDurationWarningThresholdExceededObservation) DeepCopyInto(out *WebhookNotificationsOnDurationWarningThresholdExceededObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnDurationWarningThresholdExceededObservation.
func (in *WebhookNotificationsOnDurationWarningThresholdExceededObservation) DeepCopy() *WebhookNotificationsOnDurationWarningThresholdExceededObservation {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnDurationWarningThresholdExceededObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnDurationWarningThresholdExceededParameters) DeepCopyInto(out *WebhookNotificationsOnDurationWarningThresholdExceededParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnDurationWarningThresholdExceededParameters.
func (in *WebhookNotificationsOnDurationWarningThresholdExceededParameters) DeepCopy() *WebhookNotificationsOnDurationWarningThresholdExceededParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnDurationWarningThresholdExceededParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnFailureInitParameters) DeepCopyInto(out *WebhookNotificationsOnFailureInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnFailureInitParameters.
func (in *WebhookNotificationsOnFailureInitParameters) DeepCopy() *WebhookNotificationsOnFailureInitParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnFailureInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnFailureObservation) DeepCopyInto(out *WebhookNotificationsOnFailureObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnFailureObservation.
func (in *WebhookNotificationsOnFailureObservation) DeepCopy() *WebhookNotificationsOnFailureObservation {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnFailureObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnFailureParameters) DeepCopyInto(out *WebhookNotificationsOnFailureParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnFailureParameters.
func (in *WebhookNotificationsOnFailureParameters) DeepCopy() *WebhookNotificationsOnFailureParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnFailureParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnStartInitParameters) DeepCopyInto(out *WebhookNotificationsOnStartInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnStartInitParameters.
func (in *WebhookNotificationsOnStartInitParameters) DeepCopy() *WebhookNotificationsOnStartInitParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnStartInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnStartObservation) DeepCopyInto(out *WebhookNotificationsOnStartObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnStartObservation.
func (in *WebhookNotificationsOnStartObservation) DeepCopy() *WebhookNotificationsOnStartObservation {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnStartObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnStartParameters) DeepCopyInto(out *WebhookNotificationsOnStartParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnStartParameters.
func (in *WebhookNotificationsOnStartParameters) DeepCopy() *WebhookNotificationsOnStartParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnStartParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnStreamingBacklogExceededInitParameters) DeepCopyInto(out *WebhookNotificationsOnStreamingBacklogExceededInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnStreamingBacklogExceededInitParameters.
func (in *WebhookNotificationsOnStreamingBacklogExceededInitParameters) DeepCopy() *WebhookNotificationsOnStreamingBacklogExceededInitParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnStreamingBacklogExceededInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnStreamingBacklogExceededObservation) DeepCopyInto(out *WebhookNotificationsOnStreamingBacklogExceededObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnStreamingBacklogExceededObservation.
func (in *WebhookNotificationsOnStreamingBacklogExceededObservation) DeepCopy() *WebhookNotificationsOnStreamingBacklogExceededObservation {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnStreamingBacklogExceededObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnStreamingBacklogExceededParameters) DeepCopyInto(out *WebhookNotificationsOnStreamingBacklogExceededParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnStreamingBacklogExceededParameters.
func (in *WebhookNotificationsOnStreamingBacklogExceededParameters) DeepCopy() *WebhookNotificationsOnStreamingBacklogExceededParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnStreamingBacklogExceededParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnSuccessInitParameters) DeepCopyInto(out *WebhookNotificationsOnSuccessInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnSuccessInitParameters.
func (in *WebhookNotificationsOnSuccessInitParameters) DeepCopy() *WebhookNotificationsOnSuccessInitParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnSuccessInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnSuccessObservation) DeepCopyInto(out *WebhookNotificationsOnSuccessObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnSuccessObservation.
func (in *WebhookNotificationsOnSuccessObservation) DeepCopy() *WebhookNotificationsOnSuccessObservation {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnSuccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsOnSuccessParameters) DeepCopyInto(out *WebhookNotificationsOnSuccessParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsOnSuccessParameters.
func (in *WebhookNotificationsOnSuccessParameters) DeepCopy() *WebhookNotificationsOnSuccessParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsOnSuccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookNotificationsParameters) DeepCopyInto(out *WebhookNotificationsParameters) {
	*out = *in
	if in.OnDurationWarningThresholdExceeded != nil {
		in, out := &in.OnDurationWarningThresholdExceeded, &out.OnDurationWarningThresholdExceeded
		*out = make([]OnDurationWarningThresholdExceededParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]OnFailureParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStart != nil {
		in, out := &in.OnStart, &out.OnStart
		*out = make([]OnStartParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnStreamingBacklogExceeded != nil {
		in, out := &in.OnStreamingBacklogExceeded, &out.OnStreamingBacklogExceeded
		*out = make([]OnStreamingBacklogExceededParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]OnSuccessParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookNotificationsParameters.
func (in *WebhookNotificationsParameters) DeepCopy() *WebhookNotificationsParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookNotificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeekDayBasedScheduleInitParameters) DeepCopyInto(out *WeekDayBasedScheduleInitParameters) {
	*out = *in
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(string)
		**out = **in
	}
	if in.WindowStartTime != nil {
		in, out := &in.WindowStartTime, &out.WindowStartTime
		*out = make([]WindowStartTimeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeekDayBasedScheduleInitParameters.
func (in *WeekDayBasedScheduleInitParameters) DeepCopy() *WeekDayBasedScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(WeekDayBasedScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeekDayBasedScheduleObservation) DeepCopyInto(out *WeekDayBasedScheduleObservation) {
	*out = *in
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(string)
		**out = **in
	}
	if in.WindowStartTime != nil {
		in, out := &in.WindowStartTime, &out.WindowStartTime
		*out = make([]WindowStartTimeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeekDayBasedScheduleObservation.
func (in *WeekDayBasedScheduleObservation) DeepCopy() *WeekDayBasedScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(WeekDayBasedScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeekDayBasedScheduleParameters) DeepCopyInto(out *WeekDayBasedScheduleParameters) {
	*out = *in
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(string)
		**out = **in
	}
	if in.WindowStartTime != nil {
		in, out := &in.WindowStartTime, &out.WindowStartTime
		*out = make([]WindowStartTimeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeekDayBasedScheduleParameters.
func (in *WeekDayBasedScheduleParameters) DeepCopy() *WeekDayBasedScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(WeekDayBasedScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeeklyInitParameters) DeepCopyInto(out *WeeklyInitParameters) {
	*out = *in
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
	if in.IntervalWeeks != nil {
		in, out := &in.IntervalWeeks, &out.IntervalWeeks
		*out = new(float64)
		**out = **in
	}
	if in.TimeOfDay != nil {
		in, out := &in.TimeOfDay, &out.TimeOfDay
		*out = new(string)
		**out = **in
	}
	if in.UntilDate != nil {
		in, out := &in.UntilDate, &out.UntilDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeeklyInitParameters.
func (in *WeeklyInitParameters) DeepCopy() *WeeklyInitParameters {
	if in == nil {
		return nil
	}
	out := new(WeeklyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeeklyObservation) DeepCopyInto(out *WeeklyObservation) {
	*out = *in
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
	if in.IntervalWeeks != nil {
		in, out := &in.IntervalWeeks, &out.IntervalWeeks
		*out = new(float64)
		**out = **in
	}
	if in.TimeOfDay != nil {
		in, out := &in.TimeOfDay, &out.TimeOfDay
		*out = new(string)
		**out = **in
	}
	if in.UntilDate != nil {
		in, out := &in.UntilDate, &out.UntilDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeeklyObservation.
func (in *WeeklyObservation) DeepCopy() *WeeklyObservation {
	if in == nil {
		return nil
	}
	out := new(WeeklyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeeklyParameters) DeepCopyInto(out *WeeklyParameters) {
	*out = *in
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
	if in.IntervalWeeks != nil {
		in, out := &in.IntervalWeeks, &out.IntervalWeeks
		*out = new(float64)
		**out = **in
	}
	if in.TimeOfDay != nil {
		in, out := &in.TimeOfDay, &out.TimeOfDay
		*out = new(string)
		**out = **in
	}
	if in.UntilDate != nil {
		in, out := &in.UntilDate, &out.UntilDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeeklyParameters.
func (in *WeeklyParameters) DeepCopy() *WeeklyParameters {
	if in == nil {
		return nil
	}
	out := new(WeeklyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowStartTimeInitParameters) DeepCopyInto(out *WindowStartTimeInitParameters) {
	*out = *in
	if in.Hours != nil {
		in, out := &in.Hours, &out.Hours
		*out = new(float64)
		**out = **in
	}
	if in.Minutes != nil {
		in, out := &in.Minutes, &out.Minutes
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowStartTimeInitParameters.
func (in *WindowStartTimeInitParameters) DeepCopy() *WindowStartTimeInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowStartTimeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowStartTimeObservation) DeepCopyInto(out *WindowStartTimeObservation) {
	*out = *in
	if in.Hours != nil {
		in, out := &in.Hours, &out.Hours
		*out = new(float64)
		**out = **in
	}
	if in.Minutes != nil {
		in, out := &in.Minutes, &out.Minutes
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowStartTimeObservation.
func (in *WindowStartTimeObservation) DeepCopy() *WindowStartTimeObservation {
	if in == nil {
		return nil
	}
	out := new(WindowStartTimeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowStartTimeParameters) DeepCopyInto(out *WindowStartTimeParameters) {
	*out = *in
	if in.Hours != nil {
		in, out := &in.Hours, &out.Hours
		*out = new(float64)
		**out = **in
	}
	if in.Minutes != nil {
		in, out := &in.Minutes, &out.Minutes
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowStartTimeParameters.
func (in *WindowStartTimeParameters) DeepCopy() *WindowStartTimeParameters {
	if in == nil {
		return nil
	}
	out := new(WindowStartTimeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadTypeClientsInitParameters) DeepCopyInto(out *WorkloadTypeClientsInitParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadTypeClientsInitParameters.
func (in *WorkloadTypeClientsInitParameters) DeepCopy() *WorkloadTypeClientsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkloadTypeClientsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadTypeClientsObservation) DeepCopyInto(out *WorkloadTypeClientsObservation) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadTypeClientsObservation.
func (in *WorkloadTypeClientsObservation) DeepCopy() *WorkloadTypeClientsObservation {
	if in == nil {
		return nil
	}
	out := new(WorkloadTypeClientsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadTypeClientsParameters) DeepCopyInto(out *WorkloadTypeClientsParameters) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(bool)
		**out = **in
	}
	if in.Notebooks != nil {
		in, out := &in.Notebooks, &out.Notebooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadTypeClientsParameters.
func (in *WorkloadTypeClientsParameters) DeepCopy() *WorkloadTypeClientsParameters {
	if in == nil {
		return nil
	}
	out := new(WorkloadTypeClientsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadTypeInitParameters) DeepCopyInto(out *WorkloadTypeInitParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]ClientsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadTypeInitParameters.
func (in *WorkloadTypeInitParameters) DeepCopy() *WorkloadTypeInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkloadTypeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadTypeObservation) DeepCopyInto(out *WorkloadTypeObservation) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]ClientsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadTypeObservation.
func (in *WorkloadTypeObservation) DeepCopy() *WorkloadTypeObservation {
	if in == nil {
		return nil
	}
	out := new(WorkloadTypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadTypeParameters) DeepCopyInto(out *WorkloadTypeParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]ClientsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadTypeParameters.
func (in *WorkloadTypeParameters) DeepCopy() *WorkloadTypeParameters {
	if in == nil {
		return nil
	}
	out := new(WorkloadTypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceBinding) DeepCopyInto(out *WorkspaceBinding) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceBinding.
func (in *WorkspaceBinding) DeepCopy() *WorkspaceBinding {
	if in == nil {
		return nil
	}
	out := new(WorkspaceBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkspaceBinding) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceBindingInitParameters) DeepCopyInto(out *WorkspaceBindingInitParameters) {
	*out = *in
	if in.BindingType != nil {
		in, out := &in.BindingType, &out.BindingType
		*out = new(string)
		**out = **in
	}
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.SecurableName != nil {
		in, out := &in.SecurableName, &out.SecurableName
		*out = new(string)
		**out = **in
	}
	if in.SecurableType != nil {
		in, out := &in.SecurableType, &out.SecurableType
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceBindingInitParameters.
func (in *WorkspaceBindingInitParameters) DeepCopy() *WorkspaceBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceBindingList) DeepCopyInto(out *WorkspaceBindingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WorkspaceBinding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceBindingList.
func (in *WorkspaceBindingList) DeepCopy() *WorkspaceBindingList {
	if in == nil {
		return nil
	}
	out := new(WorkspaceBindingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkspaceBindingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceBindingObservation) DeepCopyInto(out *WorkspaceBindingObservation) {
	*out = *in
	if in.BindingType != nil {
		in, out := &in.BindingType, &out.BindingType
		*out = new(string)
		**out = **in
	}
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SecurableName != nil {
		in, out := &in.SecurableName, &out.SecurableName
		*out = new(string)
		**out = **in
	}
	if in.SecurableType != nil {
		in, out := &in.SecurableType, &out.SecurableType
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceBindingObservation.
func (in *WorkspaceBindingObservation) DeepCopy() *WorkspaceBindingObservation {
	if in == nil {
		return nil
	}
	out := new(WorkspaceBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceBindingParameters) DeepCopyInto(out *WorkspaceBindingParameters) {
	*out = *in
	if in.BindingType != nil {
		in, out := &in.BindingType, &out.BindingType
		*out = new(string)
		**out = **in
	}
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.SecurableName != nil {
		in, out := &in.SecurableName, &out.SecurableName
		*out = new(string)
		**out = **in
	}
	if in.SecurableType != nil {
		in, out := &in.SecurableType, &out.SecurableType
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceBindingParameters.
func (in *WorkspaceBindingParameters) DeepCopy() *WorkspaceBindingParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceBindingSpec) DeepCopyInto(out *WorkspaceBindingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceBindingSpec.
func (in *WorkspaceBindingSpec) DeepCopy() *WorkspaceBindingSpec {
	if in == nil {
		return nil
	}
	out := new(WorkspaceBindingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceBindingStatus) DeepCopyInto(out *WorkspaceBindingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceBindingStatus.
func (in *WorkspaceBindingStatus) DeepCopy() *WorkspaceBindingStatus {
	if in == nil {
		return nil
	}
	out := new(WorkspaceBindingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceConf) DeepCopyInto(out *WorkspaceConf) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceConf.
func (in *WorkspaceConf) DeepCopy() *WorkspaceConf {
	if in == nil {
		return nil
	}
	out := new(WorkspaceConf)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkspaceConf) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceConfInitParameters) DeepCopyInto(out *WorkspaceConfInitParameters) {
	*out = *in
	if in.CustomConfig != nil {
		in, out := &in.CustomConfig, &out.CustomConfig
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceConfInitParameters.
func (in *WorkspaceConfInitParameters) DeepCopy() *WorkspaceConfInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceConfInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceConfList) DeepCopyInto(out *WorkspaceConfList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WorkspaceConf, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceConfList.
func (in *WorkspaceConfList) DeepCopy() *WorkspaceConfList {
	if in == nil {
		return nil
	}
	out := new(WorkspaceConfList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkspaceConfList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceConfObservation) DeepCopyInto(out *WorkspaceConfObservation) {
	*out = *in
	if in.CustomConfig != nil {
		in, out := &in.CustomConfig, &out.CustomConfig
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceConfObservation.
func (in *WorkspaceConfObservation) DeepCopy() *WorkspaceConfObservation {
	if in == nil {
		return nil
	}
	out := new(WorkspaceConfObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceConfParameters) DeepCopyInto(out *WorkspaceConfParameters) {
	*out = *in
	if in.CustomConfig != nil {
		in, out := &in.CustomConfig, &out.CustomConfig
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceConfParameters.
func (in *WorkspaceConfParameters) DeepCopy() *WorkspaceConfParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceConfParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceConfSpec) DeepCopyInto(out *WorkspaceConfSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceConfSpec.
func (in *WorkspaceConfSpec) DeepCopy() *WorkspaceConfSpec {
	if in == nil {
		return nil
	}
	out := new(WorkspaceConfSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceConfStatus) DeepCopyInto(out *WorkspaceConfStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceConfStatus.
func (in *WorkspaceConfStatus) DeepCopy() *WorkspaceConfStatus {
	if in == nil {
		return nil
	}
	out := new(WorkspaceConfStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceFile) DeepCopyInto(out *WorkspaceFile) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceFile.
func (in *WorkspaceFile) DeepCopy() *WorkspaceFile {
	if in == nil {
		return nil
	}
	out := new(WorkspaceFile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkspaceFile) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceFileInitParameters) DeepCopyInto(out *WorkspaceFileInitParameters) {
	*out = *in
	if in.ContentBase64 != nil {
		in, out := &in.ContentBase64, &out.ContentBase64
		*out = new(string)
		**out = **in
	}
	if in.Md5 != nil {
		in, out := &in.Md5, &out.Md5
		*out = new(string)
		**out = **in
	}
	if in.ObjectID != nil {
		in, out := &in.ObjectID, &out.ObjectID
		*out = new(float64)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceFileInitParameters.
func (in *WorkspaceFileInitParameters) DeepCopy() *WorkspaceFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceFileList) DeepCopyInto(out *WorkspaceFileList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WorkspaceFile, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceFileList.
func (in *WorkspaceFileList) DeepCopy() *WorkspaceFileList {
	if in == nil {
		return nil
	}
	out := new(WorkspaceFileList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkspaceFileList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceFileObservation) DeepCopyInto(out *WorkspaceFileObservation) {
	*out = *in
	if in.ContentBase64 != nil {
		in, out := &in.ContentBase64, &out.ContentBase64
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Md5 != nil {
		in, out := &in.Md5, &out.Md5
		*out = new(string)
		**out = **in
	}
	if in.ObjectID != nil {
		in, out := &in.ObjectID, &out.ObjectID
		*out = new(float64)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WorkspacePath != nil {
		in, out := &in.WorkspacePath, &out.WorkspacePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceFileObservation.
func (in *WorkspaceFileObservation) DeepCopy() *WorkspaceFileObservation {
	if in == nil {
		return nil
	}
	out := new(WorkspaceFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceFileParameters) DeepCopyInto(out *WorkspaceFileParameters) {
	*out = *in
	if in.ContentBase64 != nil {
		in, out := &in.ContentBase64, &out.ContentBase64
		*out = new(string)
		**out = **in
	}
	if in.Md5 != nil {
		in, out := &in.Md5, &out.Md5
		*out = new(string)
		**out = **in
	}
	if in.ObjectID != nil {
		in, out := &in.ObjectID, &out.ObjectID
		*out = new(float64)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceFileParameters.
func (in *WorkspaceFileParameters) DeepCopy() *WorkspaceFileParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceFileSpec) DeepCopyInto(out *WorkspaceFileSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceFileSpec.
func (in *WorkspaceFileSpec) DeepCopy() *WorkspaceFileSpec {
	if in == nil {
		return nil
	}
	out := new(WorkspaceFileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceFileStatus) DeepCopyInto(out *WorkspaceFileStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceFileStatus.
func (in *WorkspaceFileStatus) DeepCopy() *WorkspaceFileStatus {
	if in == nil {
		return nil
	}
	out := new(WorkspaceFileStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceIDInitParameters) DeepCopyInto(out *WorkspaceIDInitParameters) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceIDInitParameters.
func (in *WorkspaceIDInitParameters) DeepCopy() *WorkspaceIDInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceIDInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceIDObservation) DeepCopyInto(out *WorkspaceIDObservation) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceIDObservation.
func (in *WorkspaceIDObservation) DeepCopy() *WorkspaceIDObservation {
	if in == nil {
		return nil
	}
	out := new(WorkspaceIDObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceIDParameters) DeepCopyInto(out *WorkspaceIDParameters) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceIDParameters.
func (in *WorkspaceIDParameters) DeepCopy() *WorkspaceIDParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceIDParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceInitParameters) DeepCopyInto(out *WorkspaceInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceInitParameters.
func (in *WorkspaceInitParameters) DeepCopy() *WorkspaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceObservation) DeepCopyInto(out *WorkspaceObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceObservation.
func (in *WorkspaceObservation) DeepCopy() *WorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(WorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceParameters) DeepCopyInto(out *WorkspaceParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceParameters.
func (in *WorkspaceParameters) DeepCopy() *WorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}
