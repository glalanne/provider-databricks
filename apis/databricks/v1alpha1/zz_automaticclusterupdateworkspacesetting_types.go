// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AutomaticClusterUpdateWorkspaceInitParameters struct {
	CanToggle *bool `json:"canToggle,omitempty" tf:"can_toggle,omitempty"`

	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	MaintenanceWindow []MaintenanceWindowInitParameters `json:"maintenanceWindow,omitempty" tf:"maintenance_window,omitempty"`

	RestartEvenIfNoUpdatesAvailable *bool `json:"restartEvenIfNoUpdatesAvailable,omitempty" tf:"restart_even_if_no_updates_available,omitempty"`
}

type AutomaticClusterUpdateWorkspaceObservation struct {
	CanToggle *bool `json:"canToggle,omitempty" tf:"can_toggle,omitempty"`

	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	EnablementDetails []EnablementDetailsObservation `json:"enablementDetails,omitempty" tf:"enablement_details,omitempty"`

	MaintenanceWindow []MaintenanceWindowObservation `json:"maintenanceWindow,omitempty" tf:"maintenance_window,omitempty"`

	RestartEvenIfNoUpdatesAvailable *bool `json:"restartEvenIfNoUpdatesAvailable,omitempty" tf:"restart_even_if_no_updates_available,omitempty"`
}

type AutomaticClusterUpdateWorkspaceParameters struct {

	// +kubebuilder:validation:Optional
	CanToggle *bool `json:"canToggle,omitempty" tf:"can_toggle,omitempty"`

	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// +kubebuilder:validation:Optional
	MaintenanceWindow []MaintenanceWindowParameters `json:"maintenanceWindow,omitempty" tf:"maintenance_window,omitempty"`

	// +kubebuilder:validation:Optional
	RestartEvenIfNoUpdatesAvailable *bool `json:"restartEvenIfNoUpdatesAvailable,omitempty" tf:"restart_even_if_no_updates_available,omitempty"`
}

type AutomaticClusterUpdateWorkspaceSettingInitParameters struct {
	AutomaticClusterUpdateWorkspace []AutomaticClusterUpdateWorkspaceInitParameters `json:"automaticClusterUpdateWorkspace,omitempty" tf:"automatic_cluster_update_workspace,omitempty"`

	Etag *string `json:"etag,omitempty" tf:"etag,omitempty"`

	SettingName *string `json:"settingName,omitempty" tf:"setting_name,omitempty"`
}

type AutomaticClusterUpdateWorkspaceSettingObservation struct {
	AutomaticClusterUpdateWorkspace []AutomaticClusterUpdateWorkspaceObservation `json:"automaticClusterUpdateWorkspace,omitempty" tf:"automatic_cluster_update_workspace,omitempty"`

	Etag *string `json:"etag,omitempty" tf:"etag,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	SettingName *string `json:"settingName,omitempty" tf:"setting_name,omitempty"`
}

type AutomaticClusterUpdateWorkspaceSettingParameters struct {

	// +kubebuilder:validation:Optional
	AutomaticClusterUpdateWorkspace []AutomaticClusterUpdateWorkspaceParameters `json:"automaticClusterUpdateWorkspace,omitempty" tf:"automatic_cluster_update_workspace,omitempty"`

	// +kubebuilder:validation:Optional
	Etag *string `json:"etag,omitempty" tf:"etag,omitempty"`

	// +kubebuilder:validation:Optional
	SettingName *string `json:"settingName,omitempty" tf:"setting_name,omitempty"`
}

type EnablementDetailsInitParameters struct {
}

type EnablementDetailsObservation struct {
	ForcedForComplianceMode *bool `json:"forcedForComplianceMode,omitempty" tf:"forced_for_compliance_mode,omitempty"`

	UnavailableForDisabledEntitlement *bool `json:"unavailableForDisabledEntitlement,omitempty" tf:"unavailable_for_disabled_entitlement,omitempty"`

	UnavailableForNonEnterpriseTier *bool `json:"unavailableForNonEnterpriseTier,omitempty" tf:"unavailable_for_non_enterprise_tier,omitempty"`
}

type EnablementDetailsParameters struct {
}

type MaintenanceWindowInitParameters struct {
	WeekDayBasedSchedule []WeekDayBasedScheduleInitParameters `json:"weekDayBasedSchedule,omitempty" tf:"week_day_based_schedule,omitempty"`
}

type MaintenanceWindowObservation struct {
	WeekDayBasedSchedule []WeekDayBasedScheduleObservation `json:"weekDayBasedSchedule,omitempty" tf:"week_day_based_schedule,omitempty"`
}

type MaintenanceWindowParameters struct {

	// +kubebuilder:validation:Optional
	WeekDayBasedSchedule []WeekDayBasedScheduleParameters `json:"weekDayBasedSchedule,omitempty" tf:"week_day_based_schedule,omitempty"`
}

type WeekDayBasedScheduleInitParameters struct {
	DayOfWeek *string `json:"dayOfWeek,omitempty" tf:"day_of_week,omitempty"`

	Frequency *string `json:"frequency,omitempty" tf:"frequency,omitempty"`

	WindowStartTime []WindowStartTimeInitParameters `json:"windowStartTime,omitempty" tf:"window_start_time,omitempty"`
}

type WeekDayBasedScheduleObservation struct {
	DayOfWeek *string `json:"dayOfWeek,omitempty" tf:"day_of_week,omitempty"`

	Frequency *string `json:"frequency,omitempty" tf:"frequency,omitempty"`

	WindowStartTime []WindowStartTimeObservation `json:"windowStartTime,omitempty" tf:"window_start_time,omitempty"`
}

type WeekDayBasedScheduleParameters struct {

	// +kubebuilder:validation:Optional
	DayOfWeek *string `json:"dayOfWeek" tf:"day_of_week,omitempty"`

	// +kubebuilder:validation:Optional
	Frequency *string `json:"frequency" tf:"frequency,omitempty"`

	// +kubebuilder:validation:Optional
	WindowStartTime []WindowStartTimeParameters `json:"windowStartTime,omitempty" tf:"window_start_time,omitempty"`
}

type WindowStartTimeInitParameters struct {
	Hours *float64 `json:"hours,omitempty" tf:"hours,omitempty"`

	Minutes *float64 `json:"minutes,omitempty" tf:"minutes,omitempty"`
}

type WindowStartTimeObservation struct {
	Hours *float64 `json:"hours,omitempty" tf:"hours,omitempty"`

	Minutes *float64 `json:"minutes,omitempty" tf:"minutes,omitempty"`
}

type WindowStartTimeParameters struct {

	// +kubebuilder:validation:Optional
	Hours *float64 `json:"hours" tf:"hours,omitempty"`

	// +kubebuilder:validation:Optional
	Minutes *float64 `json:"minutes" tf:"minutes,omitempty"`
}

// AutomaticClusterUpdateWorkspaceSettingSpec defines the desired state of AutomaticClusterUpdateWorkspaceSetting
type AutomaticClusterUpdateWorkspaceSettingSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AutomaticClusterUpdateWorkspaceSettingParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AutomaticClusterUpdateWorkspaceSettingInitParameters `json:"initProvider,omitempty"`
}

// AutomaticClusterUpdateWorkspaceSettingStatus defines the observed state of AutomaticClusterUpdateWorkspaceSetting.
type AutomaticClusterUpdateWorkspaceSettingStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AutomaticClusterUpdateWorkspaceSettingObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AutomaticClusterUpdateWorkspaceSetting is the Schema for the AutomaticClusterUpdateWorkspaceSettings API. <no value>
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,databricks}
type AutomaticClusterUpdateWorkspaceSetting struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.automaticClusterUpdateWorkspace) || (has(self.initProvider) && has(self.initProvider.automaticClusterUpdateWorkspace))",message="spec.forProvider.automaticClusterUpdateWorkspace is a required parameter"
	Spec   AutomaticClusterUpdateWorkspaceSettingSpec   `json:"spec"`
	Status AutomaticClusterUpdateWorkspaceSettingStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AutomaticClusterUpdateWorkspaceSettingList contains a list of AutomaticClusterUpdateWorkspaceSettings
type AutomaticClusterUpdateWorkspaceSettingList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AutomaticClusterUpdateWorkspaceSetting `json:"items"`
}

// Repository type metadata.
var (
	AutomaticClusterUpdateWorkspaceSetting_Kind             = "AutomaticClusterUpdateWorkspaceSetting"
	AutomaticClusterUpdateWorkspaceSetting_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AutomaticClusterUpdateWorkspaceSetting_Kind}.String()
	AutomaticClusterUpdateWorkspaceSetting_KindAPIVersion   = AutomaticClusterUpdateWorkspaceSetting_Kind + "." + CRDGroupVersion.String()
	AutomaticClusterUpdateWorkspaceSetting_GroupVersionKind = CRDGroupVersion.WithKind(AutomaticClusterUpdateWorkspaceSetting_Kind)
)

func init() {
	SchemeBuilder.Register(&AutomaticClusterUpdateWorkspaceSetting{}, &AutomaticClusterUpdateWorkspaceSettingList{})
}
