// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ErrorMessagesInitParameters struct {
	ErrorMessage *string `json:"errorMessage,omitempty" tf:"error_message,omitempty"`

	ErrorType *string `json:"errorType,omitempty" tf:"error_type,omitempty"`
}

type ErrorMessagesObservation struct {
	ErrorMessage *string `json:"errorMessage,omitempty" tf:"error_message,omitempty"`

	ErrorType *string `json:"errorType,omitempty" tf:"error_type,omitempty"`
}

type ErrorMessagesParameters struct {

	// +kubebuilder:validation:Optional
	ErrorMessage *string `json:"errorMessage,omitempty" tf:"error_message,omitempty"`

	// +kubebuilder:validation:Optional
	ErrorType *string `json:"errorType,omitempty" tf:"error_type,omitempty"`
}

type GCPNetworkInfoInitParameters struct {

	// The Google Cloud project ID of the VPC network.
	NetworkProjectID *string `json:"networkProjectId,omitempty" tf:"network_project_id,omitempty"`

	// The name of the secondary IP range for pods. A Databricks-managed GKE cluster uses this IP range for its pods. This secondary IP range can only be used by one workspace.
	PodIPRangeName *string `json:"podIpRangeName,omitempty" tf:"pod_ip_range_name,omitempty"`

	// The name of the secondary IP range for services. A Databricks-managed GKE cluster uses this IP range for its services. This secondary IP range can only be used by one workspace.
	ServiceIPRangeName *string `json:"serviceIpRangeName,omitempty" tf:"service_ip_range_name,omitempty"`

	// The ID of the subnet associated with this network.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// The Google Cloud region of the workspace data plane. For example, us-east4.
	SubnetRegion *string `json:"subnetRegion,omitempty" tf:"subnet_region,omitempty"`

	// (AWS only) aws_vpc id
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`
}

type GCPNetworkInfoObservation struct {

	// The Google Cloud project ID of the VPC network.
	NetworkProjectID *string `json:"networkProjectId,omitempty" tf:"network_project_id,omitempty"`

	// The name of the secondary IP range for pods. A Databricks-managed GKE cluster uses this IP range for its pods. This secondary IP range can only be used by one workspace.
	PodIPRangeName *string `json:"podIpRangeName,omitempty" tf:"pod_ip_range_name,omitempty"`

	// The name of the secondary IP range for services. A Databricks-managed GKE cluster uses this IP range for its services. This secondary IP range can only be used by one workspace.
	ServiceIPRangeName *string `json:"serviceIpRangeName,omitempty" tf:"service_ip_range_name,omitempty"`

	// The ID of the subnet associated with this network.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// The Google Cloud region of the workspace data plane. For example, us-east4.
	SubnetRegion *string `json:"subnetRegion,omitempty" tf:"subnet_region,omitempty"`

	// (AWS only) aws_vpc id
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`
}

type GCPNetworkInfoParameters struct {

	// The Google Cloud project ID of the VPC network.
	// +kubebuilder:validation:Optional
	NetworkProjectID *string `json:"networkProjectId" tf:"network_project_id,omitempty"`

	// The name of the secondary IP range for pods. A Databricks-managed GKE cluster uses this IP range for its pods. This secondary IP range can only be used by one workspace.
	// +kubebuilder:validation:Optional
	PodIPRangeName *string `json:"podIpRangeName" tf:"pod_ip_range_name,omitempty"`

	// The name of the secondary IP range for services. A Databricks-managed GKE cluster uses this IP range for its services. This secondary IP range can only be used by one workspace.
	// +kubebuilder:validation:Optional
	ServiceIPRangeName *string `json:"serviceIpRangeName" tf:"service_ip_range_name,omitempty"`

	// The ID of the subnet associated with this network.
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId" tf:"subnet_id,omitempty"`

	// The Google Cloud region of the workspace data plane. For example, us-east4.
	// +kubebuilder:validation:Optional
	SubnetRegion *string `json:"subnetRegion" tf:"subnet_region,omitempty"`

	// (AWS only) aws_vpc id
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId" tf:"vpc_id,omitempty"`
}

type MwsNetworksInitParameters struct {

	// Account Id that could be found in the top right corner of Accounts Console
	AccountIDSecretRef v1.SecretKeySelector `json:"accountIdSecretRef" tf:"-"`

	CreationTime *float64 `json:"creationTime,omitempty" tf:"creation_time,omitempty"`

	ErrorMessages []ErrorMessagesInitParameters `json:"errorMessages,omitempty" tf:"error_messages,omitempty"`

	// (GCP only) a block consists of Google Cloud specific information for this network, for example the VPC ID, subnet ID, and secondary IP ranges. It has the following fields:
	GCPNetworkInfo []GCPNetworkInfoInitParameters `json:"gcpNetworkInfo,omitempty" tf:"gcp_network_info,omitempty"`

	// (String) id of network to be used for databricks_mws_workspaces resource.
	NetworkID *string `json:"networkId,omitempty" tf:"network_id,omitempty"`

	// name under which this network is registered
	NetworkName *string `json:"networkName,omitempty" tf:"network_name,omitempty"`

	// (AWS only) ids of aws_security_group
	// +listType=set
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// (AWS only) ids of aws_subnet
	// +listType=set
	SubnetIds []*string `json:"subnetIds,omitempty" tf:"subnet_ids,omitempty"`

	// mapping of databricks_mws_vpc_endpoint for PrivateLink or Private Service Connect connections
	VPCEndpoints []VPCEndpointsInitParameters `json:"vpcEndpoints,omitempty" tf:"vpc_endpoints,omitempty"`

	// (AWS only) aws_vpc id
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// (String) VPC attachment status
	VPCStatus *string `json:"vpcStatus,omitempty" tf:"vpc_status,omitempty"`

	// (Integer) id of associated workspace
	WorkspaceID *float64 `json:"workspaceId,omitempty" tf:"workspace_id,omitempty"`
}

type MwsNetworksObservation struct {
	CreationTime *float64 `json:"creationTime,omitempty" tf:"creation_time,omitempty"`

	ErrorMessages []ErrorMessagesObservation `json:"errorMessages,omitempty" tf:"error_messages,omitempty"`

	// (GCP only) a block consists of Google Cloud specific information for this network, for example the VPC ID, subnet ID, and secondary IP ranges. It has the following fields:
	GCPNetworkInfo []GCPNetworkInfoObservation `json:"gcpNetworkInfo,omitempty" tf:"gcp_network_info,omitempty"`

	// Canonical unique identifier for the mws networks.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) id of network to be used for databricks_mws_workspaces resource.
	NetworkID *string `json:"networkId,omitempty" tf:"network_id,omitempty"`

	// name under which this network is registered
	NetworkName *string `json:"networkName,omitempty" tf:"network_name,omitempty"`

	// (AWS only) ids of aws_security_group
	// +listType=set
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// (AWS only) ids of aws_subnet
	// +listType=set
	SubnetIds []*string `json:"subnetIds,omitempty" tf:"subnet_ids,omitempty"`

	// mapping of databricks_mws_vpc_endpoint for PrivateLink or Private Service Connect connections
	VPCEndpoints []VPCEndpointsObservation `json:"vpcEndpoints,omitempty" tf:"vpc_endpoints,omitempty"`

	// (AWS only) aws_vpc id
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// (String) VPC attachment status
	VPCStatus *string `json:"vpcStatus,omitempty" tf:"vpc_status,omitempty"`

	// (Integer) id of associated workspace
	WorkspaceID *float64 `json:"workspaceId,omitempty" tf:"workspace_id,omitempty"`
}

type MwsNetworksParameters struct {

	// Account Id that could be found in the top right corner of Accounts Console
	// +kubebuilder:validation:Optional
	AccountIDSecretRef v1.SecretKeySelector `json:"accountIdSecretRef" tf:"-"`

	// +kubebuilder:validation:Optional
	CreationTime *float64 `json:"creationTime,omitempty" tf:"creation_time,omitempty"`

	// +kubebuilder:validation:Optional
	ErrorMessages []ErrorMessagesParameters `json:"errorMessages,omitempty" tf:"error_messages,omitempty"`

	// (GCP only) a block consists of Google Cloud specific information for this network, for example the VPC ID, subnet ID, and secondary IP ranges. It has the following fields:
	// +kubebuilder:validation:Optional
	GCPNetworkInfo []GCPNetworkInfoParameters `json:"gcpNetworkInfo,omitempty" tf:"gcp_network_info,omitempty"`

	// (String) id of network to be used for databricks_mws_workspaces resource.
	// +kubebuilder:validation:Optional
	NetworkID *string `json:"networkId,omitempty" tf:"network_id,omitempty"`

	// name under which this network is registered
	// +kubebuilder:validation:Optional
	NetworkName *string `json:"networkName,omitempty" tf:"network_name,omitempty"`

	// (AWS only) ids of aws_security_group
	// +kubebuilder:validation:Optional
	// +listType=set
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// (AWS only) ids of aws_subnet
	// +kubebuilder:validation:Optional
	// +listType=set
	SubnetIds []*string `json:"subnetIds,omitempty" tf:"subnet_ids,omitempty"`

	// mapping of databricks_mws_vpc_endpoint for PrivateLink or Private Service Connect connections
	// +kubebuilder:validation:Optional
	VPCEndpoints []VPCEndpointsParameters `json:"vpcEndpoints,omitempty" tf:"vpc_endpoints,omitempty"`

	// (AWS only) aws_vpc id
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// (String) VPC attachment status
	// +kubebuilder:validation:Optional
	VPCStatus *string `json:"vpcStatus,omitempty" tf:"vpc_status,omitempty"`

	// (Integer) id of associated workspace
	// +kubebuilder:validation:Optional
	WorkspaceID *float64 `json:"workspaceId,omitempty" tf:"workspace_id,omitempty"`
}

type VPCEndpointsInitParameters struct {

	// +listType=set
	DataplaneRelay []*string `json:"dataplaneRelay,omitempty" tf:"dataplane_relay,omitempty"`

	// +listType=set
	RestAPI []*string `json:"restApi,omitempty" tf:"rest_api,omitempty"`
}

type VPCEndpointsObservation struct {

	// +listType=set
	DataplaneRelay []*string `json:"dataplaneRelay,omitempty" tf:"dataplane_relay,omitempty"`

	// +listType=set
	RestAPI []*string `json:"restApi,omitempty" tf:"rest_api,omitempty"`
}

type VPCEndpointsParameters struct {

	// +kubebuilder:validation:Optional
	// +listType=set
	DataplaneRelay []*string `json:"dataplaneRelay" tf:"dataplane_relay,omitempty"`

	// +kubebuilder:validation:Optional
	// +listType=set
	RestAPI []*string `json:"restApi" tf:"rest_api,omitempty"`
}

// MwsNetworksSpec defines the desired state of MwsNetworks
type MwsNetworksSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     MwsNetworksParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider MwsNetworksInitParameters `json:"initProvider,omitempty"`
}

// MwsNetworksStatus defines the observed state of MwsNetworks.
type MwsNetworksStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        MwsNetworksObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// MwsNetworks is the Schema for the MwsNetworkss API. ""subcategory: "Deployment"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,databricks}
type MwsNetworks struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.accountIdSecretRef)",message="spec.forProvider.accountIdSecretRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.networkName) || (has(self.initProvider) && has(self.initProvider.networkName))",message="spec.forProvider.networkName is a required parameter"
	Spec   MwsNetworksSpec   `json:"spec"`
	Status MwsNetworksStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MwsNetworksList contains a list of MwsNetworkss
type MwsNetworksList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MwsNetworks `json:"items"`
}

// Repository type metadata.
var (
	MwsNetworks_Kind             = "MwsNetworks"
	MwsNetworks_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: MwsNetworks_Kind}.String()
	MwsNetworks_KindAPIVersion   = MwsNetworks_Kind + "." + CRDGroupVersion.String()
	MwsNetworks_GroupVersionKind = CRDGroupVersion.WithKind(MwsNetworks_Kind)
)

func init() {
	SchemeBuilder.Register(&MwsNetworks{}, &MwsNetworksList{})
}
