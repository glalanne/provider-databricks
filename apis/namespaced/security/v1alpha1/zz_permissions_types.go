// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type AccessControlInitParameters struct {

	// name of the group. We recommend setting permissions on groups.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/security/v1alpha1.Group
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("display_name",false)
	GroupName *string `json:"groupName,omitempty" tf:"group_name,omitempty"`

	// Reference to a Group in security to populate groupName.
	// +kubebuilder:validation:Optional
	GroupNameRef *v1.NamespacedReference `json:"groupNameRef,omitempty" tf:"-"`

	// Selector for a Group in security to populate groupName.
	// +kubebuilder:validation:Optional
	GroupNameSelector *v1.NamespacedSelector `json:"groupNameSelector,omitempty" tf:"-"`

	// permission level according to specific resource. See examples above for the reference.
	PermissionLevel *string `json:"permissionLevel,omitempty" tf:"permission_level,omitempty"`

	// Application ID (not service principal name!) of the service_principal.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/security/v1alpha1.ServicePrincipal
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("application_id", false)
	ServicePrincipalName *string `json:"servicePrincipalName,omitempty" tf:"service_principal_name,omitempty"`

	// Reference to a ServicePrincipal in security to populate servicePrincipalName.
	// +kubebuilder:validation:Optional
	ServicePrincipalNameRef *v1.NamespacedReference `json:"servicePrincipalNameRef,omitempty" tf:"-"`

	// Selector for a ServicePrincipal in security to populate servicePrincipalName.
	// +kubebuilder:validation:Optional
	ServicePrincipalNameSelector *v1.NamespacedSelector `json:"servicePrincipalNameSelector,omitempty" tf:"-"`

	// name of the user.
	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

type AccessControlObservation struct {

	// name of the group. We recommend setting permissions on groups.
	GroupName *string `json:"groupName,omitempty" tf:"group_name,omitempty"`

	// permission level according to specific resource. See examples above for the reference.
	PermissionLevel *string `json:"permissionLevel,omitempty" tf:"permission_level,omitempty"`

	// Application ID (not service principal name!) of the service_principal.
	ServicePrincipalName *string `json:"servicePrincipalName,omitempty" tf:"service_principal_name,omitempty"`

	// name of the user.
	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

type AccessControlParameters struct {

	// name of the group. We recommend setting permissions on groups.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/security/v1alpha1.Group
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("display_name",false)
	// +kubebuilder:validation:Optional
	GroupName *string `json:"groupName,omitempty" tf:"group_name,omitempty"`

	// Reference to a Group in security to populate groupName.
	// +kubebuilder:validation:Optional
	GroupNameRef *v1.NamespacedReference `json:"groupNameRef,omitempty" tf:"-"`

	// Selector for a Group in security to populate groupName.
	// +kubebuilder:validation:Optional
	GroupNameSelector *v1.NamespacedSelector `json:"groupNameSelector,omitempty" tf:"-"`

	// permission level according to specific resource. See examples above for the reference.
	// +kubebuilder:validation:Optional
	PermissionLevel *string `json:"permissionLevel,omitempty" tf:"permission_level,omitempty"`

	// Application ID (not service principal name!) of the service_principal.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/security/v1alpha1.ServicePrincipal
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("application_id", false)
	// +kubebuilder:validation:Optional
	ServicePrincipalName *string `json:"servicePrincipalName,omitempty" tf:"service_principal_name,omitempty"`

	// Reference to a ServicePrincipal in security to populate servicePrincipalName.
	// +kubebuilder:validation:Optional
	ServicePrincipalNameRef *v1.NamespacedReference `json:"servicePrincipalNameRef,omitempty" tf:"-"`

	// Selector for a ServicePrincipal in security to populate servicePrincipalName.
	// +kubebuilder:validation:Optional
	ServicePrincipalNameSelector *v1.NamespacedSelector `json:"servicePrincipalNameSelector,omitempty" tf:"-"`

	// name of the user.
	// +kubebuilder:validation:Optional
	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

type PermissionsInitParameters struct {
	AccessControl []AccessControlInitParameters `json:"accessControl,omitempty" tf:"access_control,omitempty"`

	// Canonical unique identifier for the permissions in form of /<object type>/<object id>.
	AlertV2ID *string `json:"alertV2Id,omitempty" tf:"alert_v2_id,omitempty"`

	// app name
	AppName *string `json:"appName,omitempty" tf:"app_name,omitempty"`

	// either tokens or passwords.
	Authorization *string `json:"authorization,omitempty" tf:"authorization,omitempty"`

	// cluster id
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/compute/v1alpha1.Cluster
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// Reference to a Cluster in compute to populate clusterId.
	// +kubebuilder:validation:Optional
	ClusterIDRef *v1.NamespacedReference `json:"clusterIdRef,omitempty" tf:"-"`

	// Selector for a Cluster in compute to populate clusterId.
	// +kubebuilder:validation:Optional
	ClusterIDSelector *v1.NamespacedSelector `json:"clusterIdSelector,omitempty" tf:"-"`

	// cluster policy id
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/compute/v1alpha1.ClusterPolicy
	ClusterPolicyID *string `json:"clusterPolicyId,omitempty" tf:"cluster_policy_id,omitempty"`

	// Reference to a ClusterPolicy in compute to populate clusterPolicyId.
	// +kubebuilder:validation:Optional
	ClusterPolicyIDRef *v1.NamespacedReference `json:"clusterPolicyIdRef,omitempty" tf:"-"`

	// Selector for a ClusterPolicy in compute to populate clusterPolicyId.
	// +kubebuilder:validation:Optional
	ClusterPolicyIDSelector *v1.NamespacedSelector `json:"clusterPolicyIdSelector,omitempty" tf:"-"`

	// Canonical unique identifier for the permissions in form of /<object type>/<object id>.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/sql/v1alpha1.Dashboard
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	DashboardID *string `json:"dashboardId,omitempty" tf:"dashboard_id,omitempty"`

	// Reference to a Dashboard in sql to populate dashboardId.
	// +kubebuilder:validation:Optional
	DashboardIDRef *v1.NamespacedReference `json:"dashboardIdRef,omitempty" tf:"-"`

	// Selector for a Dashboard in sql to populate dashboardId.
	// +kubebuilder:validation:Optional
	DashboardIDSelector *v1.NamespacedSelector `json:"dashboardIdSelector,omitempty" tf:"-"`

	DatabaseInstanceName *string `json:"databaseInstanceName,omitempty" tf:"database_instance_name,omitempty"`

	// directory id
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/workspace/v1alpha1.Directory
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("object_id",false)
	DirectoryID *string `json:"directoryId,omitempty" tf:"directory_id,omitempty"`

	// Reference to a Directory in workspace to populate directoryId.
	// +kubebuilder:validation:Optional
	DirectoryIDRef *v1.NamespacedReference `json:"directoryIdRef,omitempty" tf:"-"`

	// Selector for a Directory in workspace to populate directoryId.
	// +kubebuilder:validation:Optional
	DirectoryIDSelector *v1.NamespacedSelector `json:"directoryIdSelector,omitempty" tf:"-"`

	// path of directory
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/workspace/v1alpha1.Directory
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("path",false)
	DirectoryPath *string `json:"directoryPath,omitempty" tf:"directory_path,omitempty"`

	// Reference to a Directory in workspace to populate directoryPath.
	// +kubebuilder:validation:Optional
	DirectoryPathRef *v1.NamespacedReference `json:"directoryPathRef,omitempty" tf:"-"`

	// Selector for a Directory in workspace to populate directoryPath.
	// +kubebuilder:validation:Optional
	DirectoryPathSelector *v1.NamespacedSelector `json:"directoryPathSelector,omitempty" tf:"-"`

	// MLflow experiment id
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/mlflow/v1alpha1.MlflowExperiment
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	ExperimentID *string `json:"experimentId,omitempty" tf:"experiment_id,omitempty"`

	// Reference to a MlflowExperiment in mlflow to populate experimentId.
	// +kubebuilder:validation:Optional
	ExperimentIDRef *v1.NamespacedReference `json:"experimentIdRef,omitempty" tf:"-"`

	// Selector for a MlflowExperiment in mlflow to populate experimentId.
	// +kubebuilder:validation:Optional
	ExperimentIDSelector *v1.NamespacedSelector `json:"experimentIdSelector,omitempty" tf:"-"`

	// instance pool id
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/compute/v1alpha1.InstancePool
	InstancePoolID *string `json:"instancePoolId,omitempty" tf:"instance_pool_id,omitempty"`

	// Reference to a InstancePool in compute to populate instancePoolId.
	// +kubebuilder:validation:Optional
	InstancePoolIDRef *v1.NamespacedReference `json:"instancePoolIdRef,omitempty" tf:"-"`

	// Selector for a InstancePool in compute to populate instancePoolId.
	// +kubebuilder:validation:Optional
	InstancePoolIDSelector *v1.NamespacedSelector `json:"instancePoolIdSelector,omitempty" tf:"-"`

	// job id
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/compute/v1alpha1.Job
	JobID *string `json:"jobId,omitempty" tf:"job_id,omitempty"`

	// Reference to a Job in compute to populate jobId.
	// +kubebuilder:validation:Optional
	JobIDRef *v1.NamespacedReference `json:"jobIdRef,omitempty" tf:"-"`

	// Selector for a Job in compute to populate jobId.
	// +kubebuilder:validation:Optional
	JobIDSelector *v1.NamespacedSelector `json:"jobIdSelector,omitempty" tf:"-"`

	// ID of notebook within workspace
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/workspace/v1alpha1.Notebook
	NotebookID *string `json:"notebookId,omitempty" tf:"notebook_id,omitempty"`

	// Reference to a Notebook in workspace to populate notebookId.
	// +kubebuilder:validation:Optional
	NotebookIDRef *v1.NamespacedReference `json:"notebookIdRef,omitempty" tf:"-"`

	// Selector for a Notebook in workspace to populate notebookId.
	// +kubebuilder:validation:Optional
	NotebookIDSelector *v1.NamespacedSelector `json:"notebookIdSelector,omitempty" tf:"-"`

	// path of notebook
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/workspace/v1alpha1.Notebook
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("path",false)
	NotebookPath *string `json:"notebookPath,omitempty" tf:"notebook_path,omitempty"`

	// Reference to a Notebook in workspace to populate notebookPath.
	// +kubebuilder:validation:Optional
	NotebookPathRef *v1.NamespacedReference `json:"notebookPathRef,omitempty" tf:"-"`

	// Selector for a Notebook in workspace to populate notebookPath.
	// +kubebuilder:validation:Optional
	NotebookPathSelector *v1.NamespacedSelector `json:"notebookPathSelector,omitempty" tf:"-"`

	// type of permissions.
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// pipeline id
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/compute/v1alpha1.Pipeline
	PipelineID *string `json:"pipelineId,omitempty" tf:"pipeline_id,omitempty"`

	// Reference to a Pipeline in compute to populate pipelineId.
	// +kubebuilder:validation:Optional
	PipelineIDRef *v1.NamespacedReference `json:"pipelineIdRef,omitempty" tf:"-"`

	// Selector for a Pipeline in compute to populate pipelineId.
	// +kubebuilder:validation:Optional
	PipelineIDSelector *v1.NamespacedSelector `json:"pipelineIdSelector,omitempty" tf:"-"`

	// MLflow registered model id
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/mlflow/v1alpha1.MlflowModel
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("registered_model_id",true)
	RegisteredModelID *string `json:"registeredModelId,omitempty" tf:"registered_model_id,omitempty"`

	// Reference to a MlflowModel in mlflow to populate registeredModelId.
	// +kubebuilder:validation:Optional
	RegisteredModelIDRef *v1.NamespacedReference `json:"registeredModelIdRef,omitempty" tf:"-"`

	// Selector for a MlflowModel in mlflow to populate registeredModelId.
	// +kubebuilder:validation:Optional
	RegisteredModelIDSelector *v1.NamespacedSelector `json:"registeredModelIdSelector,omitempty" tf:"-"`

	// repo id
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/workspace/v1alpha1.Repo
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	RepoID *string `json:"repoId,omitempty" tf:"repo_id,omitempty"`

	// Reference to a Repo in workspace to populate repoId.
	// +kubebuilder:validation:Optional
	RepoIDRef *v1.NamespacedReference `json:"repoIdRef,omitempty" tf:"-"`

	// Selector for a Repo in workspace to populate repoId.
	// +kubebuilder:validation:Optional
	RepoIDSelector *v1.NamespacedSelector `json:"repoIdSelector,omitempty" tf:"-"`

	// path of databricks repo directory(/Repos/<username>/...)
	RepoPath *string `json:"repoPath,omitempty" tf:"repo_path,omitempty"`

	// SQL alert id
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/sql/v1alpha1.SQLAlert
	SQLAlertID *string `json:"sqlAlertId,omitempty" tf:"sql_alert_id,omitempty"`

	// Reference to a SQLAlert in sql to populate sqlAlertId.
	// +kubebuilder:validation:Optional
	SQLAlertIDRef *v1.NamespacedReference `json:"sqlAlertIdRef,omitempty" tf:"-"`

	// Selector for a SQLAlert in sql to populate sqlAlertId.
	// +kubebuilder:validation:Optional
	SQLAlertIDSelector *v1.NamespacedSelector `json:"sqlAlertIdSelector,omitempty" tf:"-"`

	// SQL dashboard id
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/sql/v1alpha1.SQLDashboard
	SQLDashboardID *string `json:"sqlDashboardId,omitempty" tf:"sql_dashboard_id,omitempty"`

	// Reference to a SQLDashboard in sql to populate sqlDashboardId.
	// +kubebuilder:validation:Optional
	SQLDashboardIDRef *v1.NamespacedReference `json:"sqlDashboardIdRef,omitempty" tf:"-"`

	// Selector for a SQLDashboard in sql to populate sqlDashboardId.
	// +kubebuilder:validation:Optional
	SQLDashboardIDSelector *v1.NamespacedSelector `json:"sqlDashboardIdSelector,omitempty" tf:"-"`

	// SQL warehouse id
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/sql/v1alpha1.SQLEndpoint
	SQLEndpointID *string `json:"sqlEndpointId,omitempty" tf:"sql_endpoint_id,omitempty"`

	// Reference to a SQLEndpoint in sql to populate sqlEndpointId.
	// +kubebuilder:validation:Optional
	SQLEndpointIDRef *v1.NamespacedReference `json:"sqlEndpointIdRef,omitempty" tf:"-"`

	// Selector for a SQLEndpoint in sql to populate sqlEndpointId.
	// +kubebuilder:validation:Optional
	SQLEndpointIDSelector *v1.NamespacedSelector `json:"sqlEndpointIdSelector,omitempty" tf:"-"`

	// SQL query id
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/sql/v1alpha1.SQLQuery
	SQLQueryID *string `json:"sqlQueryId,omitempty" tf:"sql_query_id,omitempty"`

	// Reference to a SQLQuery in sql to populate sqlQueryId.
	// +kubebuilder:validation:Optional
	SQLQueryIDRef *v1.NamespacedReference `json:"sqlQueryIdRef,omitempty" tf:"-"`

	// Selector for a SQLQuery in sql to populate sqlQueryId.
	// +kubebuilder:validation:Optional
	SQLQueryIDSelector *v1.NamespacedSelector `json:"sqlQueryIdSelector,omitempty" tf:"-"`

	// Model Serving endpoint id.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/serving/v1alpha1.ModelServing
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("serving_endpoint_id",true)
	ServingEndpointID *string `json:"servingEndpointId,omitempty" tf:"serving_endpoint_id,omitempty"`

	// Reference to a ModelServing in serving to populate servingEndpointId.
	// +kubebuilder:validation:Optional
	ServingEndpointIDRef *v1.NamespacedReference `json:"servingEndpointIdRef,omitempty" tf:"-"`

	// Selector for a ModelServing in serving to populate servingEndpointId.
	// +kubebuilder:validation:Optional
	ServingEndpointIDSelector *v1.NamespacedSelector `json:"servingEndpointIdSelector,omitempty" tf:"-"`

	// Vector Search endpoint id.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/mosaic/v1alpha1.VectorSearchEndpoint
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("endpoint_id",true)
	VectorSearchEndpointID *string `json:"vectorSearchEndpointId,omitempty" tf:"vector_search_endpoint_id,omitempty"`

	// Reference to a VectorSearchEndpoint in mosaic to populate vectorSearchEndpointId.
	// +kubebuilder:validation:Optional
	VectorSearchEndpointIDRef *v1.NamespacedReference `json:"vectorSearchEndpointIdRef,omitempty" tf:"-"`

	// Selector for a VectorSearchEndpoint in mosaic to populate vectorSearchEndpointId.
	// +kubebuilder:validation:Optional
	VectorSearchEndpointIDSelector *v1.NamespacedSelector `json:"vectorSearchEndpointIdSelector,omitempty" tf:"-"`

	// Canonical unique identifier for the permissions in form of /<object type>/<object id>.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/workspace/v1alpha1.WorkspaceFile
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("object_id",false)
	WorkspaceFileID *string `json:"workspaceFileId,omitempty" tf:"workspace_file_id,omitempty"`

	// Reference to a WorkspaceFile in workspace to populate workspaceFileId.
	// +kubebuilder:validation:Optional
	WorkspaceFileIDRef *v1.NamespacedReference `json:"workspaceFileIdRef,omitempty" tf:"-"`

	// Selector for a WorkspaceFile in workspace to populate workspaceFileId.
	// +kubebuilder:validation:Optional
	WorkspaceFileIDSelector *v1.NamespacedSelector `json:"workspaceFileIdSelector,omitempty" tf:"-"`

	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/workspace/v1alpha1.WorkspaceFile
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("path",false)
	WorkspaceFilePath *string `json:"workspaceFilePath,omitempty" tf:"workspace_file_path,omitempty"`

	// Reference to a WorkspaceFile in workspace to populate workspaceFilePath.
	// +kubebuilder:validation:Optional
	WorkspaceFilePathRef *v1.NamespacedReference `json:"workspaceFilePathRef,omitempty" tf:"-"`

	// Selector for a WorkspaceFile in workspace to populate workspaceFilePath.
	// +kubebuilder:validation:Optional
	WorkspaceFilePathSelector *v1.NamespacedSelector `json:"workspaceFilePathSelector,omitempty" tf:"-"`
}

type PermissionsObservation struct {
	AccessControl []AccessControlObservation `json:"accessControl,omitempty" tf:"access_control,omitempty"`

	// Canonical unique identifier for the permissions in form of /<object type>/<object id>.
	AlertV2ID *string `json:"alertV2Id,omitempty" tf:"alert_v2_id,omitempty"`

	// app name
	AppName *string `json:"appName,omitempty" tf:"app_name,omitempty"`

	// either tokens or passwords.
	Authorization *string `json:"authorization,omitempty" tf:"authorization,omitempty"`

	// cluster id
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// cluster policy id
	ClusterPolicyID *string `json:"clusterPolicyId,omitempty" tf:"cluster_policy_id,omitempty"`

	// Canonical unique identifier for the permissions in form of /<object type>/<object id>.
	DashboardID *string `json:"dashboardId,omitempty" tf:"dashboard_id,omitempty"`

	DatabaseInstanceName *string `json:"databaseInstanceName,omitempty" tf:"database_instance_name,omitempty"`

	// directory id
	DirectoryID *string `json:"directoryId,omitempty" tf:"directory_id,omitempty"`

	// path of directory
	DirectoryPath *string `json:"directoryPath,omitempty" tf:"directory_path,omitempty"`

	// MLflow experiment id
	ExperimentID *string `json:"experimentId,omitempty" tf:"experiment_id,omitempty"`

	// Canonical unique identifier for the permissions in form of /<object type>/<object id>.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// instance pool id
	InstancePoolID *string `json:"instancePoolId,omitempty" tf:"instance_pool_id,omitempty"`

	// job id
	JobID *string `json:"jobId,omitempty" tf:"job_id,omitempty"`

	// ID of notebook within workspace
	NotebookID *string `json:"notebookId,omitempty" tf:"notebook_id,omitempty"`

	// path of notebook
	NotebookPath *string `json:"notebookPath,omitempty" tf:"notebook_path,omitempty"`

	// type of permissions.
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// pipeline id
	PipelineID *string `json:"pipelineId,omitempty" tf:"pipeline_id,omitempty"`

	// MLflow registered model id
	RegisteredModelID *string `json:"registeredModelId,omitempty" tf:"registered_model_id,omitempty"`

	// repo id
	RepoID *string `json:"repoId,omitempty" tf:"repo_id,omitempty"`

	// path of databricks repo directory(/Repos/<username>/...)
	RepoPath *string `json:"repoPath,omitempty" tf:"repo_path,omitempty"`

	// SQL alert id
	SQLAlertID *string `json:"sqlAlertId,omitempty" tf:"sql_alert_id,omitempty"`

	// SQL dashboard id
	SQLDashboardID *string `json:"sqlDashboardId,omitempty" tf:"sql_dashboard_id,omitempty"`

	// SQL warehouse id
	SQLEndpointID *string `json:"sqlEndpointId,omitempty" tf:"sql_endpoint_id,omitempty"`

	// SQL query id
	SQLQueryID *string `json:"sqlQueryId,omitempty" tf:"sql_query_id,omitempty"`

	// Model Serving endpoint id.
	ServingEndpointID *string `json:"servingEndpointId,omitempty" tf:"serving_endpoint_id,omitempty"`

	// Vector Search endpoint id.
	VectorSearchEndpointID *string `json:"vectorSearchEndpointId,omitempty" tf:"vector_search_endpoint_id,omitempty"`

	// Canonical unique identifier for the permissions in form of /<object type>/<object id>.
	WorkspaceFileID *string `json:"workspaceFileId,omitempty" tf:"workspace_file_id,omitempty"`

	WorkspaceFilePath *string `json:"workspaceFilePath,omitempty" tf:"workspace_file_path,omitempty"`
}

type PermissionsParameters struct {

	// +kubebuilder:validation:Optional
	AccessControl []AccessControlParameters `json:"accessControl,omitempty" tf:"access_control,omitempty"`

	// Canonical unique identifier for the permissions in form of /<object type>/<object id>.
	// +kubebuilder:validation:Optional
	AlertV2ID *string `json:"alertV2Id,omitempty" tf:"alert_v2_id,omitempty"`

	// app name
	// +kubebuilder:validation:Optional
	AppName *string `json:"appName,omitempty" tf:"app_name,omitempty"`

	// either tokens or passwords.
	// +kubebuilder:validation:Optional
	Authorization *string `json:"authorization,omitempty" tf:"authorization,omitempty"`

	// cluster id
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/compute/v1alpha1.Cluster
	// +kubebuilder:validation:Optional
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// Reference to a Cluster in compute to populate clusterId.
	// +kubebuilder:validation:Optional
	ClusterIDRef *v1.NamespacedReference `json:"clusterIdRef,omitempty" tf:"-"`

	// Selector for a Cluster in compute to populate clusterId.
	// +kubebuilder:validation:Optional
	ClusterIDSelector *v1.NamespacedSelector `json:"clusterIdSelector,omitempty" tf:"-"`

	// cluster policy id
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/compute/v1alpha1.ClusterPolicy
	// +kubebuilder:validation:Optional
	ClusterPolicyID *string `json:"clusterPolicyId,omitempty" tf:"cluster_policy_id,omitempty"`

	// Reference to a ClusterPolicy in compute to populate clusterPolicyId.
	// +kubebuilder:validation:Optional
	ClusterPolicyIDRef *v1.NamespacedReference `json:"clusterPolicyIdRef,omitempty" tf:"-"`

	// Selector for a ClusterPolicy in compute to populate clusterPolicyId.
	// +kubebuilder:validation:Optional
	ClusterPolicyIDSelector *v1.NamespacedSelector `json:"clusterPolicyIdSelector,omitempty" tf:"-"`

	// Canonical unique identifier for the permissions in form of /<object type>/<object id>.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/sql/v1alpha1.Dashboard
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	DashboardID *string `json:"dashboardId,omitempty" tf:"dashboard_id,omitempty"`

	// Reference to a Dashboard in sql to populate dashboardId.
	// +kubebuilder:validation:Optional
	DashboardIDRef *v1.NamespacedReference `json:"dashboardIdRef,omitempty" tf:"-"`

	// Selector for a Dashboard in sql to populate dashboardId.
	// +kubebuilder:validation:Optional
	DashboardIDSelector *v1.NamespacedSelector `json:"dashboardIdSelector,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	DatabaseInstanceName *string `json:"databaseInstanceName,omitempty" tf:"database_instance_name,omitempty"`

	// directory id
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/workspace/v1alpha1.Directory
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("object_id",false)
	// +kubebuilder:validation:Optional
	DirectoryID *string `json:"directoryId,omitempty" tf:"directory_id,omitempty"`

	// Reference to a Directory in workspace to populate directoryId.
	// +kubebuilder:validation:Optional
	DirectoryIDRef *v1.NamespacedReference `json:"directoryIdRef,omitempty" tf:"-"`

	// Selector for a Directory in workspace to populate directoryId.
	// +kubebuilder:validation:Optional
	DirectoryIDSelector *v1.NamespacedSelector `json:"directoryIdSelector,omitempty" tf:"-"`

	// path of directory
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/workspace/v1alpha1.Directory
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("path",false)
	// +kubebuilder:validation:Optional
	DirectoryPath *string `json:"directoryPath,omitempty" tf:"directory_path,omitempty"`

	// Reference to a Directory in workspace to populate directoryPath.
	// +kubebuilder:validation:Optional
	DirectoryPathRef *v1.NamespacedReference `json:"directoryPathRef,omitempty" tf:"-"`

	// Selector for a Directory in workspace to populate directoryPath.
	// +kubebuilder:validation:Optional
	DirectoryPathSelector *v1.NamespacedSelector `json:"directoryPathSelector,omitempty" tf:"-"`

	// MLflow experiment id
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/mlflow/v1alpha1.MlflowExperiment
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ExperimentID *string `json:"experimentId,omitempty" tf:"experiment_id,omitempty"`

	// Reference to a MlflowExperiment in mlflow to populate experimentId.
	// +kubebuilder:validation:Optional
	ExperimentIDRef *v1.NamespacedReference `json:"experimentIdRef,omitempty" tf:"-"`

	// Selector for a MlflowExperiment in mlflow to populate experimentId.
	// +kubebuilder:validation:Optional
	ExperimentIDSelector *v1.NamespacedSelector `json:"experimentIdSelector,omitempty" tf:"-"`

	// instance pool id
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/compute/v1alpha1.InstancePool
	// +kubebuilder:validation:Optional
	InstancePoolID *string `json:"instancePoolId,omitempty" tf:"instance_pool_id,omitempty"`

	// Reference to a InstancePool in compute to populate instancePoolId.
	// +kubebuilder:validation:Optional
	InstancePoolIDRef *v1.NamespacedReference `json:"instancePoolIdRef,omitempty" tf:"-"`

	// Selector for a InstancePool in compute to populate instancePoolId.
	// +kubebuilder:validation:Optional
	InstancePoolIDSelector *v1.NamespacedSelector `json:"instancePoolIdSelector,omitempty" tf:"-"`

	// job id
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/compute/v1alpha1.Job
	// +kubebuilder:validation:Optional
	JobID *string `json:"jobId,omitempty" tf:"job_id,omitempty"`

	// Reference to a Job in compute to populate jobId.
	// +kubebuilder:validation:Optional
	JobIDRef *v1.NamespacedReference `json:"jobIdRef,omitempty" tf:"-"`

	// Selector for a Job in compute to populate jobId.
	// +kubebuilder:validation:Optional
	JobIDSelector *v1.NamespacedSelector `json:"jobIdSelector,omitempty" tf:"-"`

	// ID of notebook within workspace
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/workspace/v1alpha1.Notebook
	// +kubebuilder:validation:Optional
	NotebookID *string `json:"notebookId,omitempty" tf:"notebook_id,omitempty"`

	// Reference to a Notebook in workspace to populate notebookId.
	// +kubebuilder:validation:Optional
	NotebookIDRef *v1.NamespacedReference `json:"notebookIdRef,omitempty" tf:"-"`

	// Selector for a Notebook in workspace to populate notebookId.
	// +kubebuilder:validation:Optional
	NotebookIDSelector *v1.NamespacedSelector `json:"notebookIdSelector,omitempty" tf:"-"`

	// path of notebook
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/workspace/v1alpha1.Notebook
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("path",false)
	// +kubebuilder:validation:Optional
	NotebookPath *string `json:"notebookPath,omitempty" tf:"notebook_path,omitempty"`

	// Reference to a Notebook in workspace to populate notebookPath.
	// +kubebuilder:validation:Optional
	NotebookPathRef *v1.NamespacedReference `json:"notebookPathRef,omitempty" tf:"-"`

	// Selector for a Notebook in workspace to populate notebookPath.
	// +kubebuilder:validation:Optional
	NotebookPathSelector *v1.NamespacedSelector `json:"notebookPathSelector,omitempty" tf:"-"`

	// type of permissions.
	// +kubebuilder:validation:Optional
	ObjectType *string `json:"objectType,omitempty" tf:"object_type,omitempty"`

	// pipeline id
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/compute/v1alpha1.Pipeline
	// +kubebuilder:validation:Optional
	PipelineID *string `json:"pipelineId,omitempty" tf:"pipeline_id,omitempty"`

	// Reference to a Pipeline in compute to populate pipelineId.
	// +kubebuilder:validation:Optional
	PipelineIDRef *v1.NamespacedReference `json:"pipelineIdRef,omitempty" tf:"-"`

	// Selector for a Pipeline in compute to populate pipelineId.
	// +kubebuilder:validation:Optional
	PipelineIDSelector *v1.NamespacedSelector `json:"pipelineIdSelector,omitempty" tf:"-"`

	// MLflow registered model id
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/mlflow/v1alpha1.MlflowModel
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("registered_model_id",true)
	// +kubebuilder:validation:Optional
	RegisteredModelID *string `json:"registeredModelId,omitempty" tf:"registered_model_id,omitempty"`

	// Reference to a MlflowModel in mlflow to populate registeredModelId.
	// +kubebuilder:validation:Optional
	RegisteredModelIDRef *v1.NamespacedReference `json:"registeredModelIdRef,omitempty" tf:"-"`

	// Selector for a MlflowModel in mlflow to populate registeredModelId.
	// +kubebuilder:validation:Optional
	RegisteredModelIDSelector *v1.NamespacedSelector `json:"registeredModelIdSelector,omitempty" tf:"-"`

	// repo id
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/workspace/v1alpha1.Repo
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	RepoID *string `json:"repoId,omitempty" tf:"repo_id,omitempty"`

	// Reference to a Repo in workspace to populate repoId.
	// +kubebuilder:validation:Optional
	RepoIDRef *v1.NamespacedReference `json:"repoIdRef,omitempty" tf:"-"`

	// Selector for a Repo in workspace to populate repoId.
	// +kubebuilder:validation:Optional
	RepoIDSelector *v1.NamespacedSelector `json:"repoIdSelector,omitempty" tf:"-"`

	// path of databricks repo directory(/Repos/<username>/...)
	// +kubebuilder:validation:Optional
	RepoPath *string `json:"repoPath,omitempty" tf:"repo_path,omitempty"`

	// SQL alert id
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/sql/v1alpha1.SQLAlert
	// +kubebuilder:validation:Optional
	SQLAlertID *string `json:"sqlAlertId,omitempty" tf:"sql_alert_id,omitempty"`

	// Reference to a SQLAlert in sql to populate sqlAlertId.
	// +kubebuilder:validation:Optional
	SQLAlertIDRef *v1.NamespacedReference `json:"sqlAlertIdRef,omitempty" tf:"-"`

	// Selector for a SQLAlert in sql to populate sqlAlertId.
	// +kubebuilder:validation:Optional
	SQLAlertIDSelector *v1.NamespacedSelector `json:"sqlAlertIdSelector,omitempty" tf:"-"`

	// SQL dashboard id
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/sql/v1alpha1.SQLDashboard
	// +kubebuilder:validation:Optional
	SQLDashboardID *string `json:"sqlDashboardId,omitempty" tf:"sql_dashboard_id,omitempty"`

	// Reference to a SQLDashboard in sql to populate sqlDashboardId.
	// +kubebuilder:validation:Optional
	SQLDashboardIDRef *v1.NamespacedReference `json:"sqlDashboardIdRef,omitempty" tf:"-"`

	// Selector for a SQLDashboard in sql to populate sqlDashboardId.
	// +kubebuilder:validation:Optional
	SQLDashboardIDSelector *v1.NamespacedSelector `json:"sqlDashboardIdSelector,omitempty" tf:"-"`

	// SQL warehouse id
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/sql/v1alpha1.SQLEndpoint
	// +kubebuilder:validation:Optional
	SQLEndpointID *string `json:"sqlEndpointId,omitempty" tf:"sql_endpoint_id,omitempty"`

	// Reference to a SQLEndpoint in sql to populate sqlEndpointId.
	// +kubebuilder:validation:Optional
	SQLEndpointIDRef *v1.NamespacedReference `json:"sqlEndpointIdRef,omitempty" tf:"-"`

	// Selector for a SQLEndpoint in sql to populate sqlEndpointId.
	// +kubebuilder:validation:Optional
	SQLEndpointIDSelector *v1.NamespacedSelector `json:"sqlEndpointIdSelector,omitempty" tf:"-"`

	// SQL query id
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/sql/v1alpha1.SQLQuery
	// +kubebuilder:validation:Optional
	SQLQueryID *string `json:"sqlQueryId,omitempty" tf:"sql_query_id,omitempty"`

	// Reference to a SQLQuery in sql to populate sqlQueryId.
	// +kubebuilder:validation:Optional
	SQLQueryIDRef *v1.NamespacedReference `json:"sqlQueryIdRef,omitempty" tf:"-"`

	// Selector for a SQLQuery in sql to populate sqlQueryId.
	// +kubebuilder:validation:Optional
	SQLQueryIDSelector *v1.NamespacedSelector `json:"sqlQueryIdSelector,omitempty" tf:"-"`

	// Model Serving endpoint id.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/serving/v1alpha1.ModelServing
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("serving_endpoint_id",true)
	// +kubebuilder:validation:Optional
	ServingEndpointID *string `json:"servingEndpointId,omitempty" tf:"serving_endpoint_id,omitempty"`

	// Reference to a ModelServing in serving to populate servingEndpointId.
	// +kubebuilder:validation:Optional
	ServingEndpointIDRef *v1.NamespacedReference `json:"servingEndpointIdRef,omitempty" tf:"-"`

	// Selector for a ModelServing in serving to populate servingEndpointId.
	// +kubebuilder:validation:Optional
	ServingEndpointIDSelector *v1.NamespacedSelector `json:"servingEndpointIdSelector,omitempty" tf:"-"`

	// Vector Search endpoint id.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/mosaic/v1alpha1.VectorSearchEndpoint
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("endpoint_id",true)
	// +kubebuilder:validation:Optional
	VectorSearchEndpointID *string `json:"vectorSearchEndpointId,omitempty" tf:"vector_search_endpoint_id,omitempty"`

	// Reference to a VectorSearchEndpoint in mosaic to populate vectorSearchEndpointId.
	// +kubebuilder:validation:Optional
	VectorSearchEndpointIDRef *v1.NamespacedReference `json:"vectorSearchEndpointIdRef,omitempty" tf:"-"`

	// Selector for a VectorSearchEndpoint in mosaic to populate vectorSearchEndpointId.
	// +kubebuilder:validation:Optional
	VectorSearchEndpointIDSelector *v1.NamespacedSelector `json:"vectorSearchEndpointIdSelector,omitempty" tf:"-"`

	// Canonical unique identifier for the permissions in form of /<object type>/<object id>.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/workspace/v1alpha1.WorkspaceFile
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("object_id",false)
	// +kubebuilder:validation:Optional
	WorkspaceFileID *string `json:"workspaceFileId,omitempty" tf:"workspace_file_id,omitempty"`

	// Reference to a WorkspaceFile in workspace to populate workspaceFileId.
	// +kubebuilder:validation:Optional
	WorkspaceFileIDRef *v1.NamespacedReference `json:"workspaceFileIdRef,omitempty" tf:"-"`

	// Selector for a WorkspaceFile in workspace to populate workspaceFileId.
	// +kubebuilder:validation:Optional
	WorkspaceFileIDSelector *v1.NamespacedSelector `json:"workspaceFileIdSelector,omitempty" tf:"-"`

	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/workspace/v1alpha1.WorkspaceFile
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("path",false)
	// +kubebuilder:validation:Optional
	WorkspaceFilePath *string `json:"workspaceFilePath,omitempty" tf:"workspace_file_path,omitempty"`

	// Reference to a WorkspaceFile in workspace to populate workspaceFilePath.
	// +kubebuilder:validation:Optional
	WorkspaceFilePathRef *v1.NamespacedReference `json:"workspaceFilePathRef,omitempty" tf:"-"`

	// Selector for a WorkspaceFile in workspace to populate workspaceFilePath.
	// +kubebuilder:validation:Optional
	WorkspaceFilePathSelector *v1.NamespacedSelector `json:"workspaceFilePathSelector,omitempty" tf:"-"`
}

// PermissionsSpec defines the desired state of Permissions
type PermissionsSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            PermissionsParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PermissionsInitParameters `json:"initProvider,omitempty"`
}

// PermissionsStatus defines the observed state of Permissions.
type PermissionsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PermissionsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Permissions is the Schema for the Permissionss API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,databricks}
type Permissions struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.accessControl) || (has(self.initProvider) && has(self.initProvider.accessControl))",message="spec.forProvider.accessControl is a required parameter"
	Spec   PermissionsSpec   `json:"spec"`
	Status PermissionsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PermissionsList contains a list of Permissionss
type PermissionsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Permissions `json:"items"`
}

// Repository type metadata.
var (
	Permissions_Kind             = "Permissions"
	Permissions_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Permissions_Kind}.String()
	Permissions_KindAPIVersion   = Permissions_Kind + "." + CRDGroupVersion.String()
	Permissions_GroupVersionKind = CRDGroupVersion.WithKind(Permissions_Kind)
)

func init() {
	SchemeBuilder.Register(&Permissions{}, &PermissionsList{})
}
