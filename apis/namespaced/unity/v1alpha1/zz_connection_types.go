// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type ConnectionInitParameters struct {

	// Free-form text. Change forces creation of a new resource.
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// Connection type. MYSQL, POSTGRESQL, SNOWFLAKE, REDSHIFT SQLDW, SQLSERVER, DATABRICKS, SALESFORCE, BIGQUERY, WORKDAY_RAAS, HIVE_METASTORE, GA4_RAW_DATA, SERVICENOW, SALESFORCE_DATA_CLOUD, GLUE, ORACLE, TERADATA, HTTP or POWER_BI are supported. Up-to-date list of connection type supported is in the documentation. Change forces creation of a new resource.
	ConnectionType *string `json:"connectionType,omitempty" tf:"connection_type,omitempty"`

<<<<<<< HEAD
=======
	EnvironmentSettings []EnvironmentSettingsInitParameters `json:"environmentSettings,omitempty" tf:"environment_settings,omitempty"`

>>>>>>> 22d3f447638c67622a710bb969a42a932ffdb1af
	// Name of the Connection.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Options map[string]*string `json:"optionsSecretRef,omitempty" tf:"-"`

	// Name of the connection owner.
	Owner *string `json:"owner,omitempty" tf:"owner,omitempty"`

	// Free-form connection properties. Change forces creation of a new resource.
	// +mapType=granular
	Properties map[string]*string `json:"properties,omitempty" tf:"properties,omitempty"`

	// Indicates whether the connection is read-only. Change forces creation of a new resource.
	ReadOnly *bool `json:"readOnly,omitempty" tf:"read_only,omitempty"`
}

type ConnectionObservation struct {

	// Free-form text. Change forces creation of a new resource.
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// Unique ID of the connection.
	ConnectionID *string `json:"connectionId,omitempty" tf:"connection_id,omitempty"`

	// Connection type. MYSQL, POSTGRESQL, SNOWFLAKE, REDSHIFT SQLDW, SQLSERVER, DATABRICKS, SALESFORCE, BIGQUERY, WORKDAY_RAAS, HIVE_METASTORE, GA4_RAW_DATA, SERVICENOW, SALESFORCE_DATA_CLOUD, GLUE, ORACLE, TERADATA, HTTP or POWER_BI are supported. Up-to-date list of connection type supported is in the documentation. Change forces creation of a new resource.
	ConnectionType *string `json:"connectionType,omitempty" tf:"connection_type,omitempty"`

	// Time at which this connection was created, in epoch milliseconds.
	CreatedAt *float64 `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// Username of connection creator.
	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	// The type of credential for this connection.
	CredentialType *string `json:"credentialType,omitempty" tf:"credential_type,omitempty"`

<<<<<<< HEAD
=======
	EnvironmentSettings []EnvironmentSettingsObservation `json:"environmentSettings,omitempty" tf:"environment_settings,omitempty"`

>>>>>>> 22d3f447638c67622a710bb969a42a932ffdb1af
	// Full name of connection.
	FullName *string `json:"fullName,omitempty" tf:"full_name,omitempty"`

	// ID of this connection in form of <metastore_id>|<name>.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Unique ID of the UC metastore for this connection.
	MetastoreID *string `json:"metastoreId,omitempty" tf:"metastore_id,omitempty"`

	// Name of the Connection.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Name of the connection owner.
	Owner *string `json:"owner,omitempty" tf:"owner,omitempty"`

	// Free-form connection properties. Change forces creation of a new resource.
	// +mapType=granular
	Properties map[string]*string `json:"properties,omitempty" tf:"properties,omitempty"`

	// Object with the status of an asynchronously provisioned resource.
<<<<<<< HEAD
	ProvisioningInfo []ConnectionProvisioningInfoObservation `json:"provisioningInfo,omitempty" tf:"provisioning_info,omitempty"`
=======
	ProvisioningInfo []ProvisioningInfoObservation `json:"provisioningInfo,omitempty" tf:"provisioning_info,omitempty"`
>>>>>>> 22d3f447638c67622a710bb969a42a932ffdb1af

	// Indicates whether the connection is read-only. Change forces creation of a new resource.
	ReadOnly *bool `json:"readOnly,omitempty" tf:"read_only,omitempty"`

	SecurableType *string `json:"securableType,omitempty" tf:"securable_type,omitempty"`

	// URL of the remote data source, extracted from options.
	URL *string `json:"url,omitempty" tf:"url,omitempty"`

	// Time at which connection this was last modified, in epoch milliseconds.
	UpdatedAt *float64 `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`

	// Username of user who last modified the connection.
	UpdatedBy *string `json:"updatedBy,omitempty" tf:"updated_by,omitempty"`
}

type ConnectionParameters struct {

	// Free-form text. Change forces creation of a new resource.
	// +kubebuilder:validation:Optional
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// Connection type. MYSQL, POSTGRESQL, SNOWFLAKE, REDSHIFT SQLDW, SQLSERVER, DATABRICKS, SALESFORCE, BIGQUERY, WORKDAY_RAAS, HIVE_METASTORE, GA4_RAW_DATA, SERVICENOW, SALESFORCE_DATA_CLOUD, GLUE, ORACLE, TERADATA, HTTP or POWER_BI are supported. Up-to-date list of connection type supported is in the documentation. Change forces creation of a new resource.
	// +kubebuilder:validation:Optional
	ConnectionType *string `json:"connectionType,omitempty" tf:"connection_type,omitempty"`

<<<<<<< HEAD
=======
	// +kubebuilder:validation:Optional
	EnvironmentSettings []EnvironmentSettingsParameters `json:"environmentSettings,omitempty" tf:"environment_settings,omitempty"`

>>>>>>> 22d3f447638c67622a710bb969a42a932ffdb1af
	// Name of the Connection.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The key value of options required by the connection, e.g. host, port, user, password, authorization_endpoint, client_id, client_secret or GoogleServiceAccountKeyJson. Please consult the documentation for the required option.
	// +kubebuilder:validation:Optional
	OptionsSecretRef *v1.LocalSecretReference `json:"optionsSecretRef,omitempty" tf:"-"`

	// Name of the connection owner.
	// +kubebuilder:validation:Optional
	Owner *string `json:"owner,omitempty" tf:"owner,omitempty"`

	// Free-form connection properties. Change forces creation of a new resource.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Properties map[string]*string `json:"properties,omitempty" tf:"properties,omitempty"`

	// Indicates whether the connection is read-only. Change forces creation of a new resource.
	// +kubebuilder:validation:Optional
	ReadOnly *bool `json:"readOnly,omitempty" tf:"read_only,omitempty"`
}

<<<<<<< HEAD
type ConnectionProvisioningInfoInitParameters struct {
}

type ConnectionProvisioningInfoObservation struct {
	State *string `json:"state,omitempty" tf:"state,omitempty"`
}

type ConnectionProvisioningInfoParameters struct {
=======
type EnvironmentSettingsInitParameters struct {
	EnvironmentVersion *string `json:"environmentVersion,omitempty" tf:"environment_version,omitempty"`

	JavaDependencies []*string `json:"javaDependencies,omitempty" tf:"java_dependencies,omitempty"`
}

type EnvironmentSettingsObservation struct {
	EnvironmentVersion *string `json:"environmentVersion,omitempty" tf:"environment_version,omitempty"`

	JavaDependencies []*string `json:"javaDependencies,omitempty" tf:"java_dependencies,omitempty"`
}

type EnvironmentSettingsParameters struct {

	// +kubebuilder:validation:Optional
	EnvironmentVersion *string `json:"environmentVersion,omitempty" tf:"environment_version,omitempty"`

	// +kubebuilder:validation:Optional
	JavaDependencies []*string `json:"javaDependencies,omitempty" tf:"java_dependencies,omitempty"`
}

type ProvisioningInfoInitParameters struct {
}

type ProvisioningInfoObservation struct {
	State *string `json:"state,omitempty" tf:"state,omitempty"`
}

type ProvisioningInfoParameters struct {
>>>>>>> 22d3f447638c67622a710bb969a42a932ffdb1af
}

// ConnectionSpec defines the desired state of Connection
type ConnectionSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            ConnectionParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ConnectionInitParameters `json:"initProvider,omitempty"`
}

// ConnectionStatus defines the observed state of Connection.
type ConnectionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ConnectionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Connection is the Schema for the Connections API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,databricks}
type Connection struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ConnectionSpec   `json:"spec"`
	Status            ConnectionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ConnectionList contains a list of Connections
type ConnectionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Connection `json:"items"`
}

// Repository type metadata.
var (
	Connection_Kind             = "Connection"
	Connection_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Connection_Kind}.String()
	Connection_KindAPIVersion   = Connection_Kind + "." + CRDGroupVersion.String()
	Connection_GroupVersionKind = CRDGroupVersion.WithKind(Connection_Kind)
)

func init() {
	SchemeBuilder.Register(&Connection{}, &ConnectionList{})
}
