// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type IPAccessListInitParameters struct {

	// Allowed IP Addresses in CIDR notation. Limit of 100.
	AllowedIPAddresses []*string `json:"allowedIpAddresses,omitempty" tf:"allowed_ip_addresses,omitempty"`
}

type IPAccessListObservation struct {

	// Allowed IP Addresses in CIDR notation. Limit of 100.
	AllowedIPAddresses []*string `json:"allowedIpAddresses,omitempty" tf:"allowed_ip_addresses,omitempty"`
}

type IPAccessListParameters struct {

	// Allowed IP Addresses in CIDR notation. Limit of 100.
	// +kubebuilder:validation:Optional
	AllowedIPAddresses []*string `json:"allowedIpAddresses,omitempty" tf:"allowed_ip_addresses,omitempty"`
}

type PropertiesKvpairsInitParameters struct {

	// value pairs with recipient's properties.  Properties with name starting with databricks. are reserved.
	// +mapType=granular
	Properties map[string]*string `json:"properties,omitempty" tf:"properties,omitempty"`
}

type PropertiesKvpairsObservation struct {

	// value pairs with recipient's properties.  Properties with name starting with databricks. are reserved.
	// +mapType=granular
	Properties map[string]*string `json:"properties,omitempty" tf:"properties,omitempty"`
}

type PropertiesKvpairsParameters struct {

	// value pairs with recipient's properties.  Properties with name starting with databricks. are reserved.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Properties map[string]*string `json:"properties" tf:"properties,omitempty"`
}

type RecipientInitParameters struct {

	// The delta sharing authentication type. Valid values are TOKEN and DATABRICKS.
	AuthenticationType *string `json:"authenticationType,omitempty" tf:"authentication_type,omitempty"`

	// Description about the recipient.
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// Required when authentication_type is DATABRICKS.
	DataRecipientGlobalMetastoreID *string `json:"dataRecipientGlobalMetastoreId,omitempty" tf:"data_recipient_global_metastore_id,omitempty"`

	// Expiration timestamp of the token in epoch milliseconds.
	ExpirationTime *float64 `json:"expirationTime,omitempty" tf:"expiration_time,omitempty"`

	// Recipient IP access list.
	IPAccessList []IPAccessListInitParameters `json:"ipAccessList,omitempty" tf:"ip_access_list,omitempty"`

	// Name of recipient. Change forces creation of a new resource.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Username/groupname/sp application_id of the recipient owner.
	Owner *string `json:"owner,omitempty" tf:"owner,omitempty"`

	// Recipient properties - object consisting of following fields:
	PropertiesKvpairs []PropertiesKvpairsInitParameters `json:"propertiesKvpairs,omitempty" tf:"properties_kvpairs,omitempty"`

	// The one-time sharing code provided by the data recipient.
	SharingCodeSecretRef *v1.LocalSecretKeySelector `json:"sharingCodeSecretRef,omitempty" tf:"-"`

	// List of Recipient Tokens. This field is only present when the authentication_type is TOKEN. Each list element is an object with following attributes:
	Tokens []TokensInitParameters `json:"tokens,omitempty" tf:"tokens,omitempty"`
}

type RecipientObservation struct {
	Activated *bool `json:"activated,omitempty" tf:"activated,omitempty"`

	// Full activation URL to retrieve the access token. It will be empty if the token is already retrieved.
	ActivationURL *string `json:"activationUrl,omitempty" tf:"activation_url,omitempty"`

	// The delta sharing authentication type. Valid values are TOKEN and DATABRICKS.
	AuthenticationType *string `json:"authenticationType,omitempty" tf:"authentication_type,omitempty"`

	// Cloud vendor of the recipient's Unity Catalog Metstore. This field is only present when the authentication_type is DATABRICKS.
	Cloud *string `json:"cloud,omitempty" tf:"cloud,omitempty"`

	// Description about the recipient.
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// Time at which this recipient Token was created, in epoch milliseconds.
	CreatedAt *float64 `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// Username of recipient token creator.
	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	// Required when authentication_type is DATABRICKS.
	DataRecipientGlobalMetastoreID *string `json:"dataRecipientGlobalMetastoreId,omitempty" tf:"data_recipient_global_metastore_id,omitempty"`

	// Expiration timestamp of the token in epoch milliseconds.
	ExpirationTime *float64 `json:"expirationTime,omitempty" tf:"expiration_time,omitempty"`

	// the ID of the recipient - the same as the name.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Recipient IP access list.
	IPAccessList []IPAccessListObservation `json:"ipAccessList,omitempty" tf:"ip_access_list,omitempty"`

	// Unique identifier of recipient's Unity Catalog metastore. This field is only present when the authentication_type is DATABRICKS.
	MetastoreID *string `json:"metastoreId,omitempty" tf:"metastore_id,omitempty"`

	// Name of recipient. Change forces creation of a new resource.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Username/groupname/sp application_id of the recipient owner.
	Owner *string `json:"owner,omitempty" tf:"owner,omitempty"`

	// Recipient properties - object consisting of following fields:
	PropertiesKvpairs []PropertiesKvpairsObservation `json:"propertiesKvpairs,omitempty" tf:"properties_kvpairs,omitempty"`

	// Cloud region of the recipient's Unity Catalog Metstore. This field is only present when the authentication_type is DATABRICKS.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// List of Recipient Tokens. This field is only present when the authentication_type is TOKEN. Each list element is an object with following attributes:
	Tokens []TokensObservation `json:"tokens,omitempty" tf:"tokens,omitempty"`

	// Time at which this recipient Token was updated, in epoch milliseconds.
	UpdatedAt *float64 `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`

	// Username of recipient Token updater.
	UpdatedBy *string `json:"updatedBy,omitempty" tf:"updated_by,omitempty"`
}

type RecipientParameters struct {

	// The delta sharing authentication type. Valid values are TOKEN and DATABRICKS.
	// +kubebuilder:validation:Optional
	AuthenticationType *string `json:"authenticationType,omitempty" tf:"authentication_type,omitempty"`

	// Description about the recipient.
	// +kubebuilder:validation:Optional
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// Required when authentication_type is DATABRICKS.
	// +kubebuilder:validation:Optional
	DataRecipientGlobalMetastoreID *string `json:"dataRecipientGlobalMetastoreId,omitempty" tf:"data_recipient_global_metastore_id,omitempty"`

	// Expiration timestamp of the token in epoch milliseconds.
	// +kubebuilder:validation:Optional
	ExpirationTime *float64 `json:"expirationTime,omitempty" tf:"expiration_time,omitempty"`

	// Recipient IP access list.
	// +kubebuilder:validation:Optional
	IPAccessList []IPAccessListParameters `json:"ipAccessList,omitempty" tf:"ip_access_list,omitempty"`

	// Name of recipient. Change forces creation of a new resource.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Username/groupname/sp application_id of the recipient owner.
	// +kubebuilder:validation:Optional
	Owner *string `json:"owner,omitempty" tf:"owner,omitempty"`

	// Recipient properties - object consisting of following fields:
	// +kubebuilder:validation:Optional
	PropertiesKvpairs []PropertiesKvpairsParameters `json:"propertiesKvpairs,omitempty" tf:"properties_kvpairs,omitempty"`

	// The one-time sharing code provided by the data recipient.
	// +kubebuilder:validation:Optional
	SharingCodeSecretRef *v1.LocalSecretKeySelector `json:"sharingCodeSecretRef,omitempty" tf:"-"`

	// List of Recipient Tokens. This field is only present when the authentication_type is TOKEN. Each list element is an object with following attributes:
	// +kubebuilder:validation:Optional
	Tokens []TokensParameters `json:"tokens,omitempty" tf:"tokens,omitempty"`
}

type TokensInitParameters struct {
}

type TokensObservation struct {

	// Full activation URL to retrieve the access token. It will be empty if the token is already retrieved.
	ActivationURL *string `json:"activationUrl,omitempty" tf:"activation_url,omitempty"`

	// Time at which this recipient Token was created, in epoch milliseconds.
	CreatedAt *float64 `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// Username of recipient token creator.
	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	// Expiration timestamp of the token in epoch milliseconds.
	ExpirationTime *float64 `json:"expirationTime,omitempty" tf:"expiration_time,omitempty"`

	// the ID of the recipient - the same as the name.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Time at which this recipient Token was updated, in epoch milliseconds.
	UpdatedAt *float64 `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`

	// Username of recipient Token updater.
	UpdatedBy *string `json:"updatedBy,omitempty" tf:"updated_by,omitempty"`
}

type TokensParameters struct {
}

// RecipientSpec defines the desired state of Recipient
type RecipientSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            RecipientParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider RecipientInitParameters `json:"initProvider,omitempty"`
}

// RecipientStatus defines the observed state of Recipient.
type RecipientStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        RecipientObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Recipient is the Schema for the Recipients API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,databricks}
type Recipient struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.authenticationType) || (has(self.initProvider) && has(self.initProvider.authenticationType))",message="spec.forProvider.authenticationType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   RecipientSpec   `json:"spec"`
	Status RecipientStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// RecipientList contains a list of Recipients
type RecipientList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Recipient `json:"items"`
}

// Repository type metadata.
var (
	Recipient_Kind             = "Recipient"
	Recipient_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Recipient_Kind}.String()
	Recipient_KindAPIVersion   = Recipient_Kind + "." + CRDGroupVersion.String()
	Recipient_GroupVersionKind = CRDGroupVersion.WithKind(Recipient_Kind)
)

func init() {
	SchemeBuilder.Register(&Recipient{}, &RecipientList{})
}
