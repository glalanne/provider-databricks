// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type GCPVPCEndpointInfoInitParameters struct {

	// Region of the PSC endpoint.
	EndpointRegion *string `json:"endpointRegion,omitempty" tf:"endpoint_region,omitempty"`

	// The Google Cloud project ID of the VPC network where the PSC connection resides.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// The unique ID of this PSC connection.
	PscConnectionID *string `json:"pscConnectionId,omitempty" tf:"psc_connection_id,omitempty"`

	// The name of the PSC endpoint in the Google Cloud project.
	PscEndpointName *string `json:"pscEndpointName,omitempty" tf:"psc_endpoint_name,omitempty"`

	// The service attachment this PSC connection connects to.
	ServiceAttachmentID *string `json:"serviceAttachmentId,omitempty" tf:"service_attachment_id,omitempty"`
}

type GCPVPCEndpointInfoObservation struct {

	// Region of the PSC endpoint.
	EndpointRegion *string `json:"endpointRegion,omitempty" tf:"endpoint_region,omitempty"`

	// The Google Cloud project ID of the VPC network where the PSC connection resides.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// The unique ID of this PSC connection.
	PscConnectionID *string `json:"pscConnectionId,omitempty" tf:"psc_connection_id,omitempty"`

	// The name of the PSC endpoint in the Google Cloud project.
	PscEndpointName *string `json:"pscEndpointName,omitempty" tf:"psc_endpoint_name,omitempty"`

	// The service attachment this PSC connection connects to.
	ServiceAttachmentID *string `json:"serviceAttachmentId,omitempty" tf:"service_attachment_id,omitempty"`
}

type GCPVPCEndpointInfoParameters struct {

	// Region of the PSC endpoint.
	// +kubebuilder:validation:Optional
	EndpointRegion *string `json:"endpointRegion" tf:"endpoint_region,omitempty"`

	// The Google Cloud project ID of the VPC network where the PSC connection resides.
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId" tf:"project_id,omitempty"`

	// The unique ID of this PSC connection.
	// +kubebuilder:validation:Optional
	PscConnectionID *string `json:"pscConnectionId,omitempty" tf:"psc_connection_id,omitempty"`

	// The name of the PSC endpoint in the Google Cloud project.
	// +kubebuilder:validation:Optional
	PscEndpointName *string `json:"pscEndpointName" tf:"psc_endpoint_name,omitempty"`

	// The service attachment this PSC connection connects to.
	// +kubebuilder:validation:Optional
	ServiceAttachmentID *string `json:"serviceAttachmentId,omitempty" tf:"service_attachment_id,omitempty"`
}

type MwsVPCEndpointInitParameters struct {

	// Account Id that could be found in the Accounts Console for AWS or GCP
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Account Id that could be found in the Accounts Console for AWS or GCP
	AwsAccountID *string `json:"awsAccountId,omitempty" tf:"aws_account_id,omitempty"`

	// (AWS Only) The ID of the Databricks endpoint service that this VPC endpoint is connected to. Please find the list of endpoint service IDs for each supported region in the Databricks PrivateLink documentation
	AwsEndpointServiceID *string `json:"awsEndpointServiceId,omitempty" tf:"aws_endpoint_service_id,omitempty"`

	// (AWS only) ID of configured aws_vpc_endpoint
	AwsVPCEndpointID *string `json:"awsVpcEndpointId,omitempty" tf:"aws_vpc_endpoint_id,omitempty"`

	// (GCP only) a block consists of Google Cloud specific information for this PSC endpoint. It has the following fields:
	GCPVPCEndpointInfo []GCPVPCEndpointInfoInitParameters `json:"gcpVpcEndpointInfo,omitempty" tf:"gcp_vpc_endpoint_info,omitempty"`

	// (AWS only) Region of AWS VPC
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// (AWS Only) State of VPC Endpoint
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	UseCase *string `json:"useCase,omitempty" tf:"use_case,omitempty"`

	// Canonical unique identifier of VPC Endpoint in Databricks Account
	VPCEndpointID *string `json:"vpcEndpointId,omitempty" tf:"vpc_endpoint_id,omitempty"`

	// Name of VPC Endpoint in Databricks Account
	VPCEndpointName *string `json:"vpcEndpointName,omitempty" tf:"vpc_endpoint_name,omitempty"`
}

type MwsVPCEndpointObservation struct {

	// Account Id that could be found in the Accounts Console for AWS or GCP
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Account Id that could be found in the Accounts Console for AWS or GCP
	AwsAccountID *string `json:"awsAccountId,omitempty" tf:"aws_account_id,omitempty"`

	// (AWS Only) The ID of the Databricks endpoint service that this VPC endpoint is connected to. Please find the list of endpoint service IDs for each supported region in the Databricks PrivateLink documentation
	AwsEndpointServiceID *string `json:"awsEndpointServiceId,omitempty" tf:"aws_endpoint_service_id,omitempty"`

	// (AWS only) ID of configured aws_vpc_endpoint
	AwsVPCEndpointID *string `json:"awsVpcEndpointId,omitempty" tf:"aws_vpc_endpoint_id,omitempty"`

	// (GCP only) a block consists of Google Cloud specific information for this PSC endpoint. It has the following fields:
	GCPVPCEndpointInfo []GCPVPCEndpointInfoObservation `json:"gcpVpcEndpointInfo,omitempty" tf:"gcp_vpc_endpoint_info,omitempty"`

	// the ID of VPC Endpoint in form of account_id/vpc_endpoint_id
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (AWS only) Region of AWS VPC
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// (AWS Only) State of VPC Endpoint
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	UseCase *string `json:"useCase,omitempty" tf:"use_case,omitempty"`

	// Canonical unique identifier of VPC Endpoint in Databricks Account
	VPCEndpointID *string `json:"vpcEndpointId,omitempty" tf:"vpc_endpoint_id,omitempty"`

	// Name of VPC Endpoint in Databricks Account
	VPCEndpointName *string `json:"vpcEndpointName,omitempty" tf:"vpc_endpoint_name,omitempty"`
}

type MwsVPCEndpointParameters struct {

	// Account Id that could be found in the Accounts Console for AWS or GCP
	// +kubebuilder:validation:Optional
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Account Id that could be found in the Accounts Console for AWS or GCP
	// +kubebuilder:validation:Optional
	AwsAccountID *string `json:"awsAccountId,omitempty" tf:"aws_account_id,omitempty"`

	// (AWS Only) The ID of the Databricks endpoint service that this VPC endpoint is connected to. Please find the list of endpoint service IDs for each supported region in the Databricks PrivateLink documentation
	// +kubebuilder:validation:Optional
	AwsEndpointServiceID *string `json:"awsEndpointServiceId,omitempty" tf:"aws_endpoint_service_id,omitempty"`

	// (AWS only) ID of configured aws_vpc_endpoint
	// +kubebuilder:validation:Optional
	AwsVPCEndpointID *string `json:"awsVpcEndpointId,omitempty" tf:"aws_vpc_endpoint_id,omitempty"`

	// (GCP only) a block consists of Google Cloud specific information for this PSC endpoint. It has the following fields:
	// +kubebuilder:validation:Optional
	GCPVPCEndpointInfo []GCPVPCEndpointInfoParameters `json:"gcpVpcEndpointInfo,omitempty" tf:"gcp_vpc_endpoint_info,omitempty"`

	// (AWS only) Region of AWS VPC
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// (AWS Only) State of VPC Endpoint
	// +kubebuilder:validation:Optional
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// +kubebuilder:validation:Optional
	UseCase *string `json:"useCase,omitempty" tf:"use_case,omitempty"`

	// Canonical unique identifier of VPC Endpoint in Databricks Account
	// +kubebuilder:validation:Optional
	VPCEndpointID *string `json:"vpcEndpointId,omitempty" tf:"vpc_endpoint_id,omitempty"`

	// Name of VPC Endpoint in Databricks Account
	// +kubebuilder:validation:Optional
	VPCEndpointName *string `json:"vpcEndpointName,omitempty" tf:"vpc_endpoint_name,omitempty"`
}

// MwsVPCEndpointSpec defines the desired state of MwsVPCEndpoint
type MwsVPCEndpointSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            MwsVPCEndpointParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider MwsVPCEndpointInitParameters `json:"initProvider,omitempty"`
}

// MwsVPCEndpointStatus defines the observed state of MwsVPCEndpoint.
type MwsVPCEndpointStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        MwsVPCEndpointObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// MwsVPCEndpoint is the Schema for the MwsVPCEndpoints API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,databricks}
type MwsVPCEndpoint struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.vpcEndpointName) || (has(self.initProvider) && has(self.initProvider.vpcEndpointName))",message="spec.forProvider.vpcEndpointName is a required parameter"
	Spec   MwsVPCEndpointSpec   `json:"spec"`
	Status MwsVPCEndpointStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MwsVPCEndpointList contains a list of MwsVPCEndpoints
type MwsVPCEndpointList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MwsVPCEndpoint `json:"items"`
}

// Repository type metadata.
var (
	MwsVPCEndpoint_Kind             = "MwsVPCEndpoint"
	MwsVPCEndpoint_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: MwsVPCEndpoint_Kind}.String()
	MwsVPCEndpoint_KindAPIVersion   = MwsVPCEndpoint_Kind + "." + CRDGroupVersion.String()
	MwsVPCEndpoint_GroupVersionKind = CRDGroupVersion.WithKind(MwsVPCEndpoint_Kind)
)

func init() {
	SchemeBuilder.Register(&MwsVPCEndpoint{}, &MwsVPCEndpointList{})
}
