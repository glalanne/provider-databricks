// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type MwsCredentialsInitParameters struct {

	// (Deprecated) Maintained for backwards compatibility and will be removed in a later version. It should now be specified under a provider instance where host = "https://accounts.cloud.databricks.com"
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (Integer) time of credentials registration
	CreationTime *float64 `json:"creationTime,omitempty" tf:"creation_time,omitempty"`

	// (String) identifier of credentials
	CredentialsID *string `json:"credentialsId,omitempty" tf:"credentials_id,omitempty"`

	// name of credentials to register
	CredentialsName *string `json:"credentialsName,omitempty" tf:"credentials_name,omitempty"`

	// Canonical unique identifier for the mws credentials.
	ExternalID *string `json:"externalId,omitempty" tf:"external_id,omitempty"`

	// ARN of cross-account role
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`
}

type MwsCredentialsObservation struct {

	// (Deprecated) Maintained for backwards compatibility and will be removed in a later version. It should now be specified under a provider instance where host = "https://accounts.cloud.databricks.com"
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (Integer) time of credentials registration
	CreationTime *float64 `json:"creationTime,omitempty" tf:"creation_time,omitempty"`

	// (String) identifier of credentials
	CredentialsID *string `json:"credentialsId,omitempty" tf:"credentials_id,omitempty"`

	// name of credentials to register
	CredentialsName *string `json:"credentialsName,omitempty" tf:"credentials_name,omitempty"`

	// Canonical unique identifier for the mws credentials.
	ExternalID *string `json:"externalId,omitempty" tf:"external_id,omitempty"`

	// Canonical unique identifier for the mws credentials.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// ARN of cross-account role
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`
}

type MwsCredentialsParameters struct {

	// (Deprecated) Maintained for backwards compatibility and will be removed in a later version. It should now be specified under a provider instance where host = "https://accounts.cloud.databricks.com"
	// +kubebuilder:validation:Optional
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (Integer) time of credentials registration
	// +kubebuilder:validation:Optional
	CreationTime *float64 `json:"creationTime,omitempty" tf:"creation_time,omitempty"`

	// (String) identifier of credentials
	// +kubebuilder:validation:Optional
	CredentialsID *string `json:"credentialsId,omitempty" tf:"credentials_id,omitempty"`

	// name of credentials to register
	// +kubebuilder:validation:Optional
	CredentialsName *string `json:"credentialsName,omitempty" tf:"credentials_name,omitempty"`

	// Canonical unique identifier for the mws credentials.
	// +kubebuilder:validation:Optional
	ExternalID *string `json:"externalId,omitempty" tf:"external_id,omitempty"`

	// ARN of cross-account role
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`
}

// MwsCredentialsSpec defines the desired state of MwsCredentials
type MwsCredentialsSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            MwsCredentialsParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider MwsCredentialsInitParameters `json:"initProvider,omitempty"`
}

// MwsCredentialsStatus defines the observed state of MwsCredentials.
type MwsCredentialsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        MwsCredentialsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// MwsCredentials is the Schema for the MwsCredentialss API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,databricks}
type MwsCredentials struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.credentialsName) || (has(self.initProvider) && has(self.initProvider.credentialsName))",message="spec.forProvider.credentialsName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.roleArn) || (has(self.initProvider) && has(self.initProvider.roleArn))",message="spec.forProvider.roleArn is a required parameter"
	Spec   MwsCredentialsSpec   `json:"spec"`
	Status MwsCredentialsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MwsCredentialsList contains a list of MwsCredentialss
type MwsCredentialsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MwsCredentials `json:"items"`
}

// Repository type metadata.
var (
	MwsCredentials_Kind             = "MwsCredentials"
	MwsCredentials_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: MwsCredentials_Kind}.String()
	MwsCredentials_KindAPIVersion   = MwsCredentials_Kind + "." + CRDGroupVersion.String()
	MwsCredentials_GroupVersionKind = CRDGroupVersion.WithKind(MwsCredentials_Kind)
)

func init() {
	SchemeBuilder.Register(&MwsCredentials{}, &MwsCredentialsList{})
}
