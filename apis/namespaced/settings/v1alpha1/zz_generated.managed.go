// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"

// GetCondition of this ComplianceSecurityProfileWorkspaceSetting.
func (mg *ComplianceSecurityProfileWorkspaceSetting) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetManagementPolicies of this ComplianceSecurityProfileWorkspaceSetting.
func (mg *ComplianceSecurityProfileWorkspaceSetting) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this ComplianceSecurityProfileWorkspaceSetting.
func (mg *ComplianceSecurityProfileWorkspaceSetting) GetProviderConfigReference() *xpv1.ProviderConfigReference {
	return mg.Spec.ProviderConfigReference
}

// GetWriteConnectionSecretToReference of this ComplianceSecurityProfileWorkspaceSetting.
func (mg *ComplianceSecurityProfileWorkspaceSetting) GetWriteConnectionSecretToReference() *xpv1.LocalSecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ComplianceSecurityProfileWorkspaceSetting.
func (mg *ComplianceSecurityProfileWorkspaceSetting) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetManagementPolicies of this ComplianceSecurityProfileWorkspaceSetting.
func (mg *ComplianceSecurityProfileWorkspaceSetting) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this ComplianceSecurityProfileWorkspaceSetting.
func (mg *ComplianceSecurityProfileWorkspaceSetting) SetProviderConfigReference(r *xpv1.ProviderConfigReference) {
	mg.Spec.ProviderConfigReference = r
}

// SetWriteConnectionSecretToReference of this ComplianceSecurityProfileWorkspaceSetting.
func (mg *ComplianceSecurityProfileWorkspaceSetting) SetWriteConnectionSecretToReference(r *xpv1.LocalSecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this DefaultNamespaceSetting.
func (mg *DefaultNamespaceSetting) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetManagementPolicies of this DefaultNamespaceSetting.
func (mg *DefaultNamespaceSetting) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this DefaultNamespaceSetting.
func (mg *DefaultNamespaceSetting) GetProviderConfigReference() *xpv1.ProviderConfigReference {
	return mg.Spec.ProviderConfigReference
}

// GetWriteConnectionSecretToReference of this DefaultNamespaceSetting.
func (mg *DefaultNamespaceSetting) GetWriteConnectionSecretToReference() *xpv1.LocalSecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this DefaultNamespaceSetting.
func (mg *DefaultNamespaceSetting) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetManagementPolicies of this DefaultNamespaceSetting.
func (mg *DefaultNamespaceSetting) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this DefaultNamespaceSetting.
func (mg *DefaultNamespaceSetting) SetProviderConfigReference(r *xpv1.ProviderConfigReference) {
	mg.Spec.ProviderConfigReference = r
}

// SetWriteConnectionSecretToReference of this DefaultNamespaceSetting.
func (mg *DefaultNamespaceSetting) SetWriteConnectionSecretToReference(r *xpv1.LocalSecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this EnhancedSecurityMonitoringWorkspaceSetting.
func (mg *EnhancedSecurityMonitoringWorkspaceSetting) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetManagementPolicies of this EnhancedSecurityMonitoringWorkspaceSetting.
func (mg *EnhancedSecurityMonitoringWorkspaceSetting) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this EnhancedSecurityMonitoringWorkspaceSetting.
func (mg *EnhancedSecurityMonitoringWorkspaceSetting) GetProviderConfigReference() *xpv1.ProviderConfigReference {
	return mg.Spec.ProviderConfigReference
}

// GetWriteConnectionSecretToReference of this EnhancedSecurityMonitoringWorkspaceSetting.
func (mg *EnhancedSecurityMonitoringWorkspaceSetting) GetWriteConnectionSecretToReference() *xpv1.LocalSecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this EnhancedSecurityMonitoringWorkspaceSetting.
func (mg *EnhancedSecurityMonitoringWorkspaceSetting) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetManagementPolicies of this EnhancedSecurityMonitoringWorkspaceSetting.
func (mg *EnhancedSecurityMonitoringWorkspaceSetting) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this EnhancedSecurityMonitoringWorkspaceSetting.
func (mg *EnhancedSecurityMonitoringWorkspaceSetting) SetProviderConfigReference(r *xpv1.ProviderConfigReference) {
	mg.Spec.ProviderConfigReference = r
}

// SetWriteConnectionSecretToReference of this EnhancedSecurityMonitoringWorkspaceSetting.
func (mg *EnhancedSecurityMonitoringWorkspaceSetting) SetWriteConnectionSecretToReference(r *xpv1.LocalSecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this RestrictWorkspaceAdminsSetting.
func (mg *RestrictWorkspaceAdminsSetting) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetManagementPolicies of this RestrictWorkspaceAdminsSetting.
func (mg *RestrictWorkspaceAdminsSetting) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this RestrictWorkspaceAdminsSetting.
func (mg *RestrictWorkspaceAdminsSetting) GetProviderConfigReference() *xpv1.ProviderConfigReference {
	return mg.Spec.ProviderConfigReference
}

// GetWriteConnectionSecretToReference of this RestrictWorkspaceAdminsSetting.
func (mg *RestrictWorkspaceAdminsSetting) GetWriteConnectionSecretToReference() *xpv1.LocalSecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this RestrictWorkspaceAdminsSetting.
func (mg *RestrictWorkspaceAdminsSetting) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetManagementPolicies of this RestrictWorkspaceAdminsSetting.
func (mg *RestrictWorkspaceAdminsSetting) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this RestrictWorkspaceAdminsSetting.
func (mg *RestrictWorkspaceAdminsSetting) SetProviderConfigReference(r *xpv1.ProviderConfigReference) {
	mg.Spec.ProviderConfigReference = r
}

// SetWriteConnectionSecretToReference of this RestrictWorkspaceAdminsSetting.
func (mg *RestrictWorkspaceAdminsSetting) SetWriteConnectionSecretToReference(r *xpv1.LocalSecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
