// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type ComplianceSecurityProfileWorkspaceInitParameters struct {
	ComplianceStandards []*string `json:"complianceStandards,omitempty" tf:"compliance_standards,omitempty"`

	IsEnabled *bool `json:"isEnabled,omitempty" tf:"is_enabled,omitempty"`
}

type ComplianceSecurityProfileWorkspaceObservation struct {
	ComplianceStandards []*string `json:"complianceStandards,omitempty" tf:"compliance_standards,omitempty"`

	IsEnabled *bool `json:"isEnabled,omitempty" tf:"is_enabled,omitempty"`
}

type ComplianceSecurityProfileWorkspaceParameters struct {

	// +kubebuilder:validation:Optional
	ComplianceStandards []*string `json:"complianceStandards" tf:"compliance_standards,omitempty"`

	// +kubebuilder:validation:Optional
	IsEnabled *bool `json:"isEnabled" tf:"is_enabled,omitempty"`
}

type ComplianceSecurityProfileWorkspaceSettingInitParameters struct {
	ComplianceSecurityProfileWorkspace *ComplianceSecurityProfileWorkspaceInitParameters `json:"complianceSecurityProfileWorkspace,omitempty" tf:"compliance_security_profile_workspace,omitempty"`

	Etag *string `json:"etag,omitempty" tf:"etag,omitempty"`

	SettingName *string `json:"settingName,omitempty" tf:"setting_name,omitempty"`
}

type ComplianceSecurityProfileWorkspaceSettingObservation struct {
	ComplianceSecurityProfileWorkspace *ComplianceSecurityProfileWorkspaceObservation `json:"complianceSecurityProfileWorkspace,omitempty" tf:"compliance_security_profile_workspace,omitempty"`

	Etag *string `json:"etag,omitempty" tf:"etag,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	SettingName *string `json:"settingName,omitempty" tf:"setting_name,omitempty"`
}

type ComplianceSecurityProfileWorkspaceSettingParameters struct {

	// +kubebuilder:validation:Optional
	ComplianceSecurityProfileWorkspace *ComplianceSecurityProfileWorkspaceParameters `json:"complianceSecurityProfileWorkspace,omitempty" tf:"compliance_security_profile_workspace,omitempty"`

	// +kubebuilder:validation:Optional
	Etag *string `json:"etag,omitempty" tf:"etag,omitempty"`

	// +kubebuilder:validation:Optional
	SettingName *string `json:"settingName,omitempty" tf:"setting_name,omitempty"`
}

// ComplianceSecurityProfileWorkspaceSettingSpec defines the desired state of ComplianceSecurityProfileWorkspaceSetting
type ComplianceSecurityProfileWorkspaceSettingSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            ComplianceSecurityProfileWorkspaceSettingParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ComplianceSecurityProfileWorkspaceSettingInitParameters `json:"initProvider,omitempty"`
}

// ComplianceSecurityProfileWorkspaceSettingStatus defines the observed state of ComplianceSecurityProfileWorkspaceSetting.
type ComplianceSecurityProfileWorkspaceSettingStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ComplianceSecurityProfileWorkspaceSettingObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ComplianceSecurityProfileWorkspaceSetting is the Schema for the ComplianceSecurityProfileWorkspaceSettings API. <no value>
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,databricks}
type ComplianceSecurityProfileWorkspaceSetting struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.complianceSecurityProfileWorkspace) || (has(self.initProvider) && has(self.initProvider.complianceSecurityProfileWorkspace))",message="spec.forProvider.complianceSecurityProfileWorkspace is a required parameter"
	Spec   ComplianceSecurityProfileWorkspaceSettingSpec   `json:"spec"`
	Status ComplianceSecurityProfileWorkspaceSettingStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ComplianceSecurityProfileWorkspaceSettingList contains a list of ComplianceSecurityProfileWorkspaceSettings
type ComplianceSecurityProfileWorkspaceSettingList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ComplianceSecurityProfileWorkspaceSetting `json:"items"`
}

// Repository type metadata.
var (
	ComplianceSecurityProfileWorkspaceSetting_Kind             = "ComplianceSecurityProfileWorkspaceSetting"
	ComplianceSecurityProfileWorkspaceSetting_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ComplianceSecurityProfileWorkspaceSetting_Kind}.String()
	ComplianceSecurityProfileWorkspaceSetting_KindAPIVersion   = ComplianceSecurityProfileWorkspaceSetting_Kind + "." + CRDGroupVersion.String()
	ComplianceSecurityProfileWorkspaceSetting_GroupVersionKind = CRDGroupVersion.WithKind(ComplianceSecurityProfileWorkspaceSetting_Kind)
)

func init() {
	SchemeBuilder.Register(&ComplianceSecurityProfileWorkspaceSetting{}, &ComplianceSecurityProfileWorkspaceSettingList{})
}
