// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type AlertInitParameters struct {

	// Trigger conditions of the alert. Block consists of the following attributes:
	Condition *ConditionInitParameters `json:"condition,omitempty" tf:"condition,omitempty"`

	// Custom body of alert notification, if it exists. See Alerts API reference for custom templating instructions.
	CustomBody *string `json:"customBody,omitempty" tf:"custom_body,omitempty"`

	// Custom subject of alert notification, if it exists. This includes email subject, Slack notification header, etc. See Alerts API reference for custom templating instructions.
	CustomSubject *string `json:"customSubject,omitempty" tf:"custom_subject,omitempty"`

	// Name of the alert.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// Whether to notify alert subscribers when alert returns back to normal.
	NotifyOnOk *bool `json:"notifyOnOk,omitempty" tf:"notify_on_ok,omitempty"`

	// Alert owner's username.
	OwnerUserName *string `json:"ownerUserName,omitempty" tf:"owner_user_name,omitempty"`

	// The path to a workspace folder containing the alert. The default is the user's home folder.  If changed, the alert will be recreated.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/workspace/v1alpha1.Directory
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("path",false)
	ParentPath *string `json:"parentPath,omitempty" tf:"parent_path,omitempty"`

	// Reference to a Directory in workspace to populate parentPath.
	// +kubebuilder:validation:Optional
	ParentPathRef *v1.NamespacedReference `json:"parentPathRef,omitempty" tf:"-"`

	// Selector for a Directory in workspace to populate parentPath.
	// +kubebuilder:validation:Optional
	ParentPathSelector *v1.NamespacedSelector `json:"parentPathSelector,omitempty" tf:"-"`

	// ID of the query evaluated by the alert.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/sql/v1alpha1.Query
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	QueryID *string `json:"queryId,omitempty" tf:"query_id,omitempty"`

	// Reference to a Query in sql to populate queryId.
	// +kubebuilder:validation:Optional
	QueryIDRef *v1.NamespacedReference `json:"queryIdRef,omitempty" tf:"-"`

	// Selector for a Query in sql to populate queryId.
	// +kubebuilder:validation:Optional
	QueryIDSelector *v1.NamespacedSelector `json:"queryIdSelector,omitempty" tf:"-"`

	// Number of seconds an alert must wait after being triggered to rearm itself. After rearming, it can be triggered again. If 0 or not specified, the alert will not be triggered again.
	SecondsToRetrigger *float64 `json:"secondsToRetrigger,omitempty" tf:"seconds_to_retrigger,omitempty"`
}

type AlertObservation struct {

	// Trigger conditions of the alert. Block consists of the following attributes:
	Condition *ConditionObservation `json:"condition,omitempty" tf:"condition,omitempty"`

	// The timestamp string indicating when the alert was created.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// Custom body of alert notification, if it exists. See Alerts API reference for custom templating instructions.
	CustomBody *string `json:"customBody,omitempty" tf:"custom_body,omitempty"`

	// Custom subject of alert notification, if it exists. This includes email subject, Slack notification header, etc. See Alerts API reference for custom templating instructions.
	CustomSubject *string `json:"customSubject,omitempty" tf:"custom_subject,omitempty"`

	// Name of the alert.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// unique ID of the Alert.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The workspace state of the alert. Used for tracking trashed status. (Possible values are ACTIVE or TRASHED).
	LifecycleState *string `json:"lifecycleState,omitempty" tf:"lifecycle_state,omitempty"`

	// Whether to notify alert subscribers when alert returns back to normal.
	NotifyOnOk *bool `json:"notifyOnOk,omitempty" tf:"notify_on_ok,omitempty"`

	// Alert owner's username.
	OwnerUserName *string `json:"ownerUserName,omitempty" tf:"owner_user_name,omitempty"`

	// The path to a workspace folder containing the alert. The default is the user's home folder.  If changed, the alert will be recreated.
	ParentPath *string `json:"parentPath,omitempty" tf:"parent_path,omitempty"`

	// ID of the query evaluated by the alert.
	QueryID *string `json:"queryId,omitempty" tf:"query_id,omitempty"`

	// Number of seconds an alert must wait after being triggered to rearm itself. After rearming, it can be triggered again. If 0 or not specified, the alert will not be triggered again.
	SecondsToRetrigger *float64 `json:"secondsToRetrigger,omitempty" tf:"seconds_to_retrigger,omitempty"`

	// Current state of the alert's trigger status (UNKNOWN, OK, TRIGGERED). This field is set to UNKNOWN if the alert has not yet been evaluated or ran into an error during the last evaluation.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// The timestamp string when the alert was last triggered if the alert has been triggered before.
	TriggerTime *string `json:"triggerTime,omitempty" tf:"trigger_time,omitempty"`

	// The timestamp string indicating when the alert was updated.
	UpdateTime *string `json:"updateTime,omitempty" tf:"update_time,omitempty"`
}

type AlertParameters struct {

	// Trigger conditions of the alert. Block consists of the following attributes:
	// +kubebuilder:validation:Optional
	Condition *ConditionParameters `json:"condition,omitempty" tf:"condition,omitempty"`

	// Custom body of alert notification, if it exists. See Alerts API reference for custom templating instructions.
	// +kubebuilder:validation:Optional
	CustomBody *string `json:"customBody,omitempty" tf:"custom_body,omitempty"`

	// Custom subject of alert notification, if it exists. This includes email subject, Slack notification header, etc. See Alerts API reference for custom templating instructions.
	// +kubebuilder:validation:Optional
	CustomSubject *string `json:"customSubject,omitempty" tf:"custom_subject,omitempty"`

	// Name of the alert.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// Whether to notify alert subscribers when alert returns back to normal.
	// +kubebuilder:validation:Optional
	NotifyOnOk *bool `json:"notifyOnOk,omitempty" tf:"notify_on_ok,omitempty"`

	// Alert owner's username.
	// +kubebuilder:validation:Optional
	OwnerUserName *string `json:"ownerUserName,omitempty" tf:"owner_user_name,omitempty"`

	// The path to a workspace folder containing the alert. The default is the user's home folder.  If changed, the alert will be recreated.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/workspace/v1alpha1.Directory
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("path",false)
	// +kubebuilder:validation:Optional
	ParentPath *string `json:"parentPath,omitempty" tf:"parent_path,omitempty"`

	// Reference to a Directory in workspace to populate parentPath.
	// +kubebuilder:validation:Optional
	ParentPathRef *v1.NamespacedReference `json:"parentPathRef,omitempty" tf:"-"`

	// Selector for a Directory in workspace to populate parentPath.
	// +kubebuilder:validation:Optional
	ParentPathSelector *v1.NamespacedSelector `json:"parentPathSelector,omitempty" tf:"-"`

	// ID of the query evaluated by the alert.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/namespaced/sql/v1alpha1.Query
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	QueryID *string `json:"queryId,omitempty" tf:"query_id,omitempty"`

	// Reference to a Query in sql to populate queryId.
	// +kubebuilder:validation:Optional
	QueryIDRef *v1.NamespacedReference `json:"queryIdRef,omitempty" tf:"-"`

	// Selector for a Query in sql to populate queryId.
	// +kubebuilder:validation:Optional
	QueryIDSelector *v1.NamespacedSelector `json:"queryIdSelector,omitempty" tf:"-"`

	// Number of seconds an alert must wait after being triggered to rearm itself. After rearming, it can be triggered again. If 0 or not specified, the alert will not be triggered again.
	// +kubebuilder:validation:Optional
	SecondsToRetrigger *float64 `json:"secondsToRetrigger,omitempty" tf:"seconds_to_retrigger,omitempty"`
}

type ColumnInitParameters struct {

	// Name of the column.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type ColumnObservation struct {

	// Name of the column.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type ColumnParameters struct {

	// Name of the column.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type ConditionInitParameters struct {

	// Alert state if the result is empty (UNKNOWN, OK, TRIGGERED)
	EmptyResultState *string `json:"emptyResultState,omitempty" tf:"empty_result_state,omitempty"`

	// Operator used for comparison in alert evaluation. (Enum: GREATER_THAN, GREATER_THAN_OR_EQUAL, LESS_THAN, LESS_THAN_OR_EQUAL, EQUAL, NOT_EQUAL, IS_NULL)
	Op *string `json:"op,omitempty" tf:"op,omitempty"`

	// Name of the column from the query result to use for comparison in alert evaluation:
	Operand *OperandInitParameters `json:"operand,omitempty" tf:"operand,omitempty"`

	// Threshold value used for comparison in alert evaluation:
	Threshold *ThresholdInitParameters `json:"threshold,omitempty" tf:"threshold,omitempty"`
}

type ConditionObservation struct {

	// Alert state if the result is empty (UNKNOWN, OK, TRIGGERED)
	EmptyResultState *string `json:"emptyResultState,omitempty" tf:"empty_result_state,omitempty"`

	// Operator used for comparison in alert evaluation. (Enum: GREATER_THAN, GREATER_THAN_OR_EQUAL, LESS_THAN, LESS_THAN_OR_EQUAL, EQUAL, NOT_EQUAL, IS_NULL)
	Op *string `json:"op,omitempty" tf:"op,omitempty"`

	// Name of the column from the query result to use for comparison in alert evaluation:
	Operand *OperandObservation `json:"operand,omitempty" tf:"operand,omitempty"`

	// Threshold value used for comparison in alert evaluation:
	Threshold *ThresholdObservation `json:"threshold,omitempty" tf:"threshold,omitempty"`
}

type ConditionParameters struct {

	// Alert state if the result is empty (UNKNOWN, OK, TRIGGERED)
	// +kubebuilder:validation:Optional
	EmptyResultState *string `json:"emptyResultState,omitempty" tf:"empty_result_state,omitempty"`

	// Operator used for comparison in alert evaluation. (Enum: GREATER_THAN, GREATER_THAN_OR_EQUAL, LESS_THAN, LESS_THAN_OR_EQUAL, EQUAL, NOT_EQUAL, IS_NULL)
	// +kubebuilder:validation:Optional
	Op *string `json:"op" tf:"op,omitempty"`

	// Name of the column from the query result to use for comparison in alert evaluation:
	// +kubebuilder:validation:Optional
	Operand *OperandParameters `json:"operand" tf:"operand,omitempty"`

	// Threshold value used for comparison in alert evaluation:
	// +kubebuilder:validation:Optional
	Threshold *ThresholdParameters `json:"threshold,omitempty" tf:"threshold,omitempty"`
}

type OperandInitParameters struct {

	// Block describing the column from the query result to use for comparison in alert evaluation:
	Column *ColumnInitParameters `json:"column,omitempty" tf:"column,omitempty"`
}

type OperandObservation struct {

	// Block describing the column from the query result to use for comparison in alert evaluation:
	Column *ColumnObservation `json:"column,omitempty" tf:"column,omitempty"`
}

type OperandParameters struct {

	// Block describing the column from the query result to use for comparison in alert evaluation:
	// +kubebuilder:validation:Optional
	Column *ColumnParameters `json:"column" tf:"column,omitempty"`
}

type ThresholdInitParameters struct {

	// actual value used in comparison (one of the attributes is required):
	Value *ValueInitParameters `json:"value,omitempty" tf:"value,omitempty"`
}

type ThresholdObservation struct {

	// actual value used in comparison (one of the attributes is required):
	Value *ValueObservation `json:"value,omitempty" tf:"value,omitempty"`
}

type ThresholdParameters struct {

	// actual value used in comparison (one of the attributes is required):
	// +kubebuilder:validation:Optional
	Value *ValueParameters `json:"value" tf:"value,omitempty"`
}

type ValueInitParameters struct {

	// boolean value (true or false) to compare against boolean results.
	BoolValue *bool `json:"boolValue,omitempty" tf:"bool_value,omitempty"`

	// double value to compare against integer and double results.
	DoubleValue *float64 `json:"doubleValue,omitempty" tf:"double_value,omitempty"`

	// string value to compare against string results.
	StringValue *string `json:"stringValue,omitempty" tf:"string_value,omitempty"`
}

type ValueObservation struct {

	// boolean value (true or false) to compare against boolean results.
	BoolValue *bool `json:"boolValue,omitempty" tf:"bool_value,omitempty"`

	// double value to compare against integer and double results.
	DoubleValue *float64 `json:"doubleValue,omitempty" tf:"double_value,omitempty"`

	// string value to compare against string results.
	StringValue *string `json:"stringValue,omitempty" tf:"string_value,omitempty"`
}

type ValueParameters struct {

	// boolean value (true or false) to compare against boolean results.
	// +kubebuilder:validation:Optional
	BoolValue *bool `json:"boolValue,omitempty" tf:"bool_value,omitempty"`

	// double value to compare against integer and double results.
	// +kubebuilder:validation:Optional
	DoubleValue *float64 `json:"doubleValue,omitempty" tf:"double_value,omitempty"`

	// string value to compare against string results.
	// +kubebuilder:validation:Optional
	StringValue *string `json:"stringValue,omitempty" tf:"string_value,omitempty"`
}

// AlertSpec defines the desired state of Alert
type AlertSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            AlertParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AlertInitParameters `json:"initProvider,omitempty"`
}

// AlertStatus defines the observed state of Alert.
type AlertStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AlertObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Alert is the Schema for the Alerts API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,databricks}
type Alert struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.condition) || (has(self.initProvider) && has(self.initProvider.condition))",message="spec.forProvider.condition is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.displayName) || (has(self.initProvider) && has(self.initProvider.displayName))",message="spec.forProvider.displayName is a required parameter"
	Spec   AlertSpec   `json:"spec"`
	Status AlertStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AlertList contains a list of Alerts
type AlertList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Alert `json:"items"`
}

// Repository type metadata.
var (
	Alert_Kind             = "Alert"
	Alert_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Alert_Kind}.String()
	Alert_KindAPIVersion   = Alert_Kind + "." + CRDGroupVersion.String()
	Alert_GroupVersionKind = CRDGroupVersion.WithKind(Alert_Kind)
)

func init() {
	SchemeBuilder.Register(&Alert{}, &AlertList{})
}
