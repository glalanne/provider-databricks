// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

// Package namespaced contains Kubernetes API for the provider.
package namespaced

import (
	"k8s.io/apimachinery/pkg/runtime"

	v1alpha1 "github.com/glalanne/provider-databricks/apis/namespaced/apps/v1alpha1"
	v1alpha1compute "github.com/glalanne/provider-databricks/apis/namespaced/compute/v1alpha1"
	v1alpha1deployment "github.com/glalanne/provider-databricks/apis/namespaced/deployment/v1alpha1"
	v1alpha1finops "github.com/glalanne/provider-databricks/apis/namespaced/finops/v1alpha1"
	v1alpha1log "github.com/glalanne/provider-databricks/apis/namespaced/log/v1alpha1"
	v1alpha1mlflow "github.com/glalanne/provider-databricks/apis/namespaced/mlflow/v1alpha1"
	v1alpha1mosaic "github.com/glalanne/provider-databricks/apis/namespaced/mosaic/v1alpha1"
	v1alpha1security "github.com/glalanne/provider-databricks/apis/namespaced/security/v1alpha1"
	v1alpha1serving "github.com/glalanne/provider-databricks/apis/namespaced/serving/v1alpha1"
	v1alpha1settings "github.com/glalanne/provider-databricks/apis/namespaced/settings/v1alpha1"
	v1alpha1sharing "github.com/glalanne/provider-databricks/apis/namespaced/sharing/v1alpha1"
	v1alpha1sql "github.com/glalanne/provider-databricks/apis/namespaced/sql/v1alpha1"
	v1alpha1storage "github.com/glalanne/provider-databricks/apis/namespaced/storage/v1alpha1"
	v1alpha1unity "github.com/glalanne/provider-databricks/apis/namespaced/unity/v1alpha1"
	v1alpha1namespaced "github.com/glalanne/provider-databricks/apis/namespaced/v1alpha1"
	v1beta1 "github.com/glalanne/provider-databricks/apis/namespaced/v1beta1"
	v1alpha1workspace "github.com/glalanne/provider-databricks/apis/namespaced/workspace/v1alpha1"
)

func init() {
	// Register the types with the Scheme so the components can map objects to GroupVersionKinds and back
	AddToSchemes = append(AddToSchemes,
		v1alpha1.SchemeBuilder.AddToScheme,
		v1alpha1compute.SchemeBuilder.AddToScheme,
		v1alpha1deployment.SchemeBuilder.AddToScheme,
		v1alpha1finops.SchemeBuilder.AddToScheme,
		v1alpha1log.SchemeBuilder.AddToScheme,
		v1alpha1mlflow.SchemeBuilder.AddToScheme,
		v1alpha1mosaic.SchemeBuilder.AddToScheme,
		v1alpha1security.SchemeBuilder.AddToScheme,
		v1alpha1serving.SchemeBuilder.AddToScheme,
		v1alpha1settings.SchemeBuilder.AddToScheme,
		v1alpha1sharing.SchemeBuilder.AddToScheme,
		v1alpha1sql.SchemeBuilder.AddToScheme,
		v1alpha1storage.SchemeBuilder.AddToScheme,
		v1alpha1unity.SchemeBuilder.AddToScheme,
		v1alpha1namespaced.SchemeBuilder.AddToScheme,
		v1beta1.SchemeBuilder.AddToScheme,
		v1alpha1workspace.SchemeBuilder.AddToScheme,
	)
}

// AddToSchemes may be used to add all resources defined in the project to a Scheme
var AddToSchemes runtime.SchemeBuilder

// AddToScheme adds all Resources to the Scheme
func AddToScheme(s *runtime.Scheme) error {
	return AddToSchemes.AddToScheme(s)
}
