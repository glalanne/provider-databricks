// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CloudResourceContainerInitParameters struct {

	// A block that consists of the following field:
	GCP []GCPInitParameters `json:"gcp,omitempty" tf:"gcp,omitempty"`
}

type CloudResourceContainerObservation struct {

	// A block that consists of the following field:
	GCP []GCPObservation `json:"gcp,omitempty" tf:"gcp,omitempty"`
}

type CloudResourceContainerParameters struct {

	// A block that consists of the following field:
	// +kubebuilder:validation:Optional
	GCP []GCPParameters `json:"gcp" tf:"gcp,omitempty"`
}

type ExternalCustomerInfoInitParameters struct {
	AuthoritativeUserEmail *string `json:"authoritativeUserEmail,omitempty" tf:"authoritative_user_email,omitempty"`

	AuthoritativeUserFullName *string `json:"authoritativeUserFullName,omitempty" tf:"authoritative_user_full_name,omitempty"`

	CustomerName *string `json:"customerName,omitempty" tf:"customer_name,omitempty"`
}

type ExternalCustomerInfoObservation struct {
	AuthoritativeUserEmail *string `json:"authoritativeUserEmail,omitempty" tf:"authoritative_user_email,omitempty"`

	AuthoritativeUserFullName *string `json:"authoritativeUserFullName,omitempty" tf:"authoritative_user_full_name,omitempty"`

	CustomerName *string `json:"customerName,omitempty" tf:"customer_name,omitempty"`
}

type ExternalCustomerInfoParameters struct {

	// +kubebuilder:validation:Optional
	AuthoritativeUserEmail *string `json:"authoritativeUserEmail" tf:"authoritative_user_email,omitempty"`

	// +kubebuilder:validation:Optional
	AuthoritativeUserFullName *string `json:"authoritativeUserFullName" tf:"authoritative_user_full_name,omitempty"`

	// +kubebuilder:validation:Optional
	CustomerName *string `json:"customerName" tf:"customer_name,omitempty"`
}

type GCPInitParameters struct {

	// The Google Cloud project ID, which the workspace uses to instantiate cloud resources for your workspace.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`
}

type GCPManagedNetworkConfigInitParameters struct {
	GkeClusterPodIPRange *string `json:"gkeClusterPodIpRange,omitempty" tf:"gke_cluster_pod_ip_range,omitempty"`

	GkeClusterServiceIPRange *string `json:"gkeClusterServiceIpRange,omitempty" tf:"gke_cluster_service_ip_range,omitempty"`

	SubnetCidr *string `json:"subnetCidr,omitempty" tf:"subnet_cidr,omitempty"`
}

type GCPManagedNetworkConfigObservation struct {
	GkeClusterPodIPRange *string `json:"gkeClusterPodIpRange,omitempty" tf:"gke_cluster_pod_ip_range,omitempty"`

	GkeClusterServiceIPRange *string `json:"gkeClusterServiceIpRange,omitempty" tf:"gke_cluster_service_ip_range,omitempty"`

	SubnetCidr *string `json:"subnetCidr,omitempty" tf:"subnet_cidr,omitempty"`
}

type GCPManagedNetworkConfigParameters struct {

	// +kubebuilder:validation:Optional
	GkeClusterPodIPRange *string `json:"gkeClusterPodIpRange,omitempty" tf:"gke_cluster_pod_ip_range,omitempty"`

	// +kubebuilder:validation:Optional
	GkeClusterServiceIPRange *string `json:"gkeClusterServiceIpRange,omitempty" tf:"gke_cluster_service_ip_range,omitempty"`

	// +kubebuilder:validation:Optional
	SubnetCidr *string `json:"subnetCidr" tf:"subnet_cidr,omitempty"`
}

type GCPObservation struct {

	// The Google Cloud project ID, which the workspace uses to instantiate cloud resources for your workspace.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`
}

type GCPParameters struct {

	// The Google Cloud project ID, which the workspace uses to instantiate cloud resources for your workspace.
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId" tf:"project_id,omitempty"`
}

type GkeConfigInitParameters struct {
	ConnectivityType *string `json:"connectivityType,omitempty" tf:"connectivity_type,omitempty"`

	MasterIPRange *string `json:"masterIpRange,omitempty" tf:"master_ip_range,omitempty"`
}

type GkeConfigObservation struct {
	ConnectivityType *string `json:"connectivityType,omitempty" tf:"connectivity_type,omitempty"`

	MasterIPRange *string `json:"masterIpRange,omitempty" tf:"master_ip_range,omitempty"`
}

type GkeConfigParameters struct {

	// +kubebuilder:validation:Optional
	ConnectivityType *string `json:"connectivityType,omitempty" tf:"connectivity_type,omitempty"`

	// +kubebuilder:validation:Optional
	MasterIPRange *string `json:"masterIpRange,omitempty" tf:"master_ip_range,omitempty"`
}

type MwsWorkspacesInitParameters struct {

	// Account Id that could be found in the top right corner of Accounts Console.
	AccountIDSecretRef v1.SecretKeySelector `json:"accountIdSecretRef" tf:"-"`

	// (AWS only) region of VPC.
	AwsRegion *string `json:"awsRegion,omitempty" tf:"aws_region,omitempty"`

	Cloud *string `json:"cloud,omitempty" tf:"cloud,omitempty"`

	// (GCP only) A block that specifies GCP workspace configurations, consisting of following blocks:
	CloudResourceContainer []CloudResourceContainerInitParameters `json:"cloudResourceContainer,omitempty" tf:"cloud_resource_container,omitempty"`

	// - The compute mode for the workspace. When unset, a classic workspace is created, and both credentials_id and storage_configuration_id must be specified. When set to SERVERLESS, the resulting workspace is a serverless workspace, and credentials_id and storage_configuration_id must not be set. The only allowed value for this is SERVERLESS. Changing this field requires recreation of the workspace.
	ComputeMode *string `json:"computeMode,omitempty" tf:"compute_mode,omitempty"`

	// (Integer) time when workspace was created
	CreationTime *float64 `json:"creationTime,omitempty" tf:"creation_time,omitempty"`

	// (AWS only, Optional) credentials_id from credentials. This must not be specified when compute_mode is set to SERVERLESS.
	CredentialsID *string `json:"credentialsId,omitempty" tf:"credentials_id,omitempty"`

	// - The custom tags key-value pairing that is attached to this workspace. These tags will be applied to clusters automatically in addition to any default_tags or custom_tags on a cluster level. Please note it can take up to an hour for custom_tags to be set due to scheduling on Control Plane. After custom tags are applied, they can be modified however they can never be completely removed.
	// +mapType=granular
	CustomTags map[string]*string `json:"customTags,omitempty" tf:"custom_tags,omitempty"`

	// (String) Canonical unique identifier for the workspace, of the format <account-id>/<workspace-id>
	CustomerManagedKeyID *string `json:"customerManagedKeyId,omitempty" tf:"customer_managed_key_id,omitempty"`

	// part of URL as in https://<prefix>-<deployment-name>.cloud.databricks.com. Deployment name cannot be used until a deployment name prefix is defined. Please contact your Databricks representative. Once a new deployment prefix is added/updated, it only will affect the new workspaces created.
	DeploymentName *string `json:"deploymentName,omitempty" tf:"deployment_name,omitempty"`

	ExternalCustomerInfo []ExternalCustomerInfoInitParameters `json:"externalCustomerInfo,omitempty" tf:"external_customer_info,omitempty"`

	GCPManagedNetworkConfig []GCPManagedNetworkConfigInitParameters `json:"gcpManagedNetworkConfig,omitempty" tf:"gcp_managed_network_config,omitempty"`

	GkeConfig []GkeConfigInitParameters `json:"gkeConfig,omitempty" tf:"gke_config,omitempty"`

	IsNoPublicIPEnabled *bool `json:"isNoPublicIpEnabled,omitempty" tf:"is_no_public_ip_enabled,omitempty"`

	// (GCP only) region of the subnet.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// customer_managed_key_id from customer managed keys with use_cases set to MANAGED_SERVICES. This is used to encrypt the workspace's notebook and secret data in the control plane.
	ManagedServicesCustomerManagedKeyID *string `json:"managedServicesCustomerManagedKeyId,omitempty" tf:"managed_services_customer_managed_key_id,omitempty"`

	// network_id from networks.
	NetworkID *string `json:"networkId,omitempty" tf:"network_id,omitempty"`

	// - The pricing tier of the workspace.
	PricingTier *string `json:"pricingTier,omitempty" tf:"pricing_tier,omitempty"`

	// Canonical unique identifier of databricks_mws_private_access_settings in Databricks Account.
	PrivateAccessSettingsID *string `json:"privateAccessSettingsId,omitempty" tf:"private_access_settings_id,omitempty"`

	// (AWS only, Optional) storage_configuration_id from storage configuration. This must not be specified when compute_mode is set to SERVERLESS.
	StorageConfigurationID *string `json:"storageConfigurationId,omitempty" tf:"storage_configuration_id,omitempty"`

	// customer_managed_key_id from customer managed keys with use_cases set to STORAGE. This is used to encrypt the DBFS Storage & Cluster Volumes.
	StorageCustomerManagedKeyID *string `json:"storageCustomerManagedKeyId,omitempty" tf:"storage_customer_managed_key_id,omitempty"`

	Token []TokenInitParameters `json:"token,omitempty" tf:"token,omitempty"`

	// (String) workspace id
	WorkspaceID *float64 `json:"workspaceId,omitempty" tf:"workspace_id,omitempty"`

	// name of the workspace, will appear on UI.
	WorkspaceName *string `json:"workspaceName,omitempty" tf:"workspace_name,omitempty"`

	// (String) workspace status
	WorkspaceStatus *string `json:"workspaceStatus,omitempty" tf:"workspace_status,omitempty"`

	// (String) updates on workspace status
	WorkspaceStatusMessage *string `json:"workspaceStatusMessage,omitempty" tf:"workspace_status_message,omitempty"`

	// (String) URL of the workspace
	WorkspaceURL *string `json:"workspaceUrl,omitempty" tf:"workspace_url,omitempty"`
}

type MwsWorkspacesObservation struct {

	// (AWS only) region of VPC.
	AwsRegion *string `json:"awsRegion,omitempty" tf:"aws_region,omitempty"`

	Cloud *string `json:"cloud,omitempty" tf:"cloud,omitempty"`

	// (GCP only) A block that specifies GCP workspace configurations, consisting of following blocks:
	CloudResourceContainer []CloudResourceContainerObservation `json:"cloudResourceContainer,omitempty" tf:"cloud_resource_container,omitempty"`

	// - The compute mode for the workspace. When unset, a classic workspace is created, and both credentials_id and storage_configuration_id must be specified. When set to SERVERLESS, the resulting workspace is a serverless workspace, and credentials_id and storage_configuration_id must not be set. The only allowed value for this is SERVERLESS. Changing this field requires recreation of the workspace.
	ComputeMode *string `json:"computeMode,omitempty" tf:"compute_mode,omitempty"`

	// (Integer) time when workspace was created
	CreationTime *float64 `json:"creationTime,omitempty" tf:"creation_time,omitempty"`

	// (AWS only, Optional) credentials_id from credentials. This must not be specified when compute_mode is set to SERVERLESS.
	CredentialsID *string `json:"credentialsId,omitempty" tf:"credentials_id,omitempty"`

	// - The custom tags key-value pairing that is attached to this workspace. These tags will be applied to clusters automatically in addition to any default_tags or custom_tags on a cluster level. Please note it can take up to an hour for custom_tags to be set due to scheduling on Control Plane. After custom tags are applied, they can be modified however they can never be completely removed.
	// +mapType=granular
	CustomTags map[string]*string `json:"customTags,omitempty" tf:"custom_tags,omitempty"`

	// (String) Canonical unique identifier for the workspace, of the format <account-id>/<workspace-id>
	CustomerManagedKeyID *string `json:"customerManagedKeyId,omitempty" tf:"customer_managed_key_id,omitempty"`

	// part of URL as in https://<prefix>-<deployment-name>.cloud.databricks.com. Deployment name cannot be used until a deployment name prefix is defined. Please contact your Databricks representative. Once a new deployment prefix is added/updated, it only will affect the new workspaces created.
	DeploymentName *string `json:"deploymentName,omitempty" tf:"deployment_name,omitempty"`

	// (String) The effective compute mode for the workspace. This is either SERVERLESS for serverless workspaces or HYBRID for classic workspaces.
	EffectiveComputeMode *string `json:"effectiveComputeMode,omitempty" tf:"effective_compute_mode,omitempty"`

	ExternalCustomerInfo []ExternalCustomerInfoObservation `json:"externalCustomerInfo,omitempty" tf:"external_customer_info,omitempty"`

	GCPManagedNetworkConfig []GCPManagedNetworkConfigObservation `json:"gcpManagedNetworkConfig,omitempty" tf:"gcp_managed_network_config,omitempty"`

	// (String, GCP only) identifier of a service account created for the workspace in form of db-<workspace-id>@prod-gcp-<region>.iam.gserviceaccount.com
	GCPWorkspaceSa *string `json:"gcpWorkspaceSa,omitempty" tf:"gcp_workspace_sa,omitempty"`

	GkeConfig []GkeConfigObservation `json:"gkeConfig,omitempty" tf:"gke_config,omitempty"`

	// (String) Canonical unique identifier for the workspace, of the format <account-id>/<workspace-id>
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	IsNoPublicIPEnabled *bool `json:"isNoPublicIpEnabled,omitempty" tf:"is_no_public_ip_enabled,omitempty"`

	// (GCP only) region of the subnet.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// customer_managed_key_id from customer managed keys with use_cases set to MANAGED_SERVICES. This is used to encrypt the workspace's notebook and secret data in the control plane.
	ManagedServicesCustomerManagedKeyID *string `json:"managedServicesCustomerManagedKeyId,omitempty" tf:"managed_services_customer_managed_key_id,omitempty"`

	// network_id from networks.
	NetworkID *string `json:"networkId,omitempty" tf:"network_id,omitempty"`

	// - The pricing tier of the workspace.
	PricingTier *string `json:"pricingTier,omitempty" tf:"pricing_tier,omitempty"`

	// Canonical unique identifier of databricks_mws_private_access_settings in Databricks Account.
	PrivateAccessSettingsID *string `json:"privateAccessSettingsId,omitempty" tf:"private_access_settings_id,omitempty"`

	// (AWS only, Optional) storage_configuration_id from storage configuration. This must not be specified when compute_mode is set to SERVERLESS.
	StorageConfigurationID *string `json:"storageConfigurationId,omitempty" tf:"storage_configuration_id,omitempty"`

	// customer_managed_key_id from customer managed keys with use_cases set to STORAGE. This is used to encrypt the DBFS Storage & Cluster Volumes.
	StorageCustomerManagedKeyID *string `json:"storageCustomerManagedKeyId,omitempty" tf:"storage_customer_managed_key_id,omitempty"`

	Token []TokenObservation `json:"token,omitempty" tf:"token,omitempty"`

	// (String) workspace id
	WorkspaceID *float64 `json:"workspaceId,omitempty" tf:"workspace_id,omitempty"`

	// name of the workspace, will appear on UI.
	WorkspaceName *string `json:"workspaceName,omitempty" tf:"workspace_name,omitempty"`

	// (String) workspace status
	WorkspaceStatus *string `json:"workspaceStatus,omitempty" tf:"workspace_status,omitempty"`

	// (String) updates on workspace status
	WorkspaceStatusMessage *string `json:"workspaceStatusMessage,omitempty" tf:"workspace_status_message,omitempty"`

	// (String) URL of the workspace
	WorkspaceURL *string `json:"workspaceUrl,omitempty" tf:"workspace_url,omitempty"`
}

type MwsWorkspacesParameters struct {

	// Account Id that could be found in the top right corner of Accounts Console.
	// +kubebuilder:validation:Optional
	AccountIDSecretRef v1.SecretKeySelector `json:"accountIdSecretRef" tf:"-"`

	// (AWS only) region of VPC.
	// +kubebuilder:validation:Optional
	AwsRegion *string `json:"awsRegion,omitempty" tf:"aws_region,omitempty"`

	// +kubebuilder:validation:Optional
	Cloud *string `json:"cloud,omitempty" tf:"cloud,omitempty"`

	// (GCP only) A block that specifies GCP workspace configurations, consisting of following blocks:
	// +kubebuilder:validation:Optional
	CloudResourceContainer []CloudResourceContainerParameters `json:"cloudResourceContainer,omitempty" tf:"cloud_resource_container,omitempty"`

	// - The compute mode for the workspace. When unset, a classic workspace is created, and both credentials_id and storage_configuration_id must be specified. When set to SERVERLESS, the resulting workspace is a serverless workspace, and credentials_id and storage_configuration_id must not be set. The only allowed value for this is SERVERLESS. Changing this field requires recreation of the workspace.
	// +kubebuilder:validation:Optional
	ComputeMode *string `json:"computeMode,omitempty" tf:"compute_mode,omitempty"`

	// (Integer) time when workspace was created
	// +kubebuilder:validation:Optional
	CreationTime *float64 `json:"creationTime,omitempty" tf:"creation_time,omitempty"`

	// (AWS only, Optional) credentials_id from credentials. This must not be specified when compute_mode is set to SERVERLESS.
	// +kubebuilder:validation:Optional
	CredentialsID *string `json:"credentialsId,omitempty" tf:"credentials_id,omitempty"`

	// - The custom tags key-value pairing that is attached to this workspace. These tags will be applied to clusters automatically in addition to any default_tags or custom_tags on a cluster level. Please note it can take up to an hour for custom_tags to be set due to scheduling on Control Plane. After custom tags are applied, they can be modified however they can never be completely removed.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	CustomTags map[string]*string `json:"customTags,omitempty" tf:"custom_tags,omitempty"`

	// (String) Canonical unique identifier for the workspace, of the format <account-id>/<workspace-id>
	// +kubebuilder:validation:Optional
	CustomerManagedKeyID *string `json:"customerManagedKeyId,omitempty" tf:"customer_managed_key_id,omitempty"`

	// part of URL as in https://<prefix>-<deployment-name>.cloud.databricks.com. Deployment name cannot be used until a deployment name prefix is defined. Please contact your Databricks representative. Once a new deployment prefix is added/updated, it only will affect the new workspaces created.
	// +kubebuilder:validation:Optional
	DeploymentName *string `json:"deploymentName,omitempty" tf:"deployment_name,omitempty"`

	// +kubebuilder:validation:Optional
	ExternalCustomerInfo []ExternalCustomerInfoParameters `json:"externalCustomerInfo,omitempty" tf:"external_customer_info,omitempty"`

	// +kubebuilder:validation:Optional
	GCPManagedNetworkConfig []GCPManagedNetworkConfigParameters `json:"gcpManagedNetworkConfig,omitempty" tf:"gcp_managed_network_config,omitempty"`

	// +kubebuilder:validation:Optional
	GkeConfig []GkeConfigParameters `json:"gkeConfig,omitempty" tf:"gke_config,omitempty"`

	// +kubebuilder:validation:Optional
	IsNoPublicIPEnabled *bool `json:"isNoPublicIpEnabled,omitempty" tf:"is_no_public_ip_enabled,omitempty"`

	// (GCP only) region of the subnet.
	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// customer_managed_key_id from customer managed keys with use_cases set to MANAGED_SERVICES. This is used to encrypt the workspace's notebook and secret data in the control plane.
	// +kubebuilder:validation:Optional
	ManagedServicesCustomerManagedKeyID *string `json:"managedServicesCustomerManagedKeyId,omitempty" tf:"managed_services_customer_managed_key_id,omitempty"`

	// network_id from networks.
	// +kubebuilder:validation:Optional
	NetworkID *string `json:"networkId,omitempty" tf:"network_id,omitempty"`

	// - The pricing tier of the workspace.
	// +kubebuilder:validation:Optional
	PricingTier *string `json:"pricingTier,omitempty" tf:"pricing_tier,omitempty"`

	// Canonical unique identifier of databricks_mws_private_access_settings in Databricks Account.
	// +kubebuilder:validation:Optional
	PrivateAccessSettingsID *string `json:"privateAccessSettingsId,omitempty" tf:"private_access_settings_id,omitempty"`

	// (AWS only, Optional) storage_configuration_id from storage configuration. This must not be specified when compute_mode is set to SERVERLESS.
	// +kubebuilder:validation:Optional
	StorageConfigurationID *string `json:"storageConfigurationId,omitempty" tf:"storage_configuration_id,omitempty"`

	// customer_managed_key_id from customer managed keys with use_cases set to STORAGE. This is used to encrypt the DBFS Storage & Cluster Volumes.
	// +kubebuilder:validation:Optional
	StorageCustomerManagedKeyID *string `json:"storageCustomerManagedKeyId,omitempty" tf:"storage_customer_managed_key_id,omitempty"`

	// +kubebuilder:validation:Optional
	Token []TokenParameters `json:"token,omitempty" tf:"token,omitempty"`

	// (String) workspace id
	// +kubebuilder:validation:Optional
	WorkspaceID *float64 `json:"workspaceId,omitempty" tf:"workspace_id,omitempty"`

	// name of the workspace, will appear on UI.
	// +kubebuilder:validation:Optional
	WorkspaceName *string `json:"workspaceName,omitempty" tf:"workspace_name,omitempty"`

	// (String) workspace status
	// +kubebuilder:validation:Optional
	WorkspaceStatus *string `json:"workspaceStatus,omitempty" tf:"workspace_status,omitempty"`

	// (String) updates on workspace status
	// +kubebuilder:validation:Optional
	WorkspaceStatusMessage *string `json:"workspaceStatusMessage,omitempty" tf:"workspace_status_message,omitempty"`

	// (String) URL of the workspace
	// +kubebuilder:validation:Optional
	WorkspaceURL *string `json:"workspaceUrl,omitempty" tf:"workspace_url,omitempty"`
}

type TokenInitParameters struct {

	// Comment, that will appear in "User Settings / Access Tokens" page on Workspace UI.
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// Token expiry lifetime. By default its 2592000 (30 days).
	LifetimeSeconds *float64 `json:"lifetimeSeconds,omitempty" tf:"lifetime_seconds,omitempty"`

	// (String) Canonical unique identifier for the workspace, of the format <account-id>/<workspace-id>
	TokenID *string `json:"tokenId,omitempty" tf:"token_id,omitempty"`

	TokenValueSecretRef *v1.SecretKeySelector `json:"tokenValueSecretRef,omitempty" tf:"-"`
}

type TokenObservation struct {

	// Comment, that will appear in "User Settings / Access Tokens" page on Workspace UI.
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// Token expiry lifetime. By default its 2592000 (30 days).
	LifetimeSeconds *float64 `json:"lifetimeSeconds,omitempty" tf:"lifetime_seconds,omitempty"`

	// (String) Canonical unique identifier for the workspace, of the format <account-id>/<workspace-id>
	TokenID *string `json:"tokenId,omitempty" tf:"token_id,omitempty"`
}

type TokenParameters struct {

	// Comment, that will appear in "User Settings / Access Tokens" page on Workspace UI.
	// +kubebuilder:validation:Optional
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// Token expiry lifetime. By default its 2592000 (30 days).
	// +kubebuilder:validation:Optional
	LifetimeSeconds *float64 `json:"lifetimeSeconds,omitempty" tf:"lifetime_seconds,omitempty"`

	// (String) Canonical unique identifier for the workspace, of the format <account-id>/<workspace-id>
	// +kubebuilder:validation:Optional
	TokenID *string `json:"tokenId,omitempty" tf:"token_id,omitempty"`

	// +kubebuilder:validation:Optional
	TokenValueSecretRef *v1.SecretKeySelector `json:"tokenValueSecretRef,omitempty" tf:"-"`
}

// MwsWorkspacesSpec defines the desired state of MwsWorkspaces
type MwsWorkspacesSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     MwsWorkspacesParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider MwsWorkspacesInitParameters `json:"initProvider,omitempty"`
}

// MwsWorkspacesStatus defines the observed state of MwsWorkspaces.
type MwsWorkspacesStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        MwsWorkspacesObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// MwsWorkspaces is the Schema for the MwsWorkspacess API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,databricks}
type MwsWorkspaces struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.accountIdSecretRef)",message="spec.forProvider.accountIdSecretRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.workspaceName) || (has(self.initProvider) && has(self.initProvider.workspaceName))",message="spec.forProvider.workspaceName is a required parameter"
	Spec   MwsWorkspacesSpec   `json:"spec"`
	Status MwsWorkspacesStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MwsWorkspacesList contains a list of MwsWorkspacess
type MwsWorkspacesList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MwsWorkspaces `json:"items"`
}

// Repository type metadata.
var (
	MwsWorkspaces_Kind             = "MwsWorkspaces"
	MwsWorkspaces_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: MwsWorkspaces_Kind}.String()
	MwsWorkspaces_KindAPIVersion   = MwsWorkspaces_Kind + "." + CRDGroupVersion.String()
	MwsWorkspaces_GroupVersionKind = CRDGroupVersion.WithKind(MwsWorkspaces_Kind)
)

func init() {
	SchemeBuilder.Register(&MwsWorkspaces{}, &MwsWorkspacesList{})
}
