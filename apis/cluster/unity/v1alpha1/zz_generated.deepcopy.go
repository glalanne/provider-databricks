//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactAllowlist) DeepCopyInto(out *ArtifactAllowlist) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactAllowlist.
func (in *ArtifactAllowlist) DeepCopy() *ArtifactAllowlist {
	if in == nil {
		return nil
	}
	out := new(ArtifactAllowlist)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ArtifactAllowlist) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactAllowlistInitParameters) DeepCopyInto(out *ArtifactAllowlistInitParameters) {
	*out = *in
	if in.ArtifactMatcher != nil {
		in, out := &in.ArtifactMatcher, &out.ArtifactMatcher
		*out = make([]ArtifactMatcherInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ArtifactType != nil {
		in, out := &in.ArtifactType, &out.ArtifactType
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactAllowlistInitParameters.
func (in *ArtifactAllowlistInitParameters) DeepCopy() *ArtifactAllowlistInitParameters {
	if in == nil {
		return nil
	}
	out := new(ArtifactAllowlistInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactAllowlistList) DeepCopyInto(out *ArtifactAllowlistList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ArtifactAllowlist, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactAllowlistList.
func (in *ArtifactAllowlistList) DeepCopy() *ArtifactAllowlistList {
	if in == nil {
		return nil
	}
	out := new(ArtifactAllowlistList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ArtifactAllowlistList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactAllowlistObservation) DeepCopyInto(out *ArtifactAllowlistObservation) {
	*out = *in
	if in.ArtifactMatcher != nil {
		in, out := &in.ArtifactMatcher, &out.ArtifactMatcher
		*out = make([]ArtifactMatcherObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ArtifactType != nil {
		in, out := &in.ArtifactType, &out.ArtifactType
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactAllowlistObservation.
func (in *ArtifactAllowlistObservation) DeepCopy() *ArtifactAllowlistObservation {
	if in == nil {
		return nil
	}
	out := new(ArtifactAllowlistObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactAllowlistParameters) DeepCopyInto(out *ArtifactAllowlistParameters) {
	*out = *in
	if in.ArtifactMatcher != nil {
		in, out := &in.ArtifactMatcher, &out.ArtifactMatcher
		*out = make([]ArtifactMatcherParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ArtifactType != nil {
		in, out := &in.ArtifactType, &out.ArtifactType
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactAllowlistParameters.
func (in *ArtifactAllowlistParameters) DeepCopy() *ArtifactAllowlistParameters {
	if in == nil {
		return nil
	}
	out := new(ArtifactAllowlistParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactAllowlistSpec) DeepCopyInto(out *ArtifactAllowlistSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactAllowlistSpec.
func (in *ArtifactAllowlistSpec) DeepCopy() *ArtifactAllowlistSpec {
	if in == nil {
		return nil
	}
	out := new(ArtifactAllowlistSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactAllowlistStatus) DeepCopyInto(out *ArtifactAllowlistStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactAllowlistStatus.
func (in *ArtifactAllowlistStatus) DeepCopy() *ArtifactAllowlistStatus {
	if in == nil {
		return nil
	}
	out := new(ArtifactAllowlistStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactMatcherInitParameters) DeepCopyInto(out *ArtifactMatcherInitParameters) {
	*out = *in
	if in.Artifact != nil {
		in, out := &in.Artifact, &out.Artifact
		*out = new(string)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactMatcherInitParameters.
func (in *ArtifactMatcherInitParameters) DeepCopy() *ArtifactMatcherInitParameters {
	if in == nil {
		return nil
	}
	out := new(ArtifactMatcherInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactMatcherObservation) DeepCopyInto(out *ArtifactMatcherObservation) {
	*out = *in
	if in.Artifact != nil {
		in, out := &in.Artifact, &out.Artifact
		*out = new(string)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactMatcherObservation.
func (in *ArtifactMatcherObservation) DeepCopy() *ArtifactMatcherObservation {
	if in == nil {
		return nil
	}
	out := new(ArtifactMatcherObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactMatcherParameters) DeepCopyInto(out *ArtifactMatcherParameters) {
	*out = *in
	if in.Artifact != nil {
		in, out := &in.Artifact, &out.Artifact
		*out = new(string)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactMatcherParameters.
func (in *ArtifactMatcherParameters) DeepCopy() *ArtifactMatcherParameters {
	if in == nil {
		return nil
	}
	out := new(ArtifactMatcherParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsIAMRoleInitParameters) DeepCopyInto(out *AwsIAMRoleInitParameters) {
	*out = *in
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.UnityCatalogIAMArn != nil {
		in, out := &in.UnityCatalogIAMArn, &out.UnityCatalogIAMArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsIAMRoleInitParameters.
func (in *AwsIAMRoleInitParameters) DeepCopy() *AwsIAMRoleInitParameters {
	if in == nil {
		return nil
	}
	out := new(AwsIAMRoleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsIAMRoleObservation) DeepCopyInto(out *AwsIAMRoleObservation) {
	*out = *in
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.UnityCatalogIAMArn != nil {
		in, out := &in.UnityCatalogIAMArn, &out.UnityCatalogIAMArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsIAMRoleObservation.
func (in *AwsIAMRoleObservation) DeepCopy() *AwsIAMRoleObservation {
	if in == nil {
		return nil
	}
	out := new(AwsIAMRoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsIAMRoleParameters) DeepCopyInto(out *AwsIAMRoleParameters) {
	*out = *in
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.UnityCatalogIAMArn != nil {
		in, out := &in.UnityCatalogIAMArn, &out.UnityCatalogIAMArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsIAMRoleParameters.
func (in *AwsIAMRoleParameters) DeepCopy() *AwsIAMRoleParameters {
	if in == nil {
		return nil
	}
	out := new(AwsIAMRoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureManagedIdentityInitParameters) DeepCopyInto(out *AzureManagedIdentityInitParameters) {
	*out = *in
	if in.AccessConnectorID != nil {
		in, out := &in.AccessConnectorID, &out.AccessConnectorID
		*out = new(string)
		**out = **in
	}
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.ManagedIdentityID != nil {
		in, out := &in.ManagedIdentityID, &out.ManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureManagedIdentityInitParameters.
func (in *AzureManagedIdentityInitParameters) DeepCopy() *AzureManagedIdentityInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureManagedIdentityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureManagedIdentityObservation) DeepCopyInto(out *AzureManagedIdentityObservation) {
	*out = *in
	if in.AccessConnectorID != nil {
		in, out := &in.AccessConnectorID, &out.AccessConnectorID
		*out = new(string)
		**out = **in
	}
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.ManagedIdentityID != nil {
		in, out := &in.ManagedIdentityID, &out.ManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureManagedIdentityObservation.
func (in *AzureManagedIdentityObservation) DeepCopy() *AzureManagedIdentityObservation {
	if in == nil {
		return nil
	}
	out := new(AzureManagedIdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureManagedIdentityParameters) DeepCopyInto(out *AzureManagedIdentityParameters) {
	*out = *in
	if in.AccessConnectorID != nil {
		in, out := &in.AccessConnectorID, &out.AccessConnectorID
		*out = new(string)
		**out = **in
	}
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.ManagedIdentityID != nil {
		in, out := &in.ManagedIdentityID, &out.ManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureManagedIdentityParameters.
func (in *AzureManagedIdentityParameters) DeepCopy() *AzureManagedIdentityParameters {
	if in == nil {
		return nil
	}
	out := new(AzureManagedIdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureServicePrincipalInitParameters) DeepCopyInto(out *AzureServicePrincipalInitParameters) {
	*out = *in
	if in.ApplicationID != nil {
		in, out := &in.ApplicationID, &out.ApplicationID
		*out = new(string)
		**out = **in
	}
	in.ClientSecretSecretRef.DeepCopyInto(&out.ClientSecretSecretRef)
	if in.DirectoryID != nil {
		in, out := &in.DirectoryID, &out.DirectoryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureServicePrincipalInitParameters.
func (in *AzureServicePrincipalInitParameters) DeepCopy() *AzureServicePrincipalInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureServicePrincipalInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureServicePrincipalObservation) DeepCopyInto(out *AzureServicePrincipalObservation) {
	*out = *in
	if in.ApplicationID != nil {
		in, out := &in.ApplicationID, &out.ApplicationID
		*out = new(string)
		**out = **in
	}
	if in.DirectoryID != nil {
		in, out := &in.DirectoryID, &out.DirectoryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureServicePrincipalObservation.
func (in *AzureServicePrincipalObservation) DeepCopy() *AzureServicePrincipalObservation {
	if in == nil {
		return nil
	}
	out := new(AzureServicePrincipalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureServicePrincipalParameters) DeepCopyInto(out *AzureServicePrincipalParameters) {
	*out = *in
	if in.ApplicationID != nil {
		in, out := &in.ApplicationID, &out.ApplicationID
		*out = new(string)
		**out = **in
	}
	in.ClientSecretSecretRef.DeepCopyInto(&out.ClientSecretSecretRef)
	if in.DirectoryID != nil {
		in, out := &in.DirectoryID, &out.DirectoryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureServicePrincipalParameters.
func (in *AzureServicePrincipalParameters) DeepCopy() *AzureServicePrincipalParameters {
	if in == nil {
		return nil
	}
	out := new(AzureServicePrincipalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Catalog) DeepCopyInto(out *Catalog) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Catalog.
func (in *Catalog) DeepCopy() *Catalog {
	if in == nil {
		return nil
	}
	out := new(Catalog)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Catalog) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogInitParameters) DeepCopyInto(out *CatalogInitParameters) {
	*out = *in
	if in.BrowseOnly != nil {
		in, out := &in.BrowseOnly, &out.BrowseOnly
		*out = new(bool)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.EffectivePredictiveOptimizationFlag != nil {
		in, out := &in.EffectivePredictiveOptimizationFlag, &out.EffectivePredictiveOptimizationFlag
		*out = make([]EffectivePredictiveOptimizationFlagInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnablePredictiveOptimization != nil {
		in, out := &in.EnablePredictiveOptimization, &out.EnablePredictiveOptimization
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.ProvisioningInfo != nil {
		in, out := &in.ProvisioningInfo, &out.ProvisioningInfo
		*out = make([]ProvisioningInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogInitParameters.
func (in *CatalogInitParameters) DeepCopy() *CatalogInitParameters {
	if in == nil {
		return nil
	}
	out := new(CatalogInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogList) DeepCopyInto(out *CatalogList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Catalog, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogList.
func (in *CatalogList) DeepCopy() *CatalogList {
	if in == nil {
		return nil
	}
	out := new(CatalogList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CatalogList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogObservation) DeepCopyInto(out *CatalogObservation) {
	*out = *in
	if in.BrowseOnly != nil {
		in, out := &in.BrowseOnly, &out.BrowseOnly
		*out = new(bool)
		**out = **in
	}
	if in.CatalogType != nil {
		in, out := &in.CatalogType, &out.CatalogType
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.EffectivePredictiveOptimizationFlag != nil {
		in, out := &in.EffectivePredictiveOptimizationFlag, &out.EffectivePredictiveOptimizationFlag
		*out = make([]EffectivePredictiveOptimizationFlagObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnablePredictiveOptimization != nil {
		in, out := &in.EnablePredictiveOptimization, &out.EnablePredictiveOptimization
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.FullName != nil {
		in, out := &in.FullName, &out.FullName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.ProvisioningInfo != nil {
		in, out := &in.ProvisioningInfo, &out.ProvisioningInfo
		*out = make([]ProvisioningInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurableType != nil {
		in, out := &in.SecurableType, &out.SecurableType
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedBy != nil {
		in, out := &in.UpdatedBy, &out.UpdatedBy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogObservation.
func (in *CatalogObservation) DeepCopy() *CatalogObservation {
	if in == nil {
		return nil
	}
	out := new(CatalogObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogParameters) DeepCopyInto(out *CatalogParameters) {
	*out = *in
	if in.BrowseOnly != nil {
		in, out := &in.BrowseOnly, &out.BrowseOnly
		*out = new(bool)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.EffectivePredictiveOptimizationFlag != nil {
		in, out := &in.EffectivePredictiveOptimizationFlag, &out.EffectivePredictiveOptimizationFlag
		*out = make([]EffectivePredictiveOptimizationFlagParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnablePredictiveOptimization != nil {
		in, out := &in.EnablePredictiveOptimization, &out.EnablePredictiveOptimization
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.ProvisioningInfo != nil {
		in, out := &in.ProvisioningInfo, &out.ProvisioningInfo
		*out = make([]ProvisioningInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogParameters.
func (in *CatalogParameters) DeepCopy() *CatalogParameters {
	if in == nil {
		return nil
	}
	out := new(CatalogParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogSpec) DeepCopyInto(out *CatalogSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogSpec.
func (in *CatalogSpec) DeepCopy() *CatalogSpec {
	if in == nil {
		return nil
	}
	out := new(CatalogSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogStatus) DeepCopyInto(out *CatalogStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogStatus.
func (in *CatalogStatus) DeepCopy() *CatalogStatus {
	if in == nil {
		return nil
	}
	out := new(CatalogStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogWorkspaceBinding) DeepCopyInto(out *CatalogWorkspaceBinding) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogWorkspaceBinding.
func (in *CatalogWorkspaceBinding) DeepCopy() *CatalogWorkspaceBinding {
	if in == nil {
		return nil
	}
	out := new(CatalogWorkspaceBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CatalogWorkspaceBinding) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogWorkspaceBindingInitParameters) DeepCopyInto(out *CatalogWorkspaceBindingInitParameters) {
	*out = *in
	if in.BindingType != nil {
		in, out := &in.BindingType, &out.BindingType
		*out = new(string)
		**out = **in
	}
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.SecurableName != nil {
		in, out := &in.SecurableName, &out.SecurableName
		*out = new(string)
		**out = **in
	}
	if in.SecurableNameRef != nil {
		in, out := &in.SecurableNameRef, &out.SecurableNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurableNameSelector != nil {
		in, out := &in.SecurableNameSelector, &out.SecurableNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurableType != nil {
		in, out := &in.SecurableType, &out.SecurableType
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
	if in.WorkspaceIDRef != nil {
		in, out := &in.WorkspaceIDRef, &out.WorkspaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkspaceIDSelector != nil {
		in, out := &in.WorkspaceIDSelector, &out.WorkspaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogWorkspaceBindingInitParameters.
func (in *CatalogWorkspaceBindingInitParameters) DeepCopy() *CatalogWorkspaceBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(CatalogWorkspaceBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogWorkspaceBindingList) DeepCopyInto(out *CatalogWorkspaceBindingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CatalogWorkspaceBinding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogWorkspaceBindingList.
func (in *CatalogWorkspaceBindingList) DeepCopy() *CatalogWorkspaceBindingList {
	if in == nil {
		return nil
	}
	out := new(CatalogWorkspaceBindingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CatalogWorkspaceBindingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogWorkspaceBindingObservation) DeepCopyInto(out *CatalogWorkspaceBindingObservation) {
	*out = *in
	if in.BindingType != nil {
		in, out := &in.BindingType, &out.BindingType
		*out = new(string)
		**out = **in
	}
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SecurableName != nil {
		in, out := &in.SecurableName, &out.SecurableName
		*out = new(string)
		**out = **in
	}
	if in.SecurableType != nil {
		in, out := &in.SecurableType, &out.SecurableType
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogWorkspaceBindingObservation.
func (in *CatalogWorkspaceBindingObservation) DeepCopy() *CatalogWorkspaceBindingObservation {
	if in == nil {
		return nil
	}
	out := new(CatalogWorkspaceBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogWorkspaceBindingParameters) DeepCopyInto(out *CatalogWorkspaceBindingParameters) {
	*out = *in
	if in.BindingType != nil {
		in, out := &in.BindingType, &out.BindingType
		*out = new(string)
		**out = **in
	}
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.SecurableName != nil {
		in, out := &in.SecurableName, &out.SecurableName
		*out = new(string)
		**out = **in
	}
	if in.SecurableNameRef != nil {
		in, out := &in.SecurableNameRef, &out.SecurableNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurableNameSelector != nil {
		in, out := &in.SecurableNameSelector, &out.SecurableNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurableType != nil {
		in, out := &in.SecurableType, &out.SecurableType
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
	if in.WorkspaceIDRef != nil {
		in, out := &in.WorkspaceIDRef, &out.WorkspaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkspaceIDSelector != nil {
		in, out := &in.WorkspaceIDSelector, &out.WorkspaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogWorkspaceBindingParameters.
func (in *CatalogWorkspaceBindingParameters) DeepCopy() *CatalogWorkspaceBindingParameters {
	if in == nil {
		return nil
	}
	out := new(CatalogWorkspaceBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogWorkspaceBindingSpec) DeepCopyInto(out *CatalogWorkspaceBindingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogWorkspaceBindingSpec.
func (in *CatalogWorkspaceBindingSpec) DeepCopy() *CatalogWorkspaceBindingSpec {
	if in == nil {
		return nil
	}
	out := new(CatalogWorkspaceBindingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogWorkspaceBindingStatus) DeepCopyInto(out *CatalogWorkspaceBindingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogWorkspaceBindingStatus.
func (in *CatalogWorkspaceBindingStatus) DeepCopy() *CatalogWorkspaceBindingStatus {
	if in == nil {
		return nil
	}
	out := new(CatalogWorkspaceBindingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudflareAPITokenInitParameters) DeepCopyInto(out *CloudflareAPITokenInitParameters) {
	*out = *in
	if in.AccessKeyID != nil {
		in, out := &in.AccessKeyID, &out.AccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	in.SecretAccessKeySecretRef.DeepCopyInto(&out.SecretAccessKeySecretRef)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudflareAPITokenInitParameters.
func (in *CloudflareAPITokenInitParameters) DeepCopy() *CloudflareAPITokenInitParameters {
	if in == nil {
		return nil
	}
	out := new(CloudflareAPITokenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudflareAPITokenObservation) DeepCopyInto(out *CloudflareAPITokenObservation) {
	*out = *in
	if in.AccessKeyID != nil {
		in, out := &in.AccessKeyID, &out.AccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudflareAPITokenObservation.
func (in *CloudflareAPITokenObservation) DeepCopy() *CloudflareAPITokenObservation {
	if in == nil {
		return nil
	}
	out := new(CloudflareAPITokenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudflareAPITokenParameters) DeepCopyInto(out *CloudflareAPITokenParameters) {
	*out = *in
	if in.AccessKeyID != nil {
		in, out := &in.AccessKeyID, &out.AccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	in.SecretAccessKeySecretRef.DeepCopyInto(&out.SecretAccessKeySecretRef)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudflareAPITokenParameters.
func (in *CloudflareAPITokenParameters) DeepCopy() *CloudflareAPITokenParameters {
	if in == nil {
		return nil
	}
	out := new(CloudflareAPITokenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnInitParameters) DeepCopyInto(out *ColumnInitParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.TypeJSON != nil {
		in, out := &in.TypeJSON, &out.TypeJSON
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnInitParameters.
func (in *ColumnInitParameters) DeepCopy() *ColumnInitParameters {
	if in == nil {
		return nil
	}
	out := new(ColumnInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnObservation) DeepCopyInto(out *ColumnObservation) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.TypeJSON != nil {
		in, out := &in.TypeJSON, &out.TypeJSON
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnObservation.
func (in *ColumnObservation) DeepCopy() *ColumnObservation {
	if in == nil {
		return nil
	}
	out := new(ColumnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnParameters) DeepCopyInto(out *ColumnParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.TypeJSON != nil {
		in, out := &in.TypeJSON, &out.TypeJSON
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnParameters.
func (in *ColumnParameters) DeepCopy() *ColumnParameters {
	if in == nil {
		return nil
	}
	out := new(ColumnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Connection) DeepCopyInto(out *Connection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Connection.
func (in *Connection) DeepCopy() *Connection {
	if in == nil {
		return nil
	}
	out := new(Connection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Connection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionInitParameters) DeepCopyInto(out *ConnectionInitParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.ConnectionType != nil {
		in, out := &in.ConnectionType, &out.ConnectionType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionInitParameters.
func (in *ConnectionInitParameters) DeepCopy() *ConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionList) DeepCopyInto(out *ConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Connection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionList.
func (in *ConnectionList) DeepCopy() *ConnectionList {
	if in == nil {
		return nil
	}
	out := new(ConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionObservation) DeepCopyInto(out *ConnectionObservation) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.ConnectionID != nil {
		in, out := &in.ConnectionID, &out.ConnectionID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionType != nil {
		in, out := &in.ConnectionType, &out.ConnectionType
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.CredentialType != nil {
		in, out := &in.CredentialType, &out.CredentialType
		*out = new(string)
		**out = **in
	}
	if in.FullName != nil {
		in, out := &in.FullName, &out.FullName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ProvisioningInfo != nil {
		in, out := &in.ProvisioningInfo, &out.ProvisioningInfo
		*out = make([]ConnectionProvisioningInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SecurableType != nil {
		in, out := &in.SecurableType, &out.SecurableType
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedBy != nil {
		in, out := &in.UpdatedBy, &out.UpdatedBy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionObservation.
func (in *ConnectionObservation) DeepCopy() *ConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionParameters) DeepCopyInto(out *ConnectionParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.ConnectionType != nil {
		in, out := &in.ConnectionType, &out.ConnectionType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OptionsSecretRef != nil {
		in, out := &in.OptionsSecretRef, &out.OptionsSecretRef
		*out = new(v1.SecretReference)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionParameters.
func (in *ConnectionParameters) DeepCopy() *ConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionProvisioningInfoInitParameters) DeepCopyInto(out *ConnectionProvisioningInfoInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionProvisioningInfoInitParameters.
func (in *ConnectionProvisioningInfoInitParameters) DeepCopy() *ConnectionProvisioningInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionProvisioningInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionProvisioningInfoObservation) DeepCopyInto(out *ConnectionProvisioningInfoObservation) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionProvisioningInfoObservation.
func (in *ConnectionProvisioningInfoObservation) DeepCopy() *ConnectionProvisioningInfoObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionProvisioningInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionProvisioningInfoParameters) DeepCopyInto(out *ConnectionProvisioningInfoParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionProvisioningInfoParameters.
func (in *ConnectionProvisioningInfoParameters) DeepCopy() *ConnectionProvisioningInfoParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionProvisioningInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionSpec) DeepCopyInto(out *ConnectionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionSpec.
func (in *ConnectionSpec) DeepCopy() *ConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(ConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionStatus) DeepCopyInto(out *ConnectionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionStatus.
func (in *ConnectionStatus) DeepCopy() *ConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(ConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContinuousUpdateStatusInitParameters) DeepCopyInto(out *ContinuousUpdateStatusInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContinuousUpdateStatusInitParameters.
func (in *ContinuousUpdateStatusInitParameters) DeepCopy() *ContinuousUpdateStatusInitParameters {
	if in == nil {
		return nil
	}
	out := new(ContinuousUpdateStatusInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContinuousUpdateStatusObservation) DeepCopyInto(out *ContinuousUpdateStatusObservation) {
	*out = *in
	if in.InitialPipelineSyncProgress != nil {
		in, out := &in.InitialPipelineSyncProgress, &out.InitialPipelineSyncProgress
		*out = make([]InitialPipelineSyncProgressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastProcessedCommitVersion != nil {
		in, out := &in.LastProcessedCommitVersion, &out.LastProcessedCommitVersion
		*out = new(float64)
		**out = **in
	}
	if in.Timestamp != nil {
		in, out := &in.Timestamp, &out.Timestamp
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContinuousUpdateStatusObservation.
func (in *ContinuousUpdateStatusObservation) DeepCopy() *ContinuousUpdateStatusObservation {
	if in == nil {
		return nil
	}
	out := new(ContinuousUpdateStatusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContinuousUpdateStatusParameters) DeepCopyInto(out *ContinuousUpdateStatusParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContinuousUpdateStatusParameters.
func (in *ContinuousUpdateStatusParameters) DeepCopy() *ContinuousUpdateStatusParameters {
	if in == nil {
		return nil
	}
	out := new(ContinuousUpdateStatusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Credential) DeepCopyInto(out *Credential) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Credential.
func (in *Credential) DeepCopy() *Credential {
	if in == nil {
		return nil
	}
	out := new(Credential)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Credential) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CredentialInitParameters) DeepCopyInto(out *CredentialInitParameters) {
	*out = *in
	if in.AwsIAMRole != nil {
		in, out := &in.AwsIAMRole, &out.AwsIAMRole
		*out = make([]AwsIAMRoleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureManagedIdentity != nil {
		in, out := &in.AzureManagedIdentity, &out.AzureManagedIdentity
		*out = make([]AzureManagedIdentityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureServicePrincipal != nil {
		in, out := &in.AzureServicePrincipal, &out.AzureServicePrincipal
		*out = make([]AzureServicePrincipalInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.DatabricksGCPServiceAccount != nil {
		in, out := &in.DatabricksGCPServiceAccount, &out.DatabricksGCPServiceAccount
		*out = make([]DatabricksGCPServiceAccountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ForceUpdate != nil {
		in, out := &in.ForceUpdate, &out.ForceUpdate
		*out = new(bool)
		**out = **in
	}
	if in.FullName != nil {
		in, out := &in.FullName, &out.FullName
		*out = new(string)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SkipValidation != nil {
		in, out := &in.SkipValidation, &out.SkipValidation
		*out = new(bool)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedBy != nil {
		in, out := &in.UpdatedBy, &out.UpdatedBy
		*out = new(string)
		**out = **in
	}
	if in.UsedForManagedStorage != nil {
		in, out := &in.UsedForManagedStorage, &out.UsedForManagedStorage
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CredentialInitParameters.
func (in *CredentialInitParameters) DeepCopy() *CredentialInitParameters {
	if in == nil {
		return nil
	}
	out := new(CredentialInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CredentialList) DeepCopyInto(out *CredentialList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Credential, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CredentialList.
func (in *CredentialList) DeepCopy() *CredentialList {
	if in == nil {
		return nil
	}
	out := new(CredentialList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CredentialList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CredentialObservation) DeepCopyInto(out *CredentialObservation) {
	*out = *in
	if in.AwsIAMRole != nil {
		in, out := &in.AwsIAMRole, &out.AwsIAMRole
		*out = make([]AwsIAMRoleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureManagedIdentity != nil {
		in, out := &in.AzureManagedIdentity, &out.AzureManagedIdentity
		*out = make([]AzureManagedIdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureServicePrincipal != nil {
		in, out := &in.AzureServicePrincipal, &out.AzureServicePrincipal
		*out = make([]AzureServicePrincipalObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.DatabricksGCPServiceAccount != nil {
		in, out := &in.DatabricksGCPServiceAccount, &out.DatabricksGCPServiceAccount
		*out = make([]DatabricksGCPServiceAccountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ForceUpdate != nil {
		in, out := &in.ForceUpdate, &out.ForceUpdate
		*out = new(bool)
		**out = **in
	}
	if in.FullName != nil {
		in, out := &in.FullName, &out.FullName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SkipValidation != nil {
		in, out := &in.SkipValidation, &out.SkipValidation
		*out = new(bool)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedBy != nil {
		in, out := &in.UpdatedBy, &out.UpdatedBy
		*out = new(string)
		**out = **in
	}
	if in.UsedForManagedStorage != nil {
		in, out := &in.UsedForManagedStorage, &out.UsedForManagedStorage
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CredentialObservation.
func (in *CredentialObservation) DeepCopy() *CredentialObservation {
	if in == nil {
		return nil
	}
	out := new(CredentialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CredentialParameters) DeepCopyInto(out *CredentialParameters) {
	*out = *in
	if in.AwsIAMRole != nil {
		in, out := &in.AwsIAMRole, &out.AwsIAMRole
		*out = make([]AwsIAMRoleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureManagedIdentity != nil {
		in, out := &in.AzureManagedIdentity, &out.AzureManagedIdentity
		*out = make([]AzureManagedIdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureServicePrincipal != nil {
		in, out := &in.AzureServicePrincipal, &out.AzureServicePrincipal
		*out = make([]AzureServicePrincipalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.DatabricksGCPServiceAccount != nil {
		in, out := &in.DatabricksGCPServiceAccount, &out.DatabricksGCPServiceAccount
		*out = make([]DatabricksGCPServiceAccountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ForceUpdate != nil {
		in, out := &in.ForceUpdate, &out.ForceUpdate
		*out = new(bool)
		**out = **in
	}
	if in.FullName != nil {
		in, out := &in.FullName, &out.FullName
		*out = new(string)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SkipValidation != nil {
		in, out := &in.SkipValidation, &out.SkipValidation
		*out = new(bool)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedBy != nil {
		in, out := &in.UpdatedBy, &out.UpdatedBy
		*out = new(string)
		**out = **in
	}
	if in.UsedForManagedStorage != nil {
		in, out := &in.UsedForManagedStorage, &out.UsedForManagedStorage
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CredentialParameters.
func (in *CredentialParameters) DeepCopy() *CredentialParameters {
	if in == nil {
		return nil
	}
	out := new(CredentialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CredentialSpec) DeepCopyInto(out *CredentialSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CredentialSpec.
func (in *CredentialSpec) DeepCopy() *CredentialSpec {
	if in == nil {
		return nil
	}
	out := new(CredentialSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CredentialStatus) DeepCopyInto(out *CredentialStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CredentialStatus.
func (in *CredentialStatus) DeepCopy() *CredentialStatus {
	if in == nil {
		return nil
	}
	out := new(CredentialStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomMetricsInitParameters) DeepCopyInto(out *CustomMetricsInitParameters) {
	*out = *in
	if in.Definition != nil {
		in, out := &in.Definition, &out.Definition
		*out = new(string)
		**out = **in
	}
	if in.InputColumns != nil {
		in, out := &in.InputColumns, &out.InputColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OutputDataType != nil {
		in, out := &in.OutputDataType, &out.OutputDataType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomMetricsInitParameters.
func (in *CustomMetricsInitParameters) DeepCopy() *CustomMetricsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomMetricsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomMetricsObservation) DeepCopyInto(out *CustomMetricsObservation) {
	*out = *in
	if in.Definition != nil {
		in, out := &in.Definition, &out.Definition
		*out = new(string)
		**out = **in
	}
	if in.InputColumns != nil {
		in, out := &in.InputColumns, &out.InputColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OutputDataType != nil {
		in, out := &in.OutputDataType, &out.OutputDataType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomMetricsObservation.
func (in *CustomMetricsObservation) DeepCopy() *CustomMetricsObservation {
	if in == nil {
		return nil
	}
	out := new(CustomMetricsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomMetricsParameters) DeepCopyInto(out *CustomMetricsParameters) {
	*out = *in
	if in.Definition != nil {
		in, out := &in.Definition, &out.Definition
		*out = new(string)
		**out = **in
	}
	if in.InputColumns != nil {
		in, out := &in.InputColumns, &out.InputColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OutputDataType != nil {
		in, out := &in.OutputDataType, &out.OutputDataType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomMetricsParameters.
func (in *CustomMetricsParameters) DeepCopy() *CustomMetricsParameters {
	if in == nil {
		return nil
	}
	out := new(CustomMetricsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataClassificationConfigInitParameters) DeepCopyInto(out *DataClassificationConfigInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataClassificationConfigInitParameters.
func (in *DataClassificationConfigInitParameters) DeepCopy() *DataClassificationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(DataClassificationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataClassificationConfigObservation) DeepCopyInto(out *DataClassificationConfigObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataClassificationConfigObservation.
func (in *DataClassificationConfigObservation) DeepCopy() *DataClassificationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(DataClassificationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataClassificationConfigParameters) DeepCopyInto(out *DataClassificationConfigParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataClassificationConfigParameters.
func (in *DataClassificationConfigParameters) DeepCopy() *DataClassificationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(DataClassificationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabricksGCPServiceAccountInitParameters) DeepCopyInto(out *DatabricksGCPServiceAccountInitParameters) {
	*out = *in
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.PrivateKeyID != nil {
		in, out := &in.PrivateKeyID, &out.PrivateKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabricksGCPServiceAccountInitParameters.
func (in *DatabricksGCPServiceAccountInitParameters) DeepCopy() *DatabricksGCPServiceAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatabricksGCPServiceAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabricksGCPServiceAccountObservation) DeepCopyInto(out *DatabricksGCPServiceAccountObservation) {
	*out = *in
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.PrivateKeyID != nil {
		in, out := &in.PrivateKeyID, &out.PrivateKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabricksGCPServiceAccountObservation.
func (in *DatabricksGCPServiceAccountObservation) DeepCopy() *DatabricksGCPServiceAccountObservation {
	if in == nil {
		return nil
	}
	out := new(DatabricksGCPServiceAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabricksGCPServiceAccountParameters) DeepCopyInto(out *DatabricksGCPServiceAccountParameters) {
	*out = *in
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.PrivateKeyID != nil {
		in, out := &in.PrivateKeyID, &out.PrivateKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabricksGCPServiceAccountParameters.
func (in *DatabricksGCPServiceAccountParameters) DeepCopy() *DatabricksGCPServiceAccountParameters {
	if in == nil {
		return nil
	}
	out := new(DatabricksGCPServiceAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EffectivePredictiveOptimizationFlagInitParameters) DeepCopyInto(out *EffectivePredictiveOptimizationFlagInitParameters) {
	*out = *in
	if in.InheritedFromName != nil {
		in, out := &in.InheritedFromName, &out.InheritedFromName
		*out = new(string)
		**out = **in
	}
	if in.InheritedFromType != nil {
		in, out := &in.InheritedFromType, &out.InheritedFromType
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EffectivePredictiveOptimizationFlagInitParameters.
func (in *EffectivePredictiveOptimizationFlagInitParameters) DeepCopy() *EffectivePredictiveOptimizationFlagInitParameters {
	if in == nil {
		return nil
	}
	out := new(EffectivePredictiveOptimizationFlagInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EffectivePredictiveOptimizationFlagObservation) DeepCopyInto(out *EffectivePredictiveOptimizationFlagObservation) {
	*out = *in
	if in.InheritedFromName != nil {
		in, out := &in.InheritedFromName, &out.InheritedFromName
		*out = new(string)
		**out = **in
	}
	if in.InheritedFromType != nil {
		in, out := &in.InheritedFromType, &out.InheritedFromType
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EffectivePredictiveOptimizationFlagObservation.
func (in *EffectivePredictiveOptimizationFlagObservation) DeepCopy() *EffectivePredictiveOptimizationFlagObservation {
	if in == nil {
		return nil
	}
	out := new(EffectivePredictiveOptimizationFlagObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EffectivePredictiveOptimizationFlagParameters) DeepCopyInto(out *EffectivePredictiveOptimizationFlagParameters) {
	*out = *in
	if in.InheritedFromName != nil {
		in, out := &in.InheritedFromName, &out.InheritedFromName
		*out = new(string)
		**out = **in
	}
	if in.InheritedFromType != nil {
		in, out := &in.InheritedFromType, &out.InheritedFromType
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EffectivePredictiveOptimizationFlagParameters.
func (in *EffectivePredictiveOptimizationFlagParameters) DeepCopy() *EffectivePredictiveOptimizationFlagParameters {
	if in == nil {
		return nil
	}
	out := new(EffectivePredictiveOptimizationFlagParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionDetailsInitParameters) DeepCopyInto(out *EncryptionDetailsInitParameters) {
	*out = *in
	if in.SseEncryptionDetails != nil {
		in, out := &in.SseEncryptionDetails, &out.SseEncryptionDetails
		*out = make([]SseEncryptionDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionDetailsInitParameters.
func (in *EncryptionDetailsInitParameters) DeepCopy() *EncryptionDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptionDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionDetailsObservation) DeepCopyInto(out *EncryptionDetailsObservation) {
	*out = *in
	if in.SseEncryptionDetails != nil {
		in, out := &in.SseEncryptionDetails, &out.SseEncryptionDetails
		*out = make([]SseEncryptionDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionDetailsObservation.
func (in *EncryptionDetailsObservation) DeepCopy() *EncryptionDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(EncryptionDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionDetailsParameters) DeepCopyInto(out *EncryptionDetailsParameters) {
	*out = *in
	if in.SseEncryptionDetails != nil {
		in, out := &in.SseEncryptionDetails, &out.SseEncryptionDetails
		*out = make([]SseEncryptionDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionDetailsParameters.
func (in *EncryptionDetailsParameters) DeepCopy() *EncryptionDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptionDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalLocation) DeepCopyInto(out *ExternalLocation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalLocation.
func (in *ExternalLocation) DeepCopy() *ExternalLocation {
	if in == nil {
		return nil
	}
	out := new(ExternalLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExternalLocation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalLocationInitParameters) DeepCopyInto(out *ExternalLocationInitParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CredentialName != nil {
		in, out := &in.CredentialName, &out.CredentialName
		*out = new(string)
		**out = **in
	}
	if in.CredentialNameRef != nil {
		in, out := &in.CredentialNameRef, &out.CredentialNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CredentialNameSelector != nil {
		in, out := &in.CredentialNameSelector, &out.CredentialNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableFileEvents != nil {
		in, out := &in.EnableFileEvents, &out.EnableFileEvents
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionDetails != nil {
		in, out := &in.EncryptionDetails, &out.EncryptionDetails
		*out = make([]EncryptionDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Fallback != nil {
		in, out := &in.Fallback, &out.Fallback
		*out = new(bool)
		**out = **in
	}
	if in.FileEventQueue != nil {
		in, out := &in.FileEventQueue, &out.FileEventQueue
		*out = make([]FileEventQueueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ForceUpdate != nil {
		in, out := &in.ForceUpdate, &out.ForceUpdate
		*out = new(bool)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SkipValidation != nil {
		in, out := &in.SkipValidation, &out.SkipValidation
		*out = new(bool)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalLocationInitParameters.
func (in *ExternalLocationInitParameters) DeepCopy() *ExternalLocationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExternalLocationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalLocationList) DeepCopyInto(out *ExternalLocationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ExternalLocation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalLocationList.
func (in *ExternalLocationList) DeepCopy() *ExternalLocationList {
	if in == nil {
		return nil
	}
	out := new(ExternalLocationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExternalLocationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalLocationObservation) DeepCopyInto(out *ExternalLocationObservation) {
	*out = *in
	if in.BrowseOnly != nil {
		in, out := &in.BrowseOnly, &out.BrowseOnly
		*out = new(bool)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.CredentialName != nil {
		in, out := &in.CredentialName, &out.CredentialName
		*out = new(string)
		**out = **in
	}
	if in.EnableFileEvents != nil {
		in, out := &in.EnableFileEvents, &out.EnableFileEvents
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionDetails != nil {
		in, out := &in.EncryptionDetails, &out.EncryptionDetails
		*out = make([]EncryptionDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Fallback != nil {
		in, out := &in.Fallback, &out.Fallback
		*out = new(bool)
		**out = **in
	}
	if in.FileEventQueue != nil {
		in, out := &in.FileEventQueue, &out.FileEventQueue
		*out = make([]FileEventQueueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ForceUpdate != nil {
		in, out := &in.ForceUpdate, &out.ForceUpdate
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SkipValidation != nil {
		in, out := &in.SkipValidation, &out.SkipValidation
		*out = new(bool)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedBy != nil {
		in, out := &in.UpdatedBy, &out.UpdatedBy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalLocationObservation.
func (in *ExternalLocationObservation) DeepCopy() *ExternalLocationObservation {
	if in == nil {
		return nil
	}
	out := new(ExternalLocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalLocationParameters) DeepCopyInto(out *ExternalLocationParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CredentialName != nil {
		in, out := &in.CredentialName, &out.CredentialName
		*out = new(string)
		**out = **in
	}
	if in.CredentialNameRef != nil {
		in, out := &in.CredentialNameRef, &out.CredentialNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CredentialNameSelector != nil {
		in, out := &in.CredentialNameSelector, &out.CredentialNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableFileEvents != nil {
		in, out := &in.EnableFileEvents, &out.EnableFileEvents
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionDetails != nil {
		in, out := &in.EncryptionDetails, &out.EncryptionDetails
		*out = make([]EncryptionDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Fallback != nil {
		in, out := &in.Fallback, &out.Fallback
		*out = new(bool)
		**out = **in
	}
	if in.FileEventQueue != nil {
		in, out := &in.FileEventQueue, &out.FileEventQueue
		*out = make([]FileEventQueueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ForceUpdate != nil {
		in, out := &in.ForceUpdate, &out.ForceUpdate
		*out = new(bool)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SkipValidation != nil {
		in, out := &in.SkipValidation, &out.SkipValidation
		*out = new(bool)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalLocationParameters.
func (in *ExternalLocationParameters) DeepCopy() *ExternalLocationParameters {
	if in == nil {
		return nil
	}
	out := new(ExternalLocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalLocationSpec) DeepCopyInto(out *ExternalLocationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalLocationSpec.
func (in *ExternalLocationSpec) DeepCopy() *ExternalLocationSpec {
	if in == nil {
		return nil
	}
	out := new(ExternalLocationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalLocationStatus) DeepCopyInto(out *ExternalLocationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalLocationStatus.
func (in *ExternalLocationStatus) DeepCopy() *ExternalLocationStatus {
	if in == nil {
		return nil
	}
	out := new(ExternalLocationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailedStatusInitParameters) DeepCopyInto(out *FailedStatusInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailedStatusInitParameters.
func (in *FailedStatusInitParameters) DeepCopy() *FailedStatusInitParameters {
	if in == nil {
		return nil
	}
	out := new(FailedStatusInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailedStatusObservation) DeepCopyInto(out *FailedStatusObservation) {
	*out = *in
	if in.LastProcessedCommitVersion != nil {
		in, out := &in.LastProcessedCommitVersion, &out.LastProcessedCommitVersion
		*out = new(float64)
		**out = **in
	}
	if in.Timestamp != nil {
		in, out := &in.Timestamp, &out.Timestamp
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailedStatusObservation.
func (in *FailedStatusObservation) DeepCopy() *FailedStatusObservation {
	if in == nil {
		return nil
	}
	out := new(FailedStatusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailedStatusParameters) DeepCopyInto(out *FailedStatusParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailedStatusParameters.
func (in *FailedStatusParameters) DeepCopy() *FailedStatusParameters {
	if in == nil {
		return nil
	}
	out := new(FailedStatusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileEventQueueInitParameters) DeepCopyInto(out *FileEventQueueInitParameters) {
	*out = *in
	if in.ManagedAqs != nil {
		in, out := &in.ManagedAqs, &out.ManagedAqs
		*out = make([]ManagedAqsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagedPubsub != nil {
		in, out := &in.ManagedPubsub, &out.ManagedPubsub
		*out = make([]ManagedPubsubInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagedSqs != nil {
		in, out := &in.ManagedSqs, &out.ManagedSqs
		*out = make([]ManagedSqsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProvidedAqs != nil {
		in, out := &in.ProvidedAqs, &out.ProvidedAqs
		*out = make([]ProvidedAqsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProvidedPubsub != nil {
		in, out := &in.ProvidedPubsub, &out.ProvidedPubsub
		*out = make([]ProvidedPubsubInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProvidedSqs != nil {
		in, out := &in.ProvidedSqs, &out.ProvidedSqs
		*out = make([]ProvidedSqsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileEventQueueInitParameters.
func (in *FileEventQueueInitParameters) DeepCopy() *FileEventQueueInitParameters {
	if in == nil {
		return nil
	}
	out := new(FileEventQueueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileEventQueueObservation) DeepCopyInto(out *FileEventQueueObservation) {
	*out = *in
	if in.ManagedAqs != nil {
		in, out := &in.ManagedAqs, &out.ManagedAqs
		*out = make([]ManagedAqsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagedPubsub != nil {
		in, out := &in.ManagedPubsub, &out.ManagedPubsub
		*out = make([]ManagedPubsubObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagedSqs != nil {
		in, out := &in.ManagedSqs, &out.ManagedSqs
		*out = make([]ManagedSqsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProvidedAqs != nil {
		in, out := &in.ProvidedAqs, &out.ProvidedAqs
		*out = make([]ProvidedAqsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProvidedPubsub != nil {
		in, out := &in.ProvidedPubsub, &out.ProvidedPubsub
		*out = make([]ProvidedPubsubObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProvidedSqs != nil {
		in, out := &in.ProvidedSqs, &out.ProvidedSqs
		*out = make([]ProvidedSqsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileEventQueueObservation.
func (in *FileEventQueueObservation) DeepCopy() *FileEventQueueObservation {
	if in == nil {
		return nil
	}
	out := new(FileEventQueueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileEventQueueParameters) DeepCopyInto(out *FileEventQueueParameters) {
	*out = *in
	if in.ManagedAqs != nil {
		in, out := &in.ManagedAqs, &out.ManagedAqs
		*out = make([]ManagedAqsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagedPubsub != nil {
		in, out := &in.ManagedPubsub, &out.ManagedPubsub
		*out = make([]ManagedPubsubParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagedSqs != nil {
		in, out := &in.ManagedSqs, &out.ManagedSqs
		*out = make([]ManagedSqsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProvidedAqs != nil {
		in, out := &in.ProvidedAqs, &out.ProvidedAqs
		*out = make([]ProvidedAqsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProvidedPubsub != nil {
		in, out := &in.ProvidedPubsub, &out.ProvidedPubsub
		*out = make([]ProvidedPubsubParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProvidedSqs != nil {
		in, out := &in.ProvidedSqs, &out.ProvidedSqs
		*out = make([]ProvidedSqsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileEventQueueParameters.
func (in *FileEventQueueParameters) DeepCopy() *FileEventQueueParameters {
	if in == nil {
		return nil
	}
	out := new(FileEventQueueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPServiceAccountKeyInitParameters) DeepCopyInto(out *GCPServiceAccountKeyInitParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.PrivateKeyID != nil {
		in, out := &in.PrivateKeyID, &out.PrivateKeyID
		*out = new(string)
		**out = **in
	}
	in.PrivateKeySecretRef.DeepCopyInto(&out.PrivateKeySecretRef)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPServiceAccountKeyInitParameters.
func (in *GCPServiceAccountKeyInitParameters) DeepCopy() *GCPServiceAccountKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPServiceAccountKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPServiceAccountKeyObservation) DeepCopyInto(out *GCPServiceAccountKeyObservation) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.PrivateKeyID != nil {
		in, out := &in.PrivateKeyID, &out.PrivateKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPServiceAccountKeyObservation.
func (in *GCPServiceAccountKeyObservation) DeepCopy() *GCPServiceAccountKeyObservation {
	if in == nil {
		return nil
	}
	out := new(GCPServiceAccountKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPServiceAccountKeyParameters) DeepCopyInto(out *GCPServiceAccountKeyParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.PrivateKeyID != nil {
		in, out := &in.PrivateKeyID, &out.PrivateKeyID
		*out = new(string)
		**out = **in
	}
	in.PrivateKeySecretRef.DeepCopyInto(&out.PrivateKeySecretRef)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPServiceAccountKeyParameters.
func (in *GCPServiceAccountKeyParameters) DeepCopy() *GCPServiceAccountKeyParameters {
	if in == nil {
		return nil
	}
	out := new(GCPServiceAccountKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Grant) DeepCopyInto(out *Grant) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Grant.
func (in *Grant) DeepCopy() *Grant {
	if in == nil {
		return nil
	}
	out := new(Grant)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Grant) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantInitParameters) DeepCopyInto(out *GrantInitParameters) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.CatalogRef != nil {
		in, out := &in.CatalogRef, &out.CatalogRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CatalogSelector != nil {
		in, out := &in.CatalogSelector, &out.CatalogSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Credential != nil {
		in, out := &in.Credential, &out.Credential
		*out = new(string)
		**out = **in
	}
	if in.CredentialRef != nil {
		in, out := &in.CredentialRef, &out.CredentialRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CredentialSelector != nil {
		in, out := &in.CredentialSelector, &out.CredentialSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ExternalLocation != nil {
		in, out := &in.ExternalLocation, &out.ExternalLocation
		*out = new(string)
		**out = **in
	}
	if in.ExternalLocationRef != nil {
		in, out := &in.ExternalLocationRef, &out.ExternalLocationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ExternalLocationSelector != nil {
		in, out := &in.ExternalLocationSelector, &out.ExternalLocationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ForeignConnection != nil {
		in, out := &in.ForeignConnection, &out.ForeignConnection
		*out = new(string)
		**out = **in
	}
	if in.ForeignConnectionRef != nil {
		in, out := &in.ForeignConnectionRef, &out.ForeignConnectionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ForeignConnectionSelector != nil {
		in, out := &in.ForeignConnectionSelector, &out.ForeignConnectionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.Metastore != nil {
		in, out := &in.Metastore, &out.Metastore
		*out = new(string)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = new(string)
		**out = **in
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.PrincipalRef != nil {
		in, out := &in.PrincipalRef, &out.PrincipalRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrincipalSelector != nil {
		in, out := &in.PrincipalSelector, &out.PrincipalSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Recipient != nil {
		in, out := &in.Recipient, &out.Recipient
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.SchemaRef != nil {
		in, out := &in.SchemaRef, &out.SchemaRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SchemaSelector != nil {
		in, out := &in.SchemaSelector, &out.SchemaSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Share != nil {
		in, out := &in.Share, &out.Share
		*out = new(string)
		**out = **in
	}
	if in.ShareRef != nil {
		in, out := &in.ShareRef, &out.ShareRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ShareSelector != nil {
		in, out := &in.ShareSelector, &out.ShareSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageCredential != nil {
		in, out := &in.StorageCredential, &out.StorageCredential
		*out = new(string)
		**out = **in
	}
	if in.StorageCredentialRef != nil {
		in, out := &in.StorageCredentialRef, &out.StorageCredentialRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageCredentialSelector != nil {
		in, out := &in.StorageCredentialSelector, &out.StorageCredentialSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(string)
		**out = **in
	}
	if in.VolumeRef != nil {
		in, out := &in.VolumeRef, &out.VolumeRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeSelector != nil {
		in, out := &in.VolumeSelector, &out.VolumeSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantInitParameters.
func (in *GrantInitParameters) DeepCopy() *GrantInitParameters {
	if in == nil {
		return nil
	}
	out := new(GrantInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantList) DeepCopyInto(out *GrantList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Grant, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantList.
func (in *GrantList) DeepCopy() *GrantList {
	if in == nil {
		return nil
	}
	out := new(GrantList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GrantList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantMap) DeepCopyInto(out *GrantMap) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantMap.
func (in *GrantMap) DeepCopy() *GrantMap {
	if in == nil {
		return nil
	}
	out := new(GrantMap)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GrantMap) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantMapGrantInitParameters) DeepCopyInto(out *GrantMapGrantInitParameters) {
	*out = *in
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.PrincipalRef != nil {
		in, out := &in.PrincipalRef, &out.PrincipalRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrincipalSelector != nil {
		in, out := &in.PrincipalSelector, &out.PrincipalSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantMapGrantInitParameters.
func (in *GrantMapGrantInitParameters) DeepCopy() *GrantMapGrantInitParameters {
	if in == nil {
		return nil
	}
	out := new(GrantMapGrantInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantMapGrantObservation) DeepCopyInto(out *GrantMapGrantObservation) {
	*out = *in
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantMapGrantObservation.
func (in *GrantMapGrantObservation) DeepCopy() *GrantMapGrantObservation {
	if in == nil {
		return nil
	}
	out := new(GrantMapGrantObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantMapGrantParameters) DeepCopyInto(out *GrantMapGrantParameters) {
	*out = *in
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.PrincipalRef != nil {
		in, out := &in.PrincipalRef, &out.PrincipalRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrincipalSelector != nil {
		in, out := &in.PrincipalSelector, &out.PrincipalSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantMapGrantParameters.
func (in *GrantMapGrantParameters) DeepCopy() *GrantMapGrantParameters {
	if in == nil {
		return nil
	}
	out := new(GrantMapGrantParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantMapInitParameters) DeepCopyInto(out *GrantMapInitParameters) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.CatalogRef != nil {
		in, out := &in.CatalogRef, &out.CatalogRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CatalogSelector != nil {
		in, out := &in.CatalogSelector, &out.CatalogSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Credential != nil {
		in, out := &in.Credential, &out.Credential
		*out = new(string)
		**out = **in
	}
	if in.CredentialRef != nil {
		in, out := &in.CredentialRef, &out.CredentialRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CredentialSelector != nil {
		in, out := &in.CredentialSelector, &out.CredentialSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ExternalLocation != nil {
		in, out := &in.ExternalLocation, &out.ExternalLocation
		*out = new(string)
		**out = **in
	}
	if in.ExternalLocationRef != nil {
		in, out := &in.ExternalLocationRef, &out.ExternalLocationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ExternalLocationSelector != nil {
		in, out := &in.ExternalLocationSelector, &out.ExternalLocationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ForeignConnection != nil {
		in, out := &in.ForeignConnection, &out.ForeignConnection
		*out = new(string)
		**out = **in
	}
	if in.ForeignConnectionRef != nil {
		in, out := &in.ForeignConnectionRef, &out.ForeignConnectionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ForeignConnectionSelector != nil {
		in, out := &in.ForeignConnectionSelector, &out.ForeignConnectionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.Grant != nil {
		in, out := &in.Grant, &out.Grant
		*out = make([]GrantMapGrantInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metastore != nil {
		in, out := &in.Metastore, &out.Metastore
		*out = new(string)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = new(string)
		**out = **in
	}
	if in.Recipient != nil {
		in, out := &in.Recipient, &out.Recipient
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.SchemaRef != nil {
		in, out := &in.SchemaRef, &out.SchemaRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SchemaSelector != nil {
		in, out := &in.SchemaSelector, &out.SchemaSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Share != nil {
		in, out := &in.Share, &out.Share
		*out = new(string)
		**out = **in
	}
	if in.ShareRef != nil {
		in, out := &in.ShareRef, &out.ShareRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ShareSelector != nil {
		in, out := &in.ShareSelector, &out.ShareSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageCredential != nil {
		in, out := &in.StorageCredential, &out.StorageCredential
		*out = new(string)
		**out = **in
	}
	if in.StorageCredentialRef != nil {
		in, out := &in.StorageCredentialRef, &out.StorageCredentialRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageCredentialSelector != nil {
		in, out := &in.StorageCredentialSelector, &out.StorageCredentialSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(string)
		**out = **in
	}
	if in.VolumeRef != nil {
		in, out := &in.VolumeRef, &out.VolumeRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeSelector != nil {
		in, out := &in.VolumeSelector, &out.VolumeSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantMapInitParameters.
func (in *GrantMapInitParameters) DeepCopy() *GrantMapInitParameters {
	if in == nil {
		return nil
	}
	out := new(GrantMapInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantMapList) DeepCopyInto(out *GrantMapList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GrantMap, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantMapList.
func (in *GrantMapList) DeepCopy() *GrantMapList {
	if in == nil {
		return nil
	}
	out := new(GrantMapList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GrantMapList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantMapObservation) DeepCopyInto(out *GrantMapObservation) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Credential != nil {
		in, out := &in.Credential, &out.Credential
		*out = new(string)
		**out = **in
	}
	if in.ExternalLocation != nil {
		in, out := &in.ExternalLocation, &out.ExternalLocation
		*out = new(string)
		**out = **in
	}
	if in.ForeignConnection != nil {
		in, out := &in.ForeignConnection, &out.ForeignConnection
		*out = new(string)
		**out = **in
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.Grant != nil {
		in, out := &in.Grant, &out.Grant
		*out = make([]GrantMapGrantObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Metastore != nil {
		in, out := &in.Metastore, &out.Metastore
		*out = new(string)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = new(string)
		**out = **in
	}
	if in.Recipient != nil {
		in, out := &in.Recipient, &out.Recipient
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Share != nil {
		in, out := &in.Share, &out.Share
		*out = new(string)
		**out = **in
	}
	if in.StorageCredential != nil {
		in, out := &in.StorageCredential, &out.StorageCredential
		*out = new(string)
		**out = **in
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantMapObservation.
func (in *GrantMapObservation) DeepCopy() *GrantMapObservation {
	if in == nil {
		return nil
	}
	out := new(GrantMapObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantMapParameters) DeepCopyInto(out *GrantMapParameters) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.CatalogRef != nil {
		in, out := &in.CatalogRef, &out.CatalogRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CatalogSelector != nil {
		in, out := &in.CatalogSelector, &out.CatalogSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Credential != nil {
		in, out := &in.Credential, &out.Credential
		*out = new(string)
		**out = **in
	}
	if in.CredentialRef != nil {
		in, out := &in.CredentialRef, &out.CredentialRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CredentialSelector != nil {
		in, out := &in.CredentialSelector, &out.CredentialSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ExternalLocation != nil {
		in, out := &in.ExternalLocation, &out.ExternalLocation
		*out = new(string)
		**out = **in
	}
	if in.ExternalLocationRef != nil {
		in, out := &in.ExternalLocationRef, &out.ExternalLocationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ExternalLocationSelector != nil {
		in, out := &in.ExternalLocationSelector, &out.ExternalLocationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ForeignConnection != nil {
		in, out := &in.ForeignConnection, &out.ForeignConnection
		*out = new(string)
		**out = **in
	}
	if in.ForeignConnectionRef != nil {
		in, out := &in.ForeignConnectionRef, &out.ForeignConnectionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ForeignConnectionSelector != nil {
		in, out := &in.ForeignConnectionSelector, &out.ForeignConnectionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.Grant != nil {
		in, out := &in.Grant, &out.Grant
		*out = make([]GrantMapGrantParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metastore != nil {
		in, out := &in.Metastore, &out.Metastore
		*out = new(string)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = new(string)
		**out = **in
	}
	if in.Recipient != nil {
		in, out := &in.Recipient, &out.Recipient
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.SchemaRef != nil {
		in, out := &in.SchemaRef, &out.SchemaRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SchemaSelector != nil {
		in, out := &in.SchemaSelector, &out.SchemaSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Share != nil {
		in, out := &in.Share, &out.Share
		*out = new(string)
		**out = **in
	}
	if in.ShareRef != nil {
		in, out := &in.ShareRef, &out.ShareRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ShareSelector != nil {
		in, out := &in.ShareSelector, &out.ShareSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageCredential != nil {
		in, out := &in.StorageCredential, &out.StorageCredential
		*out = new(string)
		**out = **in
	}
	if in.StorageCredentialRef != nil {
		in, out := &in.StorageCredentialRef, &out.StorageCredentialRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageCredentialSelector != nil {
		in, out := &in.StorageCredentialSelector, &out.StorageCredentialSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(string)
		**out = **in
	}
	if in.VolumeRef != nil {
		in, out := &in.VolumeRef, &out.VolumeRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeSelector != nil {
		in, out := &in.VolumeSelector, &out.VolumeSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantMapParameters.
func (in *GrantMapParameters) DeepCopy() *GrantMapParameters {
	if in == nil {
		return nil
	}
	out := new(GrantMapParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantMapSpec) DeepCopyInto(out *GrantMapSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantMapSpec.
func (in *GrantMapSpec) DeepCopy() *GrantMapSpec {
	if in == nil {
		return nil
	}
	out := new(GrantMapSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantMapStatus) DeepCopyInto(out *GrantMapStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantMapStatus.
func (in *GrantMapStatus) DeepCopy() *GrantMapStatus {
	if in == nil {
		return nil
	}
	out := new(GrantMapStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantObservation) DeepCopyInto(out *GrantObservation) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.Credential != nil {
		in, out := &in.Credential, &out.Credential
		*out = new(string)
		**out = **in
	}
	if in.ExternalLocation != nil {
		in, out := &in.ExternalLocation, &out.ExternalLocation
		*out = new(string)
		**out = **in
	}
	if in.ForeignConnection != nil {
		in, out := &in.ForeignConnection, &out.ForeignConnection
		*out = new(string)
		**out = **in
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Metastore != nil {
		in, out := &in.Metastore, &out.Metastore
		*out = new(string)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = new(string)
		**out = **in
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Recipient != nil {
		in, out := &in.Recipient, &out.Recipient
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Share != nil {
		in, out := &in.Share, &out.Share
		*out = new(string)
		**out = **in
	}
	if in.StorageCredential != nil {
		in, out := &in.StorageCredential, &out.StorageCredential
		*out = new(string)
		**out = **in
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantObservation.
func (in *GrantObservation) DeepCopy() *GrantObservation {
	if in == nil {
		return nil
	}
	out := new(GrantObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantParameters) DeepCopyInto(out *GrantParameters) {
	*out = *in
	if in.Catalog != nil {
		in, out := &in.Catalog, &out.Catalog
		*out = new(string)
		**out = **in
	}
	if in.CatalogRef != nil {
		in, out := &in.CatalogRef, &out.CatalogRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CatalogSelector != nil {
		in, out := &in.CatalogSelector, &out.CatalogSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Credential != nil {
		in, out := &in.Credential, &out.Credential
		*out = new(string)
		**out = **in
	}
	if in.CredentialRef != nil {
		in, out := &in.CredentialRef, &out.CredentialRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CredentialSelector != nil {
		in, out := &in.CredentialSelector, &out.CredentialSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ExternalLocation != nil {
		in, out := &in.ExternalLocation, &out.ExternalLocation
		*out = new(string)
		**out = **in
	}
	if in.ExternalLocationRef != nil {
		in, out := &in.ExternalLocationRef, &out.ExternalLocationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ExternalLocationSelector != nil {
		in, out := &in.ExternalLocationSelector, &out.ExternalLocationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ForeignConnection != nil {
		in, out := &in.ForeignConnection, &out.ForeignConnection
		*out = new(string)
		**out = **in
	}
	if in.ForeignConnectionRef != nil {
		in, out := &in.ForeignConnectionRef, &out.ForeignConnectionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ForeignConnectionSelector != nil {
		in, out := &in.ForeignConnectionSelector, &out.ForeignConnectionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.Metastore != nil {
		in, out := &in.Metastore, &out.Metastore
		*out = new(string)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = new(string)
		**out = **in
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.PrincipalRef != nil {
		in, out := &in.PrincipalRef, &out.PrincipalRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrincipalSelector != nil {
		in, out := &in.PrincipalSelector, &out.PrincipalSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Recipient != nil {
		in, out := &in.Recipient, &out.Recipient
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.SchemaRef != nil {
		in, out := &in.SchemaRef, &out.SchemaRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SchemaSelector != nil {
		in, out := &in.SchemaSelector, &out.SchemaSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Share != nil {
		in, out := &in.Share, &out.Share
		*out = new(string)
		**out = **in
	}
	if in.ShareRef != nil {
		in, out := &in.ShareRef, &out.ShareRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ShareSelector != nil {
		in, out := &in.ShareSelector, &out.ShareSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageCredential != nil {
		in, out := &in.StorageCredential, &out.StorageCredential
		*out = new(string)
		**out = **in
	}
	if in.StorageCredentialRef != nil {
		in, out := &in.StorageCredentialRef, &out.StorageCredentialRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageCredentialSelector != nil {
		in, out := &in.StorageCredentialSelector, &out.StorageCredentialSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(string)
		**out = **in
	}
	if in.VolumeRef != nil {
		in, out := &in.VolumeRef, &out.VolumeRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeSelector != nil {
		in, out := &in.VolumeSelector, &out.VolumeSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantParameters.
func (in *GrantParameters) DeepCopy() *GrantParameters {
	if in == nil {
		return nil
	}
	out := new(GrantParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantSpec) DeepCopyInto(out *GrantSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantSpec.
func (in *GrantSpec) DeepCopy() *GrantSpec {
	if in == nil {
		return nil
	}
	out := new(GrantSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantStatus) DeepCopyInto(out *GrantStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantStatus.
func (in *GrantStatus) DeepCopy() *GrantStatus {
	if in == nil {
		return nil
	}
	out := new(GrantStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InferenceLogInitParameters) DeepCopyInto(out *InferenceLogInitParameters) {
	*out = *in
	if in.Granularities != nil {
		in, out := &in.Granularities, &out.Granularities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LabelCol != nil {
		in, out := &in.LabelCol, &out.LabelCol
		*out = new(string)
		**out = **in
	}
	if in.ModelIDCol != nil {
		in, out := &in.ModelIDCol, &out.ModelIDCol
		*out = new(string)
		**out = **in
	}
	if in.PredictionCol != nil {
		in, out := &in.PredictionCol, &out.PredictionCol
		*out = new(string)
		**out = **in
	}
	if in.PredictionProbaCol != nil {
		in, out := &in.PredictionProbaCol, &out.PredictionProbaCol
		*out = new(string)
		**out = **in
	}
	if in.ProblemType != nil {
		in, out := &in.ProblemType, &out.ProblemType
		*out = new(string)
		**out = **in
	}
	if in.TimestampCol != nil {
		in, out := &in.TimestampCol, &out.TimestampCol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InferenceLogInitParameters.
func (in *InferenceLogInitParameters) DeepCopy() *InferenceLogInitParameters {
	if in == nil {
		return nil
	}
	out := new(InferenceLogInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InferenceLogObservation) DeepCopyInto(out *InferenceLogObservation) {
	*out = *in
	if in.Granularities != nil {
		in, out := &in.Granularities, &out.Granularities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LabelCol != nil {
		in, out := &in.LabelCol, &out.LabelCol
		*out = new(string)
		**out = **in
	}
	if in.ModelIDCol != nil {
		in, out := &in.ModelIDCol, &out.ModelIDCol
		*out = new(string)
		**out = **in
	}
	if in.PredictionCol != nil {
		in, out := &in.PredictionCol, &out.PredictionCol
		*out = new(string)
		**out = **in
	}
	if in.PredictionProbaCol != nil {
		in, out := &in.PredictionProbaCol, &out.PredictionProbaCol
		*out = new(string)
		**out = **in
	}
	if in.ProblemType != nil {
		in, out := &in.ProblemType, &out.ProblemType
		*out = new(string)
		**out = **in
	}
	if in.TimestampCol != nil {
		in, out := &in.TimestampCol, &out.TimestampCol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InferenceLogObservation.
func (in *InferenceLogObservation) DeepCopy() *InferenceLogObservation {
	if in == nil {
		return nil
	}
	out := new(InferenceLogObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InferenceLogParameters) DeepCopyInto(out *InferenceLogParameters) {
	*out = *in
	if in.Granularities != nil {
		in, out := &in.Granularities, &out.Granularities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LabelCol != nil {
		in, out := &in.LabelCol, &out.LabelCol
		*out = new(string)
		**out = **in
	}
	if in.ModelIDCol != nil {
		in, out := &in.ModelIDCol, &out.ModelIDCol
		*out = new(string)
		**out = **in
	}
	if in.PredictionCol != nil {
		in, out := &in.PredictionCol, &out.PredictionCol
		*out = new(string)
		**out = **in
	}
	if in.PredictionProbaCol != nil {
		in, out := &in.PredictionProbaCol, &out.PredictionProbaCol
		*out = new(string)
		**out = **in
	}
	if in.ProblemType != nil {
		in, out := &in.ProblemType, &out.ProblemType
		*out = new(string)
		**out = **in
	}
	if in.TimestampCol != nil {
		in, out := &in.TimestampCol, &out.TimestampCol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InferenceLogParameters.
func (in *InferenceLogParameters) DeepCopy() *InferenceLogParameters {
	if in == nil {
		return nil
	}
	out := new(InferenceLogParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitialPipelineSyncProgressInitParameters) DeepCopyInto(out *InitialPipelineSyncProgressInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitialPipelineSyncProgressInitParameters.
func (in *InitialPipelineSyncProgressInitParameters) DeepCopy() *InitialPipelineSyncProgressInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitialPipelineSyncProgressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitialPipelineSyncProgressObservation) DeepCopyInto(out *InitialPipelineSyncProgressObservation) {
	*out = *in
	if in.EstimatedCompletionTimeSeconds != nil {
		in, out := &in.EstimatedCompletionTimeSeconds, &out.EstimatedCompletionTimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.LatestVersionCurrentlyProcessing != nil {
		in, out := &in.LatestVersionCurrentlyProcessing, &out.LatestVersionCurrentlyProcessing
		*out = new(float64)
		**out = **in
	}
	if in.SyncProgressCompletion != nil {
		in, out := &in.SyncProgressCompletion, &out.SyncProgressCompletion
		*out = new(float64)
		**out = **in
	}
	if in.SyncedRowCount != nil {
		in, out := &in.SyncedRowCount, &out.SyncedRowCount
		*out = new(float64)
		**out = **in
	}
	if in.TotalRowCount != nil {
		in, out := &in.TotalRowCount, &out.TotalRowCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitialPipelineSyncProgressObservation.
func (in *InitialPipelineSyncProgressObservation) DeepCopy() *InitialPipelineSyncProgressObservation {
	if in == nil {
		return nil
	}
	out := new(InitialPipelineSyncProgressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitialPipelineSyncProgressParameters) DeepCopyInto(out *InitialPipelineSyncProgressParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitialPipelineSyncProgressParameters.
func (in *InitialPipelineSyncProgressParameters) DeepCopy() *InitialPipelineSyncProgressParameters {
	if in == nil {
		return nil
	}
	out := new(InitialPipelineSyncProgressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakehouseMonitor) DeepCopyInto(out *LakehouseMonitor) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakehouseMonitor.
func (in *LakehouseMonitor) DeepCopy() *LakehouseMonitor {
	if in == nil {
		return nil
	}
	out := new(LakehouseMonitor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LakehouseMonitor) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakehouseMonitorInitParameters) DeepCopyInto(out *LakehouseMonitorInitParameters) {
	*out = *in
	if in.AssetsDir != nil {
		in, out := &in.AssetsDir, &out.AssetsDir
		*out = new(string)
		**out = **in
	}
	if in.BaselineTableName != nil {
		in, out := &in.BaselineTableName, &out.BaselineTableName
		*out = new(string)
		**out = **in
	}
	if in.CustomMetrics != nil {
		in, out := &in.CustomMetrics, &out.CustomMetrics
		*out = make([]CustomMetricsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataClassificationConfig != nil {
		in, out := &in.DataClassificationConfig, &out.DataClassificationConfig
		*out = make([]DataClassificationConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InferenceLog != nil {
		in, out := &in.InferenceLog, &out.InferenceLog
		*out = make([]InferenceLogInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LatestMonitorFailureMsg != nil {
		in, out := &in.LatestMonitorFailureMsg, &out.LatestMonitorFailureMsg
		*out = new(string)
		**out = **in
	}
	if in.Notifications != nil {
		in, out := &in.Notifications, &out.Notifications
		*out = make([]NotificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutputSchemaName != nil {
		in, out := &in.OutputSchemaName, &out.OutputSchemaName
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipBuiltinDashboard != nil {
		in, out := &in.SkipBuiltinDashboard, &out.SkipBuiltinDashboard
		*out = new(bool)
		**out = **in
	}
	if in.SlicingExprs != nil {
		in, out := &in.SlicingExprs, &out.SlicingExprs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Snapshot != nil {
		in, out := &in.Snapshot, &out.Snapshot
		*out = make([]SnapshotInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.TimeSeries != nil {
		in, out := &in.TimeSeries, &out.TimeSeries
		*out = make([]TimeSeriesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakehouseMonitorInitParameters.
func (in *LakehouseMonitorInitParameters) DeepCopy() *LakehouseMonitorInitParameters {
	if in == nil {
		return nil
	}
	out := new(LakehouseMonitorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakehouseMonitorList) DeepCopyInto(out *LakehouseMonitorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LakehouseMonitor, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakehouseMonitorList.
func (in *LakehouseMonitorList) DeepCopy() *LakehouseMonitorList {
	if in == nil {
		return nil
	}
	out := new(LakehouseMonitorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LakehouseMonitorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakehouseMonitorObservation) DeepCopyInto(out *LakehouseMonitorObservation) {
	*out = *in
	if in.AssetsDir != nil {
		in, out := &in.AssetsDir, &out.AssetsDir
		*out = new(string)
		**out = **in
	}
	if in.BaselineTableName != nil {
		in, out := &in.BaselineTableName, &out.BaselineTableName
		*out = new(string)
		**out = **in
	}
	if in.CustomMetrics != nil {
		in, out := &in.CustomMetrics, &out.CustomMetrics
		*out = make([]CustomMetricsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.DataClassificationConfig != nil {
		in, out := &in.DataClassificationConfig, &out.DataClassificationConfig
		*out = make([]DataClassificationConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriftMetricsTableName != nil {
		in, out := &in.DriftMetricsTableName, &out.DriftMetricsTableName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InferenceLog != nil {
		in, out := &in.InferenceLog, &out.InferenceLog
		*out = make([]InferenceLogObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LatestMonitorFailureMsg != nil {
		in, out := &in.LatestMonitorFailureMsg, &out.LatestMonitorFailureMsg
		*out = new(string)
		**out = **in
	}
	if in.MonitorVersion != nil {
		in, out := &in.MonitorVersion, &out.MonitorVersion
		*out = new(float64)
		**out = **in
	}
	if in.Notifications != nil {
		in, out := &in.Notifications, &out.Notifications
		*out = make([]NotificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutputSchemaName != nil {
		in, out := &in.OutputSchemaName, &out.OutputSchemaName
		*out = new(string)
		**out = **in
	}
	if in.ProfileMetricsTableName != nil {
		in, out := &in.ProfileMetricsTableName, &out.ProfileMetricsTableName
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipBuiltinDashboard != nil {
		in, out := &in.SkipBuiltinDashboard, &out.SkipBuiltinDashboard
		*out = new(bool)
		**out = **in
	}
	if in.SlicingExprs != nil {
		in, out := &in.SlicingExprs, &out.SlicingExprs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Snapshot != nil {
		in, out := &in.Snapshot, &out.Snapshot
		*out = make([]SnapshotParameters, len(*in))
		copy(*out, *in)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.TimeSeries != nil {
		in, out := &in.TimeSeries, &out.TimeSeries
		*out = make([]TimeSeriesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakehouseMonitorObservation.
func (in *LakehouseMonitorObservation) DeepCopy() *LakehouseMonitorObservation {
	if in == nil {
		return nil
	}
	out := new(LakehouseMonitorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakehouseMonitorParameters) DeepCopyInto(out *LakehouseMonitorParameters) {
	*out = *in
	if in.AssetsDir != nil {
		in, out := &in.AssetsDir, &out.AssetsDir
		*out = new(string)
		**out = **in
	}
	if in.BaselineTableName != nil {
		in, out := &in.BaselineTableName, &out.BaselineTableName
		*out = new(string)
		**out = **in
	}
	if in.CustomMetrics != nil {
		in, out := &in.CustomMetrics, &out.CustomMetrics
		*out = make([]CustomMetricsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataClassificationConfig != nil {
		in, out := &in.DataClassificationConfig, &out.DataClassificationConfig
		*out = make([]DataClassificationConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InferenceLog != nil {
		in, out := &in.InferenceLog, &out.InferenceLog
		*out = make([]InferenceLogParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LatestMonitorFailureMsg != nil {
		in, out := &in.LatestMonitorFailureMsg, &out.LatestMonitorFailureMsg
		*out = new(string)
		**out = **in
	}
	if in.Notifications != nil {
		in, out := &in.Notifications, &out.Notifications
		*out = make([]NotificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutputSchemaName != nil {
		in, out := &in.OutputSchemaName, &out.OutputSchemaName
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipBuiltinDashboard != nil {
		in, out := &in.SkipBuiltinDashboard, &out.SkipBuiltinDashboard
		*out = new(bool)
		**out = **in
	}
	if in.SlicingExprs != nil {
		in, out := &in.SlicingExprs, &out.SlicingExprs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Snapshot != nil {
		in, out := &in.Snapshot, &out.Snapshot
		*out = make([]SnapshotParameters, len(*in))
		copy(*out, *in)
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.TimeSeries != nil {
		in, out := &in.TimeSeries, &out.TimeSeries
		*out = make([]TimeSeriesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakehouseMonitorParameters.
func (in *LakehouseMonitorParameters) DeepCopy() *LakehouseMonitorParameters {
	if in == nil {
		return nil
	}
	out := new(LakehouseMonitorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakehouseMonitorSpec) DeepCopyInto(out *LakehouseMonitorSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakehouseMonitorSpec.
func (in *LakehouseMonitorSpec) DeepCopy() *LakehouseMonitorSpec {
	if in == nil {
		return nil
	}
	out := new(LakehouseMonitorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakehouseMonitorStatus) DeepCopyInto(out *LakehouseMonitorStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakehouseMonitorStatus.
func (in *LakehouseMonitorStatus) DeepCopy() *LakehouseMonitorStatus {
	if in == nil {
		return nil
	}
	out := new(LakehouseMonitorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedAqsInitParameters) DeepCopyInto(out *ManagedAqsInitParameters) {
	*out = *in
	if in.QueueURL != nil {
		in, out := &in.QueueURL, &out.QueueURL
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedAqsInitParameters.
func (in *ManagedAqsInitParameters) DeepCopy() *ManagedAqsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedAqsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedAqsObservation) DeepCopyInto(out *ManagedAqsObservation) {
	*out = *in
	if in.ManagedResourceID != nil {
		in, out := &in.ManagedResourceID, &out.ManagedResourceID
		*out = new(string)
		**out = **in
	}
	if in.QueueURL != nil {
		in, out := &in.QueueURL, &out.QueueURL
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedAqsObservation.
func (in *ManagedAqsObservation) DeepCopy() *ManagedAqsObservation {
	if in == nil {
		return nil
	}
	out := new(ManagedAqsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedAqsParameters) DeepCopyInto(out *ManagedAqsParameters) {
	*out = *in
	if in.QueueURL != nil {
		in, out := &in.QueueURL, &out.QueueURL
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedAqsParameters.
func (in *ManagedAqsParameters) DeepCopy() *ManagedAqsParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedAqsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedPubsubInitParameters) DeepCopyInto(out *ManagedPubsubInitParameters) {
	*out = *in
	if in.SubscriptionName != nil {
		in, out := &in.SubscriptionName, &out.SubscriptionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedPubsubInitParameters.
func (in *ManagedPubsubInitParameters) DeepCopy() *ManagedPubsubInitParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedPubsubInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedPubsubObservation) DeepCopyInto(out *ManagedPubsubObservation) {
	*out = *in
	if in.ManagedResourceID != nil {
		in, out := &in.ManagedResourceID, &out.ManagedResourceID
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionName != nil {
		in, out := &in.SubscriptionName, &out.SubscriptionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedPubsubObservation.
func (in *ManagedPubsubObservation) DeepCopy() *ManagedPubsubObservation {
	if in == nil {
		return nil
	}
	out := new(ManagedPubsubObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedPubsubParameters) DeepCopyInto(out *ManagedPubsubParameters) {
	*out = *in
	if in.SubscriptionName != nil {
		in, out := &in.SubscriptionName, &out.SubscriptionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedPubsubParameters.
func (in *ManagedPubsubParameters) DeepCopy() *ManagedPubsubParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedPubsubParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedSqsInitParameters) DeepCopyInto(out *ManagedSqsInitParameters) {
	*out = *in
	if in.QueueURL != nil {
		in, out := &in.QueueURL, &out.QueueURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedSqsInitParameters.
func (in *ManagedSqsInitParameters) DeepCopy() *ManagedSqsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedSqsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedSqsObservation) DeepCopyInto(out *ManagedSqsObservation) {
	*out = *in
	if in.ManagedResourceID != nil {
		in, out := &in.ManagedResourceID, &out.ManagedResourceID
		*out = new(string)
		**out = **in
	}
	if in.QueueURL != nil {
		in, out := &in.QueueURL, &out.QueueURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedSqsObservation.
func (in *ManagedSqsObservation) DeepCopy() *ManagedSqsObservation {
	if in == nil {
		return nil
	}
	out := new(ManagedSqsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedSqsParameters) DeepCopyInto(out *ManagedSqsParameters) {
	*out = *in
	if in.QueueURL != nil {
		in, out := &in.QueueURL, &out.QueueURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedSqsParameters.
func (in *ManagedSqsParameters) DeepCopy() *ManagedSqsParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedSqsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Metastore) DeepCopyInto(out *Metastore) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Metastore.
func (in *Metastore) DeepCopy() *Metastore {
	if in == nil {
		return nil
	}
	out := new(Metastore)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Metastore) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreAssignment) DeepCopyInto(out *MetastoreAssignment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreAssignment.
func (in *MetastoreAssignment) DeepCopy() *MetastoreAssignment {
	if in == nil {
		return nil
	}
	out := new(MetastoreAssignment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MetastoreAssignment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreAssignmentInitParameters) DeepCopyInto(out *MetastoreAssignmentInitParameters) {
	*out = *in
	if in.DefaultCatalogName != nil {
		in, out := &in.DefaultCatalogName, &out.DefaultCatalogName
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.MetastoreIDRef != nil {
		in, out := &in.MetastoreIDRef, &out.MetastoreIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MetastoreIDSelector != nil {
		in, out := &in.MetastoreIDSelector, &out.MetastoreIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreAssignmentInitParameters.
func (in *MetastoreAssignmentInitParameters) DeepCopy() *MetastoreAssignmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreAssignmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreAssignmentList) DeepCopyInto(out *MetastoreAssignmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MetastoreAssignment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreAssignmentList.
func (in *MetastoreAssignmentList) DeepCopy() *MetastoreAssignmentList {
	if in == nil {
		return nil
	}
	out := new(MetastoreAssignmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MetastoreAssignmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreAssignmentObservation) DeepCopyInto(out *MetastoreAssignmentObservation) {
	*out = *in
	if in.DefaultCatalogName != nil {
		in, out := &in.DefaultCatalogName, &out.DefaultCatalogName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreAssignmentObservation.
func (in *MetastoreAssignmentObservation) DeepCopy() *MetastoreAssignmentObservation {
	if in == nil {
		return nil
	}
	out := new(MetastoreAssignmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreAssignmentParameters) DeepCopyInto(out *MetastoreAssignmentParameters) {
	*out = *in
	if in.DefaultCatalogName != nil {
		in, out := &in.DefaultCatalogName, &out.DefaultCatalogName
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.MetastoreIDRef != nil {
		in, out := &in.MetastoreIDRef, &out.MetastoreIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MetastoreIDSelector != nil {
		in, out := &in.MetastoreIDSelector, &out.MetastoreIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreAssignmentParameters.
func (in *MetastoreAssignmentParameters) DeepCopy() *MetastoreAssignmentParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreAssignmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreAssignmentSpec) DeepCopyInto(out *MetastoreAssignmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreAssignmentSpec.
func (in *MetastoreAssignmentSpec) DeepCopy() *MetastoreAssignmentSpec {
	if in == nil {
		return nil
	}
	out := new(MetastoreAssignmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreAssignmentStatus) DeepCopyInto(out *MetastoreAssignmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreAssignmentStatus.
func (in *MetastoreAssignmentStatus) DeepCopy() *MetastoreAssignmentStatus {
	if in == nil {
		return nil
	}
	out := new(MetastoreAssignmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreDataAccess) DeepCopyInto(out *MetastoreDataAccess) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreDataAccess.
func (in *MetastoreDataAccess) DeepCopy() *MetastoreDataAccess {
	if in == nil {
		return nil
	}
	out := new(MetastoreDataAccess)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MetastoreDataAccess) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreDataAccessAwsIAMRoleInitParameters) DeepCopyInto(out *MetastoreDataAccessAwsIAMRoleInitParameters) {
	*out = *in
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.UnityCatalogIAMArn != nil {
		in, out := &in.UnityCatalogIAMArn, &out.UnityCatalogIAMArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreDataAccessAwsIAMRoleInitParameters.
func (in *MetastoreDataAccessAwsIAMRoleInitParameters) DeepCopy() *MetastoreDataAccessAwsIAMRoleInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreDataAccessAwsIAMRoleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreDataAccessAwsIAMRoleObservation) DeepCopyInto(out *MetastoreDataAccessAwsIAMRoleObservation) {
	*out = *in
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.UnityCatalogIAMArn != nil {
		in, out := &in.UnityCatalogIAMArn, &out.UnityCatalogIAMArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreDataAccessAwsIAMRoleObservation.
func (in *MetastoreDataAccessAwsIAMRoleObservation) DeepCopy() *MetastoreDataAccessAwsIAMRoleObservation {
	if in == nil {
		return nil
	}
	out := new(MetastoreDataAccessAwsIAMRoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreDataAccessAwsIAMRoleParameters) DeepCopyInto(out *MetastoreDataAccessAwsIAMRoleParameters) {
	*out = *in
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.UnityCatalogIAMArn != nil {
		in, out := &in.UnityCatalogIAMArn, &out.UnityCatalogIAMArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreDataAccessAwsIAMRoleParameters.
func (in *MetastoreDataAccessAwsIAMRoleParameters) DeepCopy() *MetastoreDataAccessAwsIAMRoleParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreDataAccessAwsIAMRoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreDataAccessAzureManagedIdentityInitParameters) DeepCopyInto(out *MetastoreDataAccessAzureManagedIdentityInitParameters) {
	*out = *in
	if in.AccessConnectorID != nil {
		in, out := &in.AccessConnectorID, &out.AccessConnectorID
		*out = new(string)
		**out = **in
	}
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.ManagedIdentityID != nil {
		in, out := &in.ManagedIdentityID, &out.ManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreDataAccessAzureManagedIdentityInitParameters.
func (in *MetastoreDataAccessAzureManagedIdentityInitParameters) DeepCopy() *MetastoreDataAccessAzureManagedIdentityInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreDataAccessAzureManagedIdentityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreDataAccessAzureManagedIdentityObservation) DeepCopyInto(out *MetastoreDataAccessAzureManagedIdentityObservation) {
	*out = *in
	if in.AccessConnectorID != nil {
		in, out := &in.AccessConnectorID, &out.AccessConnectorID
		*out = new(string)
		**out = **in
	}
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.ManagedIdentityID != nil {
		in, out := &in.ManagedIdentityID, &out.ManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreDataAccessAzureManagedIdentityObservation.
func (in *MetastoreDataAccessAzureManagedIdentityObservation) DeepCopy() *MetastoreDataAccessAzureManagedIdentityObservation {
	if in == nil {
		return nil
	}
	out := new(MetastoreDataAccessAzureManagedIdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreDataAccessAzureManagedIdentityParameters) DeepCopyInto(out *MetastoreDataAccessAzureManagedIdentityParameters) {
	*out = *in
	if in.AccessConnectorID != nil {
		in, out := &in.AccessConnectorID, &out.AccessConnectorID
		*out = new(string)
		**out = **in
	}
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.ManagedIdentityID != nil {
		in, out := &in.ManagedIdentityID, &out.ManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreDataAccessAzureManagedIdentityParameters.
func (in *MetastoreDataAccessAzureManagedIdentityParameters) DeepCopy() *MetastoreDataAccessAzureManagedIdentityParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreDataAccessAzureManagedIdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreDataAccessAzureServicePrincipalInitParameters) DeepCopyInto(out *MetastoreDataAccessAzureServicePrincipalInitParameters) {
	*out = *in
	if in.ApplicationID != nil {
		in, out := &in.ApplicationID, &out.ApplicationID
		*out = new(string)
		**out = **in
	}
	in.ClientSecretSecretRef.DeepCopyInto(&out.ClientSecretSecretRef)
	if in.DirectoryID != nil {
		in, out := &in.DirectoryID, &out.DirectoryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreDataAccessAzureServicePrincipalInitParameters.
func (in *MetastoreDataAccessAzureServicePrincipalInitParameters) DeepCopy() *MetastoreDataAccessAzureServicePrincipalInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreDataAccessAzureServicePrincipalInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreDataAccessAzureServicePrincipalObservation) DeepCopyInto(out *MetastoreDataAccessAzureServicePrincipalObservation) {
	*out = *in
	if in.ApplicationID != nil {
		in, out := &in.ApplicationID, &out.ApplicationID
		*out = new(string)
		**out = **in
	}
	if in.DirectoryID != nil {
		in, out := &in.DirectoryID, &out.DirectoryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreDataAccessAzureServicePrincipalObservation.
func (in *MetastoreDataAccessAzureServicePrincipalObservation) DeepCopy() *MetastoreDataAccessAzureServicePrincipalObservation {
	if in == nil {
		return nil
	}
	out := new(MetastoreDataAccessAzureServicePrincipalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreDataAccessAzureServicePrincipalParameters) DeepCopyInto(out *MetastoreDataAccessAzureServicePrincipalParameters) {
	*out = *in
	if in.ApplicationID != nil {
		in, out := &in.ApplicationID, &out.ApplicationID
		*out = new(string)
		**out = **in
	}
	in.ClientSecretSecretRef.DeepCopyInto(&out.ClientSecretSecretRef)
	if in.DirectoryID != nil {
		in, out := &in.DirectoryID, &out.DirectoryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreDataAccessAzureServicePrincipalParameters.
func (in *MetastoreDataAccessAzureServicePrincipalParameters) DeepCopy() *MetastoreDataAccessAzureServicePrincipalParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreDataAccessAzureServicePrincipalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreDataAccessDatabricksGCPServiceAccountInitParameters) DeepCopyInto(out *MetastoreDataAccessDatabricksGCPServiceAccountInitParameters) {
	*out = *in
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreDataAccessDatabricksGCPServiceAccountInitParameters.
func (in *MetastoreDataAccessDatabricksGCPServiceAccountInitParameters) DeepCopy() *MetastoreDataAccessDatabricksGCPServiceAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreDataAccessDatabricksGCPServiceAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreDataAccessDatabricksGCPServiceAccountObservation) DeepCopyInto(out *MetastoreDataAccessDatabricksGCPServiceAccountObservation) {
	*out = *in
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreDataAccessDatabricksGCPServiceAccountObservation.
func (in *MetastoreDataAccessDatabricksGCPServiceAccountObservation) DeepCopy() *MetastoreDataAccessDatabricksGCPServiceAccountObservation {
	if in == nil {
		return nil
	}
	out := new(MetastoreDataAccessDatabricksGCPServiceAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreDataAccessDatabricksGCPServiceAccountParameters) DeepCopyInto(out *MetastoreDataAccessDatabricksGCPServiceAccountParameters) {
	*out = *in
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreDataAccessDatabricksGCPServiceAccountParameters.
func (in *MetastoreDataAccessDatabricksGCPServiceAccountParameters) DeepCopy() *MetastoreDataAccessDatabricksGCPServiceAccountParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreDataAccessDatabricksGCPServiceAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreDataAccessInitParameters) DeepCopyInto(out *MetastoreDataAccessInitParameters) {
	*out = *in
	if in.AwsIAMRole != nil {
		in, out := &in.AwsIAMRole, &out.AwsIAMRole
		*out = make([]MetastoreDataAccessAwsIAMRoleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureManagedIdentity != nil {
		in, out := &in.AzureManagedIdentity, &out.AzureManagedIdentity
		*out = make([]MetastoreDataAccessAzureManagedIdentityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureServicePrincipal != nil {
		in, out := &in.AzureServicePrincipal, &out.AzureServicePrincipal
		*out = make([]MetastoreDataAccessAzureServicePrincipalInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudflareAPIToken != nil {
		in, out := &in.CloudflareAPIToken, &out.CloudflareAPIToken
		*out = make([]CloudflareAPITokenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DatabricksGCPServiceAccount != nil {
		in, out := &in.DatabricksGCPServiceAccount, &out.DatabricksGCPServiceAccount
		*out = make([]MetastoreDataAccessDatabricksGCPServiceAccountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ForceUpdate != nil {
		in, out := &in.ForceUpdate, &out.ForceUpdate
		*out = new(bool)
		**out = **in
	}
	if in.GCPServiceAccountKey != nil {
		in, out := &in.GCPServiceAccountKey, &out.GCPServiceAccountKey
		*out = make([]GCPServiceAccountKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.MetastoreIDRef != nil {
		in, out := &in.MetastoreIDRef, &out.MetastoreIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MetastoreIDSelector != nil {
		in, out := &in.MetastoreIDSelector, &out.MetastoreIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SkipValidation != nil {
		in, out := &in.SkipValidation, &out.SkipValidation
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreDataAccessInitParameters.
func (in *MetastoreDataAccessInitParameters) DeepCopy() *MetastoreDataAccessInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreDataAccessInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreDataAccessList) DeepCopyInto(out *MetastoreDataAccessList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MetastoreDataAccess, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreDataAccessList.
func (in *MetastoreDataAccessList) DeepCopy() *MetastoreDataAccessList {
	if in == nil {
		return nil
	}
	out := new(MetastoreDataAccessList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MetastoreDataAccessList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreDataAccessObservation) DeepCopyInto(out *MetastoreDataAccessObservation) {
	*out = *in
	if in.AwsIAMRole != nil {
		in, out := &in.AwsIAMRole, &out.AwsIAMRole
		*out = make([]MetastoreDataAccessAwsIAMRoleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureManagedIdentity != nil {
		in, out := &in.AzureManagedIdentity, &out.AzureManagedIdentity
		*out = make([]MetastoreDataAccessAzureManagedIdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureServicePrincipal != nil {
		in, out := &in.AzureServicePrincipal, &out.AzureServicePrincipal
		*out = make([]MetastoreDataAccessAzureServicePrincipalObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudflareAPIToken != nil {
		in, out := &in.CloudflareAPIToken, &out.CloudflareAPIToken
		*out = make([]CloudflareAPITokenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DatabricksGCPServiceAccount != nil {
		in, out := &in.DatabricksGCPServiceAccount, &out.DatabricksGCPServiceAccount
		*out = make([]MetastoreDataAccessDatabricksGCPServiceAccountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ForceUpdate != nil {
		in, out := &in.ForceUpdate, &out.ForceUpdate
		*out = new(bool)
		**out = **in
	}
	if in.GCPServiceAccountKey != nil {
		in, out := &in.GCPServiceAccountKey, &out.GCPServiceAccountKey
		*out = make([]GCPServiceAccountKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SkipValidation != nil {
		in, out := &in.SkipValidation, &out.SkipValidation
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreDataAccessObservation.
func (in *MetastoreDataAccessObservation) DeepCopy() *MetastoreDataAccessObservation {
	if in == nil {
		return nil
	}
	out := new(MetastoreDataAccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreDataAccessParameters) DeepCopyInto(out *MetastoreDataAccessParameters) {
	*out = *in
	if in.AwsIAMRole != nil {
		in, out := &in.AwsIAMRole, &out.AwsIAMRole
		*out = make([]MetastoreDataAccessAwsIAMRoleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureManagedIdentity != nil {
		in, out := &in.AzureManagedIdentity, &out.AzureManagedIdentity
		*out = make([]MetastoreDataAccessAzureManagedIdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureServicePrincipal != nil {
		in, out := &in.AzureServicePrincipal, &out.AzureServicePrincipal
		*out = make([]MetastoreDataAccessAzureServicePrincipalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudflareAPIToken != nil {
		in, out := &in.CloudflareAPIToken, &out.CloudflareAPIToken
		*out = make([]CloudflareAPITokenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DatabricksGCPServiceAccount != nil {
		in, out := &in.DatabricksGCPServiceAccount, &out.DatabricksGCPServiceAccount
		*out = make([]MetastoreDataAccessDatabricksGCPServiceAccountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ForceUpdate != nil {
		in, out := &in.ForceUpdate, &out.ForceUpdate
		*out = new(bool)
		**out = **in
	}
	if in.GCPServiceAccountKey != nil {
		in, out := &in.GCPServiceAccountKey, &out.GCPServiceAccountKey
		*out = make([]GCPServiceAccountKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.MetastoreIDRef != nil {
		in, out := &in.MetastoreIDRef, &out.MetastoreIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MetastoreIDSelector != nil {
		in, out := &in.MetastoreIDSelector, &out.MetastoreIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SkipValidation != nil {
		in, out := &in.SkipValidation, &out.SkipValidation
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreDataAccessParameters.
func (in *MetastoreDataAccessParameters) DeepCopy() *MetastoreDataAccessParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreDataAccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreDataAccessSpec) DeepCopyInto(out *MetastoreDataAccessSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreDataAccessSpec.
func (in *MetastoreDataAccessSpec) DeepCopy() *MetastoreDataAccessSpec {
	if in == nil {
		return nil
	}
	out := new(MetastoreDataAccessSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreDataAccessStatus) DeepCopyInto(out *MetastoreDataAccessStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreDataAccessStatus.
func (in *MetastoreDataAccessStatus) DeepCopy() *MetastoreDataAccessStatus {
	if in == nil {
		return nil
	}
	out := new(MetastoreDataAccessStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreInitParameters) DeepCopyInto(out *MetastoreInitParameters) {
	*out = *in
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.DefaultDataAccessConfigID != nil {
		in, out := &in.DefaultDataAccessConfigID, &out.DefaultDataAccessConfigID
		*out = new(string)
		**out = **in
	}
	if in.DeltaSharingOrganizationName != nil {
		in, out := &in.DeltaSharingOrganizationName, &out.DeltaSharingOrganizationName
		*out = new(string)
		**out = **in
	}
	if in.DeltaSharingRecipientTokenLifetimeInSeconds != nil {
		in, out := &in.DeltaSharingRecipientTokenLifetimeInSeconds, &out.DeltaSharingRecipientTokenLifetimeInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.DeltaSharingScope != nil {
		in, out := &in.DeltaSharingScope, &out.DeltaSharingScope
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.GlobalMetastoreID != nil {
		in, out := &in.GlobalMetastoreID, &out.GlobalMetastoreID
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
	if in.StorageRootCredentialID != nil {
		in, out := &in.StorageRootCredentialID, &out.StorageRootCredentialID
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedBy != nil {
		in, out := &in.UpdatedBy, &out.UpdatedBy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreInitParameters.
func (in *MetastoreInitParameters) DeepCopy() *MetastoreInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreList) DeepCopyInto(out *MetastoreList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Metastore, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreList.
func (in *MetastoreList) DeepCopy() *MetastoreList {
	if in == nil {
		return nil
	}
	out := new(MetastoreList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MetastoreList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreObservation) DeepCopyInto(out *MetastoreObservation) {
	*out = *in
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.DefaultDataAccessConfigID != nil {
		in, out := &in.DefaultDataAccessConfigID, &out.DefaultDataAccessConfigID
		*out = new(string)
		**out = **in
	}
	if in.DeltaSharingOrganizationName != nil {
		in, out := &in.DeltaSharingOrganizationName, &out.DeltaSharingOrganizationName
		*out = new(string)
		**out = **in
	}
	if in.DeltaSharingRecipientTokenLifetimeInSeconds != nil {
		in, out := &in.DeltaSharingRecipientTokenLifetimeInSeconds, &out.DeltaSharingRecipientTokenLifetimeInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.DeltaSharingScope != nil {
		in, out := &in.DeltaSharingScope, &out.DeltaSharingScope
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.GlobalMetastoreID != nil {
		in, out := &in.GlobalMetastoreID, &out.GlobalMetastoreID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
	if in.StorageRootCredentialID != nil {
		in, out := &in.StorageRootCredentialID, &out.StorageRootCredentialID
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedBy != nil {
		in, out := &in.UpdatedBy, &out.UpdatedBy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreObservation.
func (in *MetastoreObservation) DeepCopy() *MetastoreObservation {
	if in == nil {
		return nil
	}
	out := new(MetastoreObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreParameters) DeepCopyInto(out *MetastoreParameters) {
	*out = *in
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.DefaultDataAccessConfigID != nil {
		in, out := &in.DefaultDataAccessConfigID, &out.DefaultDataAccessConfigID
		*out = new(string)
		**out = **in
	}
	if in.DeltaSharingOrganizationName != nil {
		in, out := &in.DeltaSharingOrganizationName, &out.DeltaSharingOrganizationName
		*out = new(string)
		**out = **in
	}
	if in.DeltaSharingRecipientTokenLifetimeInSeconds != nil {
		in, out := &in.DeltaSharingRecipientTokenLifetimeInSeconds, &out.DeltaSharingRecipientTokenLifetimeInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.DeltaSharingScope != nil {
		in, out := &in.DeltaSharingScope, &out.DeltaSharingScope
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.GlobalMetastoreID != nil {
		in, out := &in.GlobalMetastoreID, &out.GlobalMetastoreID
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
	if in.StorageRootCredentialID != nil {
		in, out := &in.StorageRootCredentialID, &out.StorageRootCredentialID
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(float64)
		**out = **in
	}
	if in.UpdatedBy != nil {
		in, out := &in.UpdatedBy, &out.UpdatedBy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreParameters.
func (in *MetastoreParameters) DeepCopy() *MetastoreParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreSpec) DeepCopyInto(out *MetastoreSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreSpec.
func (in *MetastoreSpec) DeepCopy() *MetastoreSpec {
	if in == nil {
		return nil
	}
	out := new(MetastoreSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreStatus) DeepCopyInto(out *MetastoreStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreStatus.
func (in *MetastoreStatus) DeepCopy() *MetastoreStatus {
	if in == nil {
		return nil
	}
	out := new(MetastoreStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationsInitParameters) DeepCopyInto(out *NotificationsInitParameters) {
	*out = *in
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]OnFailureInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnNewClassificationTagDetected != nil {
		in, out := &in.OnNewClassificationTagDetected, &out.OnNewClassificationTagDetected
		*out = make([]OnNewClassificationTagDetectedInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationsInitParameters.
func (in *NotificationsInitParameters) DeepCopy() *NotificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationsObservation) DeepCopyInto(out *NotificationsObservation) {
	*out = *in
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]OnFailureObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnNewClassificationTagDetected != nil {
		in, out := &in.OnNewClassificationTagDetected, &out.OnNewClassificationTagDetected
		*out = make([]OnNewClassificationTagDetectedObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationsObservation.
func (in *NotificationsObservation) DeepCopy() *NotificationsObservation {
	if in == nil {
		return nil
	}
	out := new(NotificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationsOnFailureInitParameters) DeepCopyInto(out *NotificationsOnFailureInitParameters) {
	*out = *in
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationsOnFailureInitParameters.
func (in *NotificationsOnFailureInitParameters) DeepCopy() *NotificationsOnFailureInitParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationsOnFailureInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationsOnFailureObservation) DeepCopyInto(out *NotificationsOnFailureObservation) {
	*out = *in
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationsOnFailureObservation.
func (in *NotificationsOnFailureObservation) DeepCopy() *NotificationsOnFailureObservation {
	if in == nil {
		return nil
	}
	out := new(NotificationsOnFailureObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationsOnFailureParameters) DeepCopyInto(out *NotificationsOnFailureParameters) {
	*out = *in
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationsOnFailureParameters.
func (in *NotificationsOnFailureParameters) DeepCopy() *NotificationsOnFailureParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationsOnFailureParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationsOnNewClassificationTagDetectedInitParameters) DeepCopyInto(out *NotificationsOnNewClassificationTagDetectedInitParameters) {
	*out = *in
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationsOnNewClassificationTagDetectedInitParameters.
func (in *NotificationsOnNewClassificationTagDetectedInitParameters) DeepCopy() *NotificationsOnNewClassificationTagDetectedInitParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationsOnNewClassificationTagDetectedInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationsOnNewClassificationTagDetectedObservation) DeepCopyInto(out *NotificationsOnNewClassificationTagDetectedObservation) {
	*out = *in
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationsOnNewClassificationTagDetectedObservation.
func (in *NotificationsOnNewClassificationTagDetectedObservation) DeepCopy() *NotificationsOnNewClassificationTagDetectedObservation {
	if in == nil {
		return nil
	}
	out := new(NotificationsOnNewClassificationTagDetectedObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationsOnNewClassificationTagDetectedParameters) DeepCopyInto(out *NotificationsOnNewClassificationTagDetectedParameters) {
	*out = *in
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationsOnNewClassificationTagDetectedParameters.
func (in *NotificationsOnNewClassificationTagDetectedParameters) DeepCopy() *NotificationsOnNewClassificationTagDetectedParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationsOnNewClassificationTagDetectedParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationsParameters) DeepCopyInto(out *NotificationsParameters) {
	*out = *in
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]OnFailureParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnNewClassificationTagDetected != nil {
		in, out := &in.OnNewClassificationTagDetected, &out.OnNewClassificationTagDetected
		*out = make([]OnNewClassificationTagDetectedParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationsParameters.
func (in *NotificationsParameters) DeepCopy() *NotificationsParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnFailureInitParameters) DeepCopyInto(out *OnFailureInitParameters) {
	*out = *in
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnFailureInitParameters.
func (in *OnFailureInitParameters) DeepCopy() *OnFailureInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnFailureInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnFailureObservation) DeepCopyInto(out *OnFailureObservation) {
	*out = *in
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnFailureObservation.
func (in *OnFailureObservation) DeepCopy() *OnFailureObservation {
	if in == nil {
		return nil
	}
	out := new(OnFailureObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnFailureParameters) DeepCopyInto(out *OnFailureParameters) {
	*out = *in
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnFailureParameters.
func (in *OnFailureParameters) DeepCopy() *OnFailureParameters {
	if in == nil {
		return nil
	}
	out := new(OnFailureParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnNewClassificationTagDetectedInitParameters) DeepCopyInto(out *OnNewClassificationTagDetectedInitParameters) {
	*out = *in
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnNewClassificationTagDetectedInitParameters.
func (in *OnNewClassificationTagDetectedInitParameters) DeepCopy() *OnNewClassificationTagDetectedInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnNewClassificationTagDetectedInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnNewClassificationTagDetectedObservation) DeepCopyInto(out *OnNewClassificationTagDetectedObservation) {
	*out = *in
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnNewClassificationTagDetectedObservation.
func (in *OnNewClassificationTagDetectedObservation) DeepCopy() *OnNewClassificationTagDetectedObservation {
	if in == nil {
		return nil
	}
	out := new(OnNewClassificationTagDetectedObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnNewClassificationTagDetectedParameters) DeepCopyInto(out *OnNewClassificationTagDetectedParameters) {
	*out = *in
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnNewClassificationTagDetectedParameters.
func (in *OnNewClassificationTagDetectedParameters) DeepCopy() *OnNewClassificationTagDetectedParameters {
	if in == nil {
		return nil
	}
	out := new(OnNewClassificationTagDetectedParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnlineTable) DeepCopyInto(out *OnlineTable) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnlineTable.
func (in *OnlineTable) DeepCopy() *OnlineTable {
	if in == nil {
		return nil
	}
	out := new(OnlineTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OnlineTable) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnlineTableInitParameters) DeepCopyInto(out *OnlineTableInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]SpecInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnlineTableInitParameters.
func (in *OnlineTableInitParameters) DeepCopy() *OnlineTableInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnlineTableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnlineTableList) DeepCopyInto(out *OnlineTableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OnlineTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnlineTableList.
func (in *OnlineTableList) DeepCopy() *OnlineTableList {
	if in == nil {
		return nil
	}
	out := new(OnlineTableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OnlineTableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnlineTableObservation) DeepCopyInto(out *OnlineTableObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]SpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = make([]StatusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableServingURL != nil {
		in, out := &in.TableServingURL, &out.TableServingURL
		*out = new(string)
		**out = **in
	}
	if in.UnityCatalogProvisioningState != nil {
		in, out := &in.UnityCatalogProvisioningState, &out.UnityCatalogProvisioningState
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnlineTableObservation.
func (in *OnlineTableObservation) DeepCopy() *OnlineTableObservation {
	if in == nil {
		return nil
	}
	out := new(OnlineTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnlineTableParameters) DeepCopyInto(out *OnlineTableParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]SpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnlineTableParameters.
func (in *OnlineTableParameters) DeepCopy() *OnlineTableParameters {
	if in == nil {
		return nil
	}
	out := new(OnlineTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnlineTableSpec) DeepCopyInto(out *OnlineTableSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnlineTableSpec.
func (in *OnlineTableSpec) DeepCopy() *OnlineTableSpec {
	if in == nil {
		return nil
	}
	out := new(OnlineTableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnlineTableStatus) DeepCopyInto(out *OnlineTableStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnlineTableStatus.
func (in *OnlineTableStatus) DeepCopy() *OnlineTableStatus {
	if in == nil {
		return nil
	}
	out := new(OnlineTableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvidedAqsInitParameters) DeepCopyInto(out *ProvidedAqsInitParameters) {
	*out = *in
	if in.QueueURL != nil {
		in, out := &in.QueueURL, &out.QueueURL
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvidedAqsInitParameters.
func (in *ProvidedAqsInitParameters) DeepCopy() *ProvidedAqsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProvidedAqsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvidedAqsObservation) DeepCopyInto(out *ProvidedAqsObservation) {
	*out = *in
	if in.ManagedResourceID != nil {
		in, out := &in.ManagedResourceID, &out.ManagedResourceID
		*out = new(string)
		**out = **in
	}
	if in.QueueURL != nil {
		in, out := &in.QueueURL, &out.QueueURL
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvidedAqsObservation.
func (in *ProvidedAqsObservation) DeepCopy() *ProvidedAqsObservation {
	if in == nil {
		return nil
	}
	out := new(ProvidedAqsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvidedAqsParameters) DeepCopyInto(out *ProvidedAqsParameters) {
	*out = *in
	if in.QueueURL != nil {
		in, out := &in.QueueURL, &out.QueueURL
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvidedAqsParameters.
func (in *ProvidedAqsParameters) DeepCopy() *ProvidedAqsParameters {
	if in == nil {
		return nil
	}
	out := new(ProvidedAqsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvidedPubsubInitParameters) DeepCopyInto(out *ProvidedPubsubInitParameters) {
	*out = *in
	if in.SubscriptionName != nil {
		in, out := &in.SubscriptionName, &out.SubscriptionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvidedPubsubInitParameters.
func (in *ProvidedPubsubInitParameters) DeepCopy() *ProvidedPubsubInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProvidedPubsubInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvidedPubsubObservation) DeepCopyInto(out *ProvidedPubsubObservation) {
	*out = *in
	if in.ManagedResourceID != nil {
		in, out := &in.ManagedResourceID, &out.ManagedResourceID
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionName != nil {
		in, out := &in.SubscriptionName, &out.SubscriptionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvidedPubsubObservation.
func (in *ProvidedPubsubObservation) DeepCopy() *ProvidedPubsubObservation {
	if in == nil {
		return nil
	}
	out := new(ProvidedPubsubObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvidedPubsubParameters) DeepCopyInto(out *ProvidedPubsubParameters) {
	*out = *in
	if in.SubscriptionName != nil {
		in, out := &in.SubscriptionName, &out.SubscriptionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvidedPubsubParameters.
func (in *ProvidedPubsubParameters) DeepCopy() *ProvidedPubsubParameters {
	if in == nil {
		return nil
	}
	out := new(ProvidedPubsubParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvidedSqsInitParameters) DeepCopyInto(out *ProvidedSqsInitParameters) {
	*out = *in
	if in.QueueURL != nil {
		in, out := &in.QueueURL, &out.QueueURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvidedSqsInitParameters.
func (in *ProvidedSqsInitParameters) DeepCopy() *ProvidedSqsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProvidedSqsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvidedSqsObservation) DeepCopyInto(out *ProvidedSqsObservation) {
	*out = *in
	if in.ManagedResourceID != nil {
		in, out := &in.ManagedResourceID, &out.ManagedResourceID
		*out = new(string)
		**out = **in
	}
	if in.QueueURL != nil {
		in, out := &in.QueueURL, &out.QueueURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvidedSqsObservation.
func (in *ProvidedSqsObservation) DeepCopy() *ProvidedSqsObservation {
	if in == nil {
		return nil
	}
	out := new(ProvidedSqsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvidedSqsParameters) DeepCopyInto(out *ProvidedSqsParameters) {
	*out = *in
	if in.QueueURL != nil {
		in, out := &in.QueueURL, &out.QueueURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvidedSqsParameters.
func (in *ProvidedSqsParameters) DeepCopy() *ProvidedSqsParameters {
	if in == nil {
		return nil
	}
	out := new(ProvidedSqsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningInfoInitParameters) DeepCopyInto(out *ProvisioningInfoInitParameters) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningInfoInitParameters.
func (in *ProvisioningInfoInitParameters) DeepCopy() *ProvisioningInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProvisioningInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningInfoObservation) DeepCopyInto(out *ProvisioningInfoObservation) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningInfoObservation.
func (in *ProvisioningInfoObservation) DeepCopy() *ProvisioningInfoObservation {
	if in == nil {
		return nil
	}
	out := new(ProvisioningInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningInfoParameters) DeepCopyInto(out *ProvisioningInfoParameters) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningInfoParameters.
func (in *ProvisioningInfoParameters) DeepCopy() *ProvisioningInfoParameters {
	if in == nil {
		return nil
	}
	out := new(ProvisioningInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningStatusInitParameters) DeepCopyInto(out *ProvisioningStatusInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningStatusInitParameters.
func (in *ProvisioningStatusInitParameters) DeepCopy() *ProvisioningStatusInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProvisioningStatusInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningStatusInitialPipelineSyncProgressInitParameters) DeepCopyInto(out *ProvisioningStatusInitialPipelineSyncProgressInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningStatusInitialPipelineSyncProgressInitParameters.
func (in *ProvisioningStatusInitialPipelineSyncProgressInitParameters) DeepCopy() *ProvisioningStatusInitialPipelineSyncProgressInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProvisioningStatusInitialPipelineSyncProgressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningStatusInitialPipelineSyncProgressObservation) DeepCopyInto(out *ProvisioningStatusInitialPipelineSyncProgressObservation) {
	*out = *in
	if in.EstimatedCompletionTimeSeconds != nil {
		in, out := &in.EstimatedCompletionTimeSeconds, &out.EstimatedCompletionTimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.LatestVersionCurrentlyProcessing != nil {
		in, out := &in.LatestVersionCurrentlyProcessing, &out.LatestVersionCurrentlyProcessing
		*out = new(float64)
		**out = **in
	}
	if in.SyncProgressCompletion != nil {
		in, out := &in.SyncProgressCompletion, &out.SyncProgressCompletion
		*out = new(float64)
		**out = **in
	}
	if in.SyncedRowCount != nil {
		in, out := &in.SyncedRowCount, &out.SyncedRowCount
		*out = new(float64)
		**out = **in
	}
	if in.TotalRowCount != nil {
		in, out := &in.TotalRowCount, &out.TotalRowCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningStatusInitialPipelineSyncProgressObservation.
func (in *ProvisioningStatusInitialPipelineSyncProgressObservation) DeepCopy() *ProvisioningStatusInitialPipelineSyncProgressObservation {
	if in == nil {
		return nil
	}
	out := new(ProvisioningStatusInitialPipelineSyncProgressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningStatusInitialPipelineSyncProgressParameters) DeepCopyInto(out *ProvisioningStatusInitialPipelineSyncProgressParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningStatusInitialPipelineSyncProgressParameters.
func (in *ProvisioningStatusInitialPipelineSyncProgressParameters) DeepCopy() *ProvisioningStatusInitialPipelineSyncProgressParameters {
	if in == nil {
		return nil
	}
	out := new(ProvisioningStatusInitialPipelineSyncProgressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningStatusObservation) DeepCopyInto(out *ProvisioningStatusObservation) {
	*out = *in
	if in.InitialPipelineSyncProgress != nil {
		in, out := &in.InitialPipelineSyncProgress, &out.InitialPipelineSyncProgress
		*out = make([]ProvisioningStatusInitialPipelineSyncProgressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningStatusObservation.
func (in *ProvisioningStatusObservation) DeepCopy() *ProvisioningStatusObservation {
	if in == nil {
		return nil
	}
	out := new(ProvisioningStatusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningStatusParameters) DeepCopyInto(out *ProvisioningStatusParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningStatusParameters.
func (in *ProvisioningStatusParameters) DeepCopy() *ProvisioningStatusParameters {
	if in == nil {
		return nil
	}
	out := new(ProvisioningStatusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitor) DeepCopyInto(out *QualityMonitor) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitor.
func (in *QualityMonitor) DeepCopy() *QualityMonitor {
	if in == nil {
		return nil
	}
	out := new(QualityMonitor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *QualityMonitor) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorCustomMetricsInitParameters) DeepCopyInto(out *QualityMonitorCustomMetricsInitParameters) {
	*out = *in
	if in.Definition != nil {
		in, out := &in.Definition, &out.Definition
		*out = new(string)
		**out = **in
	}
	if in.InputColumns != nil {
		in, out := &in.InputColumns, &out.InputColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OutputDataType != nil {
		in, out := &in.OutputDataType, &out.OutputDataType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorCustomMetricsInitParameters.
func (in *QualityMonitorCustomMetricsInitParameters) DeepCopy() *QualityMonitorCustomMetricsInitParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorCustomMetricsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorCustomMetricsObservation) DeepCopyInto(out *QualityMonitorCustomMetricsObservation) {
	*out = *in
	if in.Definition != nil {
		in, out := &in.Definition, &out.Definition
		*out = new(string)
		**out = **in
	}
	if in.InputColumns != nil {
		in, out := &in.InputColumns, &out.InputColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OutputDataType != nil {
		in, out := &in.OutputDataType, &out.OutputDataType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorCustomMetricsObservation.
func (in *QualityMonitorCustomMetricsObservation) DeepCopy() *QualityMonitorCustomMetricsObservation {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorCustomMetricsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorCustomMetricsParameters) DeepCopyInto(out *QualityMonitorCustomMetricsParameters) {
	*out = *in
	if in.Definition != nil {
		in, out := &in.Definition, &out.Definition
		*out = new(string)
		**out = **in
	}
	if in.InputColumns != nil {
		in, out := &in.InputColumns, &out.InputColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OutputDataType != nil {
		in, out := &in.OutputDataType, &out.OutputDataType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorCustomMetricsParameters.
func (in *QualityMonitorCustomMetricsParameters) DeepCopy() *QualityMonitorCustomMetricsParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorCustomMetricsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorDataClassificationConfigInitParameters) DeepCopyInto(out *QualityMonitorDataClassificationConfigInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorDataClassificationConfigInitParameters.
func (in *QualityMonitorDataClassificationConfigInitParameters) DeepCopy() *QualityMonitorDataClassificationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorDataClassificationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorDataClassificationConfigObservation) DeepCopyInto(out *QualityMonitorDataClassificationConfigObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorDataClassificationConfigObservation.
func (in *QualityMonitorDataClassificationConfigObservation) DeepCopy() *QualityMonitorDataClassificationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorDataClassificationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorDataClassificationConfigParameters) DeepCopyInto(out *QualityMonitorDataClassificationConfigParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorDataClassificationConfigParameters.
func (in *QualityMonitorDataClassificationConfigParameters) DeepCopy() *QualityMonitorDataClassificationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorDataClassificationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorInferenceLogInitParameters) DeepCopyInto(out *QualityMonitorInferenceLogInitParameters) {
	*out = *in
	if in.Granularities != nil {
		in, out := &in.Granularities, &out.Granularities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LabelCol != nil {
		in, out := &in.LabelCol, &out.LabelCol
		*out = new(string)
		**out = **in
	}
	if in.ModelIDCol != nil {
		in, out := &in.ModelIDCol, &out.ModelIDCol
		*out = new(string)
		**out = **in
	}
	if in.PredictionCol != nil {
		in, out := &in.PredictionCol, &out.PredictionCol
		*out = new(string)
		**out = **in
	}
	if in.PredictionProbaCol != nil {
		in, out := &in.PredictionProbaCol, &out.PredictionProbaCol
		*out = new(string)
		**out = **in
	}
	if in.ProblemType != nil {
		in, out := &in.ProblemType, &out.ProblemType
		*out = new(string)
		**out = **in
	}
	if in.TimestampCol != nil {
		in, out := &in.TimestampCol, &out.TimestampCol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorInferenceLogInitParameters.
func (in *QualityMonitorInferenceLogInitParameters) DeepCopy() *QualityMonitorInferenceLogInitParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorInferenceLogInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorInferenceLogObservation) DeepCopyInto(out *QualityMonitorInferenceLogObservation) {
	*out = *in
	if in.Granularities != nil {
		in, out := &in.Granularities, &out.Granularities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LabelCol != nil {
		in, out := &in.LabelCol, &out.LabelCol
		*out = new(string)
		**out = **in
	}
	if in.ModelIDCol != nil {
		in, out := &in.ModelIDCol, &out.ModelIDCol
		*out = new(string)
		**out = **in
	}
	if in.PredictionCol != nil {
		in, out := &in.PredictionCol, &out.PredictionCol
		*out = new(string)
		**out = **in
	}
	if in.PredictionProbaCol != nil {
		in, out := &in.PredictionProbaCol, &out.PredictionProbaCol
		*out = new(string)
		**out = **in
	}
	if in.ProblemType != nil {
		in, out := &in.ProblemType, &out.ProblemType
		*out = new(string)
		**out = **in
	}
	if in.TimestampCol != nil {
		in, out := &in.TimestampCol, &out.TimestampCol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorInferenceLogObservation.
func (in *QualityMonitorInferenceLogObservation) DeepCopy() *QualityMonitorInferenceLogObservation {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorInferenceLogObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorInferenceLogParameters) DeepCopyInto(out *QualityMonitorInferenceLogParameters) {
	*out = *in
	if in.Granularities != nil {
		in, out := &in.Granularities, &out.Granularities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LabelCol != nil {
		in, out := &in.LabelCol, &out.LabelCol
		*out = new(string)
		**out = **in
	}
	if in.ModelIDCol != nil {
		in, out := &in.ModelIDCol, &out.ModelIDCol
		*out = new(string)
		**out = **in
	}
	if in.PredictionCol != nil {
		in, out := &in.PredictionCol, &out.PredictionCol
		*out = new(string)
		**out = **in
	}
	if in.PredictionProbaCol != nil {
		in, out := &in.PredictionProbaCol, &out.PredictionProbaCol
		*out = new(string)
		**out = **in
	}
	if in.ProblemType != nil {
		in, out := &in.ProblemType, &out.ProblemType
		*out = new(string)
		**out = **in
	}
	if in.TimestampCol != nil {
		in, out := &in.TimestampCol, &out.TimestampCol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorInferenceLogParameters.
func (in *QualityMonitorInferenceLogParameters) DeepCopy() *QualityMonitorInferenceLogParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorInferenceLogParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorInitParameters) DeepCopyInto(out *QualityMonitorInitParameters) {
	*out = *in
	if in.AssetsDir != nil {
		in, out := &in.AssetsDir, &out.AssetsDir
		*out = new(string)
		**out = **in
	}
	if in.BaselineTableName != nil {
		in, out := &in.BaselineTableName, &out.BaselineTableName
		*out = new(string)
		**out = **in
	}
	if in.CustomMetrics != nil {
		in, out := &in.CustomMetrics, &out.CustomMetrics
		*out = make([]QualityMonitorCustomMetricsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataClassificationConfig != nil {
		in, out := &in.DataClassificationConfig, &out.DataClassificationConfig
		*out = make([]QualityMonitorDataClassificationConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InferenceLog != nil {
		in, out := &in.InferenceLog, &out.InferenceLog
		*out = make([]QualityMonitorInferenceLogInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LatestMonitorFailureMsg != nil {
		in, out := &in.LatestMonitorFailureMsg, &out.LatestMonitorFailureMsg
		*out = new(string)
		**out = **in
	}
	if in.Notifications != nil {
		in, out := &in.Notifications, &out.Notifications
		*out = make([]QualityMonitorNotificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutputSchemaName != nil {
		in, out := &in.OutputSchemaName, &out.OutputSchemaName
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]QualityMonitorScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipBuiltinDashboard != nil {
		in, out := &in.SkipBuiltinDashboard, &out.SkipBuiltinDashboard
		*out = new(bool)
		**out = **in
	}
	if in.SlicingExprs != nil {
		in, out := &in.SlicingExprs, &out.SlicingExprs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Snapshot != nil {
		in, out := &in.Snapshot, &out.Snapshot
		*out = make([]QualityMonitorSnapshotInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.TimeSeries != nil {
		in, out := &in.TimeSeries, &out.TimeSeries
		*out = make([]QualityMonitorTimeSeriesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorInitParameters.
func (in *QualityMonitorInitParameters) DeepCopy() *QualityMonitorInitParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorList) DeepCopyInto(out *QualityMonitorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]QualityMonitor, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorList.
func (in *QualityMonitorList) DeepCopy() *QualityMonitorList {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *QualityMonitorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorNotificationsInitParameters) DeepCopyInto(out *QualityMonitorNotificationsInitParameters) {
	*out = *in
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]NotificationsOnFailureInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnNewClassificationTagDetected != nil {
		in, out := &in.OnNewClassificationTagDetected, &out.OnNewClassificationTagDetected
		*out = make([]NotificationsOnNewClassificationTagDetectedInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorNotificationsInitParameters.
func (in *QualityMonitorNotificationsInitParameters) DeepCopy() *QualityMonitorNotificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorNotificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorNotificationsObservation) DeepCopyInto(out *QualityMonitorNotificationsObservation) {
	*out = *in
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]NotificationsOnFailureObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnNewClassificationTagDetected != nil {
		in, out := &in.OnNewClassificationTagDetected, &out.OnNewClassificationTagDetected
		*out = make([]NotificationsOnNewClassificationTagDetectedObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorNotificationsObservation.
func (in *QualityMonitorNotificationsObservation) DeepCopy() *QualityMonitorNotificationsObservation {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorNotificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorNotificationsParameters) DeepCopyInto(out *QualityMonitorNotificationsParameters) {
	*out = *in
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]NotificationsOnFailureParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnNewClassificationTagDetected != nil {
		in, out := &in.OnNewClassificationTagDetected, &out.OnNewClassificationTagDetected
		*out = make([]NotificationsOnNewClassificationTagDetectedParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorNotificationsParameters.
func (in *QualityMonitorNotificationsParameters) DeepCopy() *QualityMonitorNotificationsParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorNotificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorObservation) DeepCopyInto(out *QualityMonitorObservation) {
	*out = *in
	if in.AssetsDir != nil {
		in, out := &in.AssetsDir, &out.AssetsDir
		*out = new(string)
		**out = **in
	}
	if in.BaselineTableName != nil {
		in, out := &in.BaselineTableName, &out.BaselineTableName
		*out = new(string)
		**out = **in
	}
	if in.CustomMetrics != nil {
		in, out := &in.CustomMetrics, &out.CustomMetrics
		*out = make([]QualityMonitorCustomMetricsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(string)
		**out = **in
	}
	if in.DataClassificationConfig != nil {
		in, out := &in.DataClassificationConfig, &out.DataClassificationConfig
		*out = make([]QualityMonitorDataClassificationConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriftMetricsTableName != nil {
		in, out := &in.DriftMetricsTableName, &out.DriftMetricsTableName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InferenceLog != nil {
		in, out := &in.InferenceLog, &out.InferenceLog
		*out = make([]QualityMonitorInferenceLogObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LatestMonitorFailureMsg != nil {
		in, out := &in.LatestMonitorFailureMsg, &out.LatestMonitorFailureMsg
		*out = new(string)
		**out = **in
	}
	if in.MonitorVersion != nil {
		in, out := &in.MonitorVersion, &out.MonitorVersion
		*out = new(float64)
		**out = **in
	}
	if in.Notifications != nil {
		in, out := &in.Notifications, &out.Notifications
		*out = make([]QualityMonitorNotificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutputSchemaName != nil {
		in, out := &in.OutputSchemaName, &out.OutputSchemaName
		*out = new(string)
		**out = **in
	}
	if in.ProfileMetricsTableName != nil {
		in, out := &in.ProfileMetricsTableName, &out.ProfileMetricsTableName
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]QualityMonitorScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipBuiltinDashboard != nil {
		in, out := &in.SkipBuiltinDashboard, &out.SkipBuiltinDashboard
		*out = new(bool)
		**out = **in
	}
	if in.SlicingExprs != nil {
		in, out := &in.SlicingExprs, &out.SlicingExprs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Snapshot != nil {
		in, out := &in.Snapshot, &out.Snapshot
		*out = make([]QualityMonitorSnapshotParameters, len(*in))
		copy(*out, *in)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.TimeSeries != nil {
		in, out := &in.TimeSeries, &out.TimeSeries
		*out = make([]QualityMonitorTimeSeriesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorObservation.
func (in *QualityMonitorObservation) DeepCopy() *QualityMonitorObservation {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorParameters) DeepCopyInto(out *QualityMonitorParameters) {
	*out = *in
	if in.AssetsDir != nil {
		in, out := &in.AssetsDir, &out.AssetsDir
		*out = new(string)
		**out = **in
	}
	if in.BaselineTableName != nil {
		in, out := &in.BaselineTableName, &out.BaselineTableName
		*out = new(string)
		**out = **in
	}
	if in.CustomMetrics != nil {
		in, out := &in.CustomMetrics, &out.CustomMetrics
		*out = make([]QualityMonitorCustomMetricsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataClassificationConfig != nil {
		in, out := &in.DataClassificationConfig, &out.DataClassificationConfig
		*out = make([]QualityMonitorDataClassificationConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InferenceLog != nil {
		in, out := &in.InferenceLog, &out.InferenceLog
		*out = make([]QualityMonitorInferenceLogParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LatestMonitorFailureMsg != nil {
		in, out := &in.LatestMonitorFailureMsg, &out.LatestMonitorFailureMsg
		*out = new(string)
		**out = **in
	}
	if in.Notifications != nil {
		in, out := &in.Notifications, &out.Notifications
		*out = make([]QualityMonitorNotificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutputSchemaName != nil {
		in, out := &in.OutputSchemaName, &out.OutputSchemaName
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]QualityMonitorScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipBuiltinDashboard != nil {
		in, out := &in.SkipBuiltinDashboard, &out.SkipBuiltinDashboard
		*out = new(bool)
		**out = **in
	}
	if in.SlicingExprs != nil {
		in, out := &in.SlicingExprs, &out.SlicingExprs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Snapshot != nil {
		in, out := &in.Snapshot, &out.Snapshot
		*out = make([]QualityMonitorSnapshotParameters, len(*in))
		copy(*out, *in)
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.TimeSeries != nil {
		in, out := &in.TimeSeries, &out.TimeSeries
		*out = make([]QualityMonitorTimeSeriesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorParameters.
func (in *QualityMonitorParameters) DeepCopy() *QualityMonitorParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorScheduleInitParameters) DeepCopyInto(out *QualityMonitorScheduleInitParameters) {
	*out = *in
	if in.QuartzCronExpression != nil {
		in, out := &in.QuartzCronExpression, &out.QuartzCronExpression
		*out = new(string)
		**out = **in
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorScheduleInitParameters.
func (in *QualityMonitorScheduleInitParameters) DeepCopy() *QualityMonitorScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorScheduleObservation) DeepCopyInto(out *QualityMonitorScheduleObservation) {
	*out = *in
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
	if in.QuartzCronExpression != nil {
		in, out := &in.QuartzCronExpression, &out.QuartzCronExpression
		*out = new(string)
		**out = **in
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorScheduleObservation.
func (in *QualityMonitorScheduleObservation) DeepCopy() *QualityMonitorScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorScheduleParameters) DeepCopyInto(out *QualityMonitorScheduleParameters) {
	*out = *in
	if in.QuartzCronExpression != nil {
		in, out := &in.QuartzCronExpression, &out.QuartzCronExpression
		*out = new(string)
		**out = **in
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorScheduleParameters.
func (in *QualityMonitorScheduleParameters) DeepCopy() *QualityMonitorScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorSnapshotInitParameters) DeepCopyInto(out *QualityMonitorSnapshotInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorSnapshotInitParameters.
func (in *QualityMonitorSnapshotInitParameters) DeepCopy() *QualityMonitorSnapshotInitParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorSnapshotInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorSnapshotObservation) DeepCopyInto(out *QualityMonitorSnapshotObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorSnapshotObservation.
func (in *QualityMonitorSnapshotObservation) DeepCopy() *QualityMonitorSnapshotObservation {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorSnapshotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorSnapshotParameters) DeepCopyInto(out *QualityMonitorSnapshotParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorSnapshotParameters.
func (in *QualityMonitorSnapshotParameters) DeepCopy() *QualityMonitorSnapshotParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorSnapshotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorSpec) DeepCopyInto(out *QualityMonitorSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorSpec.
func (in *QualityMonitorSpec) DeepCopy() *QualityMonitorSpec {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorStatus) DeepCopyInto(out *QualityMonitorStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorStatus.
func (in *QualityMonitorStatus) DeepCopy() *QualityMonitorStatus {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorTimeSeriesInitParameters) DeepCopyInto(out *QualityMonitorTimeSeriesInitParameters) {
	*out = *in
	if in.Granularities != nil {
		in, out := &in.Granularities, &out.Granularities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TimestampCol != nil {
		in, out := &in.TimestampCol, &out.TimestampCol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorTimeSeriesInitParameters.
func (in *QualityMonitorTimeSeriesInitParameters) DeepCopy() *QualityMonitorTimeSeriesInitParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorTimeSeriesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorTimeSeriesObservation) DeepCopyInto(out *QualityMonitorTimeSeriesObservation) {
	*out = *in
	if in.Granularities != nil {
		in, out := &in.Granularities, &out.Granularities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TimestampCol != nil {
		in, out := &in.TimestampCol, &out.TimestampCol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorTimeSeriesObservation.
func (in *QualityMonitorTimeSeriesObservation) DeepCopy() *QualityMonitorTimeSeriesObservation {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorTimeSeriesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QualityMonitorTimeSeriesParameters) DeepCopyInto(out *QualityMonitorTimeSeriesParameters) {
	*out = *in
	if in.Granularities != nil {
		in, out := &in.Granularities, &out.Granularities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TimestampCol != nil {
		in, out := &in.TimestampCol, &out.TimestampCol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QualityMonitorTimeSeriesParameters.
func (in *QualityMonitorTimeSeriesParameters) DeepCopy() *QualityMonitorTimeSeriesParameters {
	if in == nil {
		return nil
	}
	out := new(QualityMonitorTimeSeriesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegisteredModel) DeepCopyInto(out *RegisteredModel) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegisteredModel.
func (in *RegisteredModel) DeepCopy() *RegisteredModel {
	if in == nil {
		return nil
	}
	out := new(RegisteredModel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegisteredModel) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegisteredModelInitParameters) DeepCopyInto(out *RegisteredModelInitParameters) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegisteredModelInitParameters.
func (in *RegisteredModelInitParameters) DeepCopy() *RegisteredModelInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegisteredModelInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegisteredModelList) DeepCopyInto(out *RegisteredModelList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegisteredModel, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegisteredModelList.
func (in *RegisteredModelList) DeepCopy() *RegisteredModelList {
	if in == nil {
		return nil
	}
	out := new(RegisteredModelList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegisteredModelList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegisteredModelObservation) DeepCopyInto(out *RegisteredModelObservation) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegisteredModelObservation.
func (in *RegisteredModelObservation) DeepCopy() *RegisteredModelObservation {
	if in == nil {
		return nil
	}
	out := new(RegisteredModelObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegisteredModelParameters) DeepCopyInto(out *RegisteredModelParameters) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegisteredModelParameters.
func (in *RegisteredModelParameters) DeepCopy() *RegisteredModelParameters {
	if in == nil {
		return nil
	}
	out := new(RegisteredModelParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegisteredModelSpec) DeepCopyInto(out *RegisteredModelSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegisteredModelSpec.
func (in *RegisteredModelSpec) DeepCopy() *RegisteredModelSpec {
	if in == nil {
		return nil
	}
	out := new(RegisteredModelSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegisteredModelStatus) DeepCopyInto(out *RegisteredModelStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegisteredModelStatus.
func (in *RegisteredModelStatus) DeepCopy() *RegisteredModelStatus {
	if in == nil {
		return nil
	}
	out := new(RegisteredModelStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunContinuouslyInitParameters) DeepCopyInto(out *RunContinuouslyInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunContinuouslyInitParameters.
func (in *RunContinuouslyInitParameters) DeepCopy() *RunContinuouslyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RunContinuouslyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunContinuouslyObservation) DeepCopyInto(out *RunContinuouslyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunContinuouslyObservation.
func (in *RunContinuouslyObservation) DeepCopy() *RunContinuouslyObservation {
	if in == nil {
		return nil
	}
	out := new(RunContinuouslyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunContinuouslyParameters) DeepCopyInto(out *RunContinuouslyParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunContinuouslyParameters.
func (in *RunContinuouslyParameters) DeepCopy() *RunContinuouslyParameters {
	if in == nil {
		return nil
	}
	out := new(RunContinuouslyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunTriggeredInitParameters) DeepCopyInto(out *RunTriggeredInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunTriggeredInitParameters.
func (in *RunTriggeredInitParameters) DeepCopy() *RunTriggeredInitParameters {
	if in == nil {
		return nil
	}
	out := new(RunTriggeredInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunTriggeredObservation) DeepCopyInto(out *RunTriggeredObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunTriggeredObservation.
func (in *RunTriggeredObservation) DeepCopy() *RunTriggeredObservation {
	if in == nil {
		return nil
	}
	out := new(RunTriggeredObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunTriggeredParameters) DeepCopyInto(out *RunTriggeredParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunTriggeredParameters.
func (in *RunTriggeredParameters) DeepCopy() *RunTriggeredParameters {
	if in == nil {
		return nil
	}
	out := new(RunTriggeredParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTable) DeepCopyInto(out *SQLTable) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTable.
func (in *SQLTable) DeepCopy() *SQLTable {
	if in == nil {
		return nil
	}
	out := new(SQLTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLTable) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTableInitParameters) DeepCopyInto(out *SQLTableInitParameters) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.CatalogNameRef != nil {
		in, out := &in.CatalogNameRef, &out.CatalogNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CatalogNameSelector != nil {
		in, out := &in.CatalogNameSelector, &out.CatalogNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterKeys != nil {
		in, out := &in.ClusterKeys, &out.ClusterKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = make([]ColumnInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DataSourceFormat != nil {
		in, out := &in.DataSourceFormat, &out.DataSourceFormat
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Partitions != nil {
		in, out := &in.Partitions, &out.Partitions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.SchemaNameRef != nil {
		in, out := &in.SchemaNameRef, &out.SchemaNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SchemaNameSelector != nil {
		in, out := &in.SchemaNameSelector, &out.SchemaNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageCredentialName != nil {
		in, out := &in.StorageCredentialName, &out.StorageCredentialName
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
	if in.TableType != nil {
		in, out := &in.TableType, &out.TableType
		*out = new(string)
		**out = **in
	}
	if in.ViewDefinition != nil {
		in, out := &in.ViewDefinition, &out.ViewDefinition
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
	if in.WarehouseIDRef != nil {
		in, out := &in.WarehouseIDRef, &out.WarehouseIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.WarehouseIDSelector != nil {
		in, out := &in.WarehouseIDSelector, &out.WarehouseIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTableInitParameters.
func (in *SQLTableInitParameters) DeepCopy() *SQLTableInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTableList) DeepCopyInto(out *SQLTableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SQLTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTableList.
func (in *SQLTableList) DeepCopy() *SQLTableList {
	if in == nil {
		return nil
	}
	out := new(SQLTableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLTableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTableObservation) DeepCopyInto(out *SQLTableObservation) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterKeys != nil {
		in, out := &in.ClusterKeys, &out.ClusterKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = make([]ColumnObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DataSourceFormat != nil {
		in, out := &in.DataSourceFormat, &out.DataSourceFormat
		*out = new(string)
		**out = **in
	}
	if in.EffectiveProperties != nil {
		in, out := &in.EffectiveProperties, &out.EffectiveProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Partitions != nil {
		in, out := &in.Partitions, &out.Partitions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.StorageCredentialName != nil {
		in, out := &in.StorageCredentialName, &out.StorageCredentialName
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
	if in.TableType != nil {
		in, out := &in.TableType, &out.TableType
		*out = new(string)
		**out = **in
	}
	if in.ViewDefinition != nil {
		in, out := &in.ViewDefinition, &out.ViewDefinition
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTableObservation.
func (in *SQLTableObservation) DeepCopy() *SQLTableObservation {
	if in == nil {
		return nil
	}
	out := new(SQLTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTableParameters) DeepCopyInto(out *SQLTableParameters) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.CatalogNameRef != nil {
		in, out := &in.CatalogNameRef, &out.CatalogNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CatalogNameSelector != nil {
		in, out := &in.CatalogNameSelector, &out.CatalogNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterKeys != nil {
		in, out := &in.ClusterKeys, &out.ClusterKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = make([]ColumnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DataSourceFormat != nil {
		in, out := &in.DataSourceFormat, &out.DataSourceFormat
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Partitions != nil {
		in, out := &in.Partitions, &out.Partitions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.SchemaNameRef != nil {
		in, out := &in.SchemaNameRef, &out.SchemaNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SchemaNameSelector != nil {
		in, out := &in.SchemaNameSelector, &out.SchemaNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageCredentialName != nil {
		in, out := &in.StorageCredentialName, &out.StorageCredentialName
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
	if in.TableType != nil {
		in, out := &in.TableType, &out.TableType
		*out = new(string)
		**out = **in
	}
	if in.ViewDefinition != nil {
		in, out := &in.ViewDefinition, &out.ViewDefinition
		*out = new(string)
		**out = **in
	}
	if in.WarehouseID != nil {
		in, out := &in.WarehouseID, &out.WarehouseID
		*out = new(string)
		**out = **in
	}
	if in.WarehouseIDRef != nil {
		in, out := &in.WarehouseIDRef, &out.WarehouseIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.WarehouseIDSelector != nil {
		in, out := &in.WarehouseIDSelector, &out.WarehouseIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTableParameters.
func (in *SQLTableParameters) DeepCopy() *SQLTableParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTableSpec) DeepCopyInto(out *SQLTableSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTableSpec.
func (in *SQLTableSpec) DeepCopy() *SQLTableSpec {
	if in == nil {
		return nil
	}
	out := new(SQLTableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTableStatus) DeepCopyInto(out *SQLTableStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTableStatus.
func (in *SQLTableStatus) DeepCopy() *SQLTableStatus {
	if in == nil {
		return nil
	}
	out := new(SQLTableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleInitParameters) DeepCopyInto(out *ScheduleInitParameters) {
	*out = *in
	if in.QuartzCronExpression != nil {
		in, out := &in.QuartzCronExpression, &out.QuartzCronExpression
		*out = new(string)
		**out = **in
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleInitParameters.
func (in *ScheduleInitParameters) DeepCopy() *ScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleObservation) DeepCopyInto(out *ScheduleObservation) {
	*out = *in
	if in.PauseStatus != nil {
		in, out := &in.PauseStatus, &out.PauseStatus
		*out = new(string)
		**out = **in
	}
	if in.QuartzCronExpression != nil {
		in, out := &in.QuartzCronExpression, &out.QuartzCronExpression
		*out = new(string)
		**out = **in
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleObservation.
func (in *ScheduleObservation) DeepCopy() *ScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleParameters) DeepCopyInto(out *ScheduleParameters) {
	*out = *in
	if in.QuartzCronExpression != nil {
		in, out := &in.QuartzCronExpression, &out.QuartzCronExpression
		*out = new(string)
		**out = **in
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleParameters.
func (in *ScheduleParameters) DeepCopy() *ScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Schema) DeepCopyInto(out *Schema) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Schema.
func (in *Schema) DeepCopy() *Schema {
	if in == nil {
		return nil
	}
	out := new(Schema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Schema) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaInitParameters) DeepCopyInto(out *SchemaInitParameters) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.CatalogNameRef != nil {
		in, out := &in.CatalogNameRef, &out.CatalogNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CatalogNameSelector != nil {
		in, out := &in.CatalogNameSelector, &out.CatalogNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.EnablePredictiveOptimization != nil {
		in, out := &in.EnablePredictiveOptimization, &out.EnablePredictiveOptimization
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaInitParameters.
func (in *SchemaInitParameters) DeepCopy() *SchemaInitParameters {
	if in == nil {
		return nil
	}
	out := new(SchemaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaList) DeepCopyInto(out *SchemaList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Schema, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaList.
func (in *SchemaList) DeepCopy() *SchemaList {
	if in == nil {
		return nil
	}
	out := new(SchemaList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SchemaList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaObservation) DeepCopyInto(out *SchemaObservation) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.EnablePredictiveOptimization != nil {
		in, out := &in.EnablePredictiveOptimization, &out.EnablePredictiveOptimization
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SchemaID != nil {
		in, out := &in.SchemaID, &out.SchemaID
		*out = new(string)
		**out = **in
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaObservation.
func (in *SchemaObservation) DeepCopy() *SchemaObservation {
	if in == nil {
		return nil
	}
	out := new(SchemaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaParameters) DeepCopyInto(out *SchemaParameters) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.CatalogNameRef != nil {
		in, out := &in.CatalogNameRef, &out.CatalogNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CatalogNameSelector != nil {
		in, out := &in.CatalogNameSelector, &out.CatalogNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.EnablePredictiveOptimization != nil {
		in, out := &in.EnablePredictiveOptimization, &out.EnablePredictiveOptimization
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.StorageRoot != nil {
		in, out := &in.StorageRoot, &out.StorageRoot
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaParameters.
func (in *SchemaParameters) DeepCopy() *SchemaParameters {
	if in == nil {
		return nil
	}
	out := new(SchemaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaSpec) DeepCopyInto(out *SchemaSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaSpec.
func (in *SchemaSpec) DeepCopy() *SchemaSpec {
	if in == nil {
		return nil
	}
	out := new(SchemaSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaStatus) DeepCopyInto(out *SchemaStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaStatus.
func (in *SchemaStatus) DeepCopy() *SchemaStatus {
	if in == nil {
		return nil
	}
	out := new(SchemaStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotInitParameters) DeepCopyInto(out *SnapshotInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotInitParameters.
func (in *SnapshotInitParameters) DeepCopy() *SnapshotInitParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotObservation) DeepCopyInto(out *SnapshotObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotObservation.
func (in *SnapshotObservation) DeepCopy() *SnapshotObservation {
	if in == nil {
		return nil
	}
	out := new(SnapshotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotParameters) DeepCopyInto(out *SnapshotParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotParameters.
func (in *SnapshotParameters) DeepCopy() *SnapshotParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecInitParameters) DeepCopyInto(out *SpecInitParameters) {
	*out = *in
	if in.PerformFullCopy != nil {
		in, out := &in.PerformFullCopy, &out.PerformFullCopy
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryKeyColumns != nil {
		in, out := &in.PrimaryKeyColumns, &out.PrimaryKeyColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RunContinuously != nil {
		in, out := &in.RunContinuously, &out.RunContinuously
		*out = make([]RunContinuouslyInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.RunTriggered != nil {
		in, out := &in.RunTriggered, &out.RunTriggered
		*out = make([]RunTriggeredInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.SourceTableFullName != nil {
		in, out := &in.SourceTableFullName, &out.SourceTableFullName
		*out = new(string)
		**out = **in
	}
	if in.TimeseriesKey != nil {
		in, out := &in.TimeseriesKey, &out.TimeseriesKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecInitParameters.
func (in *SpecInitParameters) DeepCopy() *SpecInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpecInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecObservation) DeepCopyInto(out *SpecObservation) {
	*out = *in
	if in.PerformFullCopy != nil {
		in, out := &in.PerformFullCopy, &out.PerformFullCopy
		*out = new(bool)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
	if in.PrimaryKeyColumns != nil {
		in, out := &in.PrimaryKeyColumns, &out.PrimaryKeyColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RunContinuously != nil {
		in, out := &in.RunContinuously, &out.RunContinuously
		*out = make([]RunContinuouslyParameters, len(*in))
		copy(*out, *in)
	}
	if in.RunTriggered != nil {
		in, out := &in.RunTriggered, &out.RunTriggered
		*out = make([]RunTriggeredParameters, len(*in))
		copy(*out, *in)
	}
	if in.SourceTableFullName != nil {
		in, out := &in.SourceTableFullName, &out.SourceTableFullName
		*out = new(string)
		**out = **in
	}
	if in.TimeseriesKey != nil {
		in, out := &in.TimeseriesKey, &out.TimeseriesKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecObservation.
func (in *SpecObservation) DeepCopy() *SpecObservation {
	if in == nil {
		return nil
	}
	out := new(SpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecParameters) DeepCopyInto(out *SpecParameters) {
	*out = *in
	if in.PerformFullCopy != nil {
		in, out := &in.PerformFullCopy, &out.PerformFullCopy
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryKeyColumns != nil {
		in, out := &in.PrimaryKeyColumns, &out.PrimaryKeyColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RunContinuously != nil {
		in, out := &in.RunContinuously, &out.RunContinuously
		*out = make([]RunContinuouslyParameters, len(*in))
		copy(*out, *in)
	}
	if in.RunTriggered != nil {
		in, out := &in.RunTriggered, &out.RunTriggered
		*out = make([]RunTriggeredParameters, len(*in))
		copy(*out, *in)
	}
	if in.SourceTableFullName != nil {
		in, out := &in.SourceTableFullName, &out.SourceTableFullName
		*out = new(string)
		**out = **in
	}
	if in.TimeseriesKey != nil {
		in, out := &in.TimeseriesKey, &out.TimeseriesKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecParameters.
func (in *SpecParameters) DeepCopy() *SpecParameters {
	if in == nil {
		return nil
	}
	out := new(SpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SseEncryptionDetailsInitParameters) DeepCopyInto(out *SseEncryptionDetailsInitParameters) {
	*out = *in
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(string)
		**out = **in
	}
	if in.AwsKMSKeyArn != nil {
		in, out := &in.AwsKMSKeyArn, &out.AwsKMSKeyArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SseEncryptionDetailsInitParameters.
func (in *SseEncryptionDetailsInitParameters) DeepCopy() *SseEncryptionDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SseEncryptionDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SseEncryptionDetailsObservation) DeepCopyInto(out *SseEncryptionDetailsObservation) {
	*out = *in
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(string)
		**out = **in
	}
	if in.AwsKMSKeyArn != nil {
		in, out := &in.AwsKMSKeyArn, &out.AwsKMSKeyArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SseEncryptionDetailsObservation.
func (in *SseEncryptionDetailsObservation) DeepCopy() *SseEncryptionDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(SseEncryptionDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SseEncryptionDetailsParameters) DeepCopyInto(out *SseEncryptionDetailsParameters) {
	*out = *in
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(string)
		**out = **in
	}
	if in.AwsKMSKeyArn != nil {
		in, out := &in.AwsKMSKeyArn, &out.AwsKMSKeyArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SseEncryptionDetailsParameters.
func (in *SseEncryptionDetailsParameters) DeepCopy() *SseEncryptionDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(SseEncryptionDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusInitParameters) DeepCopyInto(out *StatusInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusInitParameters.
func (in *StatusInitParameters) DeepCopy() *StatusInitParameters {
	if in == nil {
		return nil
	}
	out := new(StatusInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusObservation) DeepCopyInto(out *StatusObservation) {
	*out = *in
	if in.ContinuousUpdateStatus != nil {
		in, out := &in.ContinuousUpdateStatus, &out.ContinuousUpdateStatus
		*out = make([]ContinuousUpdateStatusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DetailedState != nil {
		in, out := &in.DetailedState, &out.DetailedState
		*out = new(string)
		**out = **in
	}
	if in.FailedStatus != nil {
		in, out := &in.FailedStatus, &out.FailedStatus
		*out = make([]FailedStatusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.ProvisioningStatus != nil {
		in, out := &in.ProvisioningStatus, &out.ProvisioningStatus
		*out = make([]ProvisioningStatusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TriggeredUpdateStatus != nil {
		in, out := &in.TriggeredUpdateStatus, &out.TriggeredUpdateStatus
		*out = make([]TriggeredUpdateStatusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusObservation.
func (in *StatusObservation) DeepCopy() *StatusObservation {
	if in == nil {
		return nil
	}
	out := new(StatusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusParameters) DeepCopyInto(out *StatusParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusParameters.
func (in *StatusParameters) DeepCopy() *StatusParameters {
	if in == nil {
		return nil
	}
	out := new(StatusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredential) DeepCopyInto(out *StorageCredential) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredential.
func (in *StorageCredential) DeepCopy() *StorageCredential {
	if in == nil {
		return nil
	}
	out := new(StorageCredential)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StorageCredential) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialAwsIAMRoleInitParameters) DeepCopyInto(out *StorageCredentialAwsIAMRoleInitParameters) {
	*out = *in
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.UnityCatalogIAMArn != nil {
		in, out := &in.UnityCatalogIAMArn, &out.UnityCatalogIAMArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialAwsIAMRoleInitParameters.
func (in *StorageCredentialAwsIAMRoleInitParameters) DeepCopy() *StorageCredentialAwsIAMRoleInitParameters {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialAwsIAMRoleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialAwsIAMRoleObservation) DeepCopyInto(out *StorageCredentialAwsIAMRoleObservation) {
	*out = *in
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.UnityCatalogIAMArn != nil {
		in, out := &in.UnityCatalogIAMArn, &out.UnityCatalogIAMArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialAwsIAMRoleObservation.
func (in *StorageCredentialAwsIAMRoleObservation) DeepCopy() *StorageCredentialAwsIAMRoleObservation {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialAwsIAMRoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialAwsIAMRoleParameters) DeepCopyInto(out *StorageCredentialAwsIAMRoleParameters) {
	*out = *in
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.UnityCatalogIAMArn != nil {
		in, out := &in.UnityCatalogIAMArn, &out.UnityCatalogIAMArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialAwsIAMRoleParameters.
func (in *StorageCredentialAwsIAMRoleParameters) DeepCopy() *StorageCredentialAwsIAMRoleParameters {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialAwsIAMRoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialAzureManagedIdentityInitParameters) DeepCopyInto(out *StorageCredentialAzureManagedIdentityInitParameters) {
	*out = *in
	if in.AccessConnectorID != nil {
		in, out := &in.AccessConnectorID, &out.AccessConnectorID
		*out = new(string)
		**out = **in
	}
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.ManagedIdentityID != nil {
		in, out := &in.ManagedIdentityID, &out.ManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialAzureManagedIdentityInitParameters.
func (in *StorageCredentialAzureManagedIdentityInitParameters) DeepCopy() *StorageCredentialAzureManagedIdentityInitParameters {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialAzureManagedIdentityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialAzureManagedIdentityObservation) DeepCopyInto(out *StorageCredentialAzureManagedIdentityObservation) {
	*out = *in
	if in.AccessConnectorID != nil {
		in, out := &in.AccessConnectorID, &out.AccessConnectorID
		*out = new(string)
		**out = **in
	}
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.ManagedIdentityID != nil {
		in, out := &in.ManagedIdentityID, &out.ManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialAzureManagedIdentityObservation.
func (in *StorageCredentialAzureManagedIdentityObservation) DeepCopy() *StorageCredentialAzureManagedIdentityObservation {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialAzureManagedIdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialAzureManagedIdentityParameters) DeepCopyInto(out *StorageCredentialAzureManagedIdentityParameters) {
	*out = *in
	if in.AccessConnectorID != nil {
		in, out := &in.AccessConnectorID, &out.AccessConnectorID
		*out = new(string)
		**out = **in
	}
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.ManagedIdentityID != nil {
		in, out := &in.ManagedIdentityID, &out.ManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialAzureManagedIdentityParameters.
func (in *StorageCredentialAzureManagedIdentityParameters) DeepCopy() *StorageCredentialAzureManagedIdentityParameters {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialAzureManagedIdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialAzureServicePrincipalInitParameters) DeepCopyInto(out *StorageCredentialAzureServicePrincipalInitParameters) {
	*out = *in
	if in.ApplicationID != nil {
		in, out := &in.ApplicationID, &out.ApplicationID
		*out = new(string)
		**out = **in
	}
	in.ClientSecretSecretRef.DeepCopyInto(&out.ClientSecretSecretRef)
	if in.DirectoryID != nil {
		in, out := &in.DirectoryID, &out.DirectoryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialAzureServicePrincipalInitParameters.
func (in *StorageCredentialAzureServicePrincipalInitParameters) DeepCopy() *StorageCredentialAzureServicePrincipalInitParameters {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialAzureServicePrincipalInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialAzureServicePrincipalObservation) DeepCopyInto(out *StorageCredentialAzureServicePrincipalObservation) {
	*out = *in
	if in.ApplicationID != nil {
		in, out := &in.ApplicationID, &out.ApplicationID
		*out = new(string)
		**out = **in
	}
	if in.DirectoryID != nil {
		in, out := &in.DirectoryID, &out.DirectoryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialAzureServicePrincipalObservation.
func (in *StorageCredentialAzureServicePrincipalObservation) DeepCopy() *StorageCredentialAzureServicePrincipalObservation {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialAzureServicePrincipalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialAzureServicePrincipalParameters) DeepCopyInto(out *StorageCredentialAzureServicePrincipalParameters) {
	*out = *in
	if in.ApplicationID != nil {
		in, out := &in.ApplicationID, &out.ApplicationID
		*out = new(string)
		**out = **in
	}
	in.ClientSecretSecretRef.DeepCopyInto(&out.ClientSecretSecretRef)
	if in.DirectoryID != nil {
		in, out := &in.DirectoryID, &out.DirectoryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialAzureServicePrincipalParameters.
func (in *StorageCredentialAzureServicePrincipalParameters) DeepCopy() *StorageCredentialAzureServicePrincipalParameters {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialAzureServicePrincipalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialCloudflareAPITokenInitParameters) DeepCopyInto(out *StorageCredentialCloudflareAPITokenInitParameters) {
	*out = *in
	if in.AccessKeyID != nil {
		in, out := &in.AccessKeyID, &out.AccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	in.SecretAccessKeySecretRef.DeepCopyInto(&out.SecretAccessKeySecretRef)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialCloudflareAPITokenInitParameters.
func (in *StorageCredentialCloudflareAPITokenInitParameters) DeepCopy() *StorageCredentialCloudflareAPITokenInitParameters {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialCloudflareAPITokenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialCloudflareAPITokenObservation) DeepCopyInto(out *StorageCredentialCloudflareAPITokenObservation) {
	*out = *in
	if in.AccessKeyID != nil {
		in, out := &in.AccessKeyID, &out.AccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialCloudflareAPITokenObservation.
func (in *StorageCredentialCloudflareAPITokenObservation) DeepCopy() *StorageCredentialCloudflareAPITokenObservation {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialCloudflareAPITokenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialCloudflareAPITokenParameters) DeepCopyInto(out *StorageCredentialCloudflareAPITokenParameters) {
	*out = *in
	if in.AccessKeyID != nil {
		in, out := &in.AccessKeyID, &out.AccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	in.SecretAccessKeySecretRef.DeepCopyInto(&out.SecretAccessKeySecretRef)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialCloudflareAPITokenParameters.
func (in *StorageCredentialCloudflareAPITokenParameters) DeepCopy() *StorageCredentialCloudflareAPITokenParameters {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialCloudflareAPITokenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialDatabricksGCPServiceAccountInitParameters) DeepCopyInto(out *StorageCredentialDatabricksGCPServiceAccountInitParameters) {
	*out = *in
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialDatabricksGCPServiceAccountInitParameters.
func (in *StorageCredentialDatabricksGCPServiceAccountInitParameters) DeepCopy() *StorageCredentialDatabricksGCPServiceAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialDatabricksGCPServiceAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialDatabricksGCPServiceAccountObservation) DeepCopyInto(out *StorageCredentialDatabricksGCPServiceAccountObservation) {
	*out = *in
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialDatabricksGCPServiceAccountObservation.
func (in *StorageCredentialDatabricksGCPServiceAccountObservation) DeepCopy() *StorageCredentialDatabricksGCPServiceAccountObservation {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialDatabricksGCPServiceAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialDatabricksGCPServiceAccountParameters) DeepCopyInto(out *StorageCredentialDatabricksGCPServiceAccountParameters) {
	*out = *in
	if in.CredentialID != nil {
		in, out := &in.CredentialID, &out.CredentialID
		*out = new(string)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialDatabricksGCPServiceAccountParameters.
func (in *StorageCredentialDatabricksGCPServiceAccountParameters) DeepCopy() *StorageCredentialDatabricksGCPServiceAccountParameters {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialDatabricksGCPServiceAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialGCPServiceAccountKeyInitParameters) DeepCopyInto(out *StorageCredentialGCPServiceAccountKeyInitParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.PrivateKeyID != nil {
		in, out := &in.PrivateKeyID, &out.PrivateKeyID
		*out = new(string)
		**out = **in
	}
	in.PrivateKeySecretRef.DeepCopyInto(&out.PrivateKeySecretRef)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialGCPServiceAccountKeyInitParameters.
func (in *StorageCredentialGCPServiceAccountKeyInitParameters) DeepCopy() *StorageCredentialGCPServiceAccountKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialGCPServiceAccountKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialGCPServiceAccountKeyObservation) DeepCopyInto(out *StorageCredentialGCPServiceAccountKeyObservation) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.PrivateKeyID != nil {
		in, out := &in.PrivateKeyID, &out.PrivateKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialGCPServiceAccountKeyObservation.
func (in *StorageCredentialGCPServiceAccountKeyObservation) DeepCopy() *StorageCredentialGCPServiceAccountKeyObservation {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialGCPServiceAccountKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialGCPServiceAccountKeyParameters) DeepCopyInto(out *StorageCredentialGCPServiceAccountKeyParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.PrivateKeyID != nil {
		in, out := &in.PrivateKeyID, &out.PrivateKeyID
		*out = new(string)
		**out = **in
	}
	in.PrivateKeySecretRef.DeepCopyInto(&out.PrivateKeySecretRef)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialGCPServiceAccountKeyParameters.
func (in *StorageCredentialGCPServiceAccountKeyParameters) DeepCopy() *StorageCredentialGCPServiceAccountKeyParameters {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialGCPServiceAccountKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialInitParameters) DeepCopyInto(out *StorageCredentialInitParameters) {
	*out = *in
	if in.AwsIAMRole != nil {
		in, out := &in.AwsIAMRole, &out.AwsIAMRole
		*out = make([]StorageCredentialAwsIAMRoleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureManagedIdentity != nil {
		in, out := &in.AzureManagedIdentity, &out.AzureManagedIdentity
		*out = make([]StorageCredentialAzureManagedIdentityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureServicePrincipal != nil {
		in, out := &in.AzureServicePrincipal, &out.AzureServicePrincipal
		*out = make([]StorageCredentialAzureServicePrincipalInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudflareAPIToken != nil {
		in, out := &in.CloudflareAPIToken, &out.CloudflareAPIToken
		*out = make([]StorageCredentialCloudflareAPITokenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DatabricksGCPServiceAccount != nil {
		in, out := &in.DatabricksGCPServiceAccount, &out.DatabricksGCPServiceAccount
		*out = make([]StorageCredentialDatabricksGCPServiceAccountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ForceUpdate != nil {
		in, out := &in.ForceUpdate, &out.ForceUpdate
		*out = new(bool)
		**out = **in
	}
	if in.GCPServiceAccountKey != nil {
		in, out := &in.GCPServiceAccountKey, &out.GCPServiceAccountKey
		*out = make([]StorageCredentialGCPServiceAccountKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SkipValidation != nil {
		in, out := &in.SkipValidation, &out.SkipValidation
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialInitParameters.
func (in *StorageCredentialInitParameters) DeepCopy() *StorageCredentialInitParameters {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialList) DeepCopyInto(out *StorageCredentialList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StorageCredential, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialList.
func (in *StorageCredentialList) DeepCopy() *StorageCredentialList {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StorageCredentialList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialObservation) DeepCopyInto(out *StorageCredentialObservation) {
	*out = *in
	if in.AwsIAMRole != nil {
		in, out := &in.AwsIAMRole, &out.AwsIAMRole
		*out = make([]StorageCredentialAwsIAMRoleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureManagedIdentity != nil {
		in, out := &in.AzureManagedIdentity, &out.AzureManagedIdentity
		*out = make([]StorageCredentialAzureManagedIdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureServicePrincipal != nil {
		in, out := &in.AzureServicePrincipal, &out.AzureServicePrincipal
		*out = make([]StorageCredentialAzureServicePrincipalObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudflareAPIToken != nil {
		in, out := &in.CloudflareAPIToken, &out.CloudflareAPIToken
		*out = make([]StorageCredentialCloudflareAPITokenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DatabricksGCPServiceAccount != nil {
		in, out := &in.DatabricksGCPServiceAccount, &out.DatabricksGCPServiceAccount
		*out = make([]StorageCredentialDatabricksGCPServiceAccountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ForceUpdate != nil {
		in, out := &in.ForceUpdate, &out.ForceUpdate
		*out = new(bool)
		**out = **in
	}
	if in.GCPServiceAccountKey != nil {
		in, out := &in.GCPServiceAccountKey, &out.GCPServiceAccountKey
		*out = make([]StorageCredentialGCPServiceAccountKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SkipValidation != nil {
		in, out := &in.SkipValidation, &out.SkipValidation
		*out = new(bool)
		**out = **in
	}
	if in.StorageCredentialID != nil {
		in, out := &in.StorageCredentialID, &out.StorageCredentialID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialObservation.
func (in *StorageCredentialObservation) DeepCopy() *StorageCredentialObservation {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialParameters) DeepCopyInto(out *StorageCredentialParameters) {
	*out = *in
	if in.AwsIAMRole != nil {
		in, out := &in.AwsIAMRole, &out.AwsIAMRole
		*out = make([]StorageCredentialAwsIAMRoleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureManagedIdentity != nil {
		in, out := &in.AzureManagedIdentity, &out.AzureManagedIdentity
		*out = make([]StorageCredentialAzureManagedIdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureServicePrincipal != nil {
		in, out := &in.AzureServicePrincipal, &out.AzureServicePrincipal
		*out = make([]StorageCredentialAzureServicePrincipalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudflareAPIToken != nil {
		in, out := &in.CloudflareAPIToken, &out.CloudflareAPIToken
		*out = make([]StorageCredentialCloudflareAPITokenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DatabricksGCPServiceAccount != nil {
		in, out := &in.DatabricksGCPServiceAccount, &out.DatabricksGCPServiceAccount
		*out = make([]StorageCredentialDatabricksGCPServiceAccountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ForceUpdate != nil {
		in, out := &in.ForceUpdate, &out.ForceUpdate
		*out = new(bool)
		**out = **in
	}
	if in.GCPServiceAccountKey != nil {
		in, out := &in.GCPServiceAccountKey, &out.GCPServiceAccountKey
		*out = make([]StorageCredentialGCPServiceAccountKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsolationMode != nil {
		in, out := &in.IsolationMode, &out.IsolationMode
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.SkipValidation != nil {
		in, out := &in.SkipValidation, &out.SkipValidation
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialParameters.
func (in *StorageCredentialParameters) DeepCopy() *StorageCredentialParameters {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialSpec) DeepCopyInto(out *StorageCredentialSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialSpec.
func (in *StorageCredentialSpec) DeepCopy() *StorageCredentialSpec {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageCredentialStatus) DeepCopyInto(out *StorageCredentialStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageCredentialStatus.
func (in *StorageCredentialStatus) DeepCopy() *StorageCredentialStatus {
	if in == nil {
		return nil
	}
	out := new(StorageCredentialStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemSchema) DeepCopyInto(out *SystemSchema) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemSchema.
func (in *SystemSchema) DeepCopy() *SystemSchema {
	if in == nil {
		return nil
	}
	out := new(SystemSchema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SystemSchema) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemSchemaInitParameters) DeepCopyInto(out *SystemSchemaInitParameters) {
	*out = *in
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemSchemaInitParameters.
func (in *SystemSchemaInitParameters) DeepCopy() *SystemSchemaInitParameters {
	if in == nil {
		return nil
	}
	out := new(SystemSchemaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemSchemaList) DeepCopyInto(out *SystemSchemaList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SystemSchema, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemSchemaList.
func (in *SystemSchemaList) DeepCopy() *SystemSchemaList {
	if in == nil {
		return nil
	}
	out := new(SystemSchemaList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SystemSchemaList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemSchemaObservation) DeepCopyInto(out *SystemSchemaObservation) {
	*out = *in
	if in.AutoEnabled != nil {
		in, out := &in.AutoEnabled, &out.AutoEnabled
		*out = new(bool)
		**out = **in
	}
	if in.FullName != nil {
		in, out := &in.FullName, &out.FullName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MetastoreID != nil {
		in, out := &in.MetastoreID, &out.MetastoreID
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemSchemaObservation.
func (in *SystemSchemaObservation) DeepCopy() *SystemSchemaObservation {
	if in == nil {
		return nil
	}
	out := new(SystemSchemaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemSchemaParameters) DeepCopyInto(out *SystemSchemaParameters) {
	*out = *in
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemSchemaParameters.
func (in *SystemSchemaParameters) DeepCopy() *SystemSchemaParameters {
	if in == nil {
		return nil
	}
	out := new(SystemSchemaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemSchemaSpec) DeepCopyInto(out *SystemSchemaSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemSchemaSpec.
func (in *SystemSchemaSpec) DeepCopy() *SystemSchemaSpec {
	if in == nil {
		return nil
	}
	out := new(SystemSchemaSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemSchemaStatus) DeepCopyInto(out *SystemSchemaStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemSchemaStatus.
func (in *SystemSchemaStatus) DeepCopy() *SystemSchemaStatus {
	if in == nil {
		return nil
	}
	out := new(SystemSchemaStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeSeriesInitParameters) DeepCopyInto(out *TimeSeriesInitParameters) {
	*out = *in
	if in.Granularities != nil {
		in, out := &in.Granularities, &out.Granularities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TimestampCol != nil {
		in, out := &in.TimestampCol, &out.TimestampCol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeSeriesInitParameters.
func (in *TimeSeriesInitParameters) DeepCopy() *TimeSeriesInitParameters {
	if in == nil {
		return nil
	}
	out := new(TimeSeriesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeSeriesObservation) DeepCopyInto(out *TimeSeriesObservation) {
	*out = *in
	if in.Granularities != nil {
		in, out := &in.Granularities, &out.Granularities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TimestampCol != nil {
		in, out := &in.TimestampCol, &out.TimestampCol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeSeriesObservation.
func (in *TimeSeriesObservation) DeepCopy() *TimeSeriesObservation {
	if in == nil {
		return nil
	}
	out := new(TimeSeriesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeSeriesParameters) DeepCopyInto(out *TimeSeriesParameters) {
	*out = *in
	if in.Granularities != nil {
		in, out := &in.Granularities, &out.Granularities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TimestampCol != nil {
		in, out := &in.TimestampCol, &out.TimestampCol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeSeriesParameters.
func (in *TimeSeriesParameters) DeepCopy() *TimeSeriesParameters {
	if in == nil {
		return nil
	}
	out := new(TimeSeriesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggeredUpdateProgressInitParameters) DeepCopyInto(out *TriggeredUpdateProgressInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggeredUpdateProgressInitParameters.
func (in *TriggeredUpdateProgressInitParameters) DeepCopy() *TriggeredUpdateProgressInitParameters {
	if in == nil {
		return nil
	}
	out := new(TriggeredUpdateProgressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggeredUpdateProgressObservation) DeepCopyInto(out *TriggeredUpdateProgressObservation) {
	*out = *in
	if in.EstimatedCompletionTimeSeconds != nil {
		in, out := &in.EstimatedCompletionTimeSeconds, &out.EstimatedCompletionTimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.LatestVersionCurrentlyProcessing != nil {
		in, out := &in.LatestVersionCurrentlyProcessing, &out.LatestVersionCurrentlyProcessing
		*out = new(float64)
		**out = **in
	}
	if in.SyncProgressCompletion != nil {
		in, out := &in.SyncProgressCompletion, &out.SyncProgressCompletion
		*out = new(float64)
		**out = **in
	}
	if in.SyncedRowCount != nil {
		in, out := &in.SyncedRowCount, &out.SyncedRowCount
		*out = new(float64)
		**out = **in
	}
	if in.TotalRowCount != nil {
		in, out := &in.TotalRowCount, &out.TotalRowCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggeredUpdateProgressObservation.
func (in *TriggeredUpdateProgressObservation) DeepCopy() *TriggeredUpdateProgressObservation {
	if in == nil {
		return nil
	}
	out := new(TriggeredUpdateProgressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggeredUpdateProgressParameters) DeepCopyInto(out *TriggeredUpdateProgressParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggeredUpdateProgressParameters.
func (in *TriggeredUpdateProgressParameters) DeepCopy() *TriggeredUpdateProgressParameters {
	if in == nil {
		return nil
	}
	out := new(TriggeredUpdateProgressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggeredUpdateStatusInitParameters) DeepCopyInto(out *TriggeredUpdateStatusInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggeredUpdateStatusInitParameters.
func (in *TriggeredUpdateStatusInitParameters) DeepCopy() *TriggeredUpdateStatusInitParameters {
	if in == nil {
		return nil
	}
	out := new(TriggeredUpdateStatusInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggeredUpdateStatusObservation) DeepCopyInto(out *TriggeredUpdateStatusObservation) {
	*out = *in
	if in.LastProcessedCommitVersion != nil {
		in, out := &in.LastProcessedCommitVersion, &out.LastProcessedCommitVersion
		*out = new(float64)
		**out = **in
	}
	if in.Timestamp != nil {
		in, out := &in.Timestamp, &out.Timestamp
		*out = new(string)
		**out = **in
	}
	if in.TriggeredUpdateProgress != nil {
		in, out := &in.TriggeredUpdateProgress, &out.TriggeredUpdateProgress
		*out = make([]TriggeredUpdateProgressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggeredUpdateStatusObservation.
func (in *TriggeredUpdateStatusObservation) DeepCopy() *TriggeredUpdateStatusObservation {
	if in == nil {
		return nil
	}
	out := new(TriggeredUpdateStatusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggeredUpdateStatusParameters) DeepCopyInto(out *TriggeredUpdateStatusParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggeredUpdateStatusParameters.
func (in *TriggeredUpdateStatusParameters) DeepCopy() *TriggeredUpdateStatusParameters {
	if in == nil {
		return nil
	}
	out := new(TriggeredUpdateStatusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Volume) DeepCopyInto(out *Volume) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Volume.
func (in *Volume) DeepCopy() *Volume {
	if in == nil {
		return nil
	}
	out := new(Volume)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Volume) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeInitParameters) DeepCopyInto(out *VolumeInitParameters) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.CatalogNameRef != nil {
		in, out := &in.CatalogNameRef, &out.CatalogNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CatalogNameSelector != nil {
		in, out := &in.CatalogNameSelector, &out.CatalogNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.SchemaNameRef != nil {
		in, out := &in.SchemaNameRef, &out.SchemaNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SchemaNameSelector != nil {
		in, out := &in.SchemaNameSelector, &out.SchemaNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
	if in.StorageLocationRef != nil {
		in, out := &in.StorageLocationRef, &out.StorageLocationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageLocationSelector != nil {
		in, out := &in.StorageLocationSelector, &out.StorageLocationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeInitParameters.
func (in *VolumeInitParameters) DeepCopy() *VolumeInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeList) DeepCopyInto(out *VolumeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Volume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeList.
func (in *VolumeList) DeepCopy() *VolumeList {
	if in == nil {
		return nil
	}
	out := new(VolumeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeObservation) DeepCopyInto(out *VolumeObservation) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
	if in.VolumePath != nil {
		in, out := &in.VolumePath, &out.VolumePath
		*out = new(string)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeObservation.
func (in *VolumeObservation) DeepCopy() *VolumeObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeParameters) DeepCopyInto(out *VolumeParameters) {
	*out = *in
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.CatalogNameRef != nil {
		in, out := &in.CatalogNameRef, &out.CatalogNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CatalogNameSelector != nil {
		in, out := &in.CatalogNameSelector, &out.CatalogNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.SchemaNameRef != nil {
		in, out := &in.SchemaNameRef, &out.SchemaNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SchemaNameSelector != nil {
		in, out := &in.SchemaNameSelector, &out.SchemaNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = new(string)
		**out = **in
	}
	if in.StorageLocationRef != nil {
		in, out := &in.StorageLocationRef, &out.StorageLocationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageLocationSelector != nil {
		in, out := &in.StorageLocationSelector, &out.StorageLocationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeParameters.
func (in *VolumeParameters) DeepCopy() *VolumeParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeSpec) DeepCopyInto(out *VolumeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeSpec.
func (in *VolumeSpec) DeepCopy() *VolumeSpec {
	if in == nil {
		return nil
	}
	out := new(VolumeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeStatus) DeepCopyInto(out *VolumeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeStatus.
func (in *VolumeStatus) DeepCopy() *VolumeStatus {
	if in == nil {
		return nil
	}
	out := new(VolumeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceBinding) DeepCopyInto(out *WorkspaceBinding) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceBinding.
func (in *WorkspaceBinding) DeepCopy() *WorkspaceBinding {
	if in == nil {
		return nil
	}
	out := new(WorkspaceBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkspaceBinding) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceBindingInitParameters) DeepCopyInto(out *WorkspaceBindingInitParameters) {
	*out = *in
	if in.BindingType != nil {
		in, out := &in.BindingType, &out.BindingType
		*out = new(string)
		**out = **in
	}
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.SecurableName != nil {
		in, out := &in.SecurableName, &out.SecurableName
		*out = new(string)
		**out = **in
	}
	if in.SecurableNameRef != nil {
		in, out := &in.SecurableNameRef, &out.SecurableNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurableNameSelector != nil {
		in, out := &in.SecurableNameSelector, &out.SecurableNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurableType != nil {
		in, out := &in.SecurableType, &out.SecurableType
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
	if in.WorkspaceIDRef != nil {
		in, out := &in.WorkspaceIDRef, &out.WorkspaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkspaceIDSelector != nil {
		in, out := &in.WorkspaceIDSelector, &out.WorkspaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceBindingInitParameters.
func (in *WorkspaceBindingInitParameters) DeepCopy() *WorkspaceBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceBindingList) DeepCopyInto(out *WorkspaceBindingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WorkspaceBinding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceBindingList.
func (in *WorkspaceBindingList) DeepCopy() *WorkspaceBindingList {
	if in == nil {
		return nil
	}
	out := new(WorkspaceBindingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkspaceBindingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceBindingObservation) DeepCopyInto(out *WorkspaceBindingObservation) {
	*out = *in
	if in.BindingType != nil {
		in, out := &in.BindingType, &out.BindingType
		*out = new(string)
		**out = **in
	}
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SecurableName != nil {
		in, out := &in.SecurableName, &out.SecurableName
		*out = new(string)
		**out = **in
	}
	if in.SecurableType != nil {
		in, out := &in.SecurableType, &out.SecurableType
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceBindingObservation.
func (in *WorkspaceBindingObservation) DeepCopy() *WorkspaceBindingObservation {
	if in == nil {
		return nil
	}
	out := new(WorkspaceBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceBindingParameters) DeepCopyInto(out *WorkspaceBindingParameters) {
	*out = *in
	if in.BindingType != nil {
		in, out := &in.BindingType, &out.BindingType
		*out = new(string)
		**out = **in
	}
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.SecurableName != nil {
		in, out := &in.SecurableName, &out.SecurableName
		*out = new(string)
		**out = **in
	}
	if in.SecurableNameRef != nil {
		in, out := &in.SecurableNameRef, &out.SecurableNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurableNameSelector != nil {
		in, out := &in.SecurableNameSelector, &out.SecurableNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurableType != nil {
		in, out := &in.SecurableType, &out.SecurableType
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(float64)
		**out = **in
	}
	if in.WorkspaceIDRef != nil {
		in, out := &in.WorkspaceIDRef, &out.WorkspaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkspaceIDSelector != nil {
		in, out := &in.WorkspaceIDSelector, &out.WorkspaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceBindingParameters.
func (in *WorkspaceBindingParameters) DeepCopy() *WorkspaceBindingParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceBindingSpec) DeepCopyInto(out *WorkspaceBindingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceBindingSpec.
func (in *WorkspaceBindingSpec) DeepCopy() *WorkspaceBindingSpec {
	if in == nil {
		return nil
	}
	out := new(WorkspaceBindingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceBindingStatus) DeepCopyInto(out *WorkspaceBindingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceBindingStatus.
func (in *WorkspaceBindingStatus) DeepCopy() *WorkspaceBindingStatus {
	if in == nil {
		return nil
	}
	out := new(WorkspaceBindingStatus)
	in.DeepCopyInto(out)
	return out
}
