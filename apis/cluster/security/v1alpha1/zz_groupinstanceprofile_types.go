// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
)

type GroupInstanceProfileInitParameters struct {

	// This is the id of the group resource.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/cluster/security/v1alpha1.Group
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	GroupID *string `json:"groupId,omitempty" tf:"group_id,omitempty"`

	// Reference to a Group in security to populate groupId.
	// +kubebuilder:validation:Optional
	GroupIDRef *v1.Reference `json:"groupIdRef,omitempty" tf:"-"`

	// Selector for a Group in security to populate groupId.
	// +kubebuilder:validation:Optional
	GroupIDSelector *v1.Selector `json:"groupIdSelector,omitempty" tf:"-"`

	// This is the id of the instance profile resource.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/cluster/deployment/v1alpha1.InstanceProfile
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	InstanceProfileID *string `json:"instanceProfileId,omitempty" tf:"instance_profile_id,omitempty"`

	// Reference to a InstanceProfile in deployment to populate instanceProfileId.
	// +kubebuilder:validation:Optional
	InstanceProfileIDRef *v1.Reference `json:"instanceProfileIdRef,omitempty" tf:"-"`

	// Selector for a InstanceProfile in deployment to populate instanceProfileId.
	// +kubebuilder:validation:Optional
	InstanceProfileIDSelector *v1.Selector `json:"instanceProfileIdSelector,omitempty" tf:"-"`
}

type GroupInstanceProfileObservation struct {

	// This is the id of the group resource.
	GroupID *string `json:"groupId,omitempty" tf:"group_id,omitempty"`

	// The id in the format <group_id>|<instance_profile_id>.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// This is the id of the instance profile resource.
	InstanceProfileID *string `json:"instanceProfileId,omitempty" tf:"instance_profile_id,omitempty"`
}

type GroupInstanceProfileParameters struct {

	// This is the id of the group resource.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/cluster/security/v1alpha1.Group
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	GroupID *string `json:"groupId,omitempty" tf:"group_id,omitempty"`

	// Reference to a Group in security to populate groupId.
	// +kubebuilder:validation:Optional
	GroupIDRef *v1.Reference `json:"groupIdRef,omitempty" tf:"-"`

	// Selector for a Group in security to populate groupId.
	// +kubebuilder:validation:Optional
	GroupIDSelector *v1.Selector `json:"groupIdSelector,omitempty" tf:"-"`

	// This is the id of the instance profile resource.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/cluster/deployment/v1alpha1.InstanceProfile
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	InstanceProfileID *string `json:"instanceProfileId,omitempty" tf:"instance_profile_id,omitempty"`

	// Reference to a InstanceProfile in deployment to populate instanceProfileId.
	// +kubebuilder:validation:Optional
	InstanceProfileIDRef *v1.Reference `json:"instanceProfileIdRef,omitempty" tf:"-"`

	// Selector for a InstanceProfile in deployment to populate instanceProfileId.
	// +kubebuilder:validation:Optional
	InstanceProfileIDSelector *v1.Selector `json:"instanceProfileIdSelector,omitempty" tf:"-"`
}

// GroupInstanceProfileSpec defines the desired state of GroupInstanceProfile
type GroupInstanceProfileSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     GroupInstanceProfileParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider GroupInstanceProfileInitParameters `json:"initProvider,omitempty"`
}

// GroupInstanceProfileStatus defines the observed state of GroupInstanceProfile.
type GroupInstanceProfileStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        GroupInstanceProfileObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// GroupInstanceProfile is the Schema for the GroupInstanceProfiles API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,databricks}
type GroupInstanceProfile struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              GroupInstanceProfileSpec   `json:"spec"`
	Status            GroupInstanceProfileStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// GroupInstanceProfileList contains a list of GroupInstanceProfiles
type GroupInstanceProfileList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []GroupInstanceProfile `json:"items"`
}

// Repository type metadata.
var (
	GroupInstanceProfile_Kind             = "GroupInstanceProfile"
	GroupInstanceProfile_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: GroupInstanceProfile_Kind}.String()
	GroupInstanceProfile_KindAPIVersion   = GroupInstanceProfile_Kind + "." + CRDGroupVersion.String()
	GroupInstanceProfile_GroupVersionKind = CRDGroupVersion.WithKind(GroupInstanceProfile_Kind)
)

func init() {
	SchemeBuilder.Register(&GroupInstanceProfile{}, &GroupInstanceProfileList{})
}
