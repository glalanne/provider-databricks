// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
)

type AccessControlRuleSetInitParameters struct {

	// The access control rules to be granted by this rule set, consisting of a set of principals and roles to be granted to them.
	GrantRules []GrantRulesInitParameters `json:"grantRules,omitempty" tf:"grant_rules,omitempty"`

	// Unique identifier of a rule set. The name determines the resource to which the rule set applies. Changing the name recreates the resource!. Currently, only default rule sets are supported. The following rule set formats are supported:
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type AccessControlRuleSetObservation struct {
	Etag *string `json:"etag,omitempty" tf:"etag,omitempty"`

	// The access control rules to be granted by this rule set, consisting of a set of principals and roles to be granted to them.
	GrantRules []GrantRulesObservation `json:"grantRules,omitempty" tf:"grant_rules,omitempty"`

	// ID of the access control rule set - the same as name.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Unique identifier of a rule set. The name determines the resource to which the rule set applies. Changing the name recreates the resource!. Currently, only default rule sets are supported. The following rule set formats are supported:
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type AccessControlRuleSetParameters struct {

	// The access control rules to be granted by this rule set, consisting of a set of principals and roles to be granted to them.
	// +kubebuilder:validation:Optional
	GrantRules []GrantRulesParameters `json:"grantRules,omitempty" tf:"grant_rules,omitempty"`

	// Unique identifier of a rule set. The name determines the resource to which the rule set applies. Changing the name recreates the resource!. Currently, only default rule sets are supported. The following rule set formats are supported:
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type GrantRulesInitParameters struct {

	// a list of principals who are granted a role. The following format is supported:
	// +listType=set
	Principals []*string `json:"principals,omitempty" tf:"principals,omitempty"`

	// Role to be granted. The supported roles are listed below. For more information about these roles, refer to service principal roles, group roles, marketplace roles or budget policy permissions, depending on the name defined:
	Role *string `json:"role,omitempty" tf:"role,omitempty"`
}

type GrantRulesObservation struct {

	// a list of principals who are granted a role. The following format is supported:
	// +listType=set
	Principals []*string `json:"principals,omitempty" tf:"principals,omitempty"`

	// Role to be granted. The supported roles are listed below. For more information about these roles, refer to service principal roles, group roles, marketplace roles or budget policy permissions, depending on the name defined:
	Role *string `json:"role,omitempty" tf:"role,omitempty"`
}

type GrantRulesParameters struct {

	// a list of principals who are granted a role. The following format is supported:
	// +kubebuilder:validation:Optional
	// +listType=set
	Principals []*string `json:"principals,omitempty" tf:"principals,omitempty"`

	// Role to be granted. The supported roles are listed below. For more information about these roles, refer to service principal roles, group roles, marketplace roles or budget policy permissions, depending on the name defined:
	// +kubebuilder:validation:Optional
	Role *string `json:"role" tf:"role,omitempty"`
}

// AccessControlRuleSetSpec defines the desired state of AccessControlRuleSet
type AccessControlRuleSetSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AccessControlRuleSetParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AccessControlRuleSetInitParameters `json:"initProvider,omitempty"`
}

// AccessControlRuleSetStatus defines the observed state of AccessControlRuleSet.
type AccessControlRuleSetStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AccessControlRuleSetObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AccessControlRuleSet is the Schema for the AccessControlRuleSets API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,databricks}
type AccessControlRuleSet struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   AccessControlRuleSetSpec   `json:"spec"`
	Status AccessControlRuleSetStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AccessControlRuleSetList contains a list of AccessControlRuleSets
type AccessControlRuleSetList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AccessControlRuleSet `json:"items"`
}

// Repository type metadata.
var (
	AccessControlRuleSet_Kind             = "AccessControlRuleSet"
	AccessControlRuleSet_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AccessControlRuleSet_Kind}.String()
	AccessControlRuleSet_KindAPIVersion   = AccessControlRuleSet_Kind + "." + CRDGroupVersion.String()
	AccessControlRuleSet_GroupVersionKind = CRDGroupVersion.WithKind(AccessControlRuleSet_Kind)
)

func init() {
	SchemeBuilder.Register(&AccessControlRuleSet{}, &AccessControlRuleSetList{})
}
