// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
)

type UserInstanceProfileInitParameters struct {

	// This is the id of the instance profile resource.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/cluster/deployment/v1alpha1.InstanceProfile
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	InstanceProfileID *string `json:"instanceProfileId,omitempty" tf:"instance_profile_id,omitempty"`

	// Reference to a InstanceProfile in deployment to populate instanceProfileId.
	// +kubebuilder:validation:Optional
	InstanceProfileIDRef *v1.Reference `json:"instanceProfileIdRef,omitempty" tf:"-"`

	// Selector for a InstanceProfile in deployment to populate instanceProfileId.
	// +kubebuilder:validation:Optional
	InstanceProfileIDSelector *v1.Selector `json:"instanceProfileIdSelector,omitempty" tf:"-"`

	// This is the id of the user resource.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/cluster/security/v1alpha1.User
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	UserID *string `json:"userId,omitempty" tf:"user_id,omitempty"`

	// Reference to a User in security to populate userId.
	// +kubebuilder:validation:Optional
	UserIDRef *v1.Reference `json:"userIdRef,omitempty" tf:"-"`

	// Selector for a User in security to populate userId.
	// +kubebuilder:validation:Optional
	UserIDSelector *v1.Selector `json:"userIdSelector,omitempty" tf:"-"`
}

type UserInstanceProfileObservation struct {

	// The id in the format <user_id>|<instance_profile_id>.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// This is the id of the instance profile resource.
	InstanceProfileID *string `json:"instanceProfileId,omitempty" tf:"instance_profile_id,omitempty"`

	// This is the id of the user resource.
	UserID *string `json:"userId,omitempty" tf:"user_id,omitempty"`
}

type UserInstanceProfileParameters struct {

	// This is the id of the instance profile resource.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/cluster/deployment/v1alpha1.InstanceProfile
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	InstanceProfileID *string `json:"instanceProfileId,omitempty" tf:"instance_profile_id,omitempty"`

	// Reference to a InstanceProfile in deployment to populate instanceProfileId.
	// +kubebuilder:validation:Optional
	InstanceProfileIDRef *v1.Reference `json:"instanceProfileIdRef,omitempty" tf:"-"`

	// Selector for a InstanceProfile in deployment to populate instanceProfileId.
	// +kubebuilder:validation:Optional
	InstanceProfileIDSelector *v1.Selector `json:"instanceProfileIdSelector,omitempty" tf:"-"`

	// This is the id of the user resource.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-databricks/apis/cluster/security/v1alpha1.User
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	UserID *string `json:"userId,omitempty" tf:"user_id,omitempty"`

	// Reference to a User in security to populate userId.
	// +kubebuilder:validation:Optional
	UserIDRef *v1.Reference `json:"userIdRef,omitempty" tf:"-"`

	// Selector for a User in security to populate userId.
	// +kubebuilder:validation:Optional
	UserIDSelector *v1.Selector `json:"userIdSelector,omitempty" tf:"-"`
}

// UserInstanceProfileSpec defines the desired state of UserInstanceProfile
type UserInstanceProfileSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     UserInstanceProfileParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider UserInstanceProfileInitParameters `json:"initProvider,omitempty"`
}

// UserInstanceProfileStatus defines the observed state of UserInstanceProfile.
type UserInstanceProfileStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        UserInstanceProfileObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// UserInstanceProfile is the Schema for the UserInstanceProfiles API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,databricks}
type UserInstanceProfile struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              UserInstanceProfileSpec   `json:"spec"`
	Status            UserInstanceProfileStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// UserInstanceProfileList contains a list of UserInstanceProfiles
type UserInstanceProfileList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []UserInstanceProfile `json:"items"`
}

// Repository type metadata.
var (
	UserInstanceProfile_Kind             = "UserInstanceProfile"
	UserInstanceProfile_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: UserInstanceProfile_Kind}.String()
	UserInstanceProfile_KindAPIVersion   = UserInstanceProfile_Kind + "." + CRDGroupVersion.String()
	UserInstanceProfile_GroupVersionKind = CRDGroupVersion.WithKind(UserInstanceProfile_Kind)
)

func init() {
	SchemeBuilder.Register(&UserInstanceProfile{}, &UserInstanceProfileList{})
}
