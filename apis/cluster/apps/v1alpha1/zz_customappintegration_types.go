// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
)

type CustomAppIntegrationInitParameters struct {

	// OAuth client-id generated by Databricks
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// OAuth client-secret generated by the Databricks if this is a confidential OAuth app.
	ClientSecretSecretRef *v1.SecretKeySelector `json:"clientSecretSecretRef,omitempty" tf:"-"`

	// Indicates whether an OAuth client secret is required to authenticate this client. Default to false. Change requires a new resource.
	Confidential *bool `json:"confidential,omitempty" tf:"confidential,omitempty"`

	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	CreatedBy *float64 `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	// Name of the custom OAuth app. Change requires a new resource.
	CreatorUsername *string `json:"creatorUsername,omitempty" tf:"creator_username,omitempty"`

	// Unique integration id for the custom OAuth app.
	IntegrationID *string `json:"integrationId,omitempty" tf:"integration_id,omitempty"`

	// Name of the custom OAuth app. Change requires a new resource.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// List of OAuth redirect urls.
	RedirectUrls []*string `json:"redirectUrls,omitempty" tf:"redirect_urls,omitempty"`

	// OAuth scopes granted to the application. Supported scopes: all-apis, sql, offline_access, openid, profile, email.
	Scopes []*string `json:"scopes,omitempty" tf:"scopes,omitempty"`

	TokenAccessPolicy []TokenAccessPolicyInitParameters `json:"tokenAccessPolicy,omitempty" tf:"token_access_policy,omitempty"`

	// OAuth scopes granted to the application. Supported scopes: all-apis, sql, offline_access, openid, profile, email.
	UserAuthorizedScopes []*string `json:"userAuthorizedScopes,omitempty" tf:"user_authorized_scopes,omitempty"`
}

type CustomAppIntegrationObservation struct {

	// OAuth client-id generated by Databricks
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// Indicates whether an OAuth client secret is required to authenticate this client. Default to false. Change requires a new resource.
	Confidential *bool `json:"confidential,omitempty" tf:"confidential,omitempty"`

	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	CreatedBy *float64 `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	// Name of the custom OAuth app. Change requires a new resource.
	CreatorUsername *string `json:"creatorUsername,omitempty" tf:"creator_username,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Unique integration id for the custom OAuth app.
	IntegrationID *string `json:"integrationId,omitempty" tf:"integration_id,omitempty"`

	// Name of the custom OAuth app. Change requires a new resource.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// List of OAuth redirect urls.
	RedirectUrls []*string `json:"redirectUrls,omitempty" tf:"redirect_urls,omitempty"`

	// OAuth scopes granted to the application. Supported scopes: all-apis, sql, offline_access, openid, profile, email.
	Scopes []*string `json:"scopes,omitempty" tf:"scopes,omitempty"`

	TokenAccessPolicy []TokenAccessPolicyObservation `json:"tokenAccessPolicy,omitempty" tf:"token_access_policy,omitempty"`

	// OAuth scopes granted to the application. Supported scopes: all-apis, sql, offline_access, openid, profile, email.
	UserAuthorizedScopes []*string `json:"userAuthorizedScopes,omitempty" tf:"user_authorized_scopes,omitempty"`
}

type CustomAppIntegrationParameters struct {

	// OAuth client-id generated by Databricks
	// +kubebuilder:validation:Optional
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// OAuth client-secret generated by the Databricks if this is a confidential OAuth app.
	// +kubebuilder:validation:Optional
	ClientSecretSecretRef *v1.SecretKeySelector `json:"clientSecretSecretRef,omitempty" tf:"-"`

	// Indicates whether an OAuth client secret is required to authenticate this client. Default to false. Change requires a new resource.
	// +kubebuilder:validation:Optional
	Confidential *bool `json:"confidential,omitempty" tf:"confidential,omitempty"`

	// +kubebuilder:validation:Optional
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// +kubebuilder:validation:Optional
	CreatedBy *float64 `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	// Name of the custom OAuth app. Change requires a new resource.
	// +kubebuilder:validation:Optional
	CreatorUsername *string `json:"creatorUsername,omitempty" tf:"creator_username,omitempty"`

	// Unique integration id for the custom OAuth app.
	// +kubebuilder:validation:Optional
	IntegrationID *string `json:"integrationId,omitempty" tf:"integration_id,omitempty"`

	// Name of the custom OAuth app. Change requires a new resource.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// List of OAuth redirect urls.
	// +kubebuilder:validation:Optional
	RedirectUrls []*string `json:"redirectUrls,omitempty" tf:"redirect_urls,omitempty"`

	// OAuth scopes granted to the application. Supported scopes: all-apis, sql, offline_access, openid, profile, email.
	// +kubebuilder:validation:Optional
	Scopes []*string `json:"scopes,omitempty" tf:"scopes,omitempty"`

	// +kubebuilder:validation:Optional
	TokenAccessPolicy []TokenAccessPolicyParameters `json:"tokenAccessPolicy,omitempty" tf:"token_access_policy,omitempty"`

	// OAuth scopes granted to the application. Supported scopes: all-apis, sql, offline_access, openid, profile, email.
	// +kubebuilder:validation:Optional
	UserAuthorizedScopes []*string `json:"userAuthorizedScopes,omitempty" tf:"user_authorized_scopes,omitempty"`
}

type TokenAccessPolicyInitParameters struct {

	// access token time to live (TTL) in minutes.
	AccessTokenTTLInMinutes *float64 `json:"accessTokenTtlInMinutes,omitempty" tf:"access_token_ttl_in_minutes,omitempty"`

	// refresh token TTL in minutes. The TTL of refresh token cannot be lower than TTL of access token.
	RefreshTokenTTLInMinutes *float64 `json:"refreshTokenTtlInMinutes,omitempty" tf:"refresh_token_ttl_in_minutes,omitempty"`
}

type TokenAccessPolicyObservation struct {

	// access token time to live (TTL) in minutes.
	AccessTokenTTLInMinutes *float64 `json:"accessTokenTtlInMinutes,omitempty" tf:"access_token_ttl_in_minutes,omitempty"`

	// refresh token TTL in minutes. The TTL of refresh token cannot be lower than TTL of access token.
	RefreshTokenTTLInMinutes *float64 `json:"refreshTokenTtlInMinutes,omitempty" tf:"refresh_token_ttl_in_minutes,omitempty"`
}

type TokenAccessPolicyParameters struct {

	// access token time to live (TTL) in minutes.
	// +kubebuilder:validation:Optional
	AccessTokenTTLInMinutes *float64 `json:"accessTokenTtlInMinutes,omitempty" tf:"access_token_ttl_in_minutes,omitempty"`

	// refresh token TTL in minutes. The TTL of refresh token cannot be lower than TTL of access token.
	// +kubebuilder:validation:Optional
	RefreshTokenTTLInMinutes *float64 `json:"refreshTokenTtlInMinutes,omitempty" tf:"refresh_token_ttl_in_minutes,omitempty"`
}

// CustomAppIntegrationSpec defines the desired state of CustomAppIntegration
type CustomAppIntegrationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     CustomAppIntegrationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider CustomAppIntegrationInitParameters `json:"initProvider,omitempty"`
}

// CustomAppIntegrationStatus defines the observed state of CustomAppIntegration.
type CustomAppIntegrationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CustomAppIntegrationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// CustomAppIntegration is the Schema for the CustomAppIntegrations API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,databricks}
type CustomAppIntegration struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              CustomAppIntegrationSpec   `json:"spec"`
	Status            CustomAppIntegrationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CustomAppIntegrationList contains a list of CustomAppIntegrations
type CustomAppIntegrationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CustomAppIntegration `json:"items"`
}

// Repository type metadata.
var (
	CustomAppIntegration_Kind             = "CustomAppIntegration"
	CustomAppIntegration_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: CustomAppIntegration_Kind}.String()
	CustomAppIntegration_KindAPIVersion   = CustomAppIntegration_Kind + "." + CRDGroupVersion.String()
	CustomAppIntegration_GroupVersionKind = CRDGroupVersion.WithKind(CustomAppIntegration_Kind)
)

func init() {
	SchemeBuilder.Register(&CustomAppIntegration{}, &CustomAppIntegrationList{})
}
