// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type MlflowExperimentInitParameters struct {

	// Path to dbfs:/ or s3:// artifact location of the MLflow experiment.
	ArtifactLocation *string `json:"artifactLocation,omitempty" tf:"artifact_location,omitempty"`

	CreationTime *float64 `json:"creationTime,omitempty" tf:"creation_time,omitempty"`

	// The description of the MLflow experiment.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// ID of the MLflow experiment.
	ExperimentID *string `json:"experimentId,omitempty" tf:"experiment_id,omitempty"`

	LastUpdateTime *float64 `json:"lastUpdateTime,omitempty" tf:"last_update_time,omitempty"`

	LifecycleStage *string `json:"lifecycleStage,omitempty" tf:"lifecycle_stage,omitempty"`

	// Name of MLflow experiment. It must be an absolute path within the Databricks workspace, e.g. /Users/<some-username>/my-experiment. For more information about changes to experiment naming conventions, see mlflow docs.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type MlflowExperimentObservation struct {

	// Path to dbfs:/ or s3:// artifact location of the MLflow experiment.
	ArtifactLocation *string `json:"artifactLocation,omitempty" tf:"artifact_location,omitempty"`

	CreationTime *float64 `json:"creationTime,omitempty" tf:"creation_time,omitempty"`

	// The description of the MLflow experiment.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// ID of the MLflow experiment.
	ExperimentID *string `json:"experimentId,omitempty" tf:"experiment_id,omitempty"`

	// ID of the MLflow experiment.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	LastUpdateTime *float64 `json:"lastUpdateTime,omitempty" tf:"last_update_time,omitempty"`

	LifecycleStage *string `json:"lifecycleStage,omitempty" tf:"lifecycle_stage,omitempty"`

	// Name of MLflow experiment. It must be an absolute path within the Databricks workspace, e.g. /Users/<some-username>/my-experiment. For more information about changes to experiment naming conventions, see mlflow docs.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type MlflowExperimentParameters struct {

	// Path to dbfs:/ or s3:// artifact location of the MLflow experiment.
	// +kubebuilder:validation:Optional
	ArtifactLocation *string `json:"artifactLocation,omitempty" tf:"artifact_location,omitempty"`

	// +kubebuilder:validation:Optional
	CreationTime *float64 `json:"creationTime,omitempty" tf:"creation_time,omitempty"`

	// The description of the MLflow experiment.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// ID of the MLflow experiment.
	// +kubebuilder:validation:Optional
	ExperimentID *string `json:"experimentId,omitempty" tf:"experiment_id,omitempty"`

	// +kubebuilder:validation:Optional
	LastUpdateTime *float64 `json:"lastUpdateTime,omitempty" tf:"last_update_time,omitempty"`

	// +kubebuilder:validation:Optional
	LifecycleStage *string `json:"lifecycleStage,omitempty" tf:"lifecycle_stage,omitempty"`

	// Name of MLflow experiment. It must be an absolute path within the Databricks workspace, e.g. /Users/<some-username>/my-experiment. For more information about changes to experiment naming conventions, see mlflow docs.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

// MlflowExperimentSpec defines the desired state of MlflowExperiment
type MlflowExperimentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     MlflowExperimentParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider MlflowExperimentInitParameters `json:"initProvider,omitempty"`
}

// MlflowExperimentStatus defines the observed state of MlflowExperiment.
type MlflowExperimentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        MlflowExperimentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// MlflowExperiment is the Schema for the MlflowExperiments API. ""subcategory: "MLflow"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,databricks}
type MlflowExperiment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   MlflowExperimentSpec   `json:"spec"`
	Status MlflowExperimentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MlflowExperimentList contains a list of MlflowExperiments
type MlflowExperimentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MlflowExperiment `json:"items"`
}

// Repository type metadata.
var (
	MlflowExperiment_Kind             = "MlflowExperiment"
	MlflowExperiment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: MlflowExperiment_Kind}.String()
	MlflowExperiment_KindAPIVersion   = MlflowExperiment_Kind + "." + CRDGroupVersion.String()
	MlflowExperiment_GroupVersionKind = CRDGroupVersion.WithKind(MlflowExperiment_Kind)
)

func init() {
	SchemeBuilder.Register(&MlflowExperiment{}, &MlflowExperimentList{})
}
