// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type MwsLogDeliveryInitParameters struct {

	// Account Id that could be found in the top right corner of Accounts Console.
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Databricks log delivery configuration ID.
	ConfigID *string `json:"configId,omitempty" tf:"config_id,omitempty"`

	// The optional human-readable name of the log delivery configuration. Defaults to empty.
	ConfigName *string `json:"configName,omitempty" tf:"config_name,omitempty"`

	// The ID for a Databricks credential configuration that represents the AWS IAM role with policy and trust relationship as described in the main billable usage documentation page.
	CredentialsID *string `json:"credentialsId,omitempty" tf:"credentials_id,omitempty"`

	// Defaults to empty, which means that logs are delivered to the root of the bucket. The value must be a valid S3 object key. It must not start or end with a slash character.
	DeliveryPathPrefix *string `json:"deliveryPathPrefix,omitempty" tf:"delivery_path_prefix,omitempty"`

	// The optional start month and year for delivery, specified in YYYY-MM format. Defaults to current year and month. Usage is not available before 2019-03.
	DeliveryStartTime *string `json:"deliveryStartTime,omitempty" tf:"delivery_start_time,omitempty"`

	// The type of log delivery. BILLABLE_USAGE and AUDIT_LOGS are supported.
	LogType *string `json:"logType,omitempty" tf:"log_type,omitempty"`

	// The file type of log delivery. Currently CSV (for BILLABLE_USAGE) and JSON (for AUDIT_LOGS) are supported.
	OutputFormat *string `json:"outputFormat,omitempty" tf:"output_format,omitempty"`

	// Status of log delivery configuration. Set to ENABLED or DISABLED. Defaults to ENABLED. This is the only field you can update.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// The ID for a Databricks storage configuration that represents the S3 bucket with bucket policy as described in the main billable usage documentation page.
	StorageConfigurationID *string `json:"storageConfigurationId,omitempty" tf:"storage_configuration_id,omitempty"`

	// By default, this log configuration applies to all workspaces associated with your account ID. If your account is on the multitenant version of the platform or on a select custom plan that allows multiple workspaces per account, you may have multiple workspaces associated with your account ID. You can optionally set the field as mentioned earlier to an array of workspace IDs. If you plan to use different log delivery configurations for several workspaces, set this explicitly rather than leaving it blank. If you leave this blank and your account ID gets additional workspaces in the future, this configuration will also apply to the new workspaces.
	WorkspaceIdsFilter []*float64 `json:"workspaceIdsFilter,omitempty" tf:"workspace_ids_filter,omitempty"`
}

type MwsLogDeliveryObservation struct {

	// Account Id that could be found in the top right corner of Accounts Console.
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Databricks log delivery configuration ID.
	ConfigID *string `json:"configId,omitempty" tf:"config_id,omitempty"`

	// The optional human-readable name of the log delivery configuration. Defaults to empty.
	ConfigName *string `json:"configName,omitempty" tf:"config_name,omitempty"`

	// The ID for a Databricks credential configuration that represents the AWS IAM role with policy and trust relationship as described in the main billable usage documentation page.
	CredentialsID *string `json:"credentialsId,omitempty" tf:"credentials_id,omitempty"`

	// Defaults to empty, which means that logs are delivered to the root of the bucket. The value must be a valid S3 object key. It must not start or end with a slash character.
	DeliveryPathPrefix *string `json:"deliveryPathPrefix,omitempty" tf:"delivery_path_prefix,omitempty"`

	// The optional start month and year for delivery, specified in YYYY-MM format. Defaults to current year and month. Usage is not available before 2019-03.
	DeliveryStartTime *string `json:"deliveryStartTime,omitempty" tf:"delivery_start_time,omitempty"`

	// the ID of log delivery configuration in form of account_id|config_id.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The type of log delivery. BILLABLE_USAGE and AUDIT_LOGS are supported.
	LogType *string `json:"logType,omitempty" tf:"log_type,omitempty"`

	// The file type of log delivery. Currently CSV (for BILLABLE_USAGE) and JSON (for AUDIT_LOGS) are supported.
	OutputFormat *string `json:"outputFormat,omitempty" tf:"output_format,omitempty"`

	// Status of log delivery configuration. Set to ENABLED or DISABLED. Defaults to ENABLED. This is the only field you can update.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// The ID for a Databricks storage configuration that represents the S3 bucket with bucket policy as described in the main billable usage documentation page.
	StorageConfigurationID *string `json:"storageConfigurationId,omitempty" tf:"storage_configuration_id,omitempty"`

	// By default, this log configuration applies to all workspaces associated with your account ID. If your account is on the multitenant version of the platform or on a select custom plan that allows multiple workspaces per account, you may have multiple workspaces associated with your account ID. You can optionally set the field as mentioned earlier to an array of workspace IDs. If you plan to use different log delivery configurations for several workspaces, set this explicitly rather than leaving it blank. If you leave this blank and your account ID gets additional workspaces in the future, this configuration will also apply to the new workspaces.
	WorkspaceIdsFilter []*float64 `json:"workspaceIdsFilter,omitempty" tf:"workspace_ids_filter,omitempty"`
}

type MwsLogDeliveryParameters struct {

	// Account Id that could be found in the top right corner of Accounts Console.
	// +kubebuilder:validation:Optional
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Databricks log delivery configuration ID.
	// +kubebuilder:validation:Optional
	ConfigID *string `json:"configId,omitempty" tf:"config_id,omitempty"`

	// The optional human-readable name of the log delivery configuration. Defaults to empty.
	// +kubebuilder:validation:Optional
	ConfigName *string `json:"configName,omitempty" tf:"config_name,omitempty"`

	// The ID for a Databricks credential configuration that represents the AWS IAM role with policy and trust relationship as described in the main billable usage documentation page.
	// +kubebuilder:validation:Optional
	CredentialsID *string `json:"credentialsId,omitempty" tf:"credentials_id,omitempty"`

	// Defaults to empty, which means that logs are delivered to the root of the bucket. The value must be a valid S3 object key. It must not start or end with a slash character.
	// +kubebuilder:validation:Optional
	DeliveryPathPrefix *string `json:"deliveryPathPrefix,omitempty" tf:"delivery_path_prefix,omitempty"`

	// The optional start month and year for delivery, specified in YYYY-MM format. Defaults to current year and month. Usage is not available before 2019-03.
	// +kubebuilder:validation:Optional
	DeliveryStartTime *string `json:"deliveryStartTime,omitempty" tf:"delivery_start_time,omitempty"`

	// The type of log delivery. BILLABLE_USAGE and AUDIT_LOGS are supported.
	// +kubebuilder:validation:Optional
	LogType *string `json:"logType,omitempty" tf:"log_type,omitempty"`

	// The file type of log delivery. Currently CSV (for BILLABLE_USAGE) and JSON (for AUDIT_LOGS) are supported.
	// +kubebuilder:validation:Optional
	OutputFormat *string `json:"outputFormat,omitempty" tf:"output_format,omitempty"`

	// Status of log delivery configuration. Set to ENABLED or DISABLED. Defaults to ENABLED. This is the only field you can update.
	// +kubebuilder:validation:Optional
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// The ID for a Databricks storage configuration that represents the S3 bucket with bucket policy as described in the main billable usage documentation page.
	// +kubebuilder:validation:Optional
	StorageConfigurationID *string `json:"storageConfigurationId,omitempty" tf:"storage_configuration_id,omitempty"`

	// By default, this log configuration applies to all workspaces associated with your account ID. If your account is on the multitenant version of the platform or on a select custom plan that allows multiple workspaces per account, you may have multiple workspaces associated with your account ID. You can optionally set the field as mentioned earlier to an array of workspace IDs. If you plan to use different log delivery configurations for several workspaces, set this explicitly rather than leaving it blank. If you leave this blank and your account ID gets additional workspaces in the future, this configuration will also apply to the new workspaces.
	// +kubebuilder:validation:Optional
	WorkspaceIdsFilter []*float64 `json:"workspaceIdsFilter,omitempty" tf:"workspace_ids_filter,omitempty"`
}

// MwsLogDeliverySpec defines the desired state of MwsLogDelivery
type MwsLogDeliverySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     MwsLogDeliveryParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider MwsLogDeliveryInitParameters `json:"initProvider,omitempty"`
}

// MwsLogDeliveryStatus defines the observed state of MwsLogDelivery.
type MwsLogDeliveryStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        MwsLogDeliveryObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// MwsLogDelivery is the Schema for the MwsLogDeliverys API. ""subcategory: "Log Delivery"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,}
type MwsLogDelivery struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.accountId) || (has(self.initProvider) && has(self.initProvider.accountId))",message="spec.forProvider.accountId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.credentialsId) || (has(self.initProvider) && has(self.initProvider.credentialsId))",message="spec.forProvider.credentialsId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.logType) || (has(self.initProvider) && has(self.initProvider.logType))",message="spec.forProvider.logType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.outputFormat) || (has(self.initProvider) && has(self.initProvider.outputFormat))",message="spec.forProvider.outputFormat is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.storageConfigurationId) || (has(self.initProvider) && has(self.initProvider.storageConfigurationId))",message="spec.forProvider.storageConfigurationId is a required parameter"
	Spec   MwsLogDeliverySpec   `json:"spec"`
	Status MwsLogDeliveryStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MwsLogDeliveryList contains a list of MwsLogDeliverys
type MwsLogDeliveryList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MwsLogDelivery `json:"items"`
}

// Repository type metadata.
var (
	MwsLogDelivery_Kind             = "MwsLogDelivery"
	MwsLogDelivery_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: MwsLogDelivery_Kind}.String()
	MwsLogDelivery_KindAPIVersion   = MwsLogDelivery_Kind + "." + CRDGroupVersion.String()
	MwsLogDelivery_GroupVersionKind = CRDGroupVersion.WithKind(MwsLogDelivery_Kind)
)

func init() {
	SchemeBuilder.Register(&MwsLogDelivery{}, &MwsLogDeliveryList{})
}
