apiVersion: unity.databricks.m.crossplane.io/v1alpha1
kind: Volume
metadata:
  annotations:
    meta.upbound.io/example-id: unity/v1alpha1/volume
  labels:
    testing.upbound.io/example-name: this
  name: this
  namespace: upbound-system
spec:
  forProvider:
    catalogName: sandbox
    comment: this volume is managed by terraform
    name: quickstart_volume
    schemaName: things
    storageLocation: s3://${aws_s3_bucket.external.id}/some
    volumeType: EXTERNAL

---

apiVersion: unity.databricks.m.crossplane.io/v1alpha1
kind: Catalog
metadata:
  annotations:
    meta.upbound.io/example-id: unity/v1alpha1/volume
  labels:
    testing.upbound.io/example-name: sandbox
  name: sandbox
  namespace: upbound-system
spec:
  forProvider:
    comment: this catalog is managed by terraform
    name: sandbox
    properties:
      purpose: testing

---

apiVersion: unity.databricks.m.crossplane.io/v1alpha1
kind: ExternalLocation
metadata:
  annotations:
    meta.upbound.io/example-id: unity/v1alpha1/volume
  labels:
    testing.upbound.io/example-name: some
  name: some
  namespace: upbound-system
spec:
  forProvider:
    credentialName: creds
    name: external_location
    url: s3://${aws_s3_bucket.external.id}/some

---

apiVersion: unity.databricks.m.crossplane.io/v1alpha1
kind: Schema
metadata:
  annotations:
    meta.upbound.io/example-id: unity/v1alpha1/volume
  labels:
    testing.upbound.io/example-name: things
  name: things
  namespace: upbound-system
spec:
  forProvider:
    catalogName: sandbox
    comment: this schema is managed by terraform
    name: things
    properties:
      kind: various

---

apiVersion: unity.databricks.m.crossplane.io/v1alpha1
kind: StorageCredential
metadata:
  annotations:
    meta.upbound.io/example-id: unity/v1alpha1/volume
  labels:
    testing.upbound.io/example-name: external
  name: external
  namespace: upbound-system
spec:
  forProvider:
    awsIamRole:
    - roleArn: ${aws_iam_role.external_data_access.arn}
    name: creds
